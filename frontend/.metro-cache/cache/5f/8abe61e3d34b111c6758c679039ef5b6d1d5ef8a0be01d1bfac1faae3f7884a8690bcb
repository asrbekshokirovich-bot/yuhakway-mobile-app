{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"],"imports":1}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":533},"end":{"line":12,"column":38,"index":555}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"],"imports":1}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":577},"end":{"line":13,"column":46,"index":603}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"],"imports":1}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18,"index":623},"end":{"line":14,"column":42,"index":647}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"],"imports":1}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"],"imports":1}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":19,"index":716},"end":{"line":16,"column":49,"index":746}}],"key":"7NCa1l0WsdounoYDseQIolyeoT4=","exportNames":["*"],"imports":1}},{"name":"./lib/webauthn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":19,"index":767},"end":{"line":17,"column":44,"index":792}}],"key":"OCQwc7y6/FfrfsXu7zeL/LXC+4c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var _asyncToGenerator = require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[4], \"./GoTrueAdminApi\"));\n  var constants_1 = require(_dependencyMap[5], \"./lib/constants\");\n  var errors_1 = require(_dependencyMap[6], \"./lib/errors\");\n  var fetch_1 = require(_dependencyMap[7], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[8], \"./lib/helpers\");\n  var local_storage_1 = require(_dependencyMap[9], \"./lib/local-storage\");\n  var locks_1 = require(_dependencyMap[10], \"./lib/locks\");\n  var polyfills_1 = require(_dependencyMap[11], \"./lib/polyfills\");\n  var version_1 = require(_dependencyMap[12], \"./lib/version\");\n  var base64url_1 = require(_dependencyMap[13], \"./lib/base64url\");\n  var ethereum_1 = require(_dependencyMap[14], \"./lib/web3/ethereum\");\n  var webauthn_1 = require(_dependencyMap[15], \"./lib/webauthn\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  var DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  function lockNoOp(_x, _x2, _x3) {\n    return _lockNoOp.apply(this, arguments);\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  function _lockNoOp() {\n    _lockNoOp = _asyncToGenerator(function* (name, acquireTimeout, fn) {\n      return yield fn();\n    });\n    return _lockNoOp.apply(this, arguments);\n  }\n  var GLOBAL_JWKS = {};\n  var GoTrueClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     */\n    function GoTrueClient(options) {\n      var _this = this;\n      _classCallCheck(this, GoTrueClient);\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        webauthn: new webauthn_1.WebAuthnApi(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this._debug('received broadcast notification from other tab or client', event);\n            yield _this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n          });\n          return function (_x4) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n      this.initialize();\n    }\n    return _createClass(GoTrueClient, [{\n      key: \"jwks\",\n      get:\n      /**\n       * The JWKS used for verifying asymmetric JWTs\n       */\n      function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n          keys: []\n        };\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          jwks: value\n        });\n      }\n    }, {\n      key: \"jwks_cached_at\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          cachedAt: value\n        });\n      }\n    }, {\n      key: \"_debug\",\n      value: function _debug() {\n        if (this.logDebugMessages) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n      }\n      /**\n       * Initializes the client session either from the url or from storage.\n       * This method is automatically called when instantiating the client, but should also be called\n       * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize2 = _asyncToGenerator(function* () {\n          var _this2 = this;\n          if (this.initializePromise) {\n            return yield this.initializePromise;\n          }\n          this.initializePromise = _asyncToGenerator(function* () {\n            return yield _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this2._initialize();\n            }));\n          })();\n          return yield this.initializePromise;\n        });\n        function initialize() {\n          return _initialize2.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * IMPORTANT:\n       * 1. Never throw in this method, as it is called from the constructor\n       * 2. Never return a session from this method as it would be cached over\n       *    the whole lifetime of the client\n       */\n      )\n    }, {\n      key: \"_initialize\",\n      value: (function () {\n        var _initialize3 = _asyncToGenerator(function* () {\n          var _this3 = this;\n          var _a;\n          try {\n            var params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n            var callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n              callbackUrlType = 'implicit';\n            } else if (yield this._isPKCECallback(params)) {\n              callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n              var _yield$this$_getSessi = yield this._getSessionFromURL(params, callbackUrlType),\n                data = _yield$this$_getSessi.data,\n                error = _yield$this$_getSessi.error;\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error);\n                if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n                  var errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                  if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                    return {\n                      error\n                    };\n                  }\n                }\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                yield this._removeSession();\n                return {\n                  error\n                };\n              }\n              var session = data.session,\n                redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              yield this._saveSession(session);\n              setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n                if (redirectType === 'recovery') {\n                  yield _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                } else {\n                  yield _this3._notifyAllSubscribers('SIGNED_IN', session);\n                }\n              }), 0);\n              return {\n                error: null\n              };\n            }\n            // no login attempt via callback url try to recover session from storage\n            yield this._recoverAndRefresh();\n            return {\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                error\n              };\n            }\n            return {\n              error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n            };\n          } finally {\n            yield this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n          }\n        });\n        function _initialize() {\n          return _initialize3.apply(this, arguments);\n        }\n        return _initialize;\n      }()\n      /**\n       * Creates a new anonymous user.\n       *\n       * @returns A session where the is_anonymous claim in the access token JWT set to true\n       */\n      )\n    }, {\n      key: \"signInAnonymously\",\n      value: (function () {\n        var _signInAnonymously = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n              headers: this.headers,\n              body: {\n                data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                gotrue_meta_security: {\n                  captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInAnonymously(_x5) {\n          return _signInAnonymously.apply(this, arguments);\n        }\n        return signInAnonymously;\n      }()\n      /**\n       * Creates a new user.\n       *\n       * Be aware that if a user account exists in the system you may get back an\n       * error message that attempts to hide this information from the user.\n       * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n       *\n       * @returns A logged-in session if the server has \"autoconfirm\" ON\n       * @returns A user if the server has \"autoconfirm\" OFF\n       */\n      )\n    }, {\n      key: \"signUp\",\n      value: (function () {\n        var _signUp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield2 = _slicedToArray(_yield, 2);\n                codeChallenge = _yield2[0];\n                codeChallengeMethod = _yield2[1];\n              }\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email,\n                  password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password = credentials.password,\n                _options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res = res,\n              data = _res.data,\n              error = _res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signUp(_x6) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n      /**\n       * Log in an existing user with an email and password or phone and password.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or that the\n       * email/phone and password combination is wrong or that the account can only\n       * be accessed via social login.\n       */\n      )\n    }, {\n      key: \"signInWithPassword\",\n      value: (function () {\n        var _signInWithPassword = _asyncToGenerator(function* (credentials) {\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  email,\n                  password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password2 = credentials.password,\n                _options2 = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res2 = res,\n              data = _res2.data,\n              error = _res2.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({\n                user: data.user,\n                session: data.session\n              }, data.weak_password ? {\n                weakPassword: data.weak_password\n              } : null),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithPassword(_x7) {\n          return _signInWithPassword.apply(this, arguments);\n        }\n        return signInWithPassword;\n      }()\n      /**\n       * Log in an existing user via a third-party provider.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"signInWithOAuth\",\n      value: (function () {\n        var _signInWithOAuth = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d;\n          return yield this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n          });\n        });\n        function signInWithOAuth(_x8) {\n          return _signInWithOAuth.apply(this, arguments);\n        }\n        return signInWithOAuth;\n      }()\n      /**\n       * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n       */\n      )\n    }, {\n      key: \"exchangeCodeForSession\",\n      value: (function () {\n        var _exchangeCodeForSession2 = _asyncToGenerator(function* (authCode) {\n          var _this4 = this;\n          yield this.initializePromise;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this4._exchangeCodeForSession(authCode);\n          }));\n        });\n        function exchangeCodeForSession(_x9) {\n          return _exchangeCodeForSession2.apply(this, arguments);\n        }\n        return exchangeCodeForSession;\n      }()\n      /**\n       * Signs in a user by verifying a message signed by the user's private key.\n       * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n       * both of which derive from the EIP-4361 standard\n       * With slight variation on Solana's side.\n       * @reference https://eips.ethereum.org/EIPS/eip-4361\n       */\n      )\n    }, {\n      key: \"signInWithWeb3\",\n      value: (function () {\n        var _signInWithWeb = _asyncToGenerator(function* (credentials) {\n          var chain = credentials.chain;\n          switch (chain) {\n            case 'ethereum':\n              return yield this.signInWithEthereum(credentials);\n            case 'solana':\n              return yield this.signInWithSolana(credentials);\n            default:\n              throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n          }\n        });\n        function signInWithWeb3(_x0) {\n          return _signInWithWeb.apply(this, arguments);\n        }\n        return signInWithWeb3;\n      }())\n    }, {\n      key: \"signInWithEthereum\",\n      value: function () {\n        var _signInWithEthereum = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n          // TODO: flatten type\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n                resolvedWallet = windowAny.ethereum;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            var accounts = yield resolvedWallet.request({\n              method: 'eth_requestAccounts'\n            }).then(accs => accs).catch(() => {\n              throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n            });\n            if (!accounts || accounts.length === 0) {\n              throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n            }\n            var address = (0, ethereum_1.getAddress)(accounts[0]);\n            var chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n            if (!chainId) {\n              var chainIdHex = yield resolvedWallet.request({\n                method: 'eth_chainId'\n              });\n              chainId = (0, ethereum_1.fromHex)(chainIdHex);\n            }\n            var siweMessage = {\n              domain: url.host,\n              address: address,\n              statement: statement,\n              uri: url.href,\n              version: '1',\n              chainId: chainId,\n              nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n              issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n              expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n              notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n              requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n              resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n            };\n            message = (0, ethereum_1.createSiweMessage)(siweMessage);\n            // Sign message\n            signature = yield resolvedWallet.request({\n              method: 'personal_sign',\n              params: [(0, ethereum_1.toHex)(message), address]\n            });\n          }\n          try {\n            var _yield3 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'ethereum',\n                  message,\n                  signature\n                }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield3.data,\n              error = _yield3.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithEthereum(_x1) {\n          return _signInWithEthereum.apply(this, arguments);\n        }\n        return signInWithEthereum;\n      }()\n    }, {\n      key: \"signInWithSolana\",\n      value: function () {\n        var _signInWithSolana = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n                resolvedWallet = windowAny.solana;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n              var output = yield resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n                issuedAt: new Date().toISOString()\n              }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n                // non-overridable properties\n                version: '1',\n                domain: url.host,\n                uri: url.href\n              }), statement ? {\n                statement\n              } : null));\n              var outputToProcess;\n              if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                outputToProcess = output[0];\n              } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n                outputToProcess = output;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n              }\n              if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n                message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n                signature = outputToProcess.signature;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n              }\n            } else {\n              if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n              }\n              message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n              var maybeSignature = yield resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n              if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n              }\n              signature = maybeSignature;\n            }\n          }\n          try {\n            var _yield4 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'solana',\n                  message,\n                  signature: (0, base64url_1.bytesToBase64URL)(signature)\n                }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield4.data,\n              error = _yield4.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSolana(_x10) {\n          return _signInWithSolana.apply(this, arguments);\n        }\n        return signInWithSolana;\n      }()\n    }, {\n      key: \"_exchangeCodeForSession\",\n      value: function () {\n        var _exchangeCodeForSession3 = _asyncToGenerator(function* (authCode) {\n          var storageItem = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          var _split = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/'),\n            _split2 = _slicedToArray(_split, 2),\n            codeVerifier = _split2[0],\n            redirectType = _split2[1];\n          try {\n            var _yield5 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield5.data,\n              error = _yield5.error;\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign(Object.assign({}, data), {\n                redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n              }),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _exchangeCodeForSession(_x11) {\n          return _exchangeCodeForSession3.apply(this, arguments);\n        }\n        return _exchangeCodeForSession;\n      }()\n      /**\n       * Allows signing in with an OIDC ID token. The authentication provider used\n       * should be enabled and configured.\n       */\n    }, {\n      key: \"signInWithIdToken\",\n      value: (function () {\n        var _signInWithIdToken = _asyncToGenerator(function* (credentials) {\n          try {\n            var options = credentials.options,\n              provider = credentials.provider,\n              token = credentials.token,\n              access_token = credentials.access_token,\n              nonce = credentials.nonce;\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n              headers: this.headers,\n              body: {\n                provider,\n                id_token: token,\n                access_token,\n                nonce,\n                gotrue_meta_security: {\n                  captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data,\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithIdToken(_x12) {\n          return _signInWithIdToken.apply(this, arguments);\n        }\n        return signInWithIdToken;\n      }()\n      /**\n       * Log in a user using magiclink or a one-time password (OTP).\n       *\n       * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n       * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n       * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or, that the account\n       * can only be accessed via social login.\n       *\n       * Do note that you will need to configure a Whatsapp sender on Twilio\n       * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n       * channel is not supported on other providers\n       * at this time.\n       * This method supports PKCE when an email is passed.\n       */\n      )\n    }, {\n      key: \"signInWithOtp\",\n      value: (function () {\n        var _signInWithOtp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e;\n          try {\n            if ('email' in credentials) {\n              var email = credentials.email,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield6 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield7 = _slicedToArray(_yield6, 2);\n                codeChallenge = _yield7[0];\n                codeChallengeMethod = _yield7[1];\n              }\n              var _yield8 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield8.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _options3 = credentials.options;\n              var _yield9 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                  }\n                }),\n                data = _yield9.data,\n                _error = _yield9.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithOtp(_x13) {\n          return _signInWithOtp.apply(this, arguments);\n        }\n        return signInWithOtp;\n      }()\n      /**\n       * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n       */\n      )\n    }, {\n      key: \"verifyOtp\",\n      value: (function () {\n        var _verifyOtp = _asyncToGenerator(function* (params) {\n          var _a, _b;\n          try {\n            var redirectTo = undefined;\n            var captchaToken = undefined;\n            if ('options' in params) {\n              redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n              captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            var _yield0 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo,\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield0.data,\n              error = _yield0.error;\n            if (error) {\n              throw error;\n            }\n            if (!data) {\n              throw new Error('An error occurred on token verification.');\n            }\n            var session = data.session;\n            var user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function verifyOtp(_x14) {\n          return _verifyOtp.apply(this, arguments);\n        }\n        return verifyOtp;\n      }()\n      /**\n       * Attempts a single-sign on using an enterprise Identity Provider. A\n       * successful SSO attempt will redirect the current page to the identity\n       * provider authorization page. The redirect URL is implementation and SSO\n       * protocol specific.\n       *\n       * You can use it by providing a SSO domain. Typically you can extract this\n       * domain by asking users for their email address. If this domain is\n       * registered on the Auth instance the redirect will use that organization's\n       * currently active SSO Identity Provider for the login.\n       *\n       * If you have built an organization-specific login page, you can use the\n       * organization's SSO Identity Provider UUID directly instead.\n       */\n      )\n    }, {\n      key: \"signInWithSSO\",\n      value: (function () {\n        var _signInWithSSO = _asyncToGenerator(function* (params) {\n          var _a, _b, _c;\n          try {\n            var codeChallenge = null;\n            var codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n              ;\n              var _yield1 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n              var _yield10 = _slicedToArray(_yield1, 2);\n              codeChallenge = _yield10[0];\n              codeChallengeMethod = _yield10[1];\n            }\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                provider_id: params.providerId\n              } : null), 'domain' in params ? {\n                domain: params.domain\n              } : null), {\n                redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n              }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                gotrue_meta_security: {\n                  captcha_token: params.options.captchaToken\n                }\n              } : null), {\n                skip_http_redirect: true,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod\n              }),\n              headers: this.headers,\n              xform: fetch_1._ssoResponse\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSSO(_x15) {\n          return _signInWithSSO.apply(this, arguments);\n        }\n        return signInWithSSO;\n      }()\n      /**\n       * Sends a reauthentication OTP to the user's email or phone number.\n       * Requires the user to be signed-in.\n       */\n      )\n    }, {\n      key: \"reauthenticate\",\n      value: (function () {\n        var _reauthenticate2 = _asyncToGenerator(function* () {\n          var _this5 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this5._reauthenticate();\n          }));\n        });\n        function reauthenticate() {\n          return _reauthenticate2.apply(this, arguments);\n        }\n        return reauthenticate;\n      }())\n    }, {\n      key: \"_reauthenticate\",\n      value: function () {\n        var _reauthenticate3 = _asyncToGenerator(function* () {\n          var _this6 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (result) {\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) throw sessionError;\n                if (!session) throw new errors_1.AuthSessionMissingError();\n                var _yield11 = yield (0, fetch_1._request)(_this6.fetch, 'GET', `${_this6.url}/reauthenticate`, {\n                    headers: _this6.headers,\n                    jwt: session.access_token\n                  }),\n                  error = _yield11.error;\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error\n                };\n              });\n              return function (_x16) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _reauthenticate() {\n          return _reauthenticate3.apply(this, arguments);\n        }\n        return _reauthenticate;\n      }()\n      /**\n       * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n       */\n    }, {\n      key: \"resend\",\n      value: (function () {\n        var _resend = _asyncToGenerator(function* (credentials) {\n          try {\n            var endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                type = credentials.type,\n                options = credentials.options;\n              var _yield12 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield12.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _type = credentials.type,\n                _options4 = credentials.options;\n              var _yield13 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                    }\n                  }\n                }),\n                data = _yield13.data,\n                _error2 = _yield13.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resend(_x17) {\n          return _resend.apply(this, arguments);\n        }\n        return resend;\n      }()\n      /**\n       * Returns the session, refreshing it if necessary.\n       *\n       * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n       *\n       * **IMPORTANT:** This method loads values directly from the storage attached\n       * to the client. If that storage is based on request cookies for example,\n       * the values in it may not be authentic and therefore it's strongly advised\n       * against using this method and its results in such circumstances. A warning\n       * will be emitted if this is detected. Use {@link #getUser()} instead.\n       */\n      )\n    }, {\n      key: \"getSession\",\n      value: (function () {\n        var _getSession = _asyncToGenerator(function* () {\n          var _this7 = this;\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this7._useSession(/*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator(function* (result) {\n                return result;\n              });\n              return function (_x18) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n          }));\n          return result;\n        });\n        function getSession() {\n          return _getSession.apply(this, arguments);\n        }\n        return getSession;\n      }()\n      /**\n       * Acquires a global lock based on the storage key.\n       */\n      )\n    }, {\n      key: \"_acquireLock\",\n      value: (function () {\n        var _acquireLock2 = _asyncToGenerator(function* (acquireTimeout, fn) {\n          var _this8 = this;\n          this._debug('#_acquireLock', 'begin', acquireTimeout);\n          try {\n            if (this.lockAcquired) {\n              var last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              var result = _asyncToGenerator(function* () {\n                yield last;\n                return yield fn();\n              })();\n              this.pendingInLock.push(_asyncToGenerator(function* () {\n                try {\n                  yield result;\n                } catch (e) {\n                  // we just care if it finished\n                }\n              })());\n              return result;\n            }\n            return yield this.lock(`lock:${this.storageKey}`, acquireTimeout, /*#__PURE__*/_asyncToGenerator(function* () {\n              _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n              try {\n                _this8.lockAcquired = true;\n                var _result = fn();\n                _this8.pendingInLock.push(_asyncToGenerator(function* () {\n                  try {\n                    yield _result;\n                  } catch (e) {\n                    // we just care if it finished\n                  }\n                })());\n                yield _result;\n                // keep draining the queue until there's nothing to wait on\n                while (_this8.pendingInLock.length) {\n                  var waitOn = [..._this8.pendingInLock];\n                  yield Promise.all(waitOn);\n                  _this8.pendingInLock.splice(0, waitOn.length);\n                }\n                return yield _result;\n              } finally {\n                _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                _this8.lockAcquired = false;\n              }\n            }));\n          } finally {\n            this._debug('#_acquireLock', 'end');\n          }\n        });\n        function _acquireLock(_x19, _x20) {\n          return _acquireLock2.apply(this, arguments);\n        }\n        return _acquireLock;\n      }()\n      /**\n       * Use instead of {@link #getSession} inside the library. It is\n       * semantically usually what you want, as getting a session involves some\n       * processing afterwards that requires only one client operating on the\n       * session at once across multiple tabs or processes.\n       */\n      )\n    }, {\n      key: \"_useSession\",\n      value: (function () {\n        var _useSession2 = _asyncToGenerator(function* (fn) {\n          this._debug('#_useSession', 'begin');\n          try {\n            // the use of __loadSession here is the only correct use of the function!\n            var result = yield this.__loadSession();\n            return yield fn(result);\n          } finally {\n            this._debug('#_useSession', 'end');\n          }\n        });\n        function _useSession(_x21) {\n          return _useSession2.apply(this, arguments);\n        }\n        return _useSession;\n      }()\n      /**\n       * NEVER USE DIRECTLY!\n       *\n       * Always use {@link #_useSession}.\n       */\n      )\n    }, {\n      key: \"__loadSession\",\n      value: (function () {\n        var _loadSession = _asyncToGenerator(function* () {\n          this._debug('#__loadSession()', 'begin');\n          if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n          }\n          try {\n            var currentSession = null;\n            var maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n              if (this._isValidSession(maybeSession)) {\n                currentSession = maybeSession;\n              } else {\n                this._debug('#getSession()', 'session from storage is not valid');\n                yield this._removeSession();\n              }\n            }\n            if (!currentSession) {\n              return {\n                data: {\n                  session: null\n                },\n                error: null\n              };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            var hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n              if (this.userStorage) {\n                var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n                if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                  currentSession.user = maybeUser.user;\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n              if (this.storage.isServer && currentSession.user) {\n                var suppressWarning = this.suppressGetSessionWarning;\n                var proxySession = new Proxy(currentSession, {\n                  get: (target, prop, receiver) => {\n                    if (!suppressWarning && prop === 'user') {\n                      // only show warning when the user object is being accessed from the server\n                      console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                      suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                      this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                    }\n                    return Reflect.get(target, prop, receiver);\n                  }\n                });\n                currentSession = proxySession;\n              }\n              return {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              };\n            }\n            var _yield$this$_callRefr = yield this._callRefreshToken(currentSession.refresh_token),\n              session = _yield$this$_callRefr.data,\n              error = _yield$this$_callRefr.error;\n            if (error) {\n              return {\n                data: {\n                  session: null\n                },\n                error\n              };\n            }\n            return {\n              data: {\n                session\n              },\n              error: null\n            };\n          } finally {\n            this._debug('#__loadSession()', 'end');\n          }\n        });\n        function __loadSession() {\n          return _loadSession.apply(this, arguments);\n        }\n        return __loadSession;\n      }()\n      /**\n       * Gets the current user details if there is an existing session. This method\n       * performs a network request to the Supabase Auth server, so the returned\n       * value is authentic and can be used to base authorization rules on.\n       *\n       * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n       */\n      )\n    }, {\n      key: \"getUser\",\n      value: (function () {\n        var _getUser2 = _asyncToGenerator(function* (jwt) {\n          var _this9 = this;\n          if (jwt) {\n            return yield this._getUser(jwt);\n          }\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this9._getUser();\n          }));\n          return result;\n        });\n        function getUser(_x22) {\n          return _getUser2.apply(this, arguments);\n        }\n        return getUser;\n      }())\n    }, {\n      key: \"_getUser\",\n      value: function () {\n        var _getUser3 = _asyncToGenerator(function* (jwt) {\n          var _this0 = this;\n          try {\n            if (jwt) {\n              return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                headers: this.headers,\n                jwt: jwt,\n                xform: fetch_1._userResponse\n              });\n            }\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(function* (result) {\n                var _a, _b, _c;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !_this0.hasCustomAuthorizationHeader) {\n                  return {\n                    data: {\n                      user: null\n                    },\n                    error: new errors_1.AuthSessionMissingError()\n                  };\n                }\n                return yield (0, fetch_1._request)(_this0.fetch, 'GET', `${_this0.url}/user`, {\n                  headers: _this0.headers,\n                  jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                  xform: fetch_1._userResponse\n                });\n              });\n              return function (_x24) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              if ((0, errors_1.isAuthSessionMissingError)(error)) {\n                // JWT contains a `session_id` which does not correspond to an active\n                // session in the database, indicating the user is signed out.\n                yield this._removeSession();\n                yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n              }\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getUser(_x23) {\n          return _getUser3.apply(this, arguments);\n        }\n        return _getUser;\n      }()\n      /**\n       * Updates user data for a logged in user.\n       */\n    }, {\n      key: \"updateUser\",\n      value: (function () {\n        var _updateUser2 = _asyncToGenerator(function* (attributes) {\n          var _this1 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this1._updateUser(attributes, options);\n          }));\n        });\n        function updateUser(_x25) {\n          return _updateUser2.apply(this, arguments);\n        }\n        return updateUser;\n      }())\n    }, {\n      key: \"_updateUser\",\n      value: function () {\n        var _updateUser3 = _asyncToGenerator(function* (attributes) {\n          var _this10 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator(function* (result) {\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  throw sessionError;\n                }\n                if (!sessionData.session) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var session = sessionData.session;\n                var codeChallenge = null;\n                var codeChallengeMethod = null;\n                if (_this10.flowType === 'pkce' && attributes.email != null) {\n                  ;\n                  var _yield14 = yield (0, helpers_1.getCodeChallengeAndMethod)(_this10.storage, _this10.storageKey);\n                  var _yield15 = _slicedToArray(_yield14, 2);\n                  codeChallenge = _yield15[0];\n                  codeChallengeMethod = _yield15[1];\n                }\n                var _yield16 = yield (0, fetch_1._request)(_this10.fetch, 'PUT', `${_this10.url}/user`, {\n                    headers: _this10.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                      code_challenge: codeChallenge,\n                      code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse\n                  }),\n                  data = _yield16.data,\n                  userError = _yield16.error;\n                if (userError) throw userError;\n                session.user = data.user;\n                yield _this10._saveSession(session);\n                yield _this10._notifyAllSubscribers('USER_UPDATED', session);\n                return {\n                  data: {\n                    user: session.user\n                  },\n                  error: null\n                };\n              });\n              return function (_x27) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _updateUser(_x26) {\n          return _updateUser3.apply(this, arguments);\n        }\n        return _updateUser;\n      }()\n      /**\n       * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n       * If the refresh token or access token in the current session is invalid, an error will be thrown.\n       * @param currentSession The current session that minimally contains an access token and refresh token.\n       */\n    }, {\n      key: \"setSession\",\n      value: (function () {\n        var _setSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this11 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this11._setSession(currentSession);\n          }));\n        });\n        function setSession(_x28) {\n          return _setSession2.apply(this, arguments);\n        }\n        return setSession;\n      }())\n    }, {\n      key: \"_setSession\",\n      value: function () {\n        var _setSession3 = _asyncToGenerator(function* (currentSession) {\n          try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n              throw new errors_1.AuthSessionMissingError();\n            }\n            var timeNow = Date.now() / 1000;\n            var expiresAt = timeNow;\n            var hasExpired = true;\n            var session = null;\n            var _ref17 = (0, helpers_1.decodeJWT)(currentSession.access_token),\n              payload = _ref17.payload;\n            if (payload.exp) {\n              expiresAt = payload.exp;\n              hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n              var _yield$this$_callRefr2 = yield this._callRefreshToken(currentSession.refresh_token),\n                refreshedSession = _yield$this$_callRefr2.data,\n                error = _yield$this$_callRefr2.error;\n              if (error) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              }\n              if (!refreshedSession) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                };\n              }\n              session = refreshedSession;\n            } else {\n              var _yield$this$_getUser = yield this._getUser(currentSession.access_token),\n                data = _yield$this$_getUser.data,\n                _error3 = _yield$this$_getUser.error;\n              if (_error3) {\n                throw _error3;\n              }\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: session.user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _setSession(_x29) {\n          return _setSession3.apply(this, arguments);\n        }\n        return _setSession;\n      }()\n      /**\n       * Returns a new session, regardless of expiry status.\n       * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n       * If the current session's refresh token is invalid, an error will be thrown.\n       * @param currentSession The current session. If passed in, it must contain a refresh token.\n       */\n    }, {\n      key: \"refreshSession\",\n      value: (function () {\n        var _refreshSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this12 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this12._refreshSession(currentSession);\n          }));\n        });\n        function refreshSession(_x30) {\n          return _refreshSession2.apply(this, arguments);\n        }\n        return refreshSession;\n      }())\n    }, {\n      key: \"_refreshSession\",\n      value: function () {\n        var _refreshSession3 = _asyncToGenerator(function* (currentSession) {\n          var _this13 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator(function* (result) {\n                var _a;\n                if (!currentSession) {\n                  var data = result.data,\n                    _error4 = result.error;\n                  if (_error4) {\n                    throw _error4;\n                  }\n                  currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var _yield$_this13$_callR = yield _this13._callRefreshToken(currentSession.refresh_token),\n                  session = _yield$_this13$_callR.data,\n                  error = _yield$_this13$_callR.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: error\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: null\n                  };\n                }\n                return {\n                  data: {\n                    user: session.user,\n                    session\n                  },\n                  error: null\n                };\n              });\n              return function (_x32) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _refreshSession(_x31) {\n          return _refreshSession3.apply(this, arguments);\n        }\n        return _refreshSession;\n      }()\n      /**\n       * Gets the session data from a URL string\n       */\n    }, {\n      key: \"_getSessionFromURL\",\n      value: (function () {\n        var _getSessionFromURL2 = _asyncToGenerator(function* (params, callbackUrlType) {\n          try {\n            if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n              // The error class returned implies that the redirect is from an implicit grant flow\n              // but it could also be from a redirect error from a PKCE flow.\n              throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n              case 'implicit':\n                if (this.flowType === 'pkce') {\n                  throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                break;\n              case 'pkce':\n                if (this.flowType === 'implicit') {\n                  throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                break;\n              default:\n              // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n              if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n              var _yield$this$_exchange = yield this._exchangeCodeForSession(params.code),\n                _data = _yield$this$_exchange.data,\n                _error5 = _yield$this$_exchange.error;\n              if (_error5) throw _error5;\n              var url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              };\n            }\n            var provider_token = params.provider_token,\n              provider_refresh_token = params.provider_refresh_token,\n              access_token = params.access_token,\n              refresh_token = params.refresh_token,\n              expires_in = params.expires_in,\n              expires_at = params.expires_at,\n              token_type = params.token_type;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n              throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            var timeNow = Math.round(Date.now() / 1000);\n            var expiresIn = parseInt(expires_in);\n            var expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n              expiresAt = parseInt(expires_at);\n            }\n            var actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n              console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            var issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            } else if (timeNow - issuedAt < 0) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            var _yield$this$_getUser2 = yield this._getUser(access_token),\n              data = _yield$this$_getUser2.data,\n              error = _yield$this$_getUser2.error;\n            if (error) throw error;\n            var session = {\n              provider_token,\n              provider_refresh_token,\n              access_token,\n              expires_in: expiresIn,\n              expires_at: expiresAt,\n              refresh_token,\n              token_type: token_type,\n              user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return {\n              data: {\n                session,\n                redirectType: params.type\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getSessionFromURL(_x33, _x34) {\n          return _getSessionFromURL2.apply(this, arguments);\n        }\n        return _getSessionFromURL;\n      }()\n      /**\n       * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n       */\n      )\n    }, {\n      key: \"_isImplicitGrantCallback\",\n      value: function _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n      }\n      /**\n       * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n       */\n    }, {\n      key: \"_isPKCECallback\",\n      value: (function () {\n        var _isPKCECallback2 = _asyncToGenerator(function* (params) {\n          var currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          return !!(params.code && currentStorageContent);\n        });\n        function _isPKCECallback(_x35) {\n          return _isPKCECallback2.apply(this, arguments);\n        }\n        return _isPKCECallback;\n      }()\n      /**\n       * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n       *\n       * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n       * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n       *\n       * If using `others` scope, no `SIGNED_OUT` event is fired!\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut2 = _asyncToGenerator(function* () {\n          var _this14 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            scope: 'global'\n          };\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this14._signOut(options);\n          }));\n        });\n        function signOut() {\n          return _signOut2.apply(this, arguments);\n        }\n        return signOut;\n      }())\n    }, {\n      key: \"_signOut\",\n      value: function () {\n        var _signOut3 = _asyncToGenerator(function* () {\n          var _this15 = this;\n          var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n              scope: 'global'\n            },\n            scope = _ref21.scope;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref22 = _asyncToGenerator(function* (result) {\n              var _a;\n              var data = result.data,\n                sessionError = result.error;\n              if (sessionError) {\n                return {\n                  error: sessionError\n                };\n              }\n              var accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n              if (accessToken) {\n                var _yield$_this15$admin$ = yield _this15.admin.signOut(accessToken, scope),\n                  error = _yield$_this15$admin$.error;\n                if (error) {\n                  // ignore 404s since user might not exist anymore\n                  // ignore 401s since an invalid or expired JWT should sign out the current session\n                  if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                    return {\n                      error\n                    };\n                  }\n                }\n              }\n              if (scope !== 'others') {\n                yield _this15._removeSession();\n                yield (0, helpers_1.removeItemAsync)(_this15.storage, `${_this15.storageKey}-code-verifier`);\n              }\n              return {\n                error: null\n              };\n            });\n            return function (_x36) {\n              return _ref22.apply(this, arguments);\n            };\n          }());\n        });\n        function _signOut() {\n          return _signOut3.apply(this, arguments);\n        }\n        return _signOut;\n      }()\n    }, {\n      key: \"onAuthStateChange\",\n      value: function onAuthStateChange(callback) {\n        var _this16 = this;\n        var id = (0, helpers_1.uuid)();\n        var subscription = {\n          id,\n          callback,\n          unsubscribe: () => {\n            this._debug('#unsubscribe()', 'state change callback with id removed', id);\n            this.stateChangeEmitters.delete(id);\n          }\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        _asyncToGenerator(function* () {\n          yield _this16.initializePromise;\n          yield _this16._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            _this16._emitInitialSession(id);\n          }));\n        })();\n        return {\n          data: {\n            subscription\n          }\n        };\n      }\n    }, {\n      key: \"_emitInitialSession\",\n      value: function () {\n        var _emitInitialSession2 = _asyncToGenerator(function* (id) {\n          var _this17 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref25 = _asyncToGenerator(function* (result) {\n              var _a, _b;\n              try {\n                var session = result.data.session,\n                  error = result.error;\n                if (error) throw error;\n                yield (_a = _this17.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n              } catch (err) {\n                yield (_b = _this17.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n              }\n            });\n            return function (_x38) {\n              return _ref25.apply(this, arguments);\n            };\n          }());\n        });\n        function _emitInitialSession(_x37) {\n          return _emitInitialSession2.apply(this, arguments);\n        }\n        return _emitInitialSession;\n      }()\n      /**\n       * Sends a password reset request to an email address. This method supports the PKCE flow.\n       *\n       * @param email The email address of the user.\n       * @param options.redirectTo The URL to send the user to after they click the password reset link.\n       * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n       */\n    }, {\n      key: \"resetPasswordForEmail\",\n      value: (function () {\n        var _resetPasswordForEmail = _asyncToGenerator(function* (email) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var codeChallenge = null;\n          var codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            var _yield17 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n            var _yield18 = _slicedToArray(_yield17, 2);\n            codeChallenge = _yield18[0];\n            codeChallengeMethod = _yield18[1];\n          }\n          try {\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n              body: {\n                email,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod,\n                gotrue_meta_security: {\n                  captcha_token: options.captchaToken\n                }\n              },\n              headers: this.headers,\n              redirectTo: options.redirectTo\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resetPasswordForEmail(_x39) {\n          return _resetPasswordForEmail.apply(this, arguments);\n        }\n        return resetPasswordForEmail;\n      }()\n      /**\n       * Gets all the identities linked to a user.\n       */\n      )\n    }, {\n      key: \"getUserIdentities\",\n      value: (function () {\n        var _getUserIdentities = _asyncToGenerator(function* () {\n          var _a;\n          try {\n            var _yield$this$getUser = yield this.getUser(),\n              data = _yield$this$getUser.data,\n              error = _yield$this$getUser.error;\n            if (error) throw error;\n            return {\n              data: {\n                identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getUserIdentities() {\n          return _getUserIdentities.apply(this, arguments);\n        }\n        return getUserIdentities;\n      }())\n    }, {\n      key: \"linkIdentity\",\n      value: function () {\n        var _linkIdentity = _asyncToGenerator(function* (credentials) {\n          if ('token' in credentials) {\n            return this.linkIdentityIdToken(credentials);\n          }\n          return this.linkIdentityOAuth(credentials);\n        });\n        function linkIdentity(_x40) {\n          return _linkIdentity.apply(this, arguments);\n        }\n        return linkIdentity;\n      }()\n    }, {\n      key: \"linkIdentityOAuth\",\n      value: function () {\n        var _linkIdentityOAuth = _asyncToGenerator(function* (credentials) {\n          var _this18 = this;\n          var _a;\n          try {\n            var _yield$this$_useSessi = yield this._useSession(/*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator(function* (result) {\n                  var _a, _b, _c, _d, _e;\n                  var data = result.data,\n                    error = result.error;\n                  if (error) throw error;\n                  var url = yield _this18._getUrlForProvider(`${_this18.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true\n                  });\n                  return yield (0, fetch_1._request)(_this18.fetch, 'GET', url, {\n                    headers: _this18.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                  });\n                });\n                return function (_x42) {\n                  return _ref26.apply(this, arguments);\n                };\n              }()),\n              data = _yield$this$_useSessi.data,\n              error = _yield$this$_useSessi.error;\n            if (error) throw error;\n            if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n              window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return {\n              data: {\n                provider: credentials.provider,\n                url: data === null || data === void 0 ? void 0 : data.url\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  provider: credentials.provider,\n                  url: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function linkIdentityOAuth(_x41) {\n          return _linkIdentityOAuth.apply(this, arguments);\n        }\n        return linkIdentityOAuth;\n      }()\n    }, {\n      key: \"linkIdentityIdToken\",\n      value: function () {\n        var _linkIdentityIdToken = _asyncToGenerator(function* (credentials) {\n          var _this19 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref27 = _asyncToGenerator(function* (result) {\n              var _a;\n              try {\n                var sessionError = result.error,\n                  session = result.data.session;\n                if (sessionError) throw sessionError;\n                var options = credentials.options,\n                  provider = credentials.provider,\n                  token = credentials.token,\n                  access_token = credentials.access_token,\n                  nonce = credentials.nonce;\n                var res = yield (0, fetch_1._request)(_this19.fetch, 'POST', `${_this19.url}/token?grant_type=id_token`, {\n                  headers: _this19.headers,\n                  jwt: (_a = session === null || session === void 0 ? void 0 : session.access_token) !== null && _a !== void 0 ? _a : undefined,\n                  body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    link_identity: true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  xform: fetch_1._sessionResponse\n                });\n                var data = res.data,\n                  error = res.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error\n                  };\n                } else if (!data || !data.session || !data.user) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: new errors_1.AuthInvalidTokenResponseError()\n                  };\n                }\n                if (data.session) {\n                  yield _this19._saveSession(data.session);\n                  yield _this19._notifyAllSubscribers('USER_UPDATED', data.session);\n                }\n                return {\n                  data,\n                  error\n                };\n              } catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error\n                  };\n                }\n                throw error;\n              }\n            });\n            return function (_x44) {\n              return _ref27.apply(this, arguments);\n            };\n          }());\n        });\n        function linkIdentityIdToken(_x43) {\n          return _linkIdentityIdToken.apply(this, arguments);\n        }\n        return linkIdentityIdToken;\n      }()\n      /**\n       * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n       */\n    }, {\n      key: \"unlinkIdentity\",\n      value: (function () {\n        var _unlinkIdentity = _asyncToGenerator(function* (identity) {\n          var _this20 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref28 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                return yield (0, fetch_1._request)(_this20.fetch, 'DELETE', `${_this20.url}/user/identities/${identity.identity_id}`, {\n                  headers: _this20.headers,\n                  jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                });\n              });\n              return function (_x46) {\n                return _ref28.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function unlinkIdentity(_x45) {\n          return _unlinkIdentity.apply(this, arguments);\n        }\n        return unlinkIdentity;\n      }()\n      /**\n       * Generates a new JWT.\n       * @param refreshToken A valid refresh token that was returned on login.\n       */\n      )\n    }, {\n      key: \"_refreshAccessToken\",\n      value: (function () {\n        var _refreshAccessToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _this21 = this;\n          var debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            var startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return yield (0, helpers_1.retryable)(/*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator(function* (attempt) {\n                if (attempt > 0) {\n                  yield (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                _this21._debug(debugName, 'refreshing attempt', attempt);\n                return yield (0, fetch_1._request)(_this21.fetch, 'POST', `${_this21.url}/token?grant_type=refresh_token`, {\n                  body: {\n                    refresh_token: refreshToken\n                  },\n                  headers: _this21.headers,\n                  xform: fetch_1._sessionResponse\n                });\n              });\n              return function (_x48) {\n                return _ref29.apply(this, arguments);\n              };\n            }(), (attempt, error) => {\n              var nextBackOffInterval = 200 * Math.pow(2, attempt);\n              return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n              // retryable only if the request can be sent before the backoff overflows the tick duration\n              Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _refreshAccessToken(_x47) {\n          return _refreshAccessToken2.apply(this, arguments);\n        }\n        return _refreshAccessToken;\n      }())\n    }, {\n      key: \"_isValidSession\",\n      value: function _isValidSession(maybeSession) {\n        var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n        return isValidSession;\n      }\n    }, {\n      key: \"_handleProviderSignIn\",\n      value: function () {\n        var _handleProviderSignIn2 = _asyncToGenerator(function* (provider, options) {\n          var url = yield this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n          this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n          // try to open on the browser\n          if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n          }\n          return {\n            data: {\n              provider,\n              url\n            },\n            error: null\n          };\n        });\n        function _handleProviderSignIn(_x49, _x50) {\n          return _handleProviderSignIn2.apply(this, arguments);\n        }\n        return _handleProviderSignIn;\n      }()\n      /**\n       * Recovers the session from LocalStorage and refreshes the token\n       * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n       */\n    }, {\n      key: \"_recoverAndRefresh\",\n      value: (function () {\n        var _recoverAndRefresh2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          var debugName = '#_recoverAndRefresh()';\n          this._debug(debugName, 'begin');\n          try {\n            var currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            if (currentSession && this.userStorage) {\n              var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n              if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                // storage and userStorage are the same storage medium, for example\n                // window.localStorage if userStorage does not have the user from\n                // storage stored, store it first thereby migrating the user object\n                // from storage -> userStorage\n                maybeUser = {\n                  user: currentSession.user\n                };\n                yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n              }\n              currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n            } else if (currentSession && !currentSession.user) {\n              // user storage is not set, let's check if it was previously enabled so\n              // we bring back the storage as it should be\n              if (!currentSession.user) {\n                // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                var separateUser = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n                if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                  currentSession.user = separateUser.user;\n                  yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n                  yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n              this._debug(debugName, 'session is not valid');\n              if (currentSession !== null) {\n                yield this._removeSession();\n              }\n              return;\n            }\n            var expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n              if (this.autoRefreshToken && currentSession.refresh_token) {\n                var _yield$this$_callRefr3 = yield this._callRefreshToken(currentSession.refresh_token),\n                  error = _yield$this$_callRefr3.error;\n                if (error) {\n                  console.error(error);\n                  if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                    this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                    yield this._removeSession();\n                  }\n                }\n              }\n            } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n              // If we have a proxy user, try to get the real user data\n              try {\n                var _yield$this$_getUser3 = yield this._getUser(currentSession.access_token),\n                  data = _yield$this$_getUser3.data,\n                  userError = _yield$this$_getUser3.error;\n                if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                  currentSession.user = data.user;\n                  yield this._saveSession(currentSession);\n                  yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                } else {\n                  this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                }\n              } catch (getUserError) {\n                console.error('Error getting user data:', getUserError);\n                this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n              }\n            } else {\n              // no need to persist currentSession again, as we just loaded it from\n              // local storage; persisting it again may overwrite a value saved by\n              // another client with access to the same local storage\n              yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n          } catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _recoverAndRefresh() {\n          return _recoverAndRefresh2.apply(this, arguments);\n        }\n        return _recoverAndRefresh;\n      }())\n    }, {\n      key: \"_callRefreshToken\",\n      value: function () {\n        var _callRefreshToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _a, _b;\n          if (!refreshToken) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          // refreshing is already in progress\n          if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n          }\n          var debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            this.refreshingDeferred = new helpers_1.Deferred();\n            var _yield$this$_refreshA = yield this._refreshAccessToken(refreshToken),\n              data = _yield$this$_refreshA.data,\n              error = _yield$this$_refreshA.error;\n            if (error) throw error;\n            if (!data.session) throw new errors_1.AuthSessionMissingError();\n            yield this._saveSession(data.session);\n            yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            var result = {\n              data: data.session,\n              error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              var _result2 = {\n                data: null,\n                error\n              };\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                yield this._removeSession();\n              }\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n              return _result2;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n          } finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n          }\n        });\n        function _callRefreshToken(_x51) {\n          return _callRefreshToken2.apply(this, arguments);\n        }\n        return _callRefreshToken;\n      }()\n    }, {\n      key: \"_notifyAllSubscribers\",\n      value: function () {\n        var _notifyAllSubscribers2 = _asyncToGenerator(function* (event, session) {\n          var broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          var debugName = `#_notifyAllSubscribers(${event})`;\n          this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n          try {\n            if (this.broadcastChannel && broadcast) {\n              this.broadcastChannel.postMessage({\n                event,\n                session\n              });\n            }\n            var errors = [];\n            var promises = Array.from(this.stateChangeEmitters.values()).map(/*#__PURE__*/function () {\n              var _ref30 = _asyncToGenerator(function* (x) {\n                try {\n                  yield x.callback(event, session);\n                } catch (e) {\n                  errors.push(e);\n                }\n              });\n              return function (_x54) {\n                return _ref30.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n            if (errors.length > 0) {\n              for (var i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            }\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _notifyAllSubscribers(_x52, _x53) {\n          return _notifyAllSubscribers2.apply(this, arguments);\n        }\n        return _notifyAllSubscribers;\n      }()\n      /**\n       * set currentSession and currentUser\n       * process to _startAutoRefreshToken if possible\n       */\n    }, {\n      key: \"_saveSession\",\n      value: (function () {\n        var _saveSession2 = _asyncToGenerator(function* (session) {\n          this._debug('#_saveSession()', session);\n          // _saveSession is always called whenever a new session has been acquired\n          // so we can safely suppress the warning returned by future getSession calls\n          this.suppressGetSessionWarning = true;\n          // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n          var sessionToProcess = Object.assign({}, session);\n          var userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n          if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n              // If it's a real user object, save it to userStorage.\n              yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                user: sessionToProcess.user\n              });\n            } else if (userIsProxy) {\n              // If it's the proxy, it means user was not found in userStorage.\n              // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n              // or simply not save the proxy. For now, we don't save the proxy here.\n              // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            var mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            var clonedMainSessionData = (0, helpers_1.deepClone)(mainSessionData);\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n          } else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            var clonedSession = (0, helpers_1.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n          }\n        });\n        function _saveSession(_x55) {\n          return _saveSession2.apply(this, arguments);\n        }\n        return _saveSession;\n      }())\n    }, {\n      key: \"_removeSession\",\n      value: function () {\n        var _removeSession2 = _asyncToGenerator(function* () {\n          this._debug('#_removeSession()');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n          if (this.userStorage) {\n            yield (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n          }\n          yield this._notifyAllSubscribers('SIGNED_OUT', null);\n        });\n        function _removeSession() {\n          return _removeSession2.apply(this, arguments);\n        }\n        return _removeSession;\n      }()\n      /**\n       * Removes any registered visibilitychange callback.\n       *\n       * {@see #startAutoRefresh}\n       * {@see #stopAutoRefresh}\n       */\n    }, {\n      key: \"_removeVisibilityChangedCallback\",\n      value: function _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        var callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n          if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n            window.removeEventListener('visibilitychange', callback);\n          }\n        } catch (e) {\n          console.error('removing visibilitychange callback failed', e);\n        }\n      }\n      /**\n       * This is the private implementation of {@link #startAutoRefresh}. Use this\n       * within the library.\n       */\n    }, {\n      key: \"_startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh2 = _asyncToGenerator(function* () {\n          var _this22 = this;\n          yield this._stopAutoRefresh();\n          this._debug('#_startAutoRefresh()');\n          var ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n          this.autoRefreshTicker = ticker;\n          if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n          } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n          }\n          // run the tick immediately, but in the next pass of the event loop so that\n          // #_initialize can be allowed to complete without recursively waiting on\n          // itself\n          setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n            yield _this22.initializePromise;\n            yield _this22._autoRefreshTokenTick();\n          }), 0);\n        });\n        function _startAutoRefresh() {\n          return _startAutoRefresh2.apply(this, arguments);\n        }\n        return _startAutoRefresh;\n      }()\n      /**\n       * This is the private implementation of {@link #stopAutoRefresh}. Use this\n       * within the library.\n       */\n      )\n    }, {\n      key: \"_stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh2 = _asyncToGenerator(function* () {\n          this._debug('#_stopAutoRefresh()');\n          var ticker = this.autoRefreshTicker;\n          this.autoRefreshTicker = null;\n          if (ticker) {\n            clearInterval(ticker);\n          }\n        });\n        function _stopAutoRefresh() {\n          return _stopAutoRefresh2.apply(this, arguments);\n        }\n        return _stopAutoRefresh;\n      }()\n      /**\n       * Starts an auto-refresh process in the background. The session is checked\n       * every few seconds. Close to the time of expiration a process is started to\n       * refresh the session. If refreshing fails it will be retried for as long as\n       * necessary.\n       *\n       * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n       * to call this function, it will be called for you.\n       *\n       * On browsers the refresh process works only when the tab/window is in the\n       * foreground to conserve resources as well as prevent race conditions and\n       * flooding auth with requests. If you call this method any managed\n       * visibility change callback will be removed and you must manage visibility\n       * changes on your own.\n       *\n       * On non-browser platforms the refresh process works *continuously* in the\n       * background, which may not be desirable. You should hook into your\n       * platform's foreground indication mechanism and call these methods\n       * appropriately to conserve resources.\n       *\n       * {@see #stopAutoRefresh}\n       */\n      )\n    }, {\n      key: \"startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._startAutoRefresh();\n        });\n        function startAutoRefresh() {\n          return _startAutoRefresh3.apply(this, arguments);\n        }\n        return startAutoRefresh;\n      }()\n      /**\n       * Stops an active auto refresh process running in the background (if any).\n       *\n       * If you call this method any managed visibility change callback will be\n       * removed and you must manage visibility changes on your own.\n       *\n       * See {@link #startAutoRefresh} for more details.\n       */\n      )\n    }, {\n      key: \"stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._stopAutoRefresh();\n        });\n        function stopAutoRefresh() {\n          return _stopAutoRefresh3.apply(this, arguments);\n        }\n        return stopAutoRefresh;\n      }()\n      /**\n       * Runs the auto refresh token tick.\n       */\n      )\n    }, {\n      key: \"_autoRefreshTokenTick\",\n      value: (function () {\n        var _autoRefreshTokenTick2 = _asyncToGenerator(function* () {\n          var _this23 = this;\n          this._debug('#_autoRefreshTokenTick()', 'begin');\n          try {\n            yield this._acquireLock(0, /*#__PURE__*/_asyncToGenerator(function* () {\n              try {\n                var now = Date.now();\n                try {\n                  return yield _this23._useSession(/*#__PURE__*/function () {\n                    var _ref33 = _asyncToGenerator(function* (result) {\n                      var session = result.data.session;\n                      if (!session || !session.refresh_token || !session.expires_at) {\n                        _this23._debug('#_autoRefreshTokenTick()', 'no session');\n                        return;\n                      }\n                      // session will expire in this many ticks (or has already expired if <= 0)\n                      var expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                      _this23._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                      if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                        yield _this23._callRefreshToken(session.refresh_token);\n                      }\n                    });\n                    return function (_x56) {\n                      return _ref33.apply(this, arguments);\n                    };\n                  }());\n                } catch (e) {\n                  console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                }\n              } finally {\n                _this23._debug('#_autoRefreshTokenTick()', 'end');\n              }\n            }));\n          } catch (e) {\n            if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n              this._debug('auto refresh token tick lock not available');\n            } else {\n              throw e;\n            }\n          }\n        });\n        function _autoRefreshTokenTick() {\n          return _autoRefreshTokenTick2.apply(this, arguments);\n        }\n        return _autoRefreshTokenTick;\n      }()\n      /**\n       * Registers callbacks on the browser / platform, which in-turn run\n       * algorithms when the browser window/tab are in foreground. On non-browser\n       * platforms it assumes always foreground.\n       */\n      )\n    }, {\n      key: \"_handleVisibilityChange\",\n      value: (function () {\n        var _handleVisibilityChange2 = _asyncToGenerator(function* () {\n          var _this24 = this;\n          this._debug('#_handleVisibilityChange()');\n          if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n              // in non-browser environments the refresh token ticker runs always\n              this.startAutoRefresh();\n            }\n            return false;\n          }\n          try {\n            this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this24._onVisibilityChanged(false);\n            });\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            yield this._onVisibilityChanged(true); // initial call\n          } catch (error) {\n            console.error('_handleVisibilityChange', error);\n          }\n        });\n        function _handleVisibilityChange() {\n          return _handleVisibilityChange2.apply(this, arguments);\n        }\n        return _handleVisibilityChange;\n      }()\n      /**\n       * Callback registered with `window.addEventListener('visibilitychange')`.\n       */\n      )\n    }, {\n      key: \"_onVisibilityChanged\",\n      value: (function () {\n        var _onVisibilityChanged2 = _asyncToGenerator(function* (calledFromInitialize) {\n          var _this25 = this;\n          var methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n          this._debug(methodName, 'visibilityState', document.visibilityState);\n          if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n              // in browser environments the refresh token ticker runs only on focused tabs\n              // which prevents race conditions\n              this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n              // called when the visibility has changed, i.e. the browser\n              // transitioned from hidden -> visible so we need to see if the session\n              // should be recovered immediately... but to do that we need to acquire\n              // the lock first asynchronously\n              yield this.initializePromise;\n              yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n                if (document.visibilityState !== 'visible') {\n                  _this25._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                  // visibility has changed while waiting for the lock, abort\n                  return;\n                }\n                // recover the session\n                yield _this25._recoverAndRefresh();\n              }));\n            }\n          } else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n              this._stopAutoRefresh();\n            }\n          }\n        });\n        function _onVisibilityChanged(_x57) {\n          return _onVisibilityChanged2.apply(this, arguments);\n        }\n        return _onVisibilityChanged;\n      }()\n      /**\n       * Generates the relevant login URL for a third-party provider.\n       * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n       * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n       * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n       */\n      )\n    }, {\n      key: \"_getUrlForProvider\",\n      value: (function () {\n        var _getUrlForProvider2 = _asyncToGenerator(function* (url, provider, options) {\n          var urlParams = [`provider=${encodeURIComponent(provider)}`];\n          if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n          }\n          if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n          }\n          if (this.flowType === 'pkce') {\n            var _yield19 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey),\n              _yield20 = _slicedToArray(_yield19, 2),\n              codeChallenge = _yield20[0],\n              codeChallengeMethod = _yield20[1];\n            var flowParams = new URLSearchParams({\n              code_challenge: `${encodeURIComponent(codeChallenge)}`,\n              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n            });\n            urlParams.push(flowParams.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            var query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n          }\n          return `${url}?${urlParams.join('&')}`;\n        });\n        function _getUrlForProvider(_x58, _x59, _x60) {\n          return _getUrlForProvider2.apply(this, arguments);\n        }\n        return _getUrlForProvider;\n      }())\n    }, {\n      key: \"_unenroll\",\n      value: function () {\n        var _unenroll2 = _asyncToGenerator(function* (params) {\n          var _this26 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref36 = _asyncToGenerator(function* (result) {\n                var _a;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                return yield (0, fetch_1._request)(_this26.fetch, 'DELETE', `${_this26.url}/factors/${params.factorId}`, {\n                  headers: _this26.headers,\n                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n              });\n              return function (_x62) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _unenroll(_x61) {\n          return _unenroll2.apply(this, arguments);\n        }\n        return _unenroll;\n      }()\n    }, {\n      key: \"_enroll\",\n      value: function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          var _this27 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref37 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                var body = Object.assign({\n                  friendly_name: params.friendlyName,\n                  factor_type: params.factorType\n                }, params.factorType === 'phone' ? {\n                  phone: params.phone\n                } : params.factorType === 'totp' ? {\n                  issuer: params.issuer\n                } : {});\n                var _yield21 = yield (0, fetch_1._request)(_this27.fetch, 'POST', `${_this27.url}/factors`, {\n                    body,\n                    headers: _this27.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  }),\n                  data = _yield21.data,\n                  error = _yield21.error;\n                if (error) {\n                  return {\n                    data: null,\n                    error\n                  };\n                }\n                if (params.factorType === 'totp' && data.type === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                  data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return {\n                  data,\n                  error: null\n                };\n              });\n              return function (_x64) {\n                return _ref37.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _enroll(_x63) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n    }, {\n      key: \"_verify\",\n      value: function () {\n        var _verify2 = _asyncToGenerator(function* (params) {\n          var _this28 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this28._useSession(/*#__PURE__*/function () {\n                var _ref39 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var body = Object.assign({\n                    challenge_id: params.challengeId\n                  }, 'webauthn' in params ? {\n                    webauthn: Object.assign(Object.assign({}, params.webauthn), {\n                      credential_response: params.webauthn.type === 'create' ? (0, webauthn_1.serializeCredentialCreationResponse)(params.webauthn.credential_response) : (0, webauthn_1.serializeCredentialRequestResponse)(params.webauthn.credential_response)\n                    })\n                  } : {\n                    code: params.code\n                  });\n                  var _yield22 = yield (0, fetch_1._request)(_this28.fetch, 'POST', `${_this28.url}/factors/${params.factorId}/verify`, {\n                      body,\n                      headers: _this28.headers,\n                      jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    }),\n                    data = _yield22.data,\n                    error = _yield22.error;\n                  if (error) {\n                    return {\n                      data: null,\n                      error\n                    };\n                  }\n                  yield _this28._saveSession(Object.assign({\n                    expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                  }, data));\n                  yield _this28._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                  return {\n                    data,\n                    error\n                  };\n                });\n                return function (_x66) {\n                  return _ref39.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _verify(_x65) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n    }, {\n      key: \"_challenge\",\n      value: function () {\n        var _challenge2 = _asyncToGenerator(function* (params) {\n          var _this29 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this29._useSession(/*#__PURE__*/function () {\n                var _ref41 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var response = yield (0, fetch_1._request)(_this29.fetch, 'POST', `${_this29.url}/factors/${params.factorId}/challenge`, {\n                    body: params,\n                    headers: _this29.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  });\n                  if (response.error) {\n                    return response;\n                  }\n                  var data = response.data;\n                  if (data.type !== 'webauthn') {\n                    return {\n                      data,\n                      error: null\n                    };\n                  }\n                  switch (data.webauthn.type) {\n                    case 'create':\n                      return {\n                        data: Object.assign(Object.assign({}, data), {\n                          webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                            credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                              publicKey: (0, webauthn_1.deserializeCredentialCreationOptions)(data.webauthn.credential_options.publicKey)\n                            })\n                          })\n                        }),\n                        error: null\n                      };\n                    case 'request':\n                      return {\n                        data: Object.assign(Object.assign({}, data), {\n                          webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                            credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                              publicKey: (0, webauthn_1.deserializeCredentialRequestOptions)(data.webauthn.credential_options.publicKey)\n                            })\n                          })\n                        }),\n                        error: null\n                      };\n                  }\n                });\n                return function (_x68) {\n                  return _ref41.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _challenge(_x67) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challengeAndVerify}\n       */\n    }, {\n      key: \"_challengeAndVerify\",\n      value: (function () {\n        var _challengeAndVerify2 = _asyncToGenerator(function* (params) {\n          // both _challenge and _verify independently acquire the lock, so no need\n          // to acquire it here\n          var _yield$this$_challeng = yield this._challenge({\n              factorId: params.factorId\n            }),\n            challengeData = _yield$this$_challeng.data,\n            challengeError = _yield$this$_challeng.error;\n          if (challengeError) {\n            return {\n              data: null,\n              error: challengeError\n            };\n          }\n          return yield this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n          });\n        });\n        function _challengeAndVerify(_x69) {\n          return _challengeAndVerify2.apply(this, arguments);\n        }\n        return _challengeAndVerify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#listFactors}\n       */\n      )\n    }, {\n      key: \"_listFactors\",\n      value: (function () {\n        var _listFactors2 = _asyncToGenerator(function* () {\n          var _a;\n          // use #getUser instead of #_getUser as the former acquires a lock\n          var _yield$this$getUser2 = yield this.getUser(),\n            user = _yield$this$getUser2.data.user,\n            userError = _yield$this$getUser2.error;\n          if (userError) {\n            return {\n              data: null,\n              error: userError\n            };\n          }\n          var data = {\n            all: [],\n            phone: [],\n            totp: [],\n            webauthn: []\n          };\n          // loop over the factors ONCE\n          for (var factor of (_a = user === null || user === void 0 ? void 0 : user.factors) !== null && _a !== void 0 ? _a : []) {\n            data.all.push(factor);\n            if (factor.status === 'verified') {\n              ;\n              data[factor.factor_type].push(factor);\n            }\n          }\n          return {\n            data,\n            error: null\n          };\n        });\n        function _listFactors() {\n          return _listFactors2.apply(this, arguments);\n        }\n        return _listFactors;\n      }()\n      /**\n       * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n       */\n      )\n    }, {\n      key: \"_getAuthenticatorAssuranceLevel\",\n      value: (function () {\n        var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator(function* () {\n          var _this30 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this30._useSession(/*#__PURE__*/function () {\n              var _ref43 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      currentLevel: null,\n                      nextLevel: null,\n                      currentAuthenticationMethods: []\n                    },\n                    error: null\n                  };\n                }\n                var _ref44 = (0, helpers_1.decodeJWT)(session.access_token),\n                  payload = _ref44.payload;\n                var currentLevel = null;\n                if (payload.aal) {\n                  currentLevel = payload.aal;\n                }\n                var nextLevel = currentLevel;\n                var verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                  nextLevel = 'aal2';\n                }\n                var currentAuthenticationMethods = payload.amr || [];\n                return {\n                  data: {\n                    currentLevel,\n                    nextLevel,\n                    currentAuthenticationMethods\n                  },\n                  error: null\n                };\n              });\n              return function (_x70) {\n                return _ref43.apply(this, arguments);\n              };\n            }());\n          }));\n        });\n        function _getAuthenticatorAssuranceLevel() {\n          return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n        }\n        return _getAuthenticatorAssuranceLevel;\n      }())\n    }, {\n      key: \"fetchJwk\",\n      value: function () {\n        var _fetchJwk = _asyncToGenerator(function* (kid) {\n          var jwks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            keys: []\n          };\n          // try fetching from the supplied jwks\n          var jwk = jwks.keys.find(key => key.kid === kid);\n          if (jwk) {\n            return jwk;\n          }\n          var now = Date.now();\n          // try fetching from cache\n          jwk = this.jwks.keys.find(key => key.kid === kid);\n          // jwk exists and jwks isn't stale\n          if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n            return jwk;\n          }\n          // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n          var _yield23 = yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n              headers: this.headers\n            }),\n            data = _yield23.data,\n            error = _yield23.error;\n          if (error) {\n            throw error;\n          }\n          if (!data.keys || data.keys.length === 0) {\n            return null;\n          }\n          this.jwks = data;\n          this.jwks_cached_at = now;\n          // Find the signing key\n          jwk = data.keys.find(key => key.kid === kid);\n          if (!jwk) {\n            return null;\n          }\n          return jwk;\n        });\n        function fetchJwk(_x71) {\n          return _fetchJwk.apply(this, arguments);\n        }\n        return fetchJwk;\n      }()\n      /**\n       * Extracts the JWT claims present in the access token by first verifying the\n       * JWT against the server's JSON Web Key Set endpoint\n       * `/.well-known/jwks.json` which is often cached, resulting in significantly\n       * faster responses. Prefer this method over {@link #getUser} which always\n       * sends a request to the Auth server for each JWT.\n       *\n       * If the project is not using an asymmetric JWT signing key (like ECC or\n       * RSA) it always sends a request to the Auth server (similar to {@link\n       * #getUser}) to verify the JWT.\n       *\n       * @param jwt An optional specific JWT you wish to verify, not the one you\n       *            can obtain from {@link #getSession}.\n       * @param options Various additional options that allow you to customize the\n       *                behavior of this method.\n       */\n    }, {\n      key: \"getClaims\",\n      value: (function () {\n        var _getClaims = _asyncToGenerator(function* (jwt) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            var token = jwt;\n            if (!token) {\n              var _yield$this$getSessio = yield this.getSession(),\n                data = _yield$this$getSessio.data,\n                error = _yield$this$getSessio.error;\n              if (error || !data.session) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              token = data.session.access_token;\n            }\n            var _ref45 = (0, helpers_1.decodeJWT)(token),\n              header = _ref45.header,\n              payload = _ref45.payload,\n              signature = _ref45.signature,\n              _ref45$raw = _ref45.raw,\n              rawHeader = _ref45$raw.header,\n              rawPayload = _ref45$raw.payload;\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n              // Reject expired JWTs should only happen if jwt argument was passed\n              (0, helpers_1.validateExp)(payload.exp);\n            }\n            var signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : yield this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n              keys: options.keys\n            } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n              var _yield$this$getUser3 = yield this.getUser(token),\n                _error6 = _yield$this$getUser3.error;\n              if (_error6) {\n                throw _error6;\n              }\n              // getUser succeeds so the claims in the JWT can be trusted\n              return {\n                data: {\n                  claims: payload,\n                  header,\n                  signature\n                },\n                error: null\n              };\n            }\n            var algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            var publicKey = yield crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n            // Verify the signature\n            var isValid = yield crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n              throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n              data: {\n                claims: payload,\n                header,\n                signature\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getClaims(_x72) {\n          return _getClaims.apply(this, arguments);\n        }\n        return getClaims;\n      }())\n    }]);\n  }();\n  GoTrueClient.nextInstanceID = 0;\n  exports.default = GoTrueClient;\n});","lineCount":3782,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,1,13],[7,6,1,13,"_asyncToGenerator"],[7,23,1,13],[7,26,1,13,"require"],[7,33,1,13],[7,34,1,13,"_dependencyMap"],[7,48,1,13],[7,96,1,13,"default"],[7,103,1,13],[8,2,2,0],[8,6,2,4,"__importDefault"],[8,21,2,19],[8,24,2,23],[8,28,2,27],[8,32,2,31],[8,36,2,35],[8,37,2,36,"__importDefault"],[8,52,2,51],[8,56,2,56],[8,66,2,66,"mod"],[8,69,2,69],[8,71,2,71],[9,4,3,4],[9,11,3,12,"mod"],[9,14,3,15],[9,18,3,19,"mod"],[9,21,3,22],[9,22,3,23,"__esModule"],[9,32,3,33],[9,35,3,37,"mod"],[9,38,3,40],[9,41,3,43],[10,6,3,45],[10,15,3,54],[10,17,3,56,"mod"],[11,4,3,60],[11,5,3,61],[12,2,4,0],[12,3,4,1],[13,2,5,0,"Object"],[13,8,5,6],[13,9,5,7,"defineProperty"],[13,23,5,21],[13,24,5,22,"exports"],[13,31,5,29],[13,33,5,31],[13,45,5,43],[13,47,5,45],[14,4,5,47,"value"],[14,9,5,52],[14,11,5,54],[15,2,5,59],[15,3,5,60],[15,4,5,61],[16,2,6,0],[16,6,6,6,"GoTrueAdminApi_1"],[16,22,6,22],[16,25,6,25,"__importDefault"],[16,40,6,40],[16,41,6,41,"require"],[16,48,6,48],[16,49,6,48,"_dependencyMap"],[16,63,6,48],[16,86,6,67],[16,87,6,68],[16,88,6,69],[17,2,7,0],[17,6,7,6,"constants_1"],[17,17,7,17],[17,20,7,20,"require"],[17,27,7,27],[17,28,7,27,"_dependencyMap"],[17,42,7,27],[17,64,7,45],[17,65,7,46],[18,2,8,0],[18,6,8,6,"errors_1"],[18,14,8,14],[18,17,8,17,"require"],[18,24,8,24],[18,25,8,24,"_dependencyMap"],[18,39,8,24],[18,58,8,39],[18,59,8,40],[19,2,9,0],[19,6,9,6,"fetch_1"],[19,13,9,13],[19,16,9,16,"require"],[19,23,9,23],[19,24,9,23,"_dependencyMap"],[19,38,9,23],[19,56,9,37],[19,57,9,38],[20,2,10,0],[20,6,10,6,"helpers_1"],[20,15,10,15],[20,18,10,18,"require"],[20,25,10,25],[20,26,10,25,"_dependencyMap"],[20,40,10,25],[20,60,10,41],[20,61,10,42],[21,2,11,0],[21,6,11,6,"local_storage_1"],[21,21,11,21],[21,24,11,24,"require"],[21,31,11,31],[21,32,11,31,"_dependencyMap"],[21,46,11,31],[21,72,11,53],[21,73,11,54],[22,2,12,0],[22,6,12,6,"locks_1"],[22,13,12,13],[22,16,12,16,"require"],[22,23,12,23],[22,24,12,23,"_dependencyMap"],[22,38,12,23],[22,57,12,37],[22,58,12,38],[23,2,13,0],[23,6,13,6,"polyfills_1"],[23,17,13,17],[23,20,13,20,"require"],[23,27,13,27],[23,28,13,27,"_dependencyMap"],[23,42,13,27],[23,65,13,45],[23,66,13,46],[24,2,14,0],[24,6,14,6,"version_1"],[24,15,14,15],[24,18,14,18,"require"],[24,25,14,25],[24,26,14,25,"_dependencyMap"],[24,40,14,25],[24,61,14,41],[24,62,14,42],[25,2,15,0],[25,6,15,6,"base64url_1"],[25,17,15,17],[25,20,15,20,"require"],[25,27,15,27],[25,28,15,27,"_dependencyMap"],[25,42,15,27],[25,65,15,45],[25,66,15,46],[26,2,16,0],[26,6,16,6,"ethereum_1"],[26,16,16,16],[26,19,16,19,"require"],[26,26,16,26],[26,27,16,26,"_dependencyMap"],[26,41,16,26],[26,68,16,48],[26,69,16,49],[27,2,17,0],[27,6,17,6,"webauthn_1"],[27,16,17,16],[27,19,17,19,"require"],[27,26,17,26],[27,27,17,26,"_dependencyMap"],[27,41,17,26],[27,63,17,43],[27,64,17,44],[28,2,18,0],[28,3,18,1],[28,4,18,2],[28,6,18,4,"polyfills_1"],[28,17,18,15],[28,18,18,16,"polyfillGlobalThis"],[28,36,18,34],[28,38,18,36],[28,39,18,37],[28,40,18,38],[28,41,18,39],[29,2,19,0],[29,6,19,6,"DEFAULT_OPTIONS"],[29,21,19,21],[29,24,19,24],[30,4,20,4,"url"],[30,7,20,7],[30,9,20,9,"constants_1"],[30,20,20,20],[30,21,20,21,"GOTRUE_URL"],[30,31,20,31],[31,4,21,4,"storageKey"],[31,14,21,14],[31,16,21,16,"constants_1"],[31,27,21,27],[31,28,21,28,"STORAGE_KEY"],[31,39,21,39],[32,4,22,4,"autoRefreshToken"],[32,20,22,20],[32,22,22,22],[32,26,22,26],[33,4,23,4,"persistSession"],[33,18,23,18],[33,20,23,20],[33,24,23,24],[34,4,24,4,"detectSessionInUrl"],[34,22,24,22],[34,24,24,24],[34,28,24,28],[35,4,25,4,"headers"],[35,11,25,11],[35,13,25,13,"constants_1"],[35,24,25,24],[35,25,25,25,"DEFAULT_HEADERS"],[35,40,25,40],[36,4,26,4,"flowType"],[36,12,26,12],[36,14,26,14],[36,24,26,24],[37,4,27,4,"debug"],[37,9,27,9],[37,11,27,11],[37,16,27,16],[38,4,28,4,"hasCustomAuthorizationHeader"],[38,32,28,32],[38,34,28,34],[39,2,29,0],[39,3,29,1],[40,2,29,2],[40,11,30,15,"lockNoOp"],[40,19,30,23,"lockNoOp"],[40,20,30,23,"_x"],[40,22,30,23],[40,24,30,23,"_x2"],[40,27,30,23],[40,29,30,23,"_x3"],[40,32,30,23],[41,4,30,23],[41,11,30,23,"_lockNoOp"],[41,20,30,23],[41,21,30,23,"apply"],[41,26,30,23],[41,33,30,23,"arguments"],[41,42,30,23],[42,2,30,23],[43,2,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,0,40,0],[51,2,33,0],[51,11,33,0,"_lockNoOp"],[51,21,33,0],[52,4,33,0,"_lockNoOp"],[52,13,33,0],[52,16,33,0,"_asyncToGenerator"],[52,33,33,0],[52,34,30,0],[52,45,30,24,"name"],[52,49,30,28],[52,51,30,30,"acquireTimeout"],[52,65,30,44],[52,67,30,46,"fn"],[52,69,30,48],[52,71,30,50],[53,6,31,4],[53,19,31,17,"fn"],[53,21,31,19],[53,22,31,20],[53,23,31,21],[54,4,32,0],[54,5,32,1],[55,4,32,1],[55,11,32,1,"_lockNoOp"],[55,20,32,1],[55,21,32,1,"apply"],[55,26,32,1],[55,33,32,1,"arguments"],[55,42,32,1],[56,2,32,1],[57,2,41,0],[57,6,41,6,"GLOBAL_JWKS"],[57,17,41,17],[57,20,41,20],[57,21,41,21],[57,22,41,22],[58,2,41,23],[58,6,42,6,"GoTrueClient"],[58,18,42,18],[59,4,60,4],[60,0,61,0],[61,0,62,0],[62,4,63,4],[62,13,63,4,"GoTrueClient"],[62,26,63,16,"options"],[62,33,63,23],[62,35,63,25],[63,6,63,25],[63,10,63,25,"_this"],[63,15,63,25],[64,6,63,25,"_classCallCheck"],[64,21,63,25],[64,28,63,25,"GoTrueClient"],[64,40,63,25],[65,6,64,8],[65,10,64,12,"_a"],[65,12,64,14],[65,14,64,16,"_b"],[65,16,64,18],[66,6,65,8],[67,0,66,0],[68,0,67,0],[69,6,68,8],[69,10,68,12],[69,11,68,13,"userStorage"],[69,22,68,24],[69,25,68,27],[69,29,68,31],[70,6,69,8],[70,10,69,12],[70,11,69,13,"memoryStorage"],[70,24,69,26],[70,27,69,29],[70,31,69,33],[71,6,70,8],[71,10,70,12],[71,11,70,13,"stateChangeEmitters"],[71,30,70,32],[71,33,70,35],[71,37,70,39,"Map"],[71,40,70,42],[71,41,70,43],[71,42,70,44],[72,6,71,8],[72,10,71,12],[72,11,71,13,"autoRefreshTicker"],[72,28,71,30],[72,31,71,33],[72,35,71,37],[73,6,72,8],[73,10,72,12],[73,11,72,13,"visibilityChangedCallback"],[73,36,72,38],[73,39,72,41],[73,43,72,45],[74,6,73,8],[74,10,73,12],[74,11,73,13,"refreshingDeferred"],[74,29,73,31],[74,32,73,34],[74,36,73,38],[75,6,74,8],[76,0,75,0],[77,0,76,0],[78,0,77,0],[79,0,78,0],[80,0,79,0],[81,6,80,8],[81,10,80,12],[81,11,80,13,"initializePromise"],[81,28,80,30],[81,31,80,33],[81,35,80,37],[82,6,81,8],[82,10,81,12],[82,11,81,13,"detectSessionInUrl"],[82,29,81,31],[82,32,81,34],[82,36,81,38],[83,6,82,8],[83,10,82,12],[83,11,82,13,"hasCustomAuthorizationHeader"],[83,39,82,41],[83,42,82,44],[83,47,82,49],[84,6,83,8],[84,10,83,12],[84,11,83,13,"suppressGetSessionWarning"],[84,36,83,38],[84,39,83,41],[84,44,83,46],[85,6,84,8],[85,10,84,12],[85,11,84,13,"lockAcquired"],[85,23,84,25],[85,26,84,28],[85,31,84,33],[86,6,85,8],[86,10,85,12],[86,11,85,13,"pendingInLock"],[86,24,85,26],[86,27,85,29],[86,29,85,31],[87,6,86,8],[88,0,87,0],[89,0,88,0],[90,6,89,8],[90,10,89,12],[90,11,89,13,"broadcastChannel"],[90,27,89,29],[90,30,89,32],[90,34,89,36],[91,6,90,8],[91,10,90,12],[91,11,90,13,"logger"],[91,17,90,19],[91,20,90,22,"console"],[91,27,90,29],[91,28,90,30,"log"],[91,31,90,33],[92,6,91,8],[92,10,91,12],[92,11,91,13,"instanceID"],[92,21,91,23],[92,24,91,26,"GoTrueClient"],[92,36,91,38],[92,37,91,39,"nextInstanceID"],[92,51,91,53],[93,6,92,8,"GoTrueClient"],[93,18,92,20],[93,19,92,21,"nextInstanceID"],[93,33,92,35],[93,37,92,39],[93,38,92,40],[94,6,93,8],[94,10,93,12],[94,14,93,16],[94,15,93,17,"instanceID"],[94,25,93,27],[94,28,93,30],[94,29,93,31],[94,33,93,35],[94,34,93,36],[94,35,93,37],[94,37,93,39,"helpers_1"],[94,46,93,48],[94,47,93,49,"isBrowser"],[94,56,93,58],[94,58,93,60],[94,59,93,61],[94,61,93,63],[95,8,94,12,"console"],[95,15,94,19],[95,16,94,20,"warn"],[95,20,94,24],[95,21,94,25],[95,227,94,231],[95,228,94,232],[96,6,95,8],[97,6,96,8],[97,10,96,14,"settings"],[97,18,96,22],[97,21,96,25,"Object"],[97,27,96,31],[97,28,96,32,"assign"],[97,34,96,38],[97,35,96,39,"Object"],[97,41,96,45],[97,42,96,46,"assign"],[97,48,96,52],[97,49,96,53],[97,50,96,54],[97,51,96,55],[97,53,96,57,"DEFAULT_OPTIONS"],[97,68,96,72],[97,69,96,73],[97,71,96,75,"options"],[97,78,96,82],[97,79,96,83],[98,6,97,8],[98,10,97,12],[98,11,97,13,"logDebugMessages"],[98,27,97,29],[98,30,97,32],[98,31,97,33],[98,32,97,34,"settings"],[98,40,97,42],[98,41,97,43,"debug"],[98,46,97,48],[99,6,98,8],[99,10,98,12],[99,17,98,19,"settings"],[99,25,98,27],[99,26,98,28,"debug"],[99,31,98,33],[99,36,98,38],[99,46,98,48],[99,48,98,50],[100,8,99,12],[100,12,99,16],[100,13,99,17,"logger"],[100,19,99,23],[100,22,99,26,"settings"],[100,30,99,34],[100,31,99,35,"debug"],[100,36,99,40],[101,6,100,8],[102,6,101,8],[102,10,101,12],[102,11,101,13,"persistSession"],[102,25,101,27],[102,28,101,30,"settings"],[102,36,101,38],[102,37,101,39,"persistSession"],[102,51,101,53],[103,6,102,8],[103,10,102,12],[103,11,102,13,"storageKey"],[103,21,102,23],[103,24,102,26,"settings"],[103,32,102,34],[103,33,102,35,"storageKey"],[103,43,102,45],[104,6,103,8],[104,10,103,12],[104,11,103,13,"autoRefreshToken"],[104,27,103,29],[104,30,103,32,"settings"],[104,38,103,40],[104,39,103,41,"autoRefreshToken"],[104,55,103,57],[105,6,104,8],[105,10,104,12],[105,11,104,13,"admin"],[105,16,104,18],[105,19,104,21],[105,23,104,25,"GoTrueAdminApi_1"],[105,39,104,41],[105,40,104,42,"default"],[105,47,104,49],[105,48,104,50],[106,8,105,12,"url"],[106,11,105,15],[106,13,105,17,"settings"],[106,21,105,25],[106,22,105,26,"url"],[106,25,105,29],[107,8,106,12,"headers"],[107,15,106,19],[107,17,106,21,"settings"],[107,25,106,29],[107,26,106,30,"headers"],[107,33,106,37],[108,8,107,12,"fetch"],[108,13,107,17],[108,15,107,19,"settings"],[108,23,107,27],[108,24,107,28,"fetch"],[109,6,108,8],[109,7,108,9],[109,8,108,10],[110,6,109,8],[110,10,109,12],[110,11,109,13,"url"],[110,14,109,16],[110,17,109,19,"settings"],[110,25,109,27],[110,26,109,28,"url"],[110,29,109,31],[111,6,110,8],[111,10,110,12],[111,11,110,13,"headers"],[111,18,110,20],[111,21,110,23,"settings"],[111,29,110,31],[111,30,110,32,"headers"],[111,37,110,39],[112,6,111,8],[112,10,111,12],[112,11,111,13,"fetch"],[112,16,111,18],[112,19,111,21],[112,20,111,22],[112,21,111,23],[112,23,111,25,"helpers_1"],[112,32,111,34],[112,33,111,35,"resolveFetch"],[112,45,111,47],[112,47,111,49,"settings"],[112,55,111,57],[112,56,111,58,"fetch"],[112,61,111,63],[112,62,111,64],[113,6,112,8],[113,10,112,12],[113,11,112,13,"lock"],[113,15,112,17],[113,18,112,20,"settings"],[113,26,112,28],[113,27,112,29,"lock"],[113,31,112,33],[113,35,112,37,"lockNoOp"],[113,43,112,45],[114,6,113,8],[114,10,113,12],[114,11,113,13,"detectSessionInUrl"],[114,29,113,31],[114,32,113,34,"settings"],[114,40,113,42],[114,41,113,43,"detectSessionInUrl"],[114,59,113,61],[115,6,114,8],[115,10,114,12],[115,11,114,13,"flowType"],[115,19,114,21],[115,22,114,24,"settings"],[115,30,114,32],[115,31,114,33,"flowType"],[115,39,114,41],[116,6,115,8],[116,10,115,12],[116,11,115,13,"hasCustomAuthorizationHeader"],[116,39,115,41],[116,42,115,44,"settings"],[116,50,115,52],[116,51,115,53,"hasCustomAuthorizationHeader"],[116,79,115,81],[117,6,116,8],[117,10,116,12,"settings"],[117,18,116,20],[117,19,116,21,"lock"],[117,23,116,25],[117,25,116,27],[118,8,117,12],[118,12,117,16],[118,13,117,17,"lock"],[118,17,117,21],[118,20,117,24,"settings"],[118,28,117,32],[118,29,117,33,"lock"],[118,33,117,37],[119,6,118,8],[119,7,118,9],[119,13,119,13],[119,17,119,17],[119,18,119,18],[119,19,119,19],[119,21,119,21,"helpers_1"],[119,30,119,30],[119,31,119,31,"isBrowser"],[119,40,119,40],[119,42,119,42],[119,43,119,43],[119,48,119,48],[119,49,119,49,"_a"],[119,51,119,51],[119,54,119,54,"globalThis"],[119,64,119,64],[119,69,119,69],[119,73,119,73],[119,77,119,77,"globalThis"],[119,87,119,87],[119,92,119,92],[119,97,119,97],[119,98,119,98],[119,101,119,101],[119,106,119,106],[119,107,119,107],[119,110,119,110,"globalThis"],[119,120,119,120],[119,121,119,121,"navigator"],[119,130,119,130],[119,136,119,136],[119,140,119,140],[119,144,119,144,"_a"],[119,146,119,146],[119,151,119,151],[119,156,119,156],[119,157,119,157],[119,160,119,160],[119,165,119,165],[119,166,119,166],[119,169,119,169,"_a"],[119,171,119,171],[119,172,119,172,"locks"],[119,177,119,177],[119,178,119,178],[119,180,119,180],[120,8,120,12],[120,12,120,16],[120,13,120,17,"lock"],[120,17,120,21],[120,20,120,24,"locks_1"],[120,27,120,31],[120,28,120,32,"navigatorLock"],[120,41,120,45],[121,6,121,8],[121,7,121,9],[121,13,122,13],[122,8,123,12],[122,12,123,16],[122,13,123,17,"lock"],[122,17,123,21],[122,20,123,24,"lockNoOp"],[122,28,123,32],[123,6,124,8],[124,6,125,8],[124,10,125,12],[124,11,125,13],[124,15,125,17],[124,16,125,18,"jwks"],[124,20,125,22],[124,22,125,24],[125,8,126,12],[125,12,126,16],[125,13,126,17,"jwks"],[125,17,126,21],[125,20,126,24],[126,10,126,26,"keys"],[126,14,126,30],[126,16,126,32],[127,8,126,35],[127,9,126,36],[128,8,127,12],[128,12,127,16],[128,13,127,17,"jwks_cached_at"],[128,27,127,31],[128,30,127,34,"Number"],[128,36,127,40],[128,37,127,41,"MIN_SAFE_INTEGER"],[128,53,127,57],[129,6,128,8],[130,6,129,8],[130,10,129,12],[130,11,129,13,"mfa"],[130,14,129,16],[130,17,129,19],[131,8,130,12,"verify"],[131,14,130,18],[131,16,130,20],[131,20,130,24],[131,21,130,25,"_verify"],[131,28,130,32],[131,29,130,33,"bind"],[131,33,130,37],[131,34,130,38],[131,38,130,42],[131,39,130,43],[132,8,131,12,"enroll"],[132,14,131,18],[132,16,131,20],[132,20,131,24],[132,21,131,25,"_enroll"],[132,28,131,32],[132,29,131,33,"bind"],[132,33,131,37],[132,34,131,38],[132,38,131,42],[132,39,131,43],[133,8,132,12,"unenroll"],[133,16,132,20],[133,18,132,22],[133,22,132,26],[133,23,132,27,"_unenroll"],[133,32,132,36],[133,33,132,37,"bind"],[133,37,132,41],[133,38,132,42],[133,42,132,46],[133,43,132,47],[134,8,133,12,"challenge"],[134,17,133,21],[134,19,133,23],[134,23,133,27],[134,24,133,28,"_challenge"],[134,34,133,38],[134,35,133,39,"bind"],[134,39,133,43],[134,40,133,44],[134,44,133,48],[134,45,133,49],[135,8,134,12,"listFactors"],[135,19,134,23],[135,21,134,25],[135,25,134,29],[135,26,134,30,"_listFactors"],[135,38,134,42],[135,39,134,43,"bind"],[135,43,134,47],[135,44,134,48],[135,48,134,52],[135,49,134,53],[136,8,135,12,"challengeAndVerify"],[136,26,135,30],[136,28,135,32],[136,32,135,36],[136,33,135,37,"_challengeAndVerify"],[136,52,135,56],[136,53,135,57,"bind"],[136,57,135,61],[136,58,135,62],[136,62,135,66],[136,63,135,67],[137,8,136,12,"getAuthenticatorAssuranceLevel"],[137,38,136,42],[137,40,136,44],[137,44,136,48],[137,45,136,49,"_getAuthenticatorAssuranceLevel"],[137,76,136,80],[137,77,136,81,"bind"],[137,81,136,85],[137,82,136,86],[137,86,136,90],[137,87,136,91],[138,8,137,12,"webauthn"],[138,16,137,20],[138,18,137,22],[138,22,137,26,"webauthn_1"],[138,32,137,36],[138,33,137,37,"WebAuthnApi"],[138,44,137,48],[138,45,137,49],[138,49,137,53],[139,6,138,8],[139,7,138,9],[140,6,139,8],[140,10,139,12],[140,14,139,16],[140,15,139,17,"persistSession"],[140,29,139,31],[140,31,139,33],[141,8,140,12],[141,12,140,16,"settings"],[141,20,140,24],[141,21,140,25,"storage"],[141,28,140,32],[141,30,140,34],[142,10,141,16],[142,14,141,20],[142,15,141,21,"storage"],[142,22,141,28],[142,25,141,31,"settings"],[142,33,141,39],[142,34,141,40,"storage"],[142,41,141,47],[143,8,142,12],[143,9,142,13],[143,15,143,17],[144,10,144,16],[144,14,144,20],[144,15,144,21],[144,16,144,22],[144,18,144,24,"helpers_1"],[144,27,144,33],[144,28,144,34,"supportsLocalStorage"],[144,48,144,54],[144,50,144,56],[144,51,144,57],[144,53,144,59],[145,12,145,20],[145,16,145,24],[145,17,145,25,"storage"],[145,24,145,32],[145,27,145,35,"globalThis"],[145,37,145,45],[145,38,145,46,"localStorage"],[145,50,145,58],[146,10,146,16],[146,11,146,17],[146,17,147,21],[147,12,148,20],[147,16,148,24],[147,17,148,25,"memoryStorage"],[147,30,148,38],[147,33,148,41],[147,34,148,42],[147,35,148,43],[148,12,149,20],[148,16,149,24],[148,17,149,25,"storage"],[148,24,149,32],[148,27,149,35],[148,28,149,36],[148,29,149,37],[148,31,149,39,"local_storage_1"],[148,46,149,54],[148,47,149,55,"memoryLocalStorageAdapter"],[148,72,149,80],[148,74,149,82],[148,78,149,86],[148,79,149,87,"memoryStorage"],[148,92,149,100],[148,93,149,101],[149,10,150,16],[150,8,151,12],[151,8,152,12],[151,12,152,16,"settings"],[151,20,152,24],[151,21,152,25,"userStorage"],[151,32,152,36],[151,34,152,38],[152,10,153,16],[152,14,153,20],[152,15,153,21,"userStorage"],[152,26,153,32],[152,29,153,35,"settings"],[152,37,153,43],[152,38,153,44,"userStorage"],[152,49,153,55],[153,8,154,12],[154,6,155,8],[154,7,155,9],[154,13,156,13],[155,8,157,12],[155,12,157,16],[155,13,157,17,"memoryStorage"],[155,26,157,30],[155,29,157,33],[155,30,157,34],[155,31,157,35],[156,8,158,12],[156,12,158,16],[156,13,158,17,"storage"],[156,20,158,24],[156,23,158,27],[156,24,158,28],[156,25,158,29],[156,27,158,31,"local_storage_1"],[156,42,158,46],[156,43,158,47,"memoryLocalStorageAdapter"],[156,68,158,72],[156,70,158,74],[156,74,158,78],[156,75,158,79,"memoryStorage"],[156,88,158,92],[156,89,158,93],[157,6,159,8],[158,6,160,8],[158,10,160,12],[158,11,160,13],[158,12,160,14],[158,14,160,16,"helpers_1"],[158,23,160,25],[158,24,160,26,"isBrowser"],[158,33,160,35],[158,35,160,37],[158,36,160,38],[158,40,160,42,"globalThis"],[158,50,160,52],[158,51,160,53,"BroadcastChannel"],[158,67,160,69],[158,71,160,73],[158,75,160,77],[158,76,160,78,"persistSession"],[158,90,160,92],[158,94,160,96],[158,98,160,100],[158,99,160,101,"storageKey"],[158,109,160,111],[158,111,160,113],[159,8,161,12],[159,12,161,16],[160,10,162,16],[160,14,162,20],[160,15,162,21,"broadcastChannel"],[160,31,162,37],[160,34,162,40],[160,38,162,44,"globalThis"],[160,48,162,54],[160,49,162,55,"BroadcastChannel"],[160,65,162,71],[160,66,162,72],[160,70,162,76],[160,71,162,77,"storageKey"],[160,81,162,87],[160,82,162,88],[161,8,163,12],[161,9,163,13],[161,10,164,12],[161,17,164,19,"e"],[161,18,164,20],[161,20,164,22],[162,10,165,16,"console"],[162,17,165,23],[162,18,165,24,"error"],[162,23,165,29],[162,24,165,30],[162,112,165,118],[162,114,165,120,"e"],[162,115,165,121],[162,116,165,122],[163,8,166,12],[164,8,167,12],[164,9,167,13,"_b"],[164,11,167,15],[164,14,167,18],[164,18,167,22],[164,19,167,23,"broadcastChannel"],[164,35,167,39],[164,41,167,45],[164,45,167,49],[164,49,167,53,"_b"],[164,51,167,55],[164,56,167,60],[164,61,167,65],[164,62,167,66],[164,65,167,69],[164,70,167,74],[164,71,167,75],[164,74,167,78,"_b"],[164,76,167,80],[164,77,167,81,"addEventListener"],[164,93,167,97],[164,94,167,98],[164,103,167,107],[165,10,167,107],[165,14,167,107,"_ref"],[165,18,167,107],[165,21,167,107,"_asyncToGenerator"],[165,38,167,107],[165,39,167,109],[165,50,167,116,"event"],[165,55,167,121],[165,57,167,126],[166,12,168,16,"_this"],[166,17,168,20],[166,18,168,21,"_debug"],[166,24,168,27],[166,25,168,28],[166,83,168,86],[166,85,168,88,"event"],[166,90,168,93],[166,91,168,94],[167,12,169,16],[167,18,169,22,"_this"],[167,23,169,26],[167,24,169,27,"_notifyAllSubscribers"],[167,45,169,48],[167,46,169,49,"event"],[167,51,169,54],[167,52,169,55,"data"],[167,56,169,59],[167,57,169,60,"event"],[167,62,169,65],[167,64,169,67,"event"],[167,69,169,72],[167,70,169,73,"data"],[167,74,169,77],[167,75,169,78,"session"],[167,82,169,85],[167,84,169,87],[167,89,169,92],[167,90,169,93],[167,91,169,94],[167,92,169,95],[168,10,170,12],[168,11,170,13],[169,10,170,13],[169,27,170,13,"_x4"],[169,30,170,13],[170,12,170,13],[170,19,170,13,"_ref"],[170,23,170,13],[170,24,170,13,"apply"],[170,29,170,13],[170,36,170,13,"arguments"],[170,45,170,13],[171,10,170,13],[172,8,170,13],[172,12,170,14],[173,6,171,8],[174,6,172,8],[174,10,172,12],[174,11,172,13,"initialize"],[174,21,172,23],[174,22,172,24],[174,23,172,25],[175,4,173,4],[176,4,173,5],[176,11,173,5,"_createClass"],[176,23,173,5],[176,24,173,5,"GoTrueClient"],[176,36,173,5],[177,6,173,5,"key"],[177,9,173,5],[178,6,173,5,"get"],[178,9,173,5],[179,6,43,4],[180,0,44,0],[181,0,45,0],[182,6,46,4],[182,15,46,4,"get"],[182,16,46,4],[182,18,46,15],[183,8,47,8],[183,12,47,12,"_a"],[183,14,47,14],[183,16,47,16,"_b"],[183,18,47,18],[184,8,48,8],[184,15,48,15],[184,16,48,16,"_b"],[184,18,48,18],[184,21,48,21],[184,22,48,22,"_a"],[184,24,48,24],[184,27,48,27,"GLOBAL_JWKS"],[184,38,48,38],[184,39,48,39],[184,43,48,43],[184,44,48,44,"storageKey"],[184,54,48,54],[184,55,48,55],[184,61,48,61],[184,65,48,65],[184,69,48,69,"_a"],[184,71,48,71],[184,76,48,76],[184,81,48,81],[184,82,48,82],[184,85,48,85],[184,90,48,90],[184,91,48,91],[184,94,48,94,"_a"],[184,96,48,96],[184,97,48,97,"jwks"],[184,101,48,101],[184,107,48,107],[184,111,48,111],[184,115,48,115,"_b"],[184,117,48,117],[184,122,48,122],[184,127,48,127],[184,128,48,128],[184,131,48,131,"_b"],[184,133,48,133],[184,136,48,136],[185,10,48,138,"keys"],[185,14,48,142],[185,16,48,144],[186,8,48,147],[186,9,48,148],[187,6,49,4],[187,7,49,5],[188,6,49,5,"set"],[188,9,49,5],[188,11,50,4],[188,20,50,4,"set"],[188,21,50,13,"value"],[188,26,50,18],[188,28,50,20],[189,8,51,8,"GLOBAL_JWKS"],[189,19,51,19],[189,20,51,20],[189,24,51,24],[189,25,51,25,"storageKey"],[189,35,51,35],[189,36,51,36],[189,39,51,39,"Object"],[189,45,51,45],[189,46,51,46,"assign"],[189,52,51,52],[189,53,51,53,"Object"],[189,59,51,59],[189,60,51,60,"assign"],[189,66,51,66],[189,67,51,67],[189,68,51,68],[189,69,51,69],[189,71,51,71,"GLOBAL_JWKS"],[189,82,51,82],[189,83,51,83],[189,87,51,87],[189,88,51,88,"storageKey"],[189,98,51,98],[189,99,51,99],[189,100,51,100],[189,102,51,102],[190,10,51,104,"jwks"],[190,14,51,108],[190,16,51,110,"value"],[191,8,51,116],[191,9,51,117],[191,10,51,118],[192,6,52,4],[193,4,52,5],[194,6,52,5,"key"],[194,9,52,5],[195,6,52,5,"get"],[195,9,52,5],[195,11,53,4],[195,20,53,4,"get"],[195,21,53,4],[195,23,53,25],[196,8,54,8],[196,12,54,12,"_a"],[196,14,54,14],[196,16,54,16,"_b"],[196,18,54,18],[197,8,55,8],[197,15,55,15],[197,16,55,16,"_b"],[197,18,55,18],[197,21,55,21],[197,22,55,22,"_a"],[197,24,55,24],[197,27,55,27,"GLOBAL_JWKS"],[197,38,55,38],[197,39,55,39],[197,43,55,43],[197,44,55,44,"storageKey"],[197,54,55,54],[197,55,55,55],[197,61,55,61],[197,65,55,65],[197,69,55,69,"_a"],[197,71,55,71],[197,76,55,76],[197,81,55,81],[197,82,55,82],[197,85,55,85],[197,90,55,90],[197,91,55,91],[197,94,55,94,"_a"],[197,96,55,96],[197,97,55,97,"cachedAt"],[197,105,55,105],[197,111,55,111],[197,115,55,115],[197,119,55,119,"_b"],[197,121,55,121],[197,126,55,126],[197,131,55,131],[197,132,55,132],[197,135,55,135,"_b"],[197,137,55,137],[197,140,55,140,"Number"],[197,146,55,146],[197,147,55,147,"MIN_SAFE_INTEGER"],[197,163,55,163],[198,6,56,4],[198,7,56,5],[199,6,56,5,"set"],[199,9,56,5],[199,11,57,4],[199,20,57,4,"set"],[199,21,57,23,"value"],[199,26,57,28],[199,28,57,30],[200,8,58,8,"GLOBAL_JWKS"],[200,19,58,19],[200,20,58,20],[200,24,58,24],[200,25,58,25,"storageKey"],[200,35,58,35],[200,36,58,36],[200,39,58,39,"Object"],[200,45,58,45],[200,46,58,46,"assign"],[200,52,58,52],[200,53,58,53,"Object"],[200,59,58,59],[200,60,58,60,"assign"],[200,66,58,66],[200,67,58,67],[200,68,58,68],[200,69,58,69],[200,71,58,71,"GLOBAL_JWKS"],[200,82,58,82],[200,83,58,83],[200,87,58,87],[200,88,58,88,"storageKey"],[200,98,58,98],[200,99,58,99],[200,100,58,100],[200,102,58,102],[201,10,58,104,"cachedAt"],[201,18,58,112],[201,20,58,114,"value"],[202,8,58,120],[202,9,58,121],[202,10,58,122],[203,6,59,4],[204,4,59,5],[205,6,59,5,"key"],[205,9,59,5],[206,6,59,5,"value"],[206,11,59,5],[206,13,174,4],[206,22,174,4,"_debug"],[206,28,174,10,"_debug"],[206,29,174,10],[206,31,174,20],[207,8,175,8],[207,12,175,12],[207,16,175,16],[207,17,175,17,"logDebugMessages"],[207,33,175,33],[207,35,175,35],[208,10,175,35],[208,19,175,35,"_len"],[208,23,175,35],[208,26,175,35,"arguments"],[208,35,175,35],[208,36,175,35,"length"],[208,42,175,35],[208,44,174,14,"args"],[208,48,174,18],[208,55,174,18,"Array"],[208,60,174,18],[208,61,174,18,"_len"],[208,65,174,18],[208,68,174,18,"_key"],[208,72,174,18],[208,78,174,18,"_key"],[208,82,174,18],[208,85,174,18,"_len"],[208,89,174,18],[208,91,174,18,"_key"],[208,95,174,18],[209,12,174,14,"args"],[209,16,174,18],[209,17,174,18,"_key"],[209,21,174,18],[209,25,174,18,"arguments"],[209,34,174,18],[209,35,174,18,"_key"],[209,39,174,18],[210,10,174,18],[211,10,176,12],[211,14,176,16],[211,15,176,17,"logger"],[211,21,176,23],[211,22,176,24],[211,38,176,40],[211,42,176,44],[211,43,176,45,"instanceID"],[211,53,176,55],[211,58,176,60,"version_1"],[211,67,176,69],[211,68,176,70,"version"],[211,75,176,77],[211,80,176,82],[211,84,176,86,"Date"],[211,88,176,90],[211,89,176,91],[211,90,176,92],[211,91,176,93,"toISOString"],[211,102,176,104],[211,103,176,105],[211,104,176,106],[211,106,176,108],[211,108,176,110],[211,111,176,113,"args"],[211,115,176,117],[211,116,176,118],[212,8,177,8],[213,8,178,8],[213,15,178,15],[213,19,178,19],[214,6,179,4],[215,6,180,4],[216,0,181,0],[217,0,182,0],[218,0,183,0],[219,0,184,0],[220,4,180,4],[221,6,180,4,"key"],[221,9,180,4],[222,6,180,4,"value"],[222,11,180,4],[223,8,180,4],[223,12,180,4,"_initialize2"],[223,24,180,4],[223,27,180,4,"_asyncToGenerator"],[223,44,180,4],[223,45,185,4],[223,58,185,23],[224,10,185,23],[224,14,185,23,"_this2"],[224,20,185,23],[225,10,186,8],[225,14,186,12],[225,18,186,16],[225,19,186,17,"initializePromise"],[225,36,186,34],[225,38,186,36],[226,12,187,12],[226,25,187,25],[226,29,187,29],[226,30,187,30,"initializePromise"],[226,47,187,47],[227,10,188,8],[228,10,189,8],[228,14,189,12],[228,15,189,13,"initializePromise"],[228,32,189,30],[228,35,189,33,"_asyncToGenerator"],[228,52,189,33],[228,53,189,34],[228,66,189,46],[229,12,190,12],[229,25,190,25,"_this2"],[229,31,190,29],[229,32,190,30,"_acquireLock"],[229,44,190,42],[229,45,190,43],[229,46,190,44],[229,47,190,45],[229,62,190,45,"_asyncToGenerator"],[229,79,190,45],[229,80,190,47],[229,93,190,59],[230,14,191,16],[230,27,191,29,"_this2"],[230,33,191,33],[230,34,191,34,"_initialize"],[230,45,191,45],[230,46,191,46],[230,47,191,47],[231,12,192,12],[231,13,192,13],[231,15,192,14],[232,10,193,8],[232,11,193,9],[232,13,193,11],[232,14,193,12],[233,10,194,8],[233,23,194,21],[233,27,194,25],[233,28,194,26,"initializePromise"],[233,45,194,43],[234,8,195,4],[234,9,195,5],[235,8,195,5],[235,17,185,10,"initialize"],[235,27,185,20,"initialize"],[235,28,185,20],[236,10,185,20],[236,17,185,20,"_initialize2"],[236,29,185,20],[236,30,185,20,"apply"],[236,35,185,20],[236,42,185,20,"arguments"],[236,51,185,20],[237,8,185,20],[238,8,185,20],[238,15,185,10,"initialize"],[238,25,185,20],[239,6,185,20],[240,6,196,4],[241,0,197,0],[242,0,198,0],[243,0,199,0],[244,0,200,0],[245,0,201,0],[246,6,196,4],[247,4,196,4],[248,6,196,4,"key"],[248,9,196,4],[249,6,196,4,"value"],[249,11,196,4],[250,8,196,4],[250,12,196,4,"_initialize3"],[250,24,196,4],[250,27,196,4,"_asyncToGenerator"],[250,44,196,4],[250,45,202,4],[250,58,202,24],[251,10,202,24],[251,14,202,24,"_this3"],[251,20,202,24],[252,10,203,8],[252,14,203,12,"_a"],[252,16,203,14],[253,10,204,8],[253,14,204,12],[254,12,205,12],[254,16,205,18,"params"],[254,22,205,24],[254,25,205,27],[254,26,205,28],[254,27,205,29],[254,29,205,31,"helpers_1"],[254,38,205,40],[254,39,205,41,"parseParametersFromURL"],[254,61,205,63],[254,63,205,65,"window"],[254,69,205,71],[254,70,205,72,"location"],[254,78,205,80],[254,79,205,81,"href"],[254,83,205,85],[254,84,205,86],[255,12,206,12],[255,16,206,16,"callbackUrlType"],[255,31,206,31],[255,34,206,34],[255,40,206,40],[256,12,207,12],[256,16,207,16],[256,20,207,20],[256,21,207,21,"_isImplicitGrantCallback"],[256,45,207,45],[256,46,207,46,"params"],[256,52,207,52],[256,53,207,53],[256,55,207,55],[257,14,208,16,"callbackUrlType"],[257,29,208,31],[257,32,208,34],[257,42,208,44],[258,12,209,12],[258,13,209,13],[258,19,210,17],[258,29,210,27],[258,33,210,31],[258,34,210,32,"_isPKCECallback"],[258,49,210,47],[258,50,210,48,"params"],[258,56,210,54],[258,57,210,55],[258,59,210,57],[259,14,211,16,"callbackUrlType"],[259,29,211,31],[259,32,211,34],[259,38,211,40],[260,12,212,12],[261,12,213,12],[262,0,214,0],[263,0,215,0],[264,0,216,0],[265,0,217,0],[266,0,218,0],[267,12,219,12],[267,16,219,16],[267,17,219,17],[267,18,219,18],[267,20,219,20,"helpers_1"],[267,29,219,29],[267,30,219,30,"isBrowser"],[267,39,219,39],[267,41,219,41],[267,42,219,42],[267,46,219,46],[267,50,219,50],[267,51,219,51,"detectSessionInUrl"],[267,69,219,69],[267,73,219,73,"callbackUrlType"],[267,88,219,88],[267,93,219,93],[267,99,219,99],[267,101,219,101],[268,14,220,16],[268,18,220,16,"_yield$this$_getSessi"],[268,39,220,16],[268,48,220,46],[268,52,220,50],[268,53,220,51,"_getSessionFromURL"],[268,71,220,69],[268,72,220,70,"params"],[268,78,220,76],[268,80,220,78,"callbackUrlType"],[268,95,220,93],[268,96,220,94],[269,16,220,24,"data"],[269,20,220,28],[269,23,220,28,"_yield$this$_getSessi"],[269,44,220,28],[269,45,220,24,"data"],[269,49,220,28],[270,16,220,30,"error"],[270,21,220,35],[270,24,220,35,"_yield$this$_getSessi"],[270,45,220,35],[270,46,220,30,"error"],[270,51,220,35],[271,14,221,16],[271,18,221,20,"error"],[271,23,221,25],[271,25,221,27],[272,16,222,20],[272,20,222,24],[272,21,222,25,"_debug"],[272,27,222,31],[272,28,222,32],[272,44,222,48],[272,46,222,50],[272,80,222,84],[272,82,222,86,"error"],[272,87,222,91],[272,88,222,92],[273,16,223,20],[273,20,223,24],[273,21,223,25],[273,22,223,26],[273,24,223,28,"errors_1"],[273,32,223,36],[273,33,223,37,"isAuthImplicitGrantRedirectError"],[273,65,223,69],[273,67,223,71,"error"],[273,72,223,76],[273,73,223,77],[273,75,223,79],[274,18,224,24],[274,22,224,30,"errorCode"],[274,31,224,39],[274,34,224,42],[274,35,224,43,"_a"],[274,37,224,45],[274,40,224,48,"error"],[274,45,224,53],[274,46,224,54,"details"],[274,53,224,61],[274,59,224,67],[274,63,224,71],[274,67,224,75,"_a"],[274,69,224,77],[274,74,224,82],[274,79,224,87],[274,80,224,88],[274,83,224,91],[274,88,224,96],[274,89,224,97],[274,92,224,100,"_a"],[274,94,224,102],[274,95,224,103,"code"],[274,99,224,107],[275,18,225,24],[275,22,225,28,"errorCode"],[275,31,225,37],[275,36,225,42],[275,61,225,67],[275,65,226,28,"errorCode"],[275,74,226,37],[275,79,226,42],[275,99,226,62],[275,103,227,28,"errorCode"],[275,112,227,37],[275,117,227,42],[275,148,227,73],[275,150,227,75],[276,20,228,28],[276,27,228,35],[277,22,228,37,"error"],[278,20,228,43],[278,21,228,44],[279,18,229,24],[280,16,230,20],[281,16,231,20],[282,16,232,20],[283,16,233,20],[283,22,233,26],[283,26,233,30],[283,27,233,31,"_removeSession"],[283,41,233,45],[283,42,233,46],[283,43,233,47],[284,16,234,20],[284,23,234,27],[285,18,234,29,"error"],[286,16,234,35],[286,17,234,36],[287,14,235,16],[288,14,236,16],[288,18,236,24,"session"],[288,25,236,31],[288,28,236,50,"data"],[288,32,236,54],[288,33,236,24,"session"],[288,40,236,31],[289,16,236,33,"redirectType"],[289,28,236,45],[289,31,236,50,"data"],[289,35,236,54],[289,36,236,33,"redirectType"],[289,48,236,45],[290,14,237,16],[290,18,237,20],[290,19,237,21,"_debug"],[290,25,237,27],[290,26,237,28],[290,42,237,44],[290,44,237,46],[290,69,237,71],[290,71,237,73,"session"],[290,78,237,80],[290,80,237,82],[290,95,237,97],[290,97,237,99,"redirectType"],[290,109,237,111],[290,110,237,112],[291,14,238,16],[291,20,238,22],[291,24,238,26],[291,25,238,27,"_saveSession"],[291,37,238,39],[291,38,238,40,"session"],[291,45,238,47],[291,46,238,48],[292,14,239,16,"setTimeout"],[292,24,239,26],[292,38,239,26,"_asyncToGenerator"],[292,55,239,26],[292,56,239,27],[292,69,239,39],[293,16,240,20],[293,20,240,24,"redirectType"],[293,32,240,36],[293,37,240,41],[293,47,240,51],[293,49,240,53],[294,18,241,24],[294,24,241,30,"_this3"],[294,30,241,34],[294,31,241,35,"_notifyAllSubscribers"],[294,52,241,56],[294,53,241,57],[294,72,241,76],[294,74,241,78,"session"],[294,81,241,85],[294,82,241,86],[295,16,242,20],[295,17,242,21],[295,23,243,25],[296,18,244,24],[296,24,244,30,"_this3"],[296,30,244,34],[296,31,244,35,"_notifyAllSubscribers"],[296,52,244,56],[296,53,244,57],[296,64,244,68],[296,66,244,70,"session"],[296,73,244,77],[296,74,244,78],[297,16,245,20],[298,14,246,16],[298,15,246,17],[298,18,246,19],[298,19,246,20],[298,20,246,21],[299,14,247,16],[299,21,247,23],[300,16,247,25,"error"],[300,21,247,30],[300,23,247,32],[301,14,247,37],[301,15,247,38],[302,12,248,12],[303,12,249,12],[304,12,250,12],[304,18,250,18],[304,22,250,22],[304,23,250,23,"_recoverAndRefresh"],[304,41,250,41],[304,42,250,42],[304,43,250,43],[305,12,251,12],[305,19,251,19],[306,14,251,21,"error"],[306,19,251,26],[306,21,251,28],[307,12,251,33],[307,13,251,34],[308,10,252,8],[308,11,252,9],[308,12,253,8],[308,19,253,15,"error"],[308,24,253,20],[308,26,253,22],[309,12,254,12],[309,16,254,16],[309,17,254,17],[309,18,254,18],[309,20,254,20,"errors_1"],[309,28,254,28],[309,29,254,29,"isAuthError"],[309,40,254,40],[309,42,254,42,"error"],[309,47,254,47],[309,48,254,48],[309,50,254,50],[310,14,255,16],[310,21,255,23],[311,16,255,25,"error"],[312,14,255,31],[312,15,255,32],[313,12,256,12],[314,12,257,12],[314,19,257,19],[315,14,258,16,"error"],[315,19,258,21],[315,21,258,23],[315,25,258,27,"errors_1"],[315,33,258,35],[315,34,258,36,"AuthUnknownError"],[315,50,258,52],[315,51,258,53],[315,91,258,93],[315,93,258,95,"error"],[315,98,258,100],[316,12,259,12],[316,13,259,13],[317,10,260,8],[317,11,260,9],[317,20,261,16],[318,12,262,12],[318,18,262,18],[318,22,262,22],[318,23,262,23,"_handleVisibilityChange"],[318,46,262,46],[318,47,262,47],[318,48,262,48],[319,12,263,12],[319,16,263,16],[319,17,263,17,"_debug"],[319,23,263,23],[319,24,263,24],[319,40,263,40],[319,42,263,42],[319,47,263,47],[319,48,263,48],[320,10,264,8],[321,8,265,4],[321,9,265,5],[322,8,265,5],[322,17,202,10,"_initialize"],[322,28,202,21,"_initialize"],[322,29,202,21],[323,10,202,21],[323,17,202,21,"_initialize3"],[323,29,202,21],[323,30,202,21,"apply"],[323,35,202,21],[323,42,202,21,"arguments"],[323,51,202,21],[324,8,202,21],[325,8,202,21],[325,15,202,10,"_initialize"],[325,26,202,21],[326,6,202,21],[327,6,266,4],[328,0,267,0],[329,0,268,0],[330,0,269,0],[331,0,270,0],[332,6,266,4],[333,4,266,4],[334,6,266,4,"key"],[334,9,266,4],[335,6,266,4,"value"],[335,11,266,4],[336,8,266,4],[336,12,266,4,"_signInAnonymously"],[336,30,266,4],[336,33,266,4,"_asyncToGenerator"],[336,50,266,4],[336,51,271,4],[336,62,271,28,"credentials"],[336,73,271,39],[336,75,271,41],[337,10,272,8],[337,14,272,12,"_a"],[337,16,272,14],[337,18,272,16,"_b"],[337,20,272,18],[337,22,272,20,"_c"],[337,24,272,22],[338,10,273,8],[338,14,273,12],[339,12,274,12],[339,16,274,18,"res"],[339,19,274,21],[339,28,274,30],[339,29,274,31],[339,30,274,32],[339,32,274,34,"fetch_1"],[339,39,274,41],[339,40,274,42,"_request"],[339,48,274,50],[339,50,274,52],[339,54,274,56],[339,55,274,57,"fetch"],[339,60,274,62],[339,62,274,64],[339,68,274,70],[339,70,274,72],[339,73,274,75],[339,77,274,79],[339,78,274,80,"url"],[339,81,274,83],[339,90,274,92],[339,92,274,94],[340,14,275,16,"headers"],[340,21,275,23],[340,23,275,25],[340,27,275,29],[340,28,275,30,"headers"],[340,35,275,37],[341,14,276,16,"body"],[341,18,276,20],[341,20,276,22],[342,16,277,20,"data"],[342,20,277,24],[342,22,277,26],[342,23,277,27,"_b"],[342,25,277,29],[342,28,277,32],[342,29,277,33,"_a"],[342,31,277,35],[342,34,277,38,"credentials"],[342,45,277,49],[342,50,277,54],[342,54,277,58],[342,58,277,62,"credentials"],[342,69,277,73],[342,74,277,78],[342,79,277,83],[342,80,277,84],[342,83,277,87],[342,88,277,92],[342,89,277,93],[342,92,277,96,"credentials"],[342,103,277,107],[342,104,277,108,"options"],[342,111,277,115],[342,117,277,121],[342,121,277,125],[342,125,277,129,"_a"],[342,127,277,131],[342,132,277,136],[342,137,277,141],[342,138,277,142],[342,141,277,145],[342,146,277,150],[342,147,277,151],[342,150,277,154,"_a"],[342,152,277,156],[342,153,277,157,"data"],[342,157,277,161],[342,163,277,167],[342,167,277,171],[342,171,277,175,"_b"],[342,173,277,177],[342,178,277,182],[342,183,277,187],[342,184,277,188],[342,187,277,191,"_b"],[342,189,277,193],[342,192,277,196],[342,193,277,197],[342,194,277,198],[343,16,278,20,"gotrue_meta_security"],[343,36,278,40],[343,38,278,42],[344,18,278,44,"captcha_token"],[344,31,278,57],[344,33,278,59],[344,34,278,60,"_c"],[344,36,278,62],[344,39,278,65,"credentials"],[344,50,278,76],[344,55,278,81],[344,59,278,85],[344,63,278,89,"credentials"],[344,74,278,100],[344,79,278,105],[344,84,278,110],[344,85,278,111],[344,88,278,114],[344,93,278,119],[344,94,278,120],[344,97,278,123,"credentials"],[344,108,278,134],[344,109,278,135,"options"],[344,116,278,142],[344,122,278,148],[344,126,278,152],[344,130,278,156,"_c"],[344,132,278,158],[344,137,278,163],[344,142,278,168],[344,143,278,169],[344,146,278,172],[344,151,278,177],[344,152,278,178],[344,155,278,181,"_c"],[344,157,278,183],[344,158,278,184,"captchaToken"],[345,16,278,197],[346,14,279,16],[346,15,279,17],[347,14,280,16,"xform"],[347,19,280,21],[347,21,280,23,"fetch_1"],[347,28,280,30],[347,29,280,31,"_sessionResponse"],[348,12,281,12],[348,13,281,13],[348,14,281,14],[349,12,282,12],[349,16,282,20,"data"],[349,20,282,24],[349,23,282,36,"res"],[349,26,282,39],[349,27,282,20,"data"],[349,31,282,24],[350,14,282,26,"error"],[350,19,282,31],[350,22,282,36,"res"],[350,25,282,39],[350,26,282,26,"error"],[350,31,282,31],[351,12,283,12],[351,16,283,16,"error"],[351,21,283,21],[351,25,283,25],[351,26,283,26,"data"],[351,30,283,30],[351,32,283,32],[352,14,284,16],[352,21,284,23],[353,16,284,25,"data"],[353,20,284,29],[353,22,284,31],[354,18,284,33,"user"],[354,22,284,37],[354,24,284,39],[354,28,284,43],[355,18,284,45,"session"],[355,25,284,52],[355,27,284,54],[356,16,284,59],[356,17,284,60],[357,16,284,62,"error"],[357,21,284,67],[357,23,284,69,"error"],[358,14,284,75],[358,15,284,76],[359,12,285,12],[360,12,286,12],[360,16,286,18,"session"],[360,23,286,25],[360,26,286,28,"data"],[360,30,286,32],[360,31,286,33,"session"],[360,38,286,40],[361,12,287,12],[361,16,287,18,"user"],[361,20,287,22],[361,23,287,25,"data"],[361,27,287,29],[361,28,287,30,"user"],[361,32,287,34],[362,12,288,12],[362,16,288,16,"data"],[362,20,288,20],[362,21,288,21,"session"],[362,28,288,28],[362,30,288,30],[363,14,289,16],[363,20,289,22],[363,24,289,26],[363,25,289,27,"_saveSession"],[363,37,289,39],[363,38,289,40,"data"],[363,42,289,44],[363,43,289,45,"session"],[363,50,289,52],[363,51,289,53],[364,14,290,16],[364,20,290,22],[364,24,290,26],[364,25,290,27,"_notifyAllSubscribers"],[364,46,290,48],[364,47,290,49],[364,58,290,60],[364,60,290,62,"session"],[364,67,290,69],[364,68,290,70],[365,12,291,12],[366,12,292,12],[366,19,292,19],[367,14,292,21,"data"],[367,18,292,25],[367,20,292,27],[368,16,292,29,"user"],[368,20,292,33],[369,16,292,35,"session"],[370,14,292,43],[370,15,292,44],[371,14,292,46,"error"],[371,19,292,51],[371,21,292,53],[372,12,292,58],[372,13,292,59],[373,10,293,8],[373,11,293,9],[373,12,294,8],[373,19,294,15,"error"],[373,24,294,20],[373,26,294,22],[374,12,295,12],[374,16,295,16],[374,17,295,17],[374,18,295,18],[374,20,295,20,"errors_1"],[374,28,295,28],[374,29,295,29,"isAuthError"],[374,40,295,40],[374,42,295,42,"error"],[374,47,295,47],[374,48,295,48],[374,50,295,50],[375,14,296,16],[375,21,296,23],[376,16,296,25,"data"],[376,20,296,29],[376,22,296,31],[377,18,296,33,"user"],[377,22,296,37],[377,24,296,39],[377,28,296,43],[378,18,296,45,"session"],[378,25,296,52],[378,27,296,54],[379,16,296,59],[379,17,296,60],[380,16,296,62,"error"],[381,14,296,68],[381,15,296,69],[382,12,297,12],[383,12,298,12],[383,18,298,18,"error"],[383,23,298,23],[384,10,299,8],[385,8,300,4],[385,9,300,5],[386,8,300,5],[386,17,271,10,"signInAnonymously"],[386,34,271,27,"signInAnonymously"],[386,35,271,27,"_x5"],[386,38,271,27],[387,10,271,27],[387,17,271,27,"_signInAnonymously"],[387,35,271,27],[387,36,271,27,"apply"],[387,41,271,27],[387,48,271,27,"arguments"],[387,57,271,27],[388,8,271,27],[389,8,271,27],[389,15,271,10,"signInAnonymously"],[389,32,271,27],[390,6,271,27],[391,6,301,4],[392,0,302,0],[393,0,303,0],[394,0,304,0],[395,0,305,0],[396,0,306,0],[397,0,307,0],[398,0,308,0],[399,0,309,0],[400,0,310,0],[401,6,301,4],[402,4,301,4],[403,6,301,4,"key"],[403,9,301,4],[404,6,301,4,"value"],[404,11,301,4],[405,8,301,4],[405,12,301,4,"_signUp"],[405,19,301,4],[405,22,301,4,"_asyncToGenerator"],[405,39,301,4],[405,40,311,4],[405,51,311,17,"credentials"],[405,62,311,28],[405,64,311,30],[406,10,312,8],[406,14,312,12,"_a"],[406,16,312,14],[406,18,312,16,"_b"],[406,20,312,18],[406,22,312,20,"_c"],[406,24,312,22],[407,10,313,8],[407,14,313,12],[408,12,314,12],[408,16,314,16,"res"],[408,19,314,19],[409,12,315,12],[409,16,315,16],[409,23,315,23],[409,27,315,27,"credentials"],[409,38,315,38],[409,40,315,40],[410,14,316,16],[410,18,316,24,"email"],[410,23,316,29],[410,26,316,53,"credentials"],[410,37,316,64],[410,38,316,24,"email"],[410,43,316,29],[411,16,316,31,"password"],[411,24,316,39],[411,27,316,53,"credentials"],[411,38,316,64],[411,39,316,31,"password"],[411,47,316,39],[412,16,316,41,"options"],[412,23,316,48],[412,26,316,53,"credentials"],[412,37,316,64],[412,38,316,41,"options"],[412,45,316,48],[413,14,317,16],[413,18,317,20,"codeChallenge"],[413,31,317,33],[413,34,317,36],[413,38,317,40],[414,14,318,16],[414,18,318,20,"codeChallengeMethod"],[414,37,318,39],[414,40,318,42],[414,44,318,46],[415,14,319,16],[415,18,319,20],[415,22,319,24],[415,23,319,25,"flowType"],[415,31,319,33],[415,36,319,38],[415,42,319,44],[415,44,319,46],[416,16,320,20],[417,16,320,21],[417,20,320,21,"_yield"],[417,26,320,21],[417,35,321,65],[417,36,321,66],[417,37,321,67],[417,39,321,69,"helpers_1"],[417,48,321,78],[417,49,321,79,"getCodeChallengeAndMethod"],[417,74,321,104],[417,76,321,106],[417,80,321,110],[417,81,321,111,"storage"],[417,88,321,118],[417,90,321,120],[417,94,321,124],[417,95,321,125,"storageKey"],[417,105,321,135],[417,106,321,136],[418,16,321,136],[418,20,321,136,"_yield2"],[418,27,321,136],[418,30,321,136,"_slicedToArray"],[418,44,321,136],[418,45,321,136,"_yield"],[418,51,321,136],[419,16,321,21,"codeChallenge"],[419,29,321,34],[419,32,321,34,"_yield2"],[419,39,321,34],[420,16,321,36,"codeChallengeMethod"],[420,35,321,55],[420,38,321,55,"_yield2"],[420,45,321,55],[421,14,322,16],[422,14,323,16,"res"],[422,17,323,19],[422,26,323,28],[422,27,323,29],[422,28,323,30],[422,30,323,32,"fetch_1"],[422,37,323,39],[422,38,323,40,"_request"],[422,46,323,48],[422,48,323,50],[422,52,323,54],[422,53,323,55,"fetch"],[422,58,323,60],[422,60,323,62],[422,66,323,68],[422,68,323,70],[422,71,323,73],[422,75,323,77],[422,76,323,78,"url"],[422,79,323,81],[422,88,323,90],[422,90,323,92],[423,16,324,20,"headers"],[423,23,324,27],[423,25,324,29],[423,29,324,33],[423,30,324,34,"headers"],[423,37,324,41],[424,16,325,20,"redirectTo"],[424,26,325,30],[424,28,325,32,"options"],[424,35,325,39],[424,40,325,44],[424,44,325,48],[424,48,325,52,"options"],[424,55,325,59],[424,60,325,64],[424,65,325,69],[424,66,325,70],[424,69,325,73],[424,74,325,78],[424,75,325,79],[424,78,325,82,"options"],[424,85,325,89],[424,86,325,90,"emailRedirectTo"],[424,101,325,105],[425,16,326,20,"body"],[425,20,326,24],[425,22,326,26],[426,18,327,24,"email"],[426,23,327,29],[427,18,328,24,"password"],[427,26,328,32],[428,18,329,24,"data"],[428,22,329,28],[428,24,329,30],[428,25,329,31,"_a"],[428,27,329,33],[428,30,329,36,"options"],[428,37,329,43],[428,42,329,48],[428,46,329,52],[428,50,329,56,"options"],[428,57,329,63],[428,62,329,68],[428,67,329,73],[428,68,329,74],[428,71,329,77],[428,76,329,82],[428,77,329,83],[428,80,329,86,"options"],[428,87,329,93],[428,88,329,94,"data"],[428,92,329,98],[428,98,329,104],[428,102,329,108],[428,106,329,112,"_a"],[428,108,329,114],[428,113,329,119],[428,118,329,124],[428,119,329,125],[428,122,329,128,"_a"],[428,124,329,130],[428,127,329,133],[428,128,329,134],[428,129,329,135],[429,18,330,24,"gotrue_meta_security"],[429,38,330,44],[429,40,330,46],[430,20,330,48,"captcha_token"],[430,33,330,61],[430,35,330,63,"options"],[430,42,330,70],[430,47,330,75],[430,51,330,79],[430,55,330,83,"options"],[430,62,330,90],[430,67,330,95],[430,72,330,100],[430,73,330,101],[430,76,330,104],[430,81,330,109],[430,82,330,110],[430,85,330,113,"options"],[430,92,330,120],[430,93,330,121,"captchaToken"],[431,18,330,134],[431,19,330,135],[432,18,331,24,"code_challenge"],[432,32,331,38],[432,34,331,40,"codeChallenge"],[432,47,331,53],[433,18,332,24,"code_challenge_method"],[433,39,332,45],[433,41,332,47,"codeChallengeMethod"],[434,16,333,20],[434,17,333,21],[435,16,334,20,"xform"],[435,21,334,25],[435,23,334,27,"fetch_1"],[435,30,334,34],[435,31,334,35,"_sessionResponse"],[436,14,335,16],[436,15,335,17],[436,16,335,18],[437,12,336,12],[437,13,336,13],[437,19,337,17],[437,23,337,21],[437,30,337,28],[437,34,337,32,"credentials"],[437,45,337,43],[437,47,337,45],[438,14,338,16],[438,18,338,24,"phone"],[438,23,338,29],[438,26,338,53,"credentials"],[438,37,338,64],[438,38,338,24,"phone"],[438,43,338,29],[439,16,338,31,"password"],[439,25,338,39],[439,28,338,53,"credentials"],[439,39,338,64],[439,40,338,31,"password"],[439,48,338,39],[440,16,338,41,"options"],[440,24,338,48],[440,27,338,53,"credentials"],[440,38,338,64],[440,39,338,41,"options"],[440,46,338,48],[441,14,339,16,"res"],[441,17,339,19],[441,26,339,28],[441,27,339,29],[441,28,339,30],[441,30,339,32,"fetch_1"],[441,37,339,39],[441,38,339,40,"_request"],[441,46,339,48],[441,48,339,50],[441,52,339,54],[441,53,339,55,"fetch"],[441,58,339,60],[441,60,339,62],[441,66,339,68],[441,68,339,70],[441,71,339,73],[441,75,339,77],[441,76,339,78,"url"],[441,79,339,81],[441,88,339,90],[441,90,339,92],[442,16,340,20,"headers"],[442,23,340,27],[442,25,340,29],[442,29,340,33],[442,30,340,34,"headers"],[442,37,340,41],[443,16,341,20,"body"],[443,20,341,24],[443,22,341,26],[444,18,342,24,"phone"],[444,23,342,29],[445,18,343,24,"password"],[445,26,343,32],[445,28,343,24,"password"],[445,37,343,32],[446,18,344,24,"data"],[446,22,344,28],[446,24,344,30],[446,25,344,31,"_b"],[446,27,344,33],[446,30,344,36,"options"],[446,38,344,43],[446,43,344,48],[446,47,344,52],[446,51,344,56,"options"],[446,59,344,63],[446,64,344,68],[446,69,344,73],[446,70,344,74],[446,73,344,77],[446,78,344,82],[446,79,344,83],[446,82,344,86,"options"],[446,90,344,93],[446,91,344,94,"data"],[446,95,344,98],[446,101,344,104],[446,105,344,108],[446,109,344,112,"_b"],[446,111,344,114],[446,116,344,119],[446,121,344,124],[446,122,344,125],[446,125,344,128,"_b"],[446,127,344,130],[446,130,344,133],[446,131,344,134],[446,132,344,135],[447,18,345,24,"channel"],[447,25,345,31],[447,27,345,33],[447,28,345,34,"_c"],[447,30,345,36],[447,33,345,39,"options"],[447,41,345,46],[447,46,345,51],[447,50,345,55],[447,54,345,59,"options"],[447,62,345,66],[447,67,345,71],[447,72,345,76],[447,73,345,77],[447,76,345,80],[447,81,345,85],[447,82,345,86],[447,85,345,89,"options"],[447,93,345,96],[447,94,345,97,"channel"],[447,101,345,104],[447,107,345,110],[447,111,345,114],[447,115,345,118,"_c"],[447,117,345,120],[447,122,345,125],[447,127,345,130],[447,128,345,131],[447,131,345,134,"_c"],[447,133,345,136],[447,136,345,139],[447,141,345,144],[448,18,346,24,"gotrue_meta_security"],[448,38,346,44],[448,40,346,46],[449,20,346,48,"captcha_token"],[449,33,346,61],[449,35,346,63,"options"],[449,43,346,70],[449,48,346,75],[449,52,346,79],[449,56,346,83,"options"],[449,64,346,90],[449,69,346,95],[449,74,346,100],[449,75,346,101],[449,78,346,104],[449,83,346,109],[449,84,346,110],[449,87,346,113,"options"],[449,95,346,120],[449,96,346,121,"captchaToken"],[450,18,346,134],[451,16,347,20],[451,17,347,21],[452,16,348,20,"xform"],[452,21,348,25],[452,23,348,27,"fetch_1"],[452,30,348,34],[452,31,348,35,"_sessionResponse"],[453,14,349,16],[453,15,349,17],[453,16,349,18],[454,12,350,12],[454,13,350,13],[454,19,351,17],[455,14,352,16],[455,20,352,22],[455,24,352,26,"errors_1"],[455,32,352,34],[455,33,352,35,"AuthInvalidCredentialsError"],[455,60,352,62],[455,61,352,63],[455,126,352,128],[455,127,352,129],[456,12,353,12],[457,12,354,12],[457,16,354,12,"_res"],[457,20,354,12],[457,23,354,36,"res"],[457,26,354,39],[458,14,354,20,"data"],[458,18,354,24],[458,21,354,24,"_res"],[458,25,354,24],[458,26,354,20,"data"],[458,30,354,24],[459,14,354,26,"error"],[459,19,354,31],[459,22,354,31,"_res"],[459,26,354,31],[459,27,354,26,"error"],[459,32,354,31],[460,12,355,12],[460,16,355,16,"error"],[460,21,355,21],[460,25,355,25],[460,26,355,26,"data"],[460,30,355,30],[460,32,355,32],[461,14,356,16],[461,21,356,23],[462,16,356,25,"data"],[462,20,356,29],[462,22,356,31],[463,18,356,33,"user"],[463,22,356,37],[463,24,356,39],[463,28,356,43],[464,18,356,45,"session"],[464,25,356,52],[464,27,356,54],[465,16,356,59],[465,17,356,60],[466,16,356,62,"error"],[466,21,356,67],[466,23,356,69,"error"],[467,14,356,75],[467,15,356,76],[468,12,357,12],[469,12,358,12],[469,16,358,18,"session"],[469,23,358,25],[469,26,358,28,"data"],[469,30,358,32],[469,31,358,33,"session"],[469,38,358,40],[470,12,359,12],[470,16,359,18,"user"],[470,20,359,22],[470,23,359,25,"data"],[470,27,359,29],[470,28,359,30,"user"],[470,32,359,34],[471,12,360,12],[471,16,360,16,"data"],[471,20,360,20],[471,21,360,21,"session"],[471,28,360,28],[471,30,360,30],[472,14,361,16],[472,20,361,22],[472,24,361,26],[472,25,361,27,"_saveSession"],[472,37,361,39],[472,38,361,40,"data"],[472,42,361,44],[472,43,361,45,"session"],[472,50,361,52],[472,51,361,53],[473,14,362,16],[473,20,362,22],[473,24,362,26],[473,25,362,27,"_notifyAllSubscribers"],[473,46,362,48],[473,47,362,49],[473,58,362,60],[473,60,362,62,"session"],[473,67,362,69],[473,68,362,70],[474,12,363,12],[475,12,364,12],[475,19,364,19],[476,14,364,21,"data"],[476,18,364,25],[476,20,364,27],[477,16,364,29,"user"],[477,20,364,33],[478,16,364,35,"session"],[479,14,364,43],[479,15,364,44],[480,14,364,46,"error"],[480,19,364,51],[480,21,364,53],[481,12,364,58],[481,13,364,59],[482,10,365,8],[482,11,365,9],[482,12,366,8],[482,19,366,15,"error"],[482,24,366,20],[482,26,366,22],[483,12,367,12],[483,16,367,16],[483,17,367,17],[483,18,367,18],[483,20,367,20,"errors_1"],[483,28,367,28],[483,29,367,29,"isAuthError"],[483,40,367,40],[483,42,367,42,"error"],[483,47,367,47],[483,48,367,48],[483,50,367,50],[484,14,368,16],[484,21,368,23],[485,16,368,25,"data"],[485,20,368,29],[485,22,368,31],[486,18,368,33,"user"],[486,22,368,37],[486,24,368,39],[486,28,368,43],[487,18,368,45,"session"],[487,25,368,52],[487,27,368,54],[488,16,368,59],[488,17,368,60],[489,16,368,62,"error"],[490,14,368,68],[490,15,368,69],[491,12,369,12],[492,12,370,12],[492,18,370,18,"error"],[492,23,370,23],[493,10,371,8],[494,8,372,4],[494,9,372,5],[495,8,372,5],[495,17,311,10,"signUp"],[495,23,311,16,"signUp"],[495,24,311,16,"_x6"],[495,27,311,16],[496,10,311,16],[496,17,311,16,"_signUp"],[496,24,311,16],[496,25,311,16,"apply"],[496,30,311,16],[496,37,311,16,"arguments"],[496,46,311,16],[497,8,311,16],[498,8,311,16],[498,15,311,10,"signUp"],[498,21,311,16],[499,6,311,16],[500,6,373,4],[501,0,374,0],[502,0,375,0],[503,0,376,0],[504,0,377,0],[505,0,378,0],[506,0,379,0],[507,0,380,0],[508,6,373,4],[509,4,373,4],[510,6,373,4,"key"],[510,9,373,4],[511,6,373,4,"value"],[511,11,373,4],[512,8,373,4],[512,12,373,4,"_signInWithPassword"],[512,31,373,4],[512,34,373,4,"_asyncToGenerator"],[512,51,373,4],[512,52,381,4],[512,63,381,29,"credentials"],[512,74,381,40],[512,76,381,42],[513,10,382,8],[513,14,382,12],[514,12,383,12],[514,16,383,16,"res"],[514,19,383,19],[515,12,384,12],[515,16,384,16],[515,23,384,23],[515,27,384,27,"credentials"],[515,38,384,38],[515,40,384,40],[516,14,385,16],[516,18,385,24,"email"],[516,23,385,29],[516,26,385,53,"credentials"],[516,37,385,64],[516,38,385,24,"email"],[516,43,385,29],[517,16,385,31,"password"],[517,24,385,39],[517,27,385,53,"credentials"],[517,38,385,64],[517,39,385,31,"password"],[517,47,385,39],[518,16,385,41,"options"],[518,23,385,48],[518,26,385,53,"credentials"],[518,37,385,64],[518,38,385,41,"options"],[518,45,385,48],[519,14,386,16,"res"],[519,17,386,19],[519,26,386,28],[519,27,386,29],[519,28,386,30],[519,30,386,32,"fetch_1"],[519,37,386,39],[519,38,386,40,"_request"],[519,46,386,48],[519,48,386,50],[519,52,386,54],[519,53,386,55,"fetch"],[519,58,386,60],[519,60,386,62],[519,66,386,68],[519,68,386,70],[519,71,386,73],[519,75,386,77],[519,76,386,78,"url"],[519,79,386,81],[519,107,386,109],[519,109,386,111],[520,16,387,20,"headers"],[520,23,387,27],[520,25,387,29],[520,29,387,33],[520,30,387,34,"headers"],[520,37,387,41],[521,16,388,20,"body"],[521,20,388,24],[521,22,388,26],[522,18,389,24,"email"],[522,23,389,29],[523,18,390,24,"password"],[523,26,390,32],[524,18,391,24,"gotrue_meta_security"],[524,38,391,44],[524,40,391,46],[525,20,391,48,"captcha_token"],[525,33,391,61],[525,35,391,63,"options"],[525,42,391,70],[525,47,391,75],[525,51,391,79],[525,55,391,83,"options"],[525,62,391,90],[525,67,391,95],[525,72,391,100],[525,73,391,101],[525,76,391,104],[525,81,391,109],[525,82,391,110],[525,85,391,113,"options"],[525,92,391,120],[525,93,391,121,"captchaToken"],[526,18,391,134],[527,16,392,20],[527,17,392,21],[528,16,393,20,"xform"],[528,21,393,25],[528,23,393,27,"fetch_1"],[528,30,393,34],[528,31,393,35,"_sessionResponsePassword"],[529,14,394,16],[529,15,394,17],[529,16,394,18],[530,12,395,12],[530,13,395,13],[530,19,396,17],[530,23,396,21],[530,30,396,28],[530,34,396,32,"credentials"],[530,45,396,43],[530,47,396,45],[531,14,397,16],[531,18,397,24,"phone"],[531,23,397,29],[531,26,397,53,"credentials"],[531,37,397,64],[531,38,397,24,"phone"],[531,43,397,29],[532,16,397,31,"password"],[532,26,397,39],[532,29,397,53,"credentials"],[532,40,397,64],[532,41,397,31,"password"],[532,49,397,39],[533,16,397,41,"options"],[533,25,397,48],[533,28,397,53,"credentials"],[533,39,397,64],[533,40,397,41,"options"],[533,47,397,48],[534,14,398,16,"res"],[534,17,398,19],[534,26,398,28],[534,27,398,29],[534,28,398,30],[534,30,398,32,"fetch_1"],[534,37,398,39],[534,38,398,40,"_request"],[534,46,398,48],[534,48,398,50],[534,52,398,54],[534,53,398,55,"fetch"],[534,58,398,60],[534,60,398,62],[534,66,398,68],[534,68,398,70],[534,71,398,73],[534,75,398,77],[534,76,398,78,"url"],[534,79,398,81],[534,107,398,109],[534,109,398,111],[535,16,399,20,"headers"],[535,23,399,27],[535,25,399,29],[535,29,399,33],[535,30,399,34,"headers"],[535,37,399,41],[536,16,400,20,"body"],[536,20,400,24],[536,22,400,26],[537,18,401,24,"phone"],[537,23,401,29],[538,18,402,24,"password"],[538,26,402,32],[538,28,402,24,"password"],[538,38,402,32],[539,18,403,24,"gotrue_meta_security"],[539,38,403,44],[539,40,403,46],[540,20,403,48,"captcha_token"],[540,33,403,61],[540,35,403,63,"options"],[540,44,403,70],[540,49,403,75],[540,53,403,79],[540,57,403,83,"options"],[540,66,403,90],[540,71,403,95],[540,76,403,100],[540,77,403,101],[540,80,403,104],[540,85,403,109],[540,86,403,110],[540,89,403,113,"options"],[540,98,403,120],[540,99,403,121,"captchaToken"],[541,18,403,134],[542,16,404,20],[542,17,404,21],[543,16,405,20,"xform"],[543,21,405,25],[543,23,405,27,"fetch_1"],[543,30,405,34],[543,31,405,35,"_sessionResponsePassword"],[544,14,406,16],[544,15,406,17],[544,16,406,18],[545,12,407,12],[545,13,407,13],[545,19,408,17],[546,14,409,16],[546,20,409,22],[546,24,409,26,"errors_1"],[546,32,409,34],[546,33,409,35,"AuthInvalidCredentialsError"],[546,60,409,62],[546,61,409,63],[546,126,409,128],[546,127,409,129],[547,12,410,12],[548,12,411,12],[548,16,411,12,"_res2"],[548,21,411,12],[548,24,411,36,"res"],[548,27,411,39],[549,14,411,20,"data"],[549,18,411,24],[549,21,411,24,"_res2"],[549,26,411,24],[549,27,411,20,"data"],[549,31,411,24],[550,14,411,26,"error"],[550,19,411,31],[550,22,411,31,"_res2"],[550,27,411,31],[550,28,411,26,"error"],[550,33,411,31],[551,12,412,12],[551,16,412,16,"error"],[551,21,412,21],[551,23,412,23],[552,14,413,16],[552,21,413,23],[553,16,413,25,"data"],[553,20,413,29],[553,22,413,31],[554,18,413,33,"user"],[554,22,413,37],[554,24,413,39],[554,28,413,43],[555,18,413,45,"session"],[555,25,413,52],[555,27,413,54],[556,16,413,59],[556,17,413,60],[557,16,413,62,"error"],[558,14,413,68],[558,15,413,69],[559,12,414,12],[559,13,414,13],[559,19,415,17],[559,23,415,21],[559,24,415,22,"data"],[559,28,415,26],[559,32,415,30],[559,33,415,31,"data"],[559,37,415,35],[559,38,415,36,"session"],[559,45,415,43],[559,49,415,47],[559,50,415,48,"data"],[559,54,415,52],[559,55,415,53,"user"],[559,59,415,57],[559,61,415,59],[560,14,416,16],[560,21,416,23],[561,16,416,25,"data"],[561,20,416,29],[561,22,416,31],[562,18,416,33,"user"],[562,22,416,37],[562,24,416,39],[562,28,416,43],[563,18,416,45,"session"],[563,25,416,52],[563,27,416,54],[564,16,416,59],[564,17,416,60],[565,16,416,62,"error"],[565,21,416,67],[565,23,416,69],[565,27,416,73,"errors_1"],[565,35,416,81],[565,36,416,82,"AuthInvalidTokenResponseError"],[565,65,416,111],[565,66,416,112],[566,14,416,114],[566,15,416,115],[567,12,417,12],[568,12,418,12],[568,16,418,16,"data"],[568,20,418,20],[568,21,418,21,"session"],[568,28,418,28],[568,30,418,30],[569,14,419,16],[569,20,419,22],[569,24,419,26],[569,25,419,27,"_saveSession"],[569,37,419,39],[569,38,419,40,"data"],[569,42,419,44],[569,43,419,45,"session"],[569,50,419,52],[569,51,419,53],[570,14,420,16],[570,20,420,22],[570,24,420,26],[570,25,420,27,"_notifyAllSubscribers"],[570,46,420,48],[570,47,420,49],[570,58,420,60],[570,60,420,62,"data"],[570,64,420,66],[570,65,420,67,"session"],[570,72,420,74],[570,73,420,75],[571,12,421,12],[572,12,422,12],[572,19,422,19],[573,14,423,16,"data"],[573,18,423,20],[573,20,423,22,"Object"],[573,26,423,28],[573,27,423,29,"assign"],[573,33,423,35],[573,34,423,36],[574,16,423,38,"user"],[574,20,423,42],[574,22,423,44,"data"],[574,26,423,48],[574,27,423,49,"user"],[574,31,423,53],[575,16,423,55,"session"],[575,23,423,62],[575,25,423,64,"data"],[575,29,423,68],[575,30,423,69,"session"],[576,14,423,77],[576,15,423,78],[576,17,423,81,"data"],[576,21,423,85],[576,22,423,86,"weak_password"],[576,35,423,99],[576,38,423,102],[577,16,423,104,"weakPassword"],[577,28,423,116],[577,30,423,118,"data"],[577,34,423,122],[577,35,423,123,"weak_password"],[578,14,423,137],[578,15,423,138],[578,18,423,141],[578,22,423,146],[578,23,423,147],[579,14,424,16,"error"],[580,12,425,12],[580,13,425,13],[581,10,426,8],[581,11,426,9],[581,12,427,8],[581,19,427,15,"error"],[581,24,427,20],[581,26,427,22],[582,12,428,12],[582,16,428,16],[582,17,428,17],[582,18,428,18],[582,20,428,20,"errors_1"],[582,28,428,28],[582,29,428,29,"isAuthError"],[582,40,428,40],[582,42,428,42,"error"],[582,47,428,47],[582,48,428,48],[582,50,428,50],[583,14,429,16],[583,21,429,23],[584,16,429,25,"data"],[584,20,429,29],[584,22,429,31],[585,18,429,33,"user"],[585,22,429,37],[585,24,429,39],[585,28,429,43],[586,18,429,45,"session"],[586,25,429,52],[586,27,429,54],[587,16,429,59],[587,17,429,60],[588,16,429,62,"error"],[589,14,429,68],[589,15,429,69],[590,12,430,12],[591,12,431,12],[591,18,431,18,"error"],[591,23,431,23],[592,10,432,8],[593,8,433,4],[593,9,433,5],[594,8,433,5],[594,17,381,10,"signInWithPassword"],[594,35,381,28,"signInWithPassword"],[594,36,381,28,"_x7"],[594,39,381,28],[595,10,381,28],[595,17,381,28,"_signInWithPassword"],[595,36,381,28],[595,37,381,28,"apply"],[595,42,381,28],[595,49,381,28,"arguments"],[595,58,381,28],[596,8,381,28],[597,8,381,28],[597,15,381,10,"signInWithPassword"],[597,33,381,28],[598,6,381,28],[599,6,434,4],[600,0,435,0],[601,0,436,0],[602,0,437,0],[603,6,434,4],[604,4,434,4],[605,6,434,4,"key"],[605,9,434,4],[606,6,434,4,"value"],[606,11,434,4],[607,8,434,4],[607,12,434,4,"_signInWithOAuth"],[607,28,434,4],[607,31,434,4,"_asyncToGenerator"],[607,48,434,4],[607,49,438,4],[607,60,438,26,"credentials"],[607,71,438,37],[607,73,438,39],[608,10,439,8],[608,14,439,12,"_a"],[608,16,439,14],[608,18,439,16,"_b"],[608,20,439,18],[608,22,439,20,"_c"],[608,24,439,22],[608,26,439,24,"_d"],[608,28,439,26],[609,10,440,8],[609,23,440,21],[609,27,440,25],[609,28,440,26,"_handleProviderSignIn"],[609,49,440,47],[609,50,440,48,"credentials"],[609,61,440,59],[609,62,440,60,"provider"],[609,70,440,68],[609,72,440,70],[610,12,441,12,"redirectTo"],[610,22,441,22],[610,24,441,24],[610,25,441,25,"_a"],[610,27,441,27],[610,30,441,30,"credentials"],[610,41,441,41],[610,42,441,42,"options"],[610,49,441,49],[610,55,441,55],[610,59,441,59],[610,63,441,63,"_a"],[610,65,441,65],[610,70,441,70],[610,75,441,75],[610,76,441,76],[610,79,441,79],[610,84,441,84],[610,85,441,85],[610,88,441,88,"_a"],[610,90,441,90],[610,91,441,91,"redirectTo"],[610,101,441,101],[611,12,442,12,"scopes"],[611,18,442,18],[611,20,442,20],[611,21,442,21,"_b"],[611,23,442,23],[611,26,442,26,"credentials"],[611,37,442,37],[611,38,442,38,"options"],[611,45,442,45],[611,51,442,51],[611,55,442,55],[611,59,442,59,"_b"],[611,61,442,61],[611,66,442,66],[611,71,442,71],[611,72,442,72],[611,75,442,75],[611,80,442,80],[611,81,442,81],[611,84,442,84,"_b"],[611,86,442,86],[611,87,442,87,"scopes"],[611,93,442,93],[612,12,443,12,"queryParams"],[612,23,443,23],[612,25,443,25],[612,26,443,26,"_c"],[612,28,443,28],[612,31,443,31,"credentials"],[612,42,443,42],[612,43,443,43,"options"],[612,50,443,50],[612,56,443,56],[612,60,443,60],[612,64,443,64,"_c"],[612,66,443,66],[612,71,443,71],[612,76,443,76],[612,77,443,77],[612,80,443,80],[612,85,443,85],[612,86,443,86],[612,89,443,89,"_c"],[612,91,443,91],[612,92,443,92,"queryParams"],[612,103,443,103],[613,12,444,12,"skipBrowserRedirect"],[613,31,444,31],[613,33,444,33],[613,34,444,34,"_d"],[613,36,444,36],[613,39,444,39,"credentials"],[613,50,444,50],[613,51,444,51,"options"],[613,58,444,58],[613,64,444,64],[613,68,444,68],[613,72,444,72,"_d"],[613,74,444,74],[613,79,444,79],[613,84,444,84],[613,85,444,85],[613,88,444,88],[613,93,444,93],[613,94,444,94],[613,97,444,97,"_d"],[613,99,444,99],[613,100,444,100,"skipBrowserRedirect"],[614,10,445,8],[614,11,445,9],[614,12,445,10],[615,8,446,4],[615,9,446,5],[616,8,446,5],[616,17,438,10,"signInWithOAuth"],[616,32,438,25,"signInWithOAuth"],[616,33,438,25,"_x8"],[616,36,438,25],[617,10,438,25],[617,17,438,25,"_signInWithOAuth"],[617,33,438,25],[617,34,438,25,"apply"],[617,39,438,25],[617,46,438,25,"arguments"],[617,55,438,25],[618,8,438,25],[619,8,438,25],[619,15,438,10,"signInWithOAuth"],[619,30,438,25],[620,6,438,25],[621,6,447,4],[622,0,448,0],[623,0,449,0],[624,6,447,4],[625,4,447,4],[626,6,447,4,"key"],[626,9,447,4],[627,6,447,4,"value"],[627,11,447,4],[628,8,447,4],[628,12,447,4,"_exchangeCodeForSession2"],[628,36,447,4],[628,39,447,4,"_asyncToGenerator"],[628,56,447,4],[628,57,450,4],[628,68,450,33,"authCode"],[628,76,450,41],[628,78,450,43],[629,10,450,43],[629,14,450,43,"_this4"],[629,20,450,43],[630,10,451,8],[630,16,451,14],[630,20,451,18],[630,21,451,19,"initializePromise"],[630,38,451,36],[631,10,452,8],[631,17,452,15],[631,21,452,19],[631,22,452,20,"_acquireLock"],[631,34,452,32],[631,35,452,33],[631,36,452,34],[631,37,452,35],[631,52,452,35,"_asyncToGenerator"],[631,69,452,35],[631,70,452,37],[631,83,452,49],[632,12,453,12],[632,19,453,19,"_this4"],[632,25,453,23],[632,26,453,24,"_exchangeCodeForSession"],[632,49,453,47],[632,50,453,48,"authCode"],[632,58,453,56],[632,59,453,57],[633,10,454,8],[633,11,454,9],[633,13,454,10],[634,8,455,4],[634,9,455,5],[635,8,455,5],[635,17,450,10,"exchangeCodeForSession"],[635,39,450,32,"exchangeCodeForSession"],[635,40,450,32,"_x9"],[635,43,450,32],[636,10,450,32],[636,17,450,32,"_exchangeCodeForSession2"],[636,41,450,32],[636,42,450,32,"apply"],[636,47,450,32],[636,54,450,32,"arguments"],[636,63,450,32],[637,8,450,32],[638,8,450,32],[638,15,450,10,"exchangeCodeForSession"],[638,37,450,32],[639,6,450,32],[640,6,456,4],[641,0,457,0],[642,0,458,0],[643,0,459,0],[644,0,460,0],[645,0,461,0],[646,0,462,0],[647,6,456,4],[648,4,456,4],[649,6,456,4,"key"],[649,9,456,4],[650,6,456,4,"value"],[650,11,456,4],[651,8,456,4],[651,12,456,4,"_signInWithWeb"],[651,26,456,4],[651,29,456,4,"_asyncToGenerator"],[651,46,456,4],[651,47,463,4],[651,58,463,25,"credentials"],[651,69,463,36],[651,71,463,38],[652,10,464,8],[652,14,464,16,"chain"],[652,19,464,21],[652,22,464,26,"credentials"],[652,33,464,37],[652,34,464,16,"chain"],[652,39,464,21],[653,10,465,8],[653,18,465,16,"chain"],[653,23,465,21],[654,12,466,12],[654,17,466,17],[654,27,466,27],[655,14,467,16],[655,27,467,29],[655,31,467,33],[655,32,467,34,"signInWithEthereum"],[655,50,467,52],[655,51,467,53,"credentials"],[655,62,467,64],[655,63,467,65],[656,12,468,12],[656,17,468,17],[656,25,468,25],[657,14,469,16],[657,27,469,29],[657,31,469,33],[657,32,469,34,"signInWithSolana"],[657,48,469,50],[657,49,469,51,"credentials"],[657,60,469,62],[657,61,469,63],[658,12,470,12],[659,14,471,16],[659,20,471,22],[659,24,471,26,"Error"],[659,29,471,31],[659,30,471,32],[659,71,471,73,"chain"],[659,76,471,78],[659,79,471,81],[659,80,471,82],[660,10,472,8],[661,8,473,4],[661,9,473,5],[662,8,473,5],[662,17,463,10,"signInWithWeb3"],[662,31,463,24,"signInWithWeb3"],[662,32,463,24,"_x0"],[662,35,463,24],[663,10,463,24],[663,17,463,24,"_signInWithWeb"],[663,31,463,24],[663,32,463,24,"apply"],[663,37,463,24],[663,44,463,24,"arguments"],[663,53,463,24],[664,8,463,24],[665,8,463,24],[665,15,463,10,"signInWithWeb3"],[665,29,463,24],[666,6,463,24],[667,4,463,24],[668,6,463,24,"key"],[668,9,463,24],[669,6,463,24,"value"],[669,11,463,24],[670,8,463,24],[670,12,463,24,"_signInWithEthereum"],[670,31,463,24],[670,34,463,24,"_asyncToGenerator"],[670,51,463,24],[670,52,474,4],[670,63,474,29,"credentials"],[670,74,474,40],[670,76,474,42],[671,10,475,8],[671,14,475,12,"_a"],[671,16,475,14],[671,18,475,16,"_b"],[671,20,475,18],[671,22,475,20,"_c"],[671,24,475,22],[671,26,475,24,"_d"],[671,28,475,26],[671,30,475,28,"_e"],[671,32,475,30],[671,34,475,32,"_f"],[671,36,475,34],[671,38,475,36,"_g"],[671,40,475,38],[671,42,475,40,"_h"],[671,44,475,42],[671,46,475,44,"_j"],[671,48,475,46],[671,50,475,48,"_k"],[671,52,475,50],[671,54,475,52,"_l"],[671,56,475,54],[672,10,476,8],[673,10,477,8],[673,14,477,12,"message"],[673,21,477,19],[674,10,478,8],[674,14,478,12,"signature"],[674,23,478,21],[675,10,479,8],[675,14,479,12],[675,23,479,21],[675,27,479,25,"credentials"],[675,38,479,36],[675,40,479,38],[676,12,480,12,"message"],[676,19,480,19],[676,22,480,22,"credentials"],[676,33,480,33],[676,34,480,34,"message"],[676,41,480,41],[677,12,481,12,"signature"],[677,21,481,21],[677,24,481,24,"credentials"],[677,35,481,35],[677,36,481,36,"signature"],[677,45,481,45],[678,10,482,8],[678,11,482,9],[678,17,483,13],[679,12,484,12],[679,16,484,20,"chain"],[679,21,484,25],[679,24,484,58,"credentials"],[679,35,484,69],[679,36,484,20,"chain"],[679,41,484,25],[680,14,484,27,"wallet"],[680,20,484,33],[680,23,484,58,"credentials"],[680,34,484,69],[680,35,484,27,"wallet"],[680,41,484,33],[681,14,484,35,"statement"],[681,23,484,44],[681,26,484,58,"credentials"],[681,37,484,69],[681,38,484,35,"statement"],[681,47,484,44],[682,14,484,46,"options"],[682,21,484,53],[682,24,484,58,"credentials"],[682,35,484,69],[682,36,484,46,"options"],[682,43,484,53],[683,12,485,12],[683,16,485,16,"resolvedWallet"],[683,30,485,30],[684,12,486,12],[684,16,486,16],[684,17,486,17],[684,18,486,18],[684,19,486,19],[684,21,486,21,"helpers_1"],[684,30,486,30],[684,31,486,31,"isBrowser"],[684,40,486,40],[684,42,486,42],[684,43,486,43],[684,45,486,45],[685,14,487,16],[685,18,487,20],[685,25,487,27,"wallet"],[685,31,487,33],[685,36,487,38],[685,44,487,46],[685,48,487,50],[685,50,487,52,"options"],[685,57,487,59],[685,62,487,64],[685,66,487,68],[685,70,487,72,"options"],[685,77,487,79],[685,82,487,84],[685,87,487,89],[685,88,487,90],[685,91,487,93],[685,96,487,98],[685,97,487,99],[685,100,487,102,"options"],[685,107,487,109],[685,108,487,110,"url"],[685,111,487,113],[685,112,487,114],[685,114,487,116],[686,16,488,20],[686,22,488,26],[686,26,488,30,"Error"],[686,31,488,35],[686,32,488,36],[686,119,488,123],[686,120,488,124],[687,14,489,16],[688,14,490,16,"resolvedWallet"],[688,28,490,30],[688,31,490,33,"wallet"],[688,37,490,39],[689,12,491,12],[689,13,491,13],[689,19,492,17],[689,23,492,21],[689,30,492,28,"wallet"],[689,36,492,34],[689,41,492,39],[689,49,492,47],[689,51,492,49],[690,14,493,16,"resolvedWallet"],[690,28,493,30],[690,31,493,33,"wallet"],[690,37,493,39],[691,12,494,12],[691,13,494,13],[691,19,495,17],[692,14,496,16],[692,18,496,22,"windowAny"],[692,27,496,31],[692,30,496,34,"window"],[692,36,496,40],[693,14,497,16],[693,18,497,20],[693,28,497,30],[693,32,497,34,"windowAny"],[693,41,497,43],[693,45,498,20],[693,52,498,27,"windowAny"],[693,61,498,36],[693,62,498,37,"ethereum"],[693,70,498,45],[693,75,498,50],[693,83,498,58],[693,87,499,20],[693,96,499,29],[693,100,499,33,"windowAny"],[693,109,499,42],[693,110,499,43,"ethereum"],[693,118,499,51],[693,122,500,20],[693,129,500,27,"windowAny"],[693,138,500,36],[693,139,500,37,"ethereum"],[693,147,500,45],[693,148,500,46,"request"],[693,155,500,53],[693,160,500,58],[693,170,500,68],[693,172,500,70],[694,16,501,20,"resolvedWallet"],[694,30,501,34],[694,33,501,37,"windowAny"],[694,42,501,46],[694,43,501,47,"ethereum"],[694,51,501,55],[695,14,502,16],[695,15,502,17],[695,21,503,21],[696,16,504,20],[696,22,504,26],[696,26,504,30,"Error"],[696,31,504,35],[696,32,504,36],[696,349,504,353],[696,350,504,354],[697,14,505,16],[698,12,506,12],[699,12,507,12],[699,16,507,18,"url"],[699,19,507,21],[699,22,507,24],[699,26,507,28,"URL"],[699,29,507,31],[699,30,507,32],[699,31,507,33,"_a"],[699,33,507,35],[699,36,507,38,"options"],[699,43,507,45],[699,48,507,50],[699,52,507,54],[699,56,507,58,"options"],[699,63,507,65],[699,68,507,70],[699,73,507,75],[699,74,507,76],[699,77,507,79],[699,82,507,84],[699,83,507,85],[699,86,507,88,"options"],[699,93,507,95],[699,94,507,96,"url"],[699,97,507,99],[699,103,507,105],[699,107,507,109],[699,111,507,113,"_a"],[699,113,507,115],[699,118,507,120],[699,123,507,125],[699,124,507,126],[699,127,507,129,"_a"],[699,129,507,131],[699,132,507,134,"window"],[699,138,507,140],[699,139,507,141,"location"],[699,147,507,149],[699,148,507,150,"href"],[699,152,507,154],[699,153,507,155],[700,12,508,12],[700,16,508,18,"accounts"],[700,24,508,26],[700,33,508,35,"resolvedWallet"],[700,47,508,49],[700,48,509,17,"request"],[700,55,509,24],[700,56,509,25],[701,14,510,16,"method"],[701,20,510,22],[701,22,510,24],[702,12,511,12],[702,13,511,13],[702,14,511,14],[702,15,512,17,"then"],[702,19,512,21],[702,20,512,23,"accs"],[702,24,512,27],[702,28,512,32,"accs"],[702,32,512,36],[702,33,512,37],[702,34,513,17,"catch"],[702,39,513,22],[702,40,513,23],[702,46,513,29],[703,14,514,16],[703,20,514,22],[703,24,514,26,"Error"],[703,29,514,31],[703,30,514,32],[703,106,514,108],[703,107,514,109],[704,12,515,12],[704,13,515,13],[704,14,515,14],[705,12,516,12],[705,16,516,16],[705,17,516,17,"accounts"],[705,25,516,25],[705,29,516,29,"accounts"],[705,37,516,37],[705,38,516,38,"length"],[705,44,516,44],[705,49,516,49],[705,50,516,50],[705,52,516,52],[706,14,517,16],[706,20,517,22],[706,24,517,26,"Error"],[706,29,517,31],[706,30,517,32],[706,112,517,114],[706,113,517,115],[707,12,518,12],[708,12,519,12],[708,16,519,18,"address"],[708,23,519,25],[708,26,519,28],[708,27,519,29],[708,28,519,30],[708,30,519,32,"ethereum_1"],[708,40,519,42],[708,41,519,43,"getAddress"],[708,51,519,53],[708,53,519,55,"accounts"],[708,61,519,63],[708,62,519,64],[708,63,519,65],[708,64,519,66],[708,65,519,67],[709,12,520,12],[709,16,520,16,"chainId"],[709,23,520,23],[709,26,520,26],[709,27,520,27,"_b"],[709,29,520,29],[709,32,520,32,"options"],[709,39,520,39],[709,44,520,44],[709,48,520,48],[709,52,520,52,"options"],[709,59,520,59],[709,64,520,64],[709,69,520,69],[709,70,520,70],[709,73,520,73],[709,78,520,78],[709,79,520,79],[709,82,520,82,"options"],[709,89,520,89],[709,90,520,90,"signInWithEthereum"],[709,108,520,108],[709,114,520,114],[709,118,520,118],[709,122,520,122,"_b"],[709,124,520,124],[709,129,520,129],[709,134,520,134],[709,135,520,135],[709,138,520,138],[709,143,520,143],[709,144,520,144],[709,147,520,147,"_b"],[709,149,520,149],[709,150,520,150,"chainId"],[709,157,520,157],[710,12,521,12],[710,16,521,16],[710,17,521,17,"chainId"],[710,24,521,24],[710,26,521,26],[711,14,522,16],[711,18,522,22,"chainIdHex"],[711,28,522,32],[711,37,522,41,"resolvedWallet"],[711,51,522,55],[711,52,522,56,"request"],[711,59,522,63],[711,60,522,64],[712,16,523,20,"method"],[712,22,523,26],[712,24,523,28],[713,14,524,16],[713,15,524,17],[713,16,524,18],[714,14,525,16,"chainId"],[714,21,525,23],[714,24,525,26],[714,25,525,27],[714,26,525,28],[714,28,525,30,"ethereum_1"],[714,38,525,40],[714,39,525,41,"fromHex"],[714,46,525,48],[714,48,525,50,"chainIdHex"],[714,58,525,60],[714,59,525,61],[715,12,526,12],[716,12,527,12],[716,16,527,18,"siweMessage"],[716,27,527,29],[716,30,527,32],[717,14,528,16,"domain"],[717,20,528,22],[717,22,528,24,"url"],[717,25,528,27],[717,26,528,28,"host"],[717,30,528,32],[718,14,529,16,"address"],[718,21,529,23],[718,23,529,25,"address"],[718,30,529,32],[719,14,530,16,"statement"],[719,23,530,25],[719,25,530,27,"statement"],[719,34,530,36],[720,14,531,16,"uri"],[720,17,531,19],[720,19,531,21,"url"],[720,22,531,24],[720,23,531,25,"href"],[720,27,531,29],[721,14,532,16,"version"],[721,21,532,23],[721,23,532,25],[721,26,532,28],[722,14,533,16,"chainId"],[722,21,533,23],[722,23,533,25,"chainId"],[722,30,533,32],[723,14,534,16,"nonce"],[723,19,534,21],[723,21,534,23],[723,22,534,24,"_c"],[723,24,534,26],[723,27,534,29,"options"],[723,34,534,36],[723,39,534,41],[723,43,534,45],[723,47,534,49,"options"],[723,54,534,56],[723,59,534,61],[723,64,534,66],[723,65,534,67],[723,68,534,70],[723,73,534,75],[723,74,534,76],[723,77,534,79,"options"],[723,84,534,86],[723,85,534,87,"signInWithEthereum"],[723,103,534,105],[723,109,534,111],[723,113,534,115],[723,117,534,119,"_c"],[723,119,534,121],[723,124,534,126],[723,129,534,131],[723,130,534,132],[723,133,534,135],[723,138,534,140],[723,139,534,141],[723,142,534,144,"_c"],[723,144,534,146],[723,145,534,147,"nonce"],[723,150,534,152],[724,14,535,16,"issuedAt"],[724,22,535,24],[724,24,535,26],[724,25,535,27,"_e"],[724,27,535,29],[724,30,535,32],[724,31,535,33,"_d"],[724,33,535,35],[724,36,535,38,"options"],[724,43,535,45],[724,48,535,50],[724,52,535,54],[724,56,535,58,"options"],[724,63,535,65],[724,68,535,70],[724,73,535,75],[724,74,535,76],[724,77,535,79],[724,82,535,84],[724,83,535,85],[724,86,535,88,"options"],[724,93,535,95],[724,94,535,96,"signInWithEthereum"],[724,112,535,114],[724,118,535,120],[724,122,535,124],[724,126,535,128,"_d"],[724,128,535,130],[724,133,535,135],[724,138,535,140],[724,139,535,141],[724,142,535,144],[724,147,535,149],[724,148,535,150],[724,151,535,153,"_d"],[724,153,535,155],[724,154,535,156,"issuedAt"],[724,162,535,164],[724,168,535,170],[724,172,535,174],[724,176,535,178,"_e"],[724,178,535,180],[724,183,535,185],[724,188,535,190],[724,189,535,191],[724,192,535,194,"_e"],[724,194,535,196],[724,197,535,199],[724,201,535,203,"Date"],[724,205,535,207],[724,206,535,208],[724,207,535,209],[725,14,536,16,"expirationTime"],[725,28,536,30],[725,30,536,32],[725,31,536,33,"_f"],[725,33,536,35],[725,36,536,38,"options"],[725,43,536,45],[725,48,536,50],[725,52,536,54],[725,56,536,58,"options"],[725,63,536,65],[725,68,536,70],[725,73,536,75],[725,74,536,76],[725,77,536,79],[725,82,536,84],[725,83,536,85],[725,86,536,88,"options"],[725,93,536,95],[725,94,536,96,"signInWithEthereum"],[725,112,536,114],[725,118,536,120],[725,122,536,124],[725,126,536,128,"_f"],[725,128,536,130],[725,133,536,135],[725,138,536,140],[725,139,536,141],[725,142,536,144],[725,147,536,149],[725,148,536,150],[725,151,536,153,"_f"],[725,153,536,155],[725,154,536,156,"expirationTime"],[725,168,536,170],[726,14,537,16,"notBefore"],[726,23,537,25],[726,25,537,27],[726,26,537,28,"_g"],[726,28,537,30],[726,31,537,33,"options"],[726,38,537,40],[726,43,537,45],[726,47,537,49],[726,51,537,53,"options"],[726,58,537,60],[726,63,537,65],[726,68,537,70],[726,69,537,71],[726,72,537,74],[726,77,537,79],[726,78,537,80],[726,81,537,83,"options"],[726,88,537,90],[726,89,537,91,"signInWithEthereum"],[726,107,537,109],[726,113,537,115],[726,117,537,119],[726,121,537,123,"_g"],[726,123,537,125],[726,128,537,130],[726,133,537,135],[726,134,537,136],[726,137,537,139],[726,142,537,144],[726,143,537,145],[726,146,537,148,"_g"],[726,148,537,150],[726,149,537,151,"notBefore"],[726,158,537,160],[727,14,538,16,"requestId"],[727,23,538,25],[727,25,538,27],[727,26,538,28,"_h"],[727,28,538,30],[727,31,538,33,"options"],[727,38,538,40],[727,43,538,45],[727,47,538,49],[727,51,538,53,"options"],[727,58,538,60],[727,63,538,65],[727,68,538,70],[727,69,538,71],[727,72,538,74],[727,77,538,79],[727,78,538,80],[727,81,538,83,"options"],[727,88,538,90],[727,89,538,91,"signInWithEthereum"],[727,107,538,109],[727,113,538,115],[727,117,538,119],[727,121,538,123,"_h"],[727,123,538,125],[727,128,538,130],[727,133,538,135],[727,134,538,136],[727,137,538,139],[727,142,538,144],[727,143,538,145],[727,146,538,148,"_h"],[727,148,538,150],[727,149,538,151,"requestId"],[727,158,538,160],[728,14,539,16,"resources"],[728,23,539,25],[728,25,539,27],[728,26,539,28,"_j"],[728,28,539,30],[728,31,539,33,"options"],[728,38,539,40],[728,43,539,45],[728,47,539,49],[728,51,539,53,"options"],[728,58,539,60],[728,63,539,65],[728,68,539,70],[728,69,539,71],[728,72,539,74],[728,77,539,79],[728,78,539,80],[728,81,539,83,"options"],[728,88,539,90],[728,89,539,91,"signInWithEthereum"],[728,107,539,109],[728,113,539,115],[728,117,539,119],[728,121,539,123,"_j"],[728,123,539,125],[728,128,539,130],[728,133,539,135],[728,134,539,136],[728,137,539,139],[728,142,539,144],[728,143,539,145],[728,146,539,148,"_j"],[728,148,539,150],[728,149,539,151,"resources"],[729,12,540,12],[729,13,540,13],[730,12,541,12,"message"],[730,19,541,19],[730,22,541,22],[730,23,541,23],[730,24,541,24],[730,26,541,26,"ethereum_1"],[730,36,541,36],[730,37,541,37,"createSiweMessage"],[730,54,541,54],[730,56,541,56,"siweMessage"],[730,67,541,67],[730,68,541,68],[731,12,542,12],[732,12,543,12,"signature"],[732,21,543,21],[732,30,543,31,"resolvedWallet"],[732,44,543,45],[732,45,543,46,"request"],[732,52,543,53],[732,53,543,54],[733,14,544,16,"method"],[733,20,544,22],[733,22,544,24],[733,37,544,39],[734,14,545,16,"params"],[734,20,545,22],[734,22,545,24],[734,23,545,25],[734,24,545,26],[734,25,545,27],[734,27,545,29,"ethereum_1"],[734,37,545,39],[734,38,545,40,"toHex"],[734,43,545,45],[734,45,545,47,"message"],[734,52,545,54],[734,53,545,55],[734,55,545,57,"address"],[734,62,545,64],[735,12,546,12],[735,13,546,13],[735,14,546,15],[736,10,547,8],[737,10,548,8],[737,14,548,12],[738,12,549,12],[738,16,549,12,"_yield3"],[738,23,549,12],[738,32,549,42],[738,33,549,43],[738,34,549,44],[738,36,549,46,"fetch_1"],[738,43,549,53],[738,44,549,54,"_request"],[738,52,549,62],[738,54,549,64],[738,58,549,68],[738,59,549,69,"fetch"],[738,64,549,74],[738,66,549,76],[738,72,549,82],[738,74,549,84],[738,77,549,87],[738,81,549,91],[738,82,549,92,"url"],[738,85,549,95],[738,109,549,119],[738,111,549,121],[739,16,550,16,"headers"],[739,23,550,23],[739,25,550,25],[739,29,550,29],[739,30,550,30,"headers"],[739,37,550,37],[740,16,551,16,"body"],[740,20,551,20],[740,22,551,22,"Object"],[740,28,551,28],[740,29,551,29,"assign"],[740,35,551,35],[740,36,551,36],[741,18,551,38,"chain"],[741,23,551,43],[741,25,551,45],[741,35,551,55],[742,18,551,57,"message"],[742,25,551,64],[743,18,552,20,"signature"],[744,16,552,30],[744,17,552,31],[744,19,552,34],[744,20,552,35],[744,21,552,36,"_k"],[744,23,552,38],[744,26,552,41,"credentials"],[744,37,552,52],[744,38,552,53,"options"],[744,45,552,60],[744,51,552,66],[744,55,552,70],[744,59,552,74,"_k"],[744,61,552,76],[744,66,552,81],[744,71,552,86],[744,72,552,87],[744,75,552,90],[744,80,552,95],[744,81,552,96],[744,84,552,99,"_k"],[744,86,552,101],[744,87,552,102,"captchaToken"],[744,99,552,114],[744,103,553,22],[745,18,553,24,"gotrue_meta_security"],[745,38,553,44],[745,40,553,46],[746,20,553,48,"captcha_token"],[746,33,553,61],[746,35,553,63],[746,36,553,64,"_l"],[746,38,553,66],[746,41,553,69,"credentials"],[746,52,553,80],[746,53,553,81,"options"],[746,60,553,88],[746,66,553,94],[746,70,553,98],[746,74,553,102,"_l"],[746,76,553,104],[746,81,553,109],[746,86,553,114],[746,87,553,115],[746,90,553,118],[746,95,553,123],[746,96,553,124],[746,99,553,127,"_l"],[746,101,553,129],[746,102,553,130,"captchaToken"],[747,18,553,143],[748,16,553,145],[748,17,553,146],[748,20,554,22],[748,24,554,27],[748,25,554,28],[749,16,555,16,"xform"],[749,21,555,21],[749,23,555,23,"fetch_1"],[749,30,555,30],[749,31,555,31,"_sessionResponse"],[750,14,556,12],[750,15,556,13],[750,16,556,14],[751,14,549,20,"data"],[751,18,549,24],[751,21,549,24,"_yield3"],[751,28,549,24],[751,29,549,20,"data"],[751,33,549,24],[752,14,549,26,"error"],[752,19,549,31],[752,22,549,31,"_yield3"],[752,29,549,31],[752,30,549,26,"error"],[752,35,549,31],[753,12,557,12],[753,16,557,16,"error"],[753,21,557,21],[753,23,557,23],[754,14,558,16],[754,20,558,22,"error"],[754,25,558,27],[755,12,559,12],[756,12,560,12],[756,16,560,16],[756,17,560,17,"data"],[756,21,560,21],[756,25,560,25],[756,26,560,26,"data"],[756,30,560,30],[756,31,560,31,"session"],[756,38,560,38],[756,42,560,42],[756,43,560,43,"data"],[756,47,560,47],[756,48,560,48,"user"],[756,52,560,52],[756,54,560,54],[757,14,561,16],[757,21,561,23],[758,16,562,20,"data"],[758,20,562,24],[758,22,562,26],[759,18,562,28,"user"],[759,22,562,32],[759,24,562,34],[759,28,562,38],[760,18,562,40,"session"],[760,25,562,47],[760,27,562,49],[761,16,562,54],[761,17,562,55],[762,16,563,20,"error"],[762,21,563,25],[762,23,563,27],[762,27,563,31,"errors_1"],[762,35,563,39],[762,36,563,40,"AuthInvalidTokenResponseError"],[762,65,563,69],[762,66,563,70],[763,14,564,16],[763,15,564,17],[764,12,565,12],[765,12,566,12],[765,16,566,16,"data"],[765,20,566,20],[765,21,566,21,"session"],[765,28,566,28],[765,30,566,30],[766,14,567,16],[766,20,567,22],[766,24,567,26],[766,25,567,27,"_saveSession"],[766,37,567,39],[766,38,567,40,"data"],[766,42,567,44],[766,43,567,45,"session"],[766,50,567,52],[766,51,567,53],[767,14,568,16],[767,20,568,22],[767,24,568,26],[767,25,568,27,"_notifyAllSubscribers"],[767,46,568,48],[767,47,568,49],[767,58,568,60],[767,60,568,62,"data"],[767,64,568,66],[767,65,568,67,"session"],[767,72,568,74],[767,73,568,75],[768,12,569,12],[769,12,570,12],[769,19,570,19],[770,14,570,21,"data"],[770,18,570,25],[770,20,570,27,"Object"],[770,26,570,33],[770,27,570,34,"assign"],[770,33,570,40],[770,34,570,41],[770,35,570,42],[770,36,570,43],[770,38,570,45,"data"],[770,42,570,49],[770,43,570,50],[771,14,570,52,"error"],[772,12,570,58],[772,13,570,59],[773,10,571,8],[773,11,571,9],[773,12,572,8],[773,19,572,15,"error"],[773,24,572,20],[773,26,572,22],[774,12,573,12],[774,16,573,16],[774,17,573,17],[774,18,573,18],[774,20,573,20,"errors_1"],[774,28,573,28],[774,29,573,29,"isAuthError"],[774,40,573,40],[774,42,573,42,"error"],[774,47,573,47],[774,48,573,48],[774,50,573,50],[775,14,574,16],[775,21,574,23],[776,16,574,25,"data"],[776,20,574,29],[776,22,574,31],[777,18,574,33,"user"],[777,22,574,37],[777,24,574,39],[777,28,574,43],[778,18,574,45,"session"],[778,25,574,52],[778,27,574,54],[779,16,574,59],[779,17,574,60],[780,16,574,62,"error"],[781,14,574,68],[781,15,574,69],[782,12,575,12],[783,12,576,12],[783,18,576,18,"error"],[783,23,576,23],[784,10,577,8],[785,8,578,4],[785,9,578,5],[786,8,578,5],[786,17,474,10,"signInWithEthereum"],[786,35,474,28,"signInWithEthereum"],[786,36,474,28,"_x1"],[786,39,474,28],[787,10,474,28],[787,17,474,28,"_signInWithEthereum"],[787,36,474,28],[787,37,474,28,"apply"],[787,42,474,28],[787,49,474,28,"arguments"],[787,58,474,28],[788,8,474,28],[789,8,474,28],[789,15,474,10,"signInWithEthereum"],[789,33,474,28],[790,6,474,28],[791,4,474,28],[792,6,474,28,"key"],[792,9,474,28],[793,6,474,28,"value"],[793,11,474,28],[794,8,474,28],[794,12,474,28,"_signInWithSolana"],[794,29,474,28],[794,32,474,28,"_asyncToGenerator"],[794,49,474,28],[794,50,579,4],[794,61,579,27,"credentials"],[794,72,579,38],[794,74,579,40],[795,10,580,8],[795,14,580,12,"_a"],[795,16,580,14],[795,18,580,16,"_b"],[795,20,580,18],[795,22,580,20,"_c"],[795,24,580,22],[795,26,580,24,"_d"],[795,28,580,26],[795,30,580,28,"_e"],[795,32,580,30],[795,34,580,32,"_f"],[795,36,580,34],[795,38,580,36,"_g"],[795,40,580,38],[795,42,580,40,"_h"],[795,44,580,42],[795,46,580,44,"_j"],[795,48,580,46],[795,50,580,48,"_k"],[795,52,580,50],[795,54,580,52,"_l"],[795,56,580,54],[795,58,580,56,"_m"],[795,60,580,58],[796,10,581,8],[796,14,581,12,"message"],[796,21,581,19],[797,10,582,8],[797,14,582,12,"signature"],[797,23,582,21],[798,10,583,8],[798,14,583,12],[798,23,583,21],[798,27,583,25,"credentials"],[798,38,583,36],[798,40,583,38],[799,12,584,12,"message"],[799,19,584,19],[799,22,584,22,"credentials"],[799,33,584,33],[799,34,584,34,"message"],[799,41,584,41],[800,12,585,12,"signature"],[800,21,585,21],[800,24,585,24,"credentials"],[800,35,585,35],[800,36,585,36,"signature"],[800,45,585,45],[801,10,586,8],[801,11,586,9],[801,17,587,13],[802,12,588,12],[802,16,588,20,"chain"],[802,21,588,25],[802,24,588,58,"credentials"],[802,35,588,69],[802,36,588,20,"chain"],[802,41,588,25],[803,14,588,27,"wallet"],[803,20,588,33],[803,23,588,58,"credentials"],[803,34,588,69],[803,35,588,27,"wallet"],[803,41,588,33],[804,14,588,35,"statement"],[804,23,588,44],[804,26,588,58,"credentials"],[804,37,588,69],[804,38,588,35,"statement"],[804,47,588,44],[805,14,588,46,"options"],[805,21,588,53],[805,24,588,58,"credentials"],[805,35,588,69],[805,36,588,46,"options"],[805,43,588,53],[806,12,589,12],[806,16,589,16,"resolvedWallet"],[806,30,589,30],[807,12,590,12],[807,16,590,16],[807,17,590,17],[807,18,590,18],[807,19,590,19],[807,21,590,21,"helpers_1"],[807,30,590,30],[807,31,590,31,"isBrowser"],[807,40,590,40],[807,42,590,42],[807,43,590,43],[807,45,590,45],[808,14,591,16],[808,18,591,20],[808,25,591,27,"wallet"],[808,31,591,33],[808,36,591,38],[808,44,591,46],[808,48,591,50],[808,50,591,52,"options"],[808,57,591,59],[808,62,591,64],[808,66,591,68],[808,70,591,72,"options"],[808,77,591,79],[808,82,591,84],[808,87,591,89],[808,88,591,90],[808,91,591,93],[808,96,591,98],[808,97,591,99],[808,100,591,102,"options"],[808,107,591,109],[808,108,591,110,"url"],[808,111,591,113],[808,112,591,114],[808,114,591,116],[809,16,592,20],[809,22,592,26],[809,26,592,30,"Error"],[809,31,592,35],[809,32,592,36],[809,119,592,123],[809,120,592,124],[810,14,593,16],[811,14,594,16,"resolvedWallet"],[811,28,594,30],[811,31,594,33,"wallet"],[811,37,594,39],[812,12,595,12],[812,13,595,13],[812,19,596,17],[812,23,596,21],[812,30,596,28,"wallet"],[812,36,596,34],[812,41,596,39],[812,49,596,47],[812,51,596,49],[813,14,597,16,"resolvedWallet"],[813,28,597,30],[813,31,597,33,"wallet"],[813,37,597,39],[814,12,598,12],[814,13,598,13],[814,19,599,17],[815,14,600,16],[815,18,600,22,"windowAny"],[815,27,600,31],[815,30,600,34,"window"],[815,36,600,40],[816,14,601,16],[816,18,601,20],[816,26,601,28],[816,30,601,32,"windowAny"],[816,39,601,41],[816,43,602,20],[816,50,602,27,"windowAny"],[816,59,602,36],[816,60,602,37,"solana"],[816,66,602,43],[816,71,602,48],[816,79,602,56],[816,84,603,22],[816,92,603,30],[816,96,603,34,"windowAny"],[816,105,603,43],[816,106,603,44,"solana"],[816,112,603,50],[816,116,603,54],[816,123,603,61,"windowAny"],[816,132,603,70],[816,133,603,71,"solana"],[816,139,603,77],[816,140,603,78,"signIn"],[816,146,603,84],[816,151,603,89],[816,161,603,99],[816,165,604,25],[816,178,604,38],[816,182,604,42,"windowAny"],[816,191,604,51],[816,192,604,52,"solana"],[816,198,604,58],[816,202,605,28],[816,209,605,35,"windowAny"],[816,218,605,44],[816,219,605,45,"solana"],[816,225,605,51],[816,226,605,52,"signMessage"],[816,237,605,63],[816,242,605,68],[816,252,605,79],[816,253,605,80],[816,255,605,82],[817,16,606,20,"resolvedWallet"],[817,30,606,34],[817,33,606,37,"windowAny"],[817,42,606,46],[817,43,606,47,"solana"],[817,49,606,53],[818,14,607,16],[818,15,607,17],[818,21,608,21],[819,16,609,20],[819,22,609,26],[819,26,609,30,"Error"],[819,31,609,35],[819,32,609,36],[819,343,609,347],[819,344,609,348],[820,14,610,16],[821,12,611,12],[822,12,612,12],[822,16,612,18,"url"],[822,19,612,21],[822,22,612,24],[822,26,612,28,"URL"],[822,29,612,31],[822,30,612,32],[822,31,612,33,"_a"],[822,33,612,35],[822,36,612,38,"options"],[822,43,612,45],[822,48,612,50],[822,52,612,54],[822,56,612,58,"options"],[822,63,612,65],[822,68,612,70],[822,73,612,75],[822,74,612,76],[822,77,612,79],[822,82,612,84],[822,83,612,85],[822,86,612,88,"options"],[822,93,612,95],[822,94,612,96,"url"],[822,97,612,99],[822,103,612,105],[822,107,612,109],[822,111,612,113,"_a"],[822,113,612,115],[822,118,612,120],[822,123,612,125],[822,124,612,126],[822,127,612,129,"_a"],[822,129,612,131],[822,132,612,134,"window"],[822,138,612,140],[822,139,612,141,"location"],[822,147,612,149],[822,148,612,150,"href"],[822,152,612,154],[822,153,612,155],[823,12,613,12],[823,16,613,16],[823,24,613,24],[823,28,613,28,"resolvedWallet"],[823,42,613,42],[823,46,613,46,"resolvedWallet"],[823,60,613,60],[823,61,613,61,"signIn"],[823,67,613,67],[823,69,613,69],[824,14,614,16],[824,18,614,22,"output"],[824,24,614,28],[824,33,614,37,"resolvedWallet"],[824,47,614,51],[824,48,614,52,"signIn"],[824,54,614,58],[824,55,614,59,"Object"],[824,61,614,65],[824,62,614,66,"assign"],[824,68,614,72],[824,69,614,73,"Object"],[824,75,614,79],[824,76,614,80,"assign"],[824,82,614,86],[824,83,614,87,"Object"],[824,89,614,93],[824,90,614,94,"assign"],[824,96,614,100],[824,97,614,101],[825,16,614,103,"issuedAt"],[825,24,614,111],[825,26,614,113],[825,30,614,117,"Date"],[825,34,614,121],[825,35,614,122],[825,36,614,123],[825,37,614,124,"toISOString"],[825,48,614,135],[825,49,614,136],[826,14,614,138],[826,15,614,139],[826,17,614,141,"options"],[826,24,614,148],[826,29,614,153],[826,33,614,157],[826,37,614,161,"options"],[826,44,614,168],[826,49,614,173],[826,54,614,178],[826,55,614,179],[826,58,614,182],[826,63,614,187],[826,64,614,188],[826,67,614,191,"options"],[826,74,614,198],[826,75,614,199,"signInWithSolana"],[826,91,614,215],[826,92,614,216],[826,94,614,218],[827,16,615,20],[828,16,616,20,"version"],[828,23,616,27],[828,25,616,29],[828,28,616,32],[829,16,616,34,"domain"],[829,22,616,40],[829,24,616,42,"url"],[829,27,616,45],[829,28,616,46,"host"],[829,32,616,50],[830,16,616,52,"uri"],[830,19,616,55],[830,21,616,57,"url"],[830,24,616,60],[830,25,616,61,"href"],[831,14,616,66],[831,15,616,67],[831,16,616,68],[831,18,616,71,"statement"],[831,27,616,80],[831,30,616,83],[832,16,616,85,"statement"],[833,14,616,95],[833,15,616,96],[833,18,616,99],[833,22,616,104],[833,23,616,105],[833,24,616,106],[834,14,617,16],[834,18,617,20,"outputToProcess"],[834,33,617,35],[835,14,618,16],[835,18,618,20,"Array"],[835,23,618,25],[835,24,618,26,"isArray"],[835,31,618,33],[835,32,618,34,"output"],[835,38,618,40],[835,39,618,41],[835,43,618,45,"output"],[835,49,618,51],[835,50,618,52],[835,51,618,53],[835,52,618,54],[835,56,618,58],[835,63,618,65,"output"],[835,69,618,71],[835,70,618,72],[835,71,618,73],[835,72,618,74],[835,77,618,79],[835,85,618,87],[835,87,618,89],[836,16,619,20,"outputToProcess"],[836,31,619,35],[836,34,619,38,"output"],[836,40,619,44],[836,41,619,45],[836,42,619,46],[836,43,619,47],[837,14,620,16],[837,15,620,17],[837,21,621,21],[837,25,621,25,"output"],[837,31,621,31],[837,35,622,20],[837,42,622,27,"output"],[837,48,622,33],[837,53,622,38],[837,61,622,46],[837,65,623,20],[837,80,623,35],[837,84,623,39,"output"],[837,90,623,45],[837,94,624,20],[837,105,624,31],[837,109,624,35,"output"],[837,115,624,41],[837,117,624,43],[838,16,625,20,"outputToProcess"],[838,31,625,35],[838,34,625,38,"output"],[838,40,625,44],[839,14,626,16],[839,15,626,17],[839,21,627,21],[840,16,628,20],[840,22,628,26],[840,26,628,30,"Error"],[840,31,628,35],[840,32,628,36],[840,103,628,107],[840,104,628,108],[841,14,629,16],[842,14,630,16],[842,18,630,20],[842,33,630,35],[842,37,630,39,"outputToProcess"],[842,52,630,54],[842,56,631,20],[842,67,631,31],[842,71,631,35,"outputToProcess"],[842,86,631,50],[842,91,632,21],[842,98,632,28,"outputToProcess"],[842,113,632,43],[842,114,632,44,"signedMessage"],[842,127,632,57],[842,132,632,62],[842,140,632,70],[842,144,633,24,"outputToProcess"],[842,159,633,39],[842,160,633,40,"signedMessage"],[842,173,633,53],[842,185,633,65,"Uint8Array"],[842,195,633,75],[842,196,633,76],[842,200,634,20,"outputToProcess"],[842,215,634,35],[842,216,634,36,"signature"],[842,225,634,45],[842,237,634,57,"Uint8Array"],[842,247,634,67],[842,249,634,69],[843,16,635,20,"message"],[843,23,635,27],[843,26,636,24],[843,33,636,31,"outputToProcess"],[843,48,636,46],[843,49,636,47,"signedMessage"],[843,62,636,60],[843,67,636,65],[843,75,636,73],[843,78,637,30,"outputToProcess"],[843,93,637,45],[843,94,637,46,"signedMessage"],[843,107,637,59],[843,110,638,30],[843,114,638,34,"TextDecoder"],[843,125,638,45],[843,126,638,46],[843,127,638,47],[843,128,638,48,"decode"],[843,134,638,54],[843,135,638,55,"outputToProcess"],[843,150,638,70],[843,151,638,71,"signedMessage"],[843,164,638,84],[843,165,638,85],[844,16,639,20,"signature"],[844,25,639,29],[844,28,639,32,"outputToProcess"],[844,43,639,47],[844,44,639,48,"signature"],[844,53,639,57],[845,14,640,16],[845,15,640,17],[845,21,641,21],[846,16,642,20],[846,22,642,26],[846,26,642,30,"Error"],[846,31,642,35],[846,32,642,36],[846,138,642,142],[846,139,642,143],[847,14,643,16],[848,12,644,12],[848,13,644,13],[848,19,645,17],[849,14,646,16],[849,18,646,20],[849,20,646,22],[849,33,646,35],[849,37,646,39,"resolvedWallet"],[849,51,646,53],[849,52,646,54],[849,56,647,20],[849,63,647,27,"resolvedWallet"],[849,77,647,41],[849,78,647,42,"signMessage"],[849,89,647,53],[849,94,647,58],[849,104,647,68],[849,108,648,20],[849,110,648,22],[849,121,648,33],[849,125,648,37,"resolvedWallet"],[849,139,648,51],[849,140,648,52],[849,144,649,20],[849,151,649,27,"resolvedWallet"],[849,165,649,41],[849,170,649,46],[849,178,649,54],[849,182,650,20],[849,183,650,21,"resolvedWallet"],[849,197,650,35],[849,198,650,36,"publicKey"],[849,207,650,45],[849,211,651,20],[849,213,651,22],[849,223,651,32],[849,227,651,36,"resolvedWallet"],[849,241,651,50],[849,242,651,51,"publicKey"],[849,251,651,60],[849,252,651,61],[849,256,652,20],[849,263,652,27,"resolvedWallet"],[849,277,652,41],[849,278,652,42,"publicKey"],[849,287,652,51],[849,288,652,52,"toBase58"],[849,296,652,60],[849,301,652,65],[849,311,652,75],[849,313,652,77],[850,16,653,20],[850,22,653,26],[850,26,653,30,"Error"],[850,31,653,35],[850,32,653,36],[850,129,653,133],[850,130,653,134],[851,14,654,16],[852,14,655,16,"message"],[852,21,655,23],[852,24,655,26],[852,25,656,20],[852,28,656,23,"url"],[852,31,656,26],[852,32,656,27,"host"],[852,36,656,31],[852,85,656,80],[852,87,657,20,"resolvedWallet"],[852,101,657,34],[852,102,657,35,"publicKey"],[852,111,657,44],[852,112,657,45,"toBase58"],[852,120,657,53],[852,121,657,54],[852,122,657,55],[852,124,658,20],[852,128,658,24,"statement"],[852,137,658,33],[852,140,658,36],[852,141,658,37],[852,143,658,39],[852,145,658,41,"statement"],[852,154,658,50],[852,156,658,52],[852,158,658,54],[852,159,658,55],[852,162,658,58],[852,163,658,59],[852,165,658,61],[852,166,658,62],[852,167,658,63],[852,169,659,20],[852,181,659,32],[852,183,660,20],[852,191,660,28,"url"],[852,194,660,31],[852,195,660,32,"href"],[852,199,660,36],[852,201,660,38],[852,203,661,20],[852,217,661,34],[852,218,661,35,"_c"],[852,220,661,37],[852,223,661,40],[852,224,661,41,"_b"],[852,226,661,43],[852,229,661,46,"options"],[852,236,661,53],[852,241,661,58],[852,245,661,62],[852,249,661,66,"options"],[852,256,661,73],[852,261,661,78],[852,266,661,83],[852,267,661,84],[852,270,661,87],[852,275,661,92],[852,276,661,93],[852,279,661,96,"options"],[852,286,661,103],[852,287,661,104,"signInWithSolana"],[852,303,661,120],[852,309,661,126],[852,313,661,130],[852,317,661,134,"_b"],[852,319,661,136],[852,324,661,141],[852,329,661,146],[852,330,661,147],[852,333,661,150],[852,338,661,155],[852,339,661,156],[852,342,661,159,"_b"],[852,344,661,161],[852,345,661,162,"issuedAt"],[852,353,661,170],[852,359,661,176],[852,363,661,180],[852,367,661,184,"_c"],[852,369,661,186],[852,374,661,191],[852,379,661,196],[852,380,661,197],[852,383,661,200,"_c"],[852,385,661,202],[852,388,661,205],[852,392,661,209,"Date"],[852,396,661,213],[852,397,661,214],[852,398,661,215],[852,399,661,216,"toISOString"],[852,410,661,227],[852,411,661,228],[852,412,661,229],[852,414,661,231],[852,416,662,20],[852,420,662,24],[852,421,662,25],[852,422,662,26,"_d"],[852,424,662,28],[852,427,662,31,"options"],[852,434,662,38],[852,439,662,43],[852,443,662,47],[852,447,662,51,"options"],[852,454,662,58],[852,459,662,63],[852,464,662,68],[852,465,662,69],[852,468,662,72],[852,473,662,77],[852,474,662,78],[852,477,662,81,"options"],[852,484,662,88],[852,485,662,89,"signInWithSolana"],[852,501,662,105],[852,507,662,111],[852,511,662,115],[852,515,662,119,"_d"],[852,517,662,121],[852,522,662,126],[852,527,662,131],[852,528,662,132],[852,531,662,135],[852,536,662,140],[852,537,662,141],[852,540,662,144,"_d"],[852,542,662,146],[852,543,662,147,"notBefore"],[852,552,662,156],[852,556,663,26],[852,557,663,27],[852,572,663,42,"options"],[852,579,663,49],[852,580,663,50,"signInWithSolana"],[852,596,663,66],[852,597,663,67,"notBefore"],[852,606,663,76],[852,608,663,78],[852,609,663,79],[852,612,664,26],[852,614,664,28],[852,615,664,29],[852,617,665,20],[852,621,665,24],[852,622,665,25],[852,623,665,26,"_e"],[852,625,665,28],[852,628,665,31,"options"],[852,635,665,38],[852,640,665,43],[852,644,665,47],[852,648,665,51,"options"],[852,655,665,58],[852,660,665,63],[852,665,665,68],[852,666,665,69],[852,669,665,72],[852,674,665,77],[852,675,665,78],[852,678,665,81,"options"],[852,685,665,88],[852,686,665,89,"signInWithSolana"],[852,702,665,105],[852,708,665,111],[852,712,665,115],[852,716,665,119,"_e"],[852,718,665,121],[852,723,665,126],[852,728,665,131],[852,729,665,132],[852,732,665,135],[852,737,665,140],[852,738,665,141],[852,741,665,144,"_e"],[852,743,665,146],[852,744,665,147,"expirationTime"],[852,758,665,161],[852,762,666,26],[852,763,666,27],[852,783,666,47,"options"],[852,790,666,54],[852,791,666,55,"signInWithSolana"],[852,807,666,71],[852,808,666,72,"expirationTime"],[852,822,666,86],[852,824,666,88],[852,825,666,89],[852,828,667,26],[852,830,667,28],[852,831,667,29],[852,833,668,20],[852,837,668,24],[852,838,668,25],[852,839,668,26,"_f"],[852,841,668,28],[852,844,668,31,"options"],[852,851,668,38],[852,856,668,43],[852,860,668,47],[852,864,668,51,"options"],[852,871,668,58],[852,876,668,63],[852,881,668,68],[852,882,668,69],[852,885,668,72],[852,890,668,77],[852,891,668,78],[852,894,668,81,"options"],[852,901,668,88],[852,902,668,89,"signInWithSolana"],[852,918,668,105],[852,924,668,111],[852,928,668,115],[852,932,668,119,"_f"],[852,934,668,121],[852,939,668,126],[852,944,668,131],[852,945,668,132],[852,948,668,135],[852,953,668,140],[852,954,668,141],[852,957,668,144,"_f"],[852,959,668,146],[852,960,668,147,"chainId"],[852,967,668,154],[852,971,669,26],[852,972,669,27],[852,985,669,40,"options"],[852,992,669,47],[852,993,669,48,"signInWithSolana"],[852,1009,669,64],[852,1010,669,65,"chainId"],[852,1017,669,72],[852,1019,669,74],[852,1020,669,75],[852,1023,670,26],[852,1025,670,28],[852,1026,670,29],[852,1028,671,20],[852,1032,671,24],[852,1033,671,25],[852,1034,671,26,"_g"],[852,1036,671,28],[852,1039,671,31,"options"],[852,1046,671,38],[852,1051,671,43],[852,1055,671,47],[852,1059,671,51,"options"],[852,1066,671,58],[852,1071,671,63],[852,1076,671,68],[852,1077,671,69],[852,1080,671,72],[852,1085,671,77],[852,1086,671,78],[852,1089,671,81,"options"],[852,1096,671,88],[852,1097,671,89,"signInWithSolana"],[852,1113,671,105],[852,1119,671,111],[852,1123,671,115],[852,1127,671,119,"_g"],[852,1129,671,121],[852,1134,671,126],[852,1139,671,131],[852,1140,671,132],[852,1143,671,135],[852,1148,671,140],[852,1149,671,141],[852,1152,671,144,"_g"],[852,1154,671,146],[852,1155,671,147,"nonce"],[852,1160,671,152],[852,1164,671,156],[852,1165,671,157],[852,1175,671,167,"options"],[852,1182,671,174],[852,1183,671,175,"signInWithSolana"],[852,1199,671,191],[852,1200,671,192,"nonce"],[852,1205,671,197],[852,1207,671,199],[852,1208,671,200],[852,1211,671,203],[852,1213,671,205],[852,1214,671,206],[852,1216,672,20],[852,1220,672,24],[852,1221,672,25],[852,1222,672,26,"_h"],[852,1224,672,28],[852,1227,672,31,"options"],[852,1234,672,38],[852,1239,672,43],[852,1243,672,47],[852,1247,672,51,"options"],[852,1254,672,58],[852,1259,672,63],[852,1264,672,68],[852,1265,672,69],[852,1268,672,72],[852,1273,672,77],[852,1274,672,78],[852,1277,672,81,"options"],[852,1284,672,88],[852,1285,672,89,"signInWithSolana"],[852,1301,672,105],[852,1307,672,111],[852,1311,672,115],[852,1315,672,119,"_h"],[852,1317,672,121],[852,1322,672,126],[852,1327,672,131],[852,1328,672,132],[852,1331,672,135],[852,1336,672,140],[852,1337,672,141],[852,1340,672,144,"_h"],[852,1342,672,146],[852,1343,672,147,"requestId"],[852,1352,672,156],[852,1356,673,26],[852,1357,673,27],[852,1372,673,42,"options"],[852,1379,673,49],[852,1380,673,50,"signInWithSolana"],[852,1396,673,66],[852,1397,673,67,"requestId"],[852,1406,673,76],[852,1408,673,78],[852,1409,673,79],[852,1412,674,26],[852,1414,674,28],[852,1415,674,29],[852,1417,675,20],[852,1421,675,24],[852,1422,675,25],[852,1423,675,26,"_k"],[852,1425,675,28],[852,1428,675,31],[852,1429,675,32,"_j"],[852,1431,675,34],[852,1434,675,37,"options"],[852,1441,675,44],[852,1446,675,49],[852,1450,675,53],[852,1454,675,57,"options"],[852,1461,675,64],[852,1466,675,69],[852,1471,675,74],[852,1472,675,75],[852,1475,675,78],[852,1480,675,83],[852,1481,675,84],[852,1484,675,87,"options"],[852,1491,675,94],[852,1492,675,95,"signInWithSolana"],[852,1508,675,111],[852,1514,675,117],[852,1518,675,121],[852,1522,675,125,"_j"],[852,1524,675,127],[852,1529,675,132],[852,1534,675,137],[852,1535,675,138],[852,1538,675,141],[852,1543,675,146],[852,1544,675,147],[852,1547,675,150,"_j"],[852,1549,675,152],[852,1550,675,153,"resources"],[852,1559,675,162],[852,1565,675,168],[852,1569,675,172],[852,1573,675,176,"_k"],[852,1575,675,178],[852,1580,675,183],[852,1585,675,188],[852,1586,675,189],[852,1589,675,192],[852,1594,675,197],[852,1595,675,198],[852,1598,675,201,"_k"],[852,1600,675,203],[852,1601,675,204,"length"],[852,1607,675,210],[852,1611,676,26],[852,1612,677,28],[852,1623,677,39],[852,1625,678,28],[852,1628,678,31,"options"],[852,1635,678,38],[852,1636,678,39,"signInWithSolana"],[852,1652,678,55],[852,1653,678,56,"resources"],[852,1662,678,65],[852,1663,678,66,"map"],[852,1666,678,69],[852,1667,678,71,"resource"],[852,1675,678,79],[852,1679,678,84],[852,1684,678,89,"resource"],[852,1692,678,97],[852,1694,678,99],[852,1695,678,100],[852,1696,679,25],[852,1699,680,26],[852,1701,680,28],[852,1702,680,29],[852,1703,681,17],[852,1704,681,18,"join"],[852,1708,681,22],[852,1709,681,23],[852,1713,681,27],[852,1714,681,28],[853,14,682,16],[853,18,682,22,"maybeSignature"],[853,32,682,36],[853,41,682,45,"resolvedWallet"],[853,55,682,59],[853,56,682,60,"signMessage"],[853,67,682,71],[853,68,682,72],[853,72,682,76,"TextEncoder"],[853,83,682,87],[853,84,682,88],[853,85,682,89],[853,86,682,90,"encode"],[853,92,682,96],[853,93,682,97,"message"],[853,100,682,104],[853,101,682,105],[853,103,682,107],[853,109,682,113],[853,110,682,114],[854,14,683,16],[854,18,683,20],[854,19,683,21,"maybeSignature"],[854,33,683,35],[854,37,683,39],[854,39,683,41,"maybeSignature"],[854,53,683,55],[854,65,683,67,"Uint8Array"],[854,75,683,77],[854,76,683,78],[854,78,683,80],[855,16,684,20],[855,22,684,26],[855,26,684,30,"Error"],[855,31,684,35],[855,32,684,36],[855,106,684,110],[855,107,684,111],[856,14,685,16],[857,14,686,16,"signature"],[857,23,686,25],[857,26,686,28,"maybeSignature"],[857,40,686,42],[858,12,687,12],[859,10,688,8],[860,10,689,8],[860,14,689,12],[861,12,690,12],[861,16,690,12,"_yield4"],[861,23,690,12],[861,32,690,42],[861,33,690,43],[861,34,690,44],[861,36,690,46,"fetch_1"],[861,43,690,53],[861,44,690,54,"_request"],[861,52,690,62],[861,54,690,64],[861,58,690,68],[861,59,690,69,"fetch"],[861,64,690,74],[861,66,690,76],[861,72,690,82],[861,74,690,84],[861,77,690,87],[861,81,690,91],[861,82,690,92,"url"],[861,85,690,95],[861,109,690,119],[861,111,690,121],[862,16,691,16,"headers"],[862,23,691,23],[862,25,691,25],[862,29,691,29],[862,30,691,30,"headers"],[862,37,691,37],[863,16,692,16,"body"],[863,20,692,20],[863,22,692,22,"Object"],[863,28,692,28],[863,29,692,29,"assign"],[863,35,692,35],[863,36,692,36],[864,18,692,38,"chain"],[864,23,692,43],[864,25,692,45],[864,33,692,53],[865,18,692,55,"message"],[865,25,692,62],[866,18,692,64,"signature"],[866,27,692,73],[866,29,692,75],[866,30,692,76],[866,31,692,77],[866,33,692,79,"base64url_1"],[866,44,692,90],[866,45,692,91,"bytesToBase64URL"],[866,61,692,107],[866,63,692,109,"signature"],[866,72,692,118],[867,16,692,120],[867,17,692,121],[867,19,692,124],[867,20,692,125],[867,21,692,126,"_l"],[867,23,692,128],[867,26,692,131,"credentials"],[867,37,692,142],[867,38,692,143,"options"],[867,45,692,150],[867,51,692,156],[867,55,692,160],[867,59,692,164,"_l"],[867,61,692,166],[867,66,692,171],[867,71,692,176],[867,72,692,177],[867,75,692,180],[867,80,692,185],[867,81,692,186],[867,84,692,189,"_l"],[867,86,692,191],[867,87,692,192,"captchaToken"],[867,99,692,204],[867,103,693,22],[868,18,693,24,"gotrue_meta_security"],[868,38,693,44],[868,40,693,46],[869,20,693,48,"captcha_token"],[869,33,693,61],[869,35,693,63],[869,36,693,64,"_m"],[869,38,693,66],[869,41,693,69,"credentials"],[869,52,693,80],[869,53,693,81,"options"],[869,60,693,88],[869,66,693,94],[869,70,693,98],[869,74,693,102,"_m"],[869,76,693,104],[869,81,693,109],[869,86,693,114],[869,87,693,115],[869,90,693,118],[869,95,693,123],[869,96,693,124],[869,99,693,127,"_m"],[869,101,693,129],[869,102,693,130,"captchaToken"],[870,18,693,143],[871,16,693,145],[871,17,693,146],[871,20,694,22],[871,24,694,27],[871,25,694,28],[872,16,695,16,"xform"],[872,21,695,21],[872,23,695,23,"fetch_1"],[872,30,695,30],[872,31,695,31,"_sessionResponse"],[873,14,696,12],[873,15,696,13],[873,16,696,14],[874,14,690,20,"data"],[874,18,690,24],[874,21,690,24,"_yield4"],[874,28,690,24],[874,29,690,20,"data"],[874,33,690,24],[875,14,690,26,"error"],[875,19,690,31],[875,22,690,31,"_yield4"],[875,29,690,31],[875,30,690,26,"error"],[875,35,690,31],[876,12,697,12],[876,16,697,16,"error"],[876,21,697,21],[876,23,697,23],[877,14,698,16],[877,20,698,22,"error"],[877,25,698,27],[878,12,699,12],[879,12,700,12],[879,16,700,16],[879,17,700,17,"data"],[879,21,700,21],[879,25,700,25],[879,26,700,26,"data"],[879,30,700,30],[879,31,700,31,"session"],[879,38,700,38],[879,42,700,42],[879,43,700,43,"data"],[879,47,700,47],[879,48,700,48,"user"],[879,52,700,52],[879,54,700,54],[880,14,701,16],[880,21,701,23],[881,16,702,20,"data"],[881,20,702,24],[881,22,702,26],[882,18,702,28,"user"],[882,22,702,32],[882,24,702,34],[882,28,702,38],[883,18,702,40,"session"],[883,25,702,47],[883,27,702,49],[884,16,702,54],[884,17,702,55],[885,16,703,20,"error"],[885,21,703,25],[885,23,703,27],[885,27,703,31,"errors_1"],[885,35,703,39],[885,36,703,40,"AuthInvalidTokenResponseError"],[885,65,703,69],[885,66,703,70],[886,14,704,16],[886,15,704,17],[887,12,705,12],[888,12,706,12],[888,16,706,16,"data"],[888,20,706,20],[888,21,706,21,"session"],[888,28,706,28],[888,30,706,30],[889,14,707,16],[889,20,707,22],[889,24,707,26],[889,25,707,27,"_saveSession"],[889,37,707,39],[889,38,707,40,"data"],[889,42,707,44],[889,43,707,45,"session"],[889,50,707,52],[889,51,707,53],[890,14,708,16],[890,20,708,22],[890,24,708,26],[890,25,708,27,"_notifyAllSubscribers"],[890,46,708,48],[890,47,708,49],[890,58,708,60],[890,60,708,62,"data"],[890,64,708,66],[890,65,708,67,"session"],[890,72,708,74],[890,73,708,75],[891,12,709,12],[892,12,710,12],[892,19,710,19],[893,14,710,21,"data"],[893,18,710,25],[893,20,710,27,"Object"],[893,26,710,33],[893,27,710,34,"assign"],[893,33,710,40],[893,34,710,41],[893,35,710,42],[893,36,710,43],[893,38,710,45,"data"],[893,42,710,49],[893,43,710,50],[894,14,710,52,"error"],[895,12,710,58],[895,13,710,59],[896,10,711,8],[896,11,711,9],[896,12,712,8],[896,19,712,15,"error"],[896,24,712,20],[896,26,712,22],[897,12,713,12],[897,16,713,16],[897,17,713,17],[897,18,713,18],[897,20,713,20,"errors_1"],[897,28,713,28],[897,29,713,29,"isAuthError"],[897,40,713,40],[897,42,713,42,"error"],[897,47,713,47],[897,48,713,48],[897,50,713,50],[898,14,714,16],[898,21,714,23],[899,16,714,25,"data"],[899,20,714,29],[899,22,714,31],[900,18,714,33,"user"],[900,22,714,37],[900,24,714,39],[900,28,714,43],[901,18,714,45,"session"],[901,25,714,52],[901,27,714,54],[902,16,714,59],[902,17,714,60],[903,16,714,62,"error"],[904,14,714,68],[904,15,714,69],[905,12,715,12],[906,12,716,12],[906,18,716,18,"error"],[906,23,716,23],[907,10,717,8],[908,8,718,4],[908,9,718,5],[909,8,718,5],[909,17,579,10,"signInWithSolana"],[909,33,579,26,"signInWithSolana"],[909,34,579,26,"_x10"],[909,38,579,26],[910,10,579,26],[910,17,579,26,"_signInWithSolana"],[910,34,579,26],[910,35,579,26,"apply"],[910,40,579,26],[910,47,579,26,"arguments"],[910,56,579,26],[911,8,579,26],[912,8,579,26],[912,15,579,10,"signInWithSolana"],[912,31,579,26],[913,6,579,26],[914,4,579,26],[915,6,579,26,"key"],[915,9,579,26],[916,6,579,26,"value"],[916,11,579,26],[917,8,579,26],[917,12,579,26,"_exchangeCodeForSession3"],[917,36,579,26],[917,39,579,26,"_asyncToGenerator"],[917,56,579,26],[917,57,719,4],[917,68,719,34,"authCode"],[917,76,719,42],[917,78,719,44],[918,10,720,8],[918,14,720,14,"storageItem"],[918,25,720,25],[918,34,720,34],[918,35,720,35],[918,36,720,36],[918,38,720,38,"helpers_1"],[918,47,720,47],[918,48,720,48,"getItemAsync"],[918,60,720,60],[918,62,720,62],[918,66,720,66],[918,67,720,67,"storage"],[918,74,720,74],[918,76,720,76],[918,79,720,79],[918,83,720,83],[918,84,720,84,"storageKey"],[918,94,720,94],[918,110,720,110],[918,111,720,111],[919,10,721,8],[919,14,721,8,"_split"],[919,20,721,8],[919,23,721,45],[919,24,721,46,"storageItem"],[919,35,721,57],[919,40,721,62],[919,44,721,66],[919,48,721,70,"storageItem"],[919,59,721,81],[919,64,721,86],[919,69,721,91],[919,70,721,92],[919,73,721,95,"storageItem"],[919,84,721,106],[919,87,721,109],[919,89,721,111],[919,91,721,113,"split"],[919,96,721,118],[919,97,721,119],[919,100,721,122],[919,101,721,123],[920,12,721,123,"_split2"],[920,19,721,123],[920,22,721,123,"_slicedToArray"],[920,36,721,123],[920,37,721,123,"_split"],[920,43,721,123],[921,12,721,15,"codeVerifier"],[921,24,721,27],[921,27,721,27,"_split2"],[921,34,721,27],[922,12,721,29,"redirectType"],[922,24,721,41],[922,27,721,41,"_split2"],[922,34,721,41],[923,10,722,8],[923,14,722,12],[924,12,723,12],[924,16,723,12,"_yield5"],[924,23,723,12],[924,32,723,42],[924,33,723,43],[924,34,723,44],[924,36,723,46,"fetch_1"],[924,43,723,53],[924,44,723,54,"_request"],[924,52,723,62],[924,54,723,64],[924,58,723,68],[924,59,723,69,"fetch"],[924,64,723,74],[924,66,723,76],[924,72,723,82],[924,74,723,84],[924,77,723,87],[924,81,723,91],[924,82,723,92,"url"],[924,85,723,95],[924,109,723,119],[924,111,723,121],[925,16,724,16,"headers"],[925,23,724,23],[925,25,724,25],[925,29,724,29],[925,30,724,30,"headers"],[925,37,724,37],[926,16,725,16,"body"],[926,20,725,20],[926,22,725,22],[927,18,726,20,"auth_code"],[927,27,726,29],[927,29,726,31,"authCode"],[927,37,726,39],[928,18,727,20,"code_verifier"],[928,31,727,33],[928,33,727,35,"codeVerifier"],[929,16,728,16],[929,17,728,17],[930,16,729,16,"xform"],[930,21,729,21],[930,23,729,23,"fetch_1"],[930,30,729,30],[930,31,729,31,"_sessionResponse"],[931,14,730,12],[931,15,730,13],[931,16,730,14],[932,14,723,20,"data"],[932,18,723,24],[932,21,723,24,"_yield5"],[932,28,723,24],[932,29,723,20,"data"],[932,33,723,24],[933,14,723,26,"error"],[933,19,723,31],[933,22,723,31,"_yield5"],[933,29,723,31],[933,30,723,26,"error"],[933,35,723,31],[934,12,731,12],[934,18,731,18],[934,19,731,19],[934,20,731,20],[934,22,731,22,"helpers_1"],[934,31,731,31],[934,32,731,32,"removeItemAsync"],[934,47,731,47],[934,49,731,49],[934,53,731,53],[934,54,731,54,"storage"],[934,61,731,61],[934,63,731,63],[934,66,731,66],[934,70,731,70],[934,71,731,71,"storageKey"],[934,81,731,81],[934,97,731,97],[934,98,731,98],[935,12,732,12],[935,16,732,16,"error"],[935,21,732,21],[935,23,732,23],[936,14,733,16],[936,20,733,22,"error"],[936,25,733,27],[937,12,734,12],[938,12,735,12],[938,16,735,16],[938,17,735,17,"data"],[938,21,735,21],[938,25,735,25],[938,26,735,26,"data"],[938,30,735,30],[938,31,735,31,"session"],[938,38,735,38],[938,42,735,42],[938,43,735,43,"data"],[938,47,735,47],[938,48,735,48,"user"],[938,52,735,52],[938,54,735,54],[939,14,736,16],[939,21,736,23],[940,16,737,20,"data"],[940,20,737,24],[940,22,737,26],[941,18,737,28,"user"],[941,22,737,32],[941,24,737,34],[941,28,737,38],[942,18,737,40,"session"],[942,25,737,47],[942,27,737,49],[942,31,737,53],[943,18,737,55,"redirectType"],[943,30,737,67],[943,32,737,69],[944,16,737,74],[944,17,737,75],[945,16,738,20,"error"],[945,21,738,25],[945,23,738,27],[945,27,738,31,"errors_1"],[945,35,738,39],[945,36,738,40,"AuthInvalidTokenResponseError"],[945,65,738,69],[945,66,738,70],[946,14,739,16],[946,15,739,17],[947,12,740,12],[948,12,741,12],[948,16,741,16,"data"],[948,20,741,20],[948,21,741,21,"session"],[948,28,741,28],[948,30,741,30],[949,14,742,16],[949,20,742,22],[949,24,742,26],[949,25,742,27,"_saveSession"],[949,37,742,39],[949,38,742,40,"data"],[949,42,742,44],[949,43,742,45,"session"],[949,50,742,52],[949,51,742,53],[950,14,743,16],[950,20,743,22],[950,24,743,26],[950,25,743,27,"_notifyAllSubscribers"],[950,46,743,48],[950,47,743,49],[950,58,743,60],[950,60,743,62,"data"],[950,64,743,66],[950,65,743,67,"session"],[950,72,743,74],[950,73,743,75],[951,12,744,12],[952,12,745,12],[952,19,745,19],[953,14,745,21,"data"],[953,18,745,25],[953,20,745,27,"Object"],[953,26,745,33],[953,27,745,34,"assign"],[953,33,745,40],[953,34,745,41,"Object"],[953,40,745,47],[953,41,745,48,"assign"],[953,47,745,54],[953,48,745,55],[953,49,745,56],[953,50,745,57],[953,52,745,59,"data"],[953,56,745,63],[953,57,745,64],[953,59,745,66],[954,16,745,68,"redirectType"],[954,28,745,80],[954,30,745,82,"redirectType"],[954,42,745,94],[954,47,745,99],[954,51,745,103],[954,55,745,107,"redirectType"],[954,67,745,119],[954,72,745,124],[954,77,745,129],[954,78,745,130],[954,81,745,133,"redirectType"],[954,93,745,145],[954,96,745,148],[955,14,745,153],[955,15,745,154],[955,16,745,155],[956,14,745,157,"error"],[957,12,745,163],[957,13,745,164],[958,10,746,8],[958,11,746,9],[958,12,747,8],[958,19,747,15,"error"],[958,24,747,20],[958,26,747,22],[959,12,748,12],[959,16,748,16],[959,17,748,17],[959,18,748,18],[959,20,748,20,"errors_1"],[959,28,748,28],[959,29,748,29,"isAuthError"],[959,40,748,40],[959,42,748,42,"error"],[959,47,748,47],[959,48,748,48],[959,50,748,50],[960,14,749,16],[960,21,749,23],[961,16,749,25,"data"],[961,20,749,29],[961,22,749,31],[962,18,749,33,"user"],[962,22,749,37],[962,24,749,39],[962,28,749,43],[963,18,749,45,"session"],[963,25,749,52],[963,27,749,54],[963,31,749,58],[964,18,749,60,"redirectType"],[964,30,749,72],[964,32,749,74],[965,16,749,79],[965,17,749,80],[966,16,749,82,"error"],[967,14,749,88],[967,15,749,89],[968,12,750,12],[969,12,751,12],[969,18,751,18,"error"],[969,23,751,23],[970,10,752,8],[971,8,753,4],[971,9,753,5],[972,8,753,5],[972,17,719,10,"_exchangeCodeForSession"],[972,40,719,33,"_exchangeCodeForSession"],[972,41,719,33,"_x11"],[972,45,719,33],[973,10,719,33],[973,17,719,33,"_exchangeCodeForSession3"],[973,41,719,33],[973,42,719,33,"apply"],[973,47,719,33],[973,54,719,33,"arguments"],[973,63,719,33],[974,8,719,33],[975,8,719,33],[975,15,719,10,"_exchangeCodeForSession"],[975,38,719,33],[976,6,719,33],[977,6,754,4],[978,0,755,0],[979,0,756,0],[980,0,757,0],[981,4,754,4],[982,6,754,4,"key"],[982,9,754,4],[983,6,754,4,"value"],[983,11,754,4],[984,8,754,4],[984,12,754,4,"_signInWithIdToken"],[984,30,754,4],[984,33,754,4,"_asyncToGenerator"],[984,50,754,4],[984,51,758,4],[984,62,758,28,"credentials"],[984,73,758,39],[984,75,758,41],[985,10,759,8],[985,14,759,12],[986,12,760,12],[986,16,760,20,"options"],[986,23,760,27],[986,26,760,70,"credentials"],[986,37,760,81],[986,38,760,20,"options"],[986,45,760,27],[987,14,760,29,"provider"],[987,22,760,37],[987,25,760,70,"credentials"],[987,36,760,81],[987,37,760,29,"provider"],[987,45,760,37],[988,14,760,39,"token"],[988,19,760,44],[988,22,760,70,"credentials"],[988,33,760,81],[988,34,760,39,"token"],[988,39,760,44],[989,14,760,46,"access_token"],[989,26,760,58],[989,29,760,70,"credentials"],[989,40,760,81],[989,41,760,46,"access_token"],[989,53,760,58],[990,14,760,60,"nonce"],[990,19,760,65],[990,22,760,70,"credentials"],[990,33,760,81],[990,34,760,60,"nonce"],[990,39,760,65],[991,12,761,12],[991,16,761,18,"res"],[991,19,761,21],[991,28,761,30],[991,29,761,31],[991,30,761,32],[991,32,761,34,"fetch_1"],[991,39,761,41],[991,40,761,42,"_request"],[991,48,761,50],[991,50,761,52],[991,54,761,56],[991,55,761,57,"fetch"],[991,60,761,62],[991,62,761,64],[991,68,761,70],[991,70,761,72],[991,73,761,75],[991,77,761,79],[991,78,761,80,"url"],[991,81,761,83],[991,109,761,111],[991,111,761,113],[992,14,762,16,"headers"],[992,21,762,23],[992,23,762,25],[992,27,762,29],[992,28,762,30,"headers"],[992,35,762,37],[993,14,763,16,"body"],[993,18,763,20],[993,20,763,22],[994,16,764,20,"provider"],[994,24,764,28],[995,16,765,20,"id_token"],[995,24,765,28],[995,26,765,30,"token"],[995,31,765,35],[996,16,766,20,"access_token"],[996,28,766,32],[997,16,767,20,"nonce"],[997,21,767,25],[998,16,768,20,"gotrue_meta_security"],[998,36,768,40],[998,38,768,42],[999,18,768,44,"captcha_token"],[999,31,768,57],[999,33,768,59,"options"],[999,40,768,66],[999,45,768,71],[999,49,768,75],[999,53,768,79,"options"],[999,60,768,86],[999,65,768,91],[999,70,768,96],[999,71,768,97],[999,74,768,100],[999,79,768,105],[999,80,768,106],[999,83,768,109,"options"],[999,90,768,116],[999,91,768,117,"captchaToken"],[1000,16,768,130],[1001,14,769,16],[1001,15,769,17],[1002,14,770,16,"xform"],[1002,19,770,21],[1002,21,770,23,"fetch_1"],[1002,28,770,30],[1002,29,770,31,"_sessionResponse"],[1003,12,771,12],[1003,13,771,13],[1003,14,771,14],[1004,12,772,12],[1004,16,772,20,"data"],[1004,20,772,24],[1004,23,772,36,"res"],[1004,26,772,39],[1004,27,772,20,"data"],[1004,31,772,24],[1005,14,772,26,"error"],[1005,19,772,31],[1005,22,772,36,"res"],[1005,25,772,39],[1005,26,772,26,"error"],[1005,31,772,31],[1006,12,773,12],[1006,16,773,16,"error"],[1006,21,773,21],[1006,23,773,23],[1007,14,774,16],[1007,21,774,23],[1008,16,774,25,"data"],[1008,20,774,29],[1008,22,774,31],[1009,18,774,33,"user"],[1009,22,774,37],[1009,24,774,39],[1009,28,774,43],[1010,18,774,45,"session"],[1010,25,774,52],[1010,27,774,54],[1011,16,774,59],[1011,17,774,60],[1012,16,774,62,"error"],[1013,14,774,68],[1013,15,774,69],[1014,12,775,12],[1014,13,775,13],[1014,19,776,17],[1014,23,776,21],[1014,24,776,22,"data"],[1014,28,776,26],[1014,32,776,30],[1014,33,776,31,"data"],[1014,37,776,35],[1014,38,776,36,"session"],[1014,45,776,43],[1014,49,776,47],[1014,50,776,48,"data"],[1014,54,776,52],[1014,55,776,53,"user"],[1014,59,776,57],[1014,61,776,59],[1015,14,777,16],[1015,21,777,23],[1016,16,778,20,"data"],[1016,20,778,24],[1016,22,778,26],[1017,18,778,28,"user"],[1017,22,778,32],[1017,24,778,34],[1017,28,778,38],[1018,18,778,40,"session"],[1018,25,778,47],[1018,27,778,49],[1019,16,778,54],[1019,17,778,55],[1020,16,779,20,"error"],[1020,21,779,25],[1020,23,779,27],[1020,27,779,31,"errors_1"],[1020,35,779,39],[1020,36,779,40,"AuthInvalidTokenResponseError"],[1020,65,779,69],[1020,66,779,70],[1021,14,780,16],[1021,15,780,17],[1022,12,781,12],[1023,12,782,12],[1023,16,782,16,"data"],[1023,20,782,20],[1023,21,782,21,"session"],[1023,28,782,28],[1023,30,782,30],[1024,14,783,16],[1024,20,783,22],[1024,24,783,26],[1024,25,783,27,"_saveSession"],[1024,37,783,39],[1024,38,783,40,"data"],[1024,42,783,44],[1024,43,783,45,"session"],[1024,50,783,52],[1024,51,783,53],[1025,14,784,16],[1025,20,784,22],[1025,24,784,26],[1025,25,784,27,"_notifyAllSubscribers"],[1025,46,784,48],[1025,47,784,49],[1025,58,784,60],[1025,60,784,62,"data"],[1025,64,784,66],[1025,65,784,67,"session"],[1025,72,784,74],[1025,73,784,75],[1026,12,785,12],[1027,12,786,12],[1027,19,786,19],[1028,14,786,21,"data"],[1028,18,786,25],[1029,14,786,27,"error"],[1030,12,786,33],[1030,13,786,34],[1031,10,787,8],[1031,11,787,9],[1031,12,788,8],[1031,19,788,15,"error"],[1031,24,788,20],[1031,26,788,22],[1032,12,789,12],[1032,16,789,16],[1032,17,789,17],[1032,18,789,18],[1032,20,789,20,"errors_1"],[1032,28,789,28],[1032,29,789,29,"isAuthError"],[1032,40,789,40],[1032,42,789,42,"error"],[1032,47,789,47],[1032,48,789,48],[1032,50,789,50],[1033,14,790,16],[1033,21,790,23],[1034,16,790,25,"data"],[1034,20,790,29],[1034,22,790,31],[1035,18,790,33,"user"],[1035,22,790,37],[1035,24,790,39],[1035,28,790,43],[1036,18,790,45,"session"],[1036,25,790,52],[1036,27,790,54],[1037,16,790,59],[1037,17,790,60],[1038,16,790,62,"error"],[1039,14,790,68],[1039,15,790,69],[1040,12,791,12],[1041,12,792,12],[1041,18,792,18,"error"],[1041,23,792,23],[1042,10,793,8],[1043,8,794,4],[1043,9,794,5],[1044,8,794,5],[1044,17,758,10,"signInWithIdToken"],[1044,34,758,27,"signInWithIdToken"],[1044,35,758,27,"_x12"],[1044,39,758,27],[1045,10,758,27],[1045,17,758,27,"_signInWithIdToken"],[1045,35,758,27],[1045,36,758,27,"apply"],[1045,41,758,27],[1045,48,758,27,"arguments"],[1045,57,758,27],[1046,8,758,27],[1047,8,758,27],[1047,15,758,10,"signInWithIdToken"],[1047,32,758,27],[1048,6,758,27],[1049,6,795,4],[1050,0,796,0],[1051,0,797,0],[1052,0,798,0],[1053,0,799,0],[1054,0,800,0],[1055,0,801,0],[1056,0,802,0],[1057,0,803,0],[1058,0,804,0],[1059,0,805,0],[1060,0,806,0],[1061,0,807,0],[1062,0,808,0],[1063,0,809,0],[1064,0,810,0],[1065,0,811,0],[1066,6,795,4],[1067,4,795,4],[1068,6,795,4,"key"],[1068,9,795,4],[1069,6,795,4,"value"],[1069,11,795,4],[1070,8,795,4],[1070,12,795,4,"_signInWithOtp"],[1070,26,795,4],[1070,29,795,4,"_asyncToGenerator"],[1070,46,795,4],[1070,47,812,4],[1070,58,812,24,"credentials"],[1070,69,812,35],[1070,71,812,37],[1071,10,813,8],[1071,14,813,12,"_a"],[1071,16,813,14],[1071,18,813,16,"_b"],[1071,20,813,18],[1071,22,813,20,"_c"],[1071,24,813,22],[1071,26,813,24,"_d"],[1071,28,813,26],[1071,30,813,28,"_e"],[1071,32,813,30],[1072,10,814,8],[1072,14,814,12],[1073,12,815,12],[1073,16,815,16],[1073,23,815,23],[1073,27,815,27,"credentials"],[1073,38,815,38],[1073,40,815,40],[1074,14,816,16],[1074,18,816,24,"email"],[1074,23,816,29],[1074,26,816,43,"credentials"],[1074,37,816,54],[1074,38,816,24,"email"],[1074,43,816,29],[1075,16,816,31,"options"],[1075,23,816,38],[1075,26,816,43,"credentials"],[1075,37,816,54],[1075,38,816,31,"options"],[1075,45,816,38],[1076,14,817,16],[1076,18,817,20,"codeChallenge"],[1076,31,817,33],[1076,34,817,36],[1076,38,817,40],[1077,14,818,16],[1077,18,818,20,"codeChallengeMethod"],[1077,37,818,39],[1077,40,818,42],[1077,44,818,46],[1078,14,819,16],[1078,18,819,20],[1078,22,819,24],[1078,23,819,25,"flowType"],[1078,31,819,33],[1078,36,819,38],[1078,42,819,44],[1078,44,819,46],[1079,16,820,20],[1080,16,820,21],[1080,20,820,21,"_yield6"],[1080,27,820,21],[1080,36,821,65],[1080,37,821,66],[1080,38,821,67],[1080,40,821,69,"helpers_1"],[1080,49,821,78],[1080,50,821,79,"getCodeChallengeAndMethod"],[1080,75,821,104],[1080,77,821,106],[1080,81,821,110],[1080,82,821,111,"storage"],[1080,89,821,118],[1080,91,821,120],[1080,95,821,124],[1080,96,821,125,"storageKey"],[1080,106,821,135],[1080,107,821,136],[1081,16,821,136],[1081,20,821,136,"_yield7"],[1081,27,821,136],[1081,30,821,136,"_slicedToArray"],[1081,44,821,136],[1081,45,821,136,"_yield6"],[1081,52,821,136],[1082,16,821,21,"codeChallenge"],[1082,29,821,34],[1082,32,821,34,"_yield7"],[1082,39,821,34],[1083,16,821,36,"codeChallengeMethod"],[1083,35,821,55],[1083,38,821,55,"_yield7"],[1083,45,821,55],[1084,14,822,16],[1085,14,823,16],[1085,18,823,16,"_yield8"],[1085,25,823,16],[1085,34,823,40],[1085,35,823,41],[1085,36,823,42],[1085,38,823,44,"fetch_1"],[1085,45,823,51],[1085,46,823,52,"_request"],[1085,54,823,60],[1085,56,823,62],[1085,60,823,66],[1085,61,823,67,"fetch"],[1085,66,823,72],[1085,68,823,74],[1085,74,823,80],[1085,76,823,82],[1085,79,823,85],[1085,83,823,89],[1085,84,823,90,"url"],[1085,87,823,93],[1085,93,823,99],[1085,95,823,101],[1086,18,824,20,"headers"],[1086,25,824,27],[1086,27,824,29],[1086,31,824,33],[1086,32,824,34,"headers"],[1086,39,824,41],[1087,18,825,20,"body"],[1087,22,825,24],[1087,24,825,26],[1088,20,826,24,"email"],[1088,25,826,29],[1089,20,827,24,"data"],[1089,24,827,28],[1089,26,827,30],[1089,27,827,31,"_a"],[1089,29,827,33],[1089,32,827,36,"options"],[1089,39,827,43],[1089,44,827,48],[1089,48,827,52],[1089,52,827,56,"options"],[1089,59,827,63],[1089,64,827,68],[1089,69,827,73],[1089,70,827,74],[1089,73,827,77],[1089,78,827,82],[1089,79,827,83],[1089,82,827,86,"options"],[1089,89,827,93],[1089,90,827,94,"data"],[1089,94,827,98],[1089,100,827,104],[1089,104,827,108],[1089,108,827,112,"_a"],[1089,110,827,114],[1089,115,827,119],[1089,120,827,124],[1089,121,827,125],[1089,124,827,128,"_a"],[1089,126,827,130],[1089,129,827,133],[1089,130,827,134],[1089,131,827,135],[1090,20,828,24,"create_user"],[1090,31,828,35],[1090,33,828,37],[1090,34,828,38,"_b"],[1090,36,828,40],[1090,39,828,43,"options"],[1090,46,828,50],[1090,51,828,55],[1090,55,828,59],[1090,59,828,63,"options"],[1090,66,828,70],[1090,71,828,75],[1090,76,828,80],[1090,77,828,81],[1090,80,828,84],[1090,85,828,89],[1090,86,828,90],[1090,89,828,93,"options"],[1090,96,828,100],[1090,97,828,101,"shouldCreateUser"],[1090,113,828,117],[1090,119,828,123],[1090,123,828,127],[1090,127,828,131,"_b"],[1090,129,828,133],[1090,134,828,138],[1090,139,828,143],[1090,140,828,144],[1090,143,828,147,"_b"],[1090,145,828,149],[1090,148,828,152],[1090,152,828,156],[1091,20,829,24,"gotrue_meta_security"],[1091,40,829,44],[1091,42,829,46],[1092,22,829,48,"captcha_token"],[1092,35,829,61],[1092,37,829,63,"options"],[1092,44,829,70],[1092,49,829,75],[1092,53,829,79],[1092,57,829,83,"options"],[1092,64,829,90],[1092,69,829,95],[1092,74,829,100],[1092,75,829,101],[1092,78,829,104],[1092,83,829,109],[1092,84,829,110],[1092,87,829,113,"options"],[1092,94,829,120],[1092,95,829,121,"captchaToken"],[1093,20,829,134],[1093,21,829,135],[1094,20,830,24,"code_challenge"],[1094,34,830,38],[1094,36,830,40,"codeChallenge"],[1094,49,830,53],[1095,20,831,24,"code_challenge_method"],[1095,41,831,45],[1095,43,831,47,"codeChallengeMethod"],[1096,18,832,20],[1096,19,832,21],[1097,18,833,20,"redirectTo"],[1097,28,833,30],[1097,30,833,32,"options"],[1097,37,833,39],[1097,42,833,44],[1097,46,833,48],[1097,50,833,52,"options"],[1097,57,833,59],[1097,62,833,64],[1097,67,833,69],[1097,68,833,70],[1097,71,833,73],[1097,76,833,78],[1097,77,833,79],[1097,80,833,82,"options"],[1097,87,833,89],[1097,88,833,90,"emailRedirectTo"],[1098,16,834,16],[1098,17,834,17],[1098,18,834,18],[1099,16,823,24,"error"],[1099,21,823,29],[1099,24,823,29,"_yield8"],[1099,31,823,29],[1099,32,823,24,"error"],[1099,37,823,29],[1100,14,835,16],[1100,21,835,23],[1101,16,835,25,"data"],[1101,20,835,29],[1101,22,835,31],[1102,18,835,33,"user"],[1102,22,835,37],[1102,24,835,39],[1102,28,835,43],[1103,18,835,45,"session"],[1103,25,835,52],[1103,27,835,54],[1104,16,835,59],[1104,17,835,60],[1105,16,835,62,"error"],[1106,14,835,68],[1106,15,835,69],[1107,12,836,12],[1108,12,837,12],[1108,16,837,16],[1108,23,837,23],[1108,27,837,27,"credentials"],[1108,38,837,38],[1108,40,837,40],[1109,14,838,16],[1109,18,838,24,"phone"],[1109,23,838,29],[1109,26,838,43,"credentials"],[1109,37,838,54],[1109,38,838,24,"phone"],[1109,43,838,29],[1110,16,838,31,"options"],[1110,25,838,38],[1110,28,838,43,"credentials"],[1110,39,838,54],[1110,40,838,31,"options"],[1110,47,838,38],[1111,14,839,16],[1111,18,839,16,"_yield9"],[1111,25,839,16],[1111,34,839,46],[1111,35,839,47],[1111,36,839,48],[1111,38,839,50,"fetch_1"],[1111,45,839,57],[1111,46,839,58,"_request"],[1111,54,839,66],[1111,56,839,68],[1111,60,839,72],[1111,61,839,73,"fetch"],[1111,66,839,78],[1111,68,839,80],[1111,74,839,86],[1111,76,839,88],[1111,79,839,91],[1111,83,839,95],[1111,84,839,96,"url"],[1111,87,839,99],[1111,93,839,105],[1111,95,839,107],[1112,18,840,20,"headers"],[1112,25,840,27],[1112,27,840,29],[1112,31,840,33],[1112,32,840,34,"headers"],[1112,39,840,41],[1113,18,841,20,"body"],[1113,22,841,24],[1113,24,841,26],[1114,20,842,24,"phone"],[1114,25,842,29],[1115,20,843,24,"data"],[1115,24,843,28],[1115,26,843,30],[1115,27,843,31,"_c"],[1115,29,843,33],[1115,32,843,36,"options"],[1115,41,843,43],[1115,46,843,48],[1115,50,843,52],[1115,54,843,56,"options"],[1115,63,843,63],[1115,68,843,68],[1115,73,843,73],[1115,74,843,74],[1115,77,843,77],[1115,82,843,82],[1115,83,843,83],[1115,86,843,86,"options"],[1115,95,843,93],[1115,96,843,94,"data"],[1115,100,843,98],[1115,106,843,104],[1115,110,843,108],[1115,114,843,112,"_c"],[1115,116,843,114],[1115,121,843,119],[1115,126,843,124],[1115,127,843,125],[1115,130,843,128,"_c"],[1115,132,843,130],[1115,135,843,133],[1115,136,843,134],[1115,137,843,135],[1116,20,844,24,"create_user"],[1116,31,844,35],[1116,33,844,37],[1116,34,844,38,"_d"],[1116,36,844,40],[1116,39,844,43,"options"],[1116,48,844,50],[1116,53,844,55],[1116,57,844,59],[1116,61,844,63,"options"],[1116,70,844,70],[1116,75,844,75],[1116,80,844,80],[1116,81,844,81],[1116,84,844,84],[1116,89,844,89],[1116,90,844,90],[1116,93,844,93,"options"],[1116,102,844,100],[1116,103,844,101,"shouldCreateUser"],[1116,119,844,117],[1116,125,844,123],[1116,129,844,127],[1116,133,844,131,"_d"],[1116,135,844,133],[1116,140,844,138],[1116,145,844,143],[1116,146,844,144],[1116,149,844,147,"_d"],[1116,151,844,149],[1116,154,844,152],[1116,158,844,156],[1117,20,845,24,"gotrue_meta_security"],[1117,40,845,44],[1117,42,845,46],[1118,22,845,48,"captcha_token"],[1118,35,845,61],[1118,37,845,63,"options"],[1118,46,845,70],[1118,51,845,75],[1118,55,845,79],[1118,59,845,83,"options"],[1118,68,845,90],[1118,73,845,95],[1118,78,845,100],[1118,79,845,101],[1118,82,845,104],[1118,87,845,109],[1118,88,845,110],[1118,91,845,113,"options"],[1118,100,845,120],[1118,101,845,121,"captchaToken"],[1119,20,845,134],[1119,21,845,135],[1120,20,846,24,"channel"],[1120,27,846,31],[1120,29,846,33],[1120,30,846,34,"_e"],[1120,32,846,36],[1120,35,846,39,"options"],[1120,44,846,46],[1120,49,846,51],[1120,53,846,55],[1120,57,846,59,"options"],[1120,66,846,66],[1120,71,846,71],[1120,76,846,76],[1120,77,846,77],[1120,80,846,80],[1120,85,846,85],[1120,86,846,86],[1120,89,846,89,"options"],[1120,98,846,96],[1120,99,846,97,"channel"],[1120,106,846,104],[1120,112,846,110],[1120,116,846,114],[1120,120,846,118,"_e"],[1120,122,846,120],[1120,127,846,125],[1120,132,846,130],[1120,133,846,131],[1120,136,846,134,"_e"],[1120,138,846,136],[1120,141,846,139],[1121,18,847,20],[1122,16,848,16],[1122,17,848,17],[1122,18,848,18],[1123,16,839,24,"data"],[1123,20,839,28],[1123,23,839,28,"_yield9"],[1123,30,839,28],[1123,31,839,24,"data"],[1123,35,839,28],[1124,16,839,30,"error"],[1124,22,839,35],[1124,25,839,35,"_yield9"],[1124,32,839,35],[1124,33,839,30,"error"],[1124,38,839,35],[1125,14,849,16],[1125,21,849,23],[1126,16,849,25,"data"],[1126,20,849,29],[1126,22,849,31],[1127,18,849,33,"user"],[1127,22,849,37],[1127,24,849,39],[1127,28,849,43],[1128,18,849,45,"session"],[1128,25,849,52],[1128,27,849,54],[1128,31,849,58],[1129,18,849,60,"messageId"],[1129,27,849,69],[1129,29,849,71,"data"],[1129,33,849,75],[1129,38,849,80],[1129,42,849,84],[1129,46,849,88,"data"],[1129,50,849,92],[1129,55,849,97],[1129,60,849,102],[1129,61,849,103],[1129,64,849,106],[1129,69,849,111],[1129,70,849,112],[1129,73,849,115,"data"],[1129,77,849,119],[1129,78,849,120,"message_id"],[1130,16,849,131],[1130,17,849,132],[1131,16,849,134,"error"],[1131,21,849,139],[1131,23,849,134,"error"],[1132,14,849,140],[1132,15,849,141],[1133,12,850,12],[1134,12,851,12],[1134,18,851,18],[1134,22,851,22,"errors_1"],[1134,30,851,30],[1134,31,851,31,"AuthInvalidCredentialsError"],[1134,58,851,58],[1134,59,851,59],[1134,110,851,110],[1134,111,851,111],[1135,10,852,8],[1135,11,852,9],[1135,12,853,8],[1135,19,853,15,"error"],[1135,24,853,20],[1135,26,853,22],[1136,12,854,12],[1136,16,854,16],[1136,17,854,17],[1136,18,854,18],[1136,20,854,20,"errors_1"],[1136,28,854,28],[1136,29,854,29,"isAuthError"],[1136,40,854,40],[1136,42,854,42,"error"],[1136,47,854,47],[1136,48,854,48],[1136,50,854,50],[1137,14,855,16],[1137,21,855,23],[1138,16,855,25,"data"],[1138,20,855,29],[1138,22,855,31],[1139,18,855,33,"user"],[1139,22,855,37],[1139,24,855,39],[1139,28,855,43],[1140,18,855,45,"session"],[1140,25,855,52],[1140,27,855,54],[1141,16,855,59],[1141,17,855,60],[1142,16,855,62,"error"],[1143,14,855,68],[1143,15,855,69],[1144,12,856,12],[1145,12,857,12],[1145,18,857,18,"error"],[1145,23,857,23],[1146,10,858,8],[1147,8,859,4],[1147,9,859,5],[1148,8,859,5],[1148,17,812,10,"signInWithOtp"],[1148,30,812,23,"signInWithOtp"],[1148,31,812,23,"_x13"],[1148,35,812,23],[1149,10,812,23],[1149,17,812,23,"_signInWithOtp"],[1149,31,812,23],[1149,32,812,23,"apply"],[1149,37,812,23],[1149,44,812,23,"arguments"],[1149,53,812,23],[1150,8,812,23],[1151,8,812,23],[1151,15,812,10,"signInWithOtp"],[1151,28,812,23],[1152,6,812,23],[1153,6,860,4],[1154,0,861,0],[1155,0,862,0],[1156,6,860,4],[1157,4,860,4],[1158,6,860,4,"key"],[1158,9,860,4],[1159,6,860,4,"value"],[1159,11,860,4],[1160,8,860,4],[1160,12,860,4,"_verifyOtp"],[1160,22,860,4],[1160,25,860,4,"_asyncToGenerator"],[1160,42,860,4],[1160,43,863,4],[1160,54,863,20,"params"],[1160,60,863,26],[1160,62,863,28],[1161,10,864,8],[1161,14,864,12,"_a"],[1161,16,864,14],[1161,18,864,16,"_b"],[1161,20,864,18],[1162,10,865,8],[1162,14,865,12],[1163,12,866,12],[1163,16,866,16,"redirectTo"],[1163,26,866,26],[1163,29,866,29,"undefined"],[1163,38,866,38],[1164,12,867,12],[1164,16,867,16,"captchaToken"],[1164,28,867,28],[1164,31,867,31,"undefined"],[1164,40,867,40],[1165,12,868,12],[1165,16,868,16],[1165,25,868,25],[1165,29,868,29,"params"],[1165,35,868,35],[1165,37,868,37],[1166,14,869,16,"redirectTo"],[1166,24,869,26],[1166,27,869,29],[1166,28,869,30,"_a"],[1166,30,869,32],[1166,33,869,35,"params"],[1166,39,869,41],[1166,40,869,42,"options"],[1166,47,869,49],[1166,53,869,55],[1166,57,869,59],[1166,61,869,63,"_a"],[1166,63,869,65],[1166,68,869,70],[1166,73,869,75],[1166,74,869,76],[1166,77,869,79],[1166,82,869,84],[1166,83,869,85],[1166,86,869,88,"_a"],[1166,88,869,90],[1166,89,869,91,"redirectTo"],[1166,99,869,101],[1167,14,870,16,"captchaToken"],[1167,26,870,28],[1167,29,870,31],[1167,30,870,32,"_b"],[1167,32,870,34],[1167,35,870,37,"params"],[1167,41,870,43],[1167,42,870,44,"options"],[1167,49,870,51],[1167,55,870,57],[1167,59,870,61],[1167,63,870,65,"_b"],[1167,65,870,67],[1167,70,870,72],[1167,75,870,77],[1167,76,870,78],[1167,79,870,81],[1167,84,870,86],[1167,85,870,87],[1167,88,870,90,"_b"],[1167,90,870,92],[1167,91,870,93,"captchaToken"],[1167,103,870,105],[1168,12,871,12],[1169,12,872,12],[1169,16,872,12,"_yield0"],[1169,23,872,12],[1169,32,872,42],[1169,33,872,43],[1169,34,872,44],[1169,36,872,46,"fetch_1"],[1169,43,872,53],[1169,44,872,54,"_request"],[1169,52,872,62],[1169,54,872,64],[1169,58,872,68],[1169,59,872,69,"fetch"],[1169,64,872,74],[1169,66,872,76],[1169,72,872,82],[1169,74,872,84],[1169,77,872,87],[1169,81,872,91],[1169,82,872,92,"url"],[1169,85,872,95],[1169,94,872,104],[1169,96,872,106],[1170,16,873,16,"headers"],[1170,23,873,23],[1170,25,873,25],[1170,29,873,29],[1170,30,873,30,"headers"],[1170,37,873,37],[1171,16,874,16,"body"],[1171,20,874,20],[1171,22,874,22,"Object"],[1171,28,874,28],[1171,29,874,29,"assign"],[1171,35,874,35],[1171,36,874,36,"Object"],[1171,42,874,42],[1171,43,874,43,"assign"],[1171,49,874,49],[1171,50,874,50],[1171,51,874,51],[1171,52,874,52],[1171,54,874,54,"params"],[1171,60,874,60],[1171,61,874,61],[1171,63,874,63],[1172,18,874,65,"gotrue_meta_security"],[1172,38,874,85],[1172,40,874,87],[1173,20,874,89,"captcha_token"],[1173,33,874,102],[1173,35,874,104,"captchaToken"],[1174,18,874,117],[1175,16,874,119],[1175,17,874,120],[1175,18,874,121],[1176,16,875,16,"redirectTo"],[1176,26,875,26],[1177,16,876,16,"xform"],[1177,21,876,21],[1177,23,876,23,"fetch_1"],[1177,30,876,30],[1177,31,876,31,"_sessionResponse"],[1178,14,877,12],[1178,15,877,13],[1178,16,877,14],[1179,14,872,20,"data"],[1179,18,872,24],[1179,21,872,24,"_yield0"],[1179,28,872,24],[1179,29,872,20,"data"],[1179,33,872,24],[1180,14,872,26,"error"],[1180,19,872,31],[1180,22,872,31,"_yield0"],[1180,29,872,31],[1180,30,872,26,"error"],[1180,35,872,31],[1181,12,878,12],[1181,16,878,16,"error"],[1181,21,878,21],[1181,23,878,23],[1182,14,879,16],[1182,20,879,22,"error"],[1182,25,879,27],[1183,12,880,12],[1184,12,881,12],[1184,16,881,16],[1184,17,881,17,"data"],[1184,21,881,21],[1184,23,881,23],[1185,14,882,16],[1185,20,882,22],[1185,24,882,26,"Error"],[1185,29,882,31],[1185,30,882,32],[1185,72,882,74],[1185,73,882,75],[1186,12,883,12],[1187,12,884,12],[1187,16,884,18,"session"],[1187,23,884,25],[1187,26,884,28,"data"],[1187,30,884,32],[1187,31,884,33,"session"],[1187,38,884,40],[1188,12,885,12],[1188,16,885,18,"user"],[1188,20,885,22],[1188,23,885,25,"data"],[1188,27,885,29],[1188,28,885,30,"user"],[1188,32,885,34],[1189,12,886,12],[1189,16,886,16,"session"],[1189,23,886,23],[1189,28,886,28],[1189,32,886,32],[1189,36,886,36,"session"],[1189,43,886,43],[1189,48,886,48],[1189,53,886,53],[1189,54,886,54],[1189,57,886,57],[1189,62,886,62],[1189,63,886,63],[1189,66,886,66,"session"],[1189,73,886,73],[1189,74,886,74,"access_token"],[1189,86,886,86],[1189,88,886,88],[1190,14,887,16],[1190,20,887,22],[1190,24,887,26],[1190,25,887,27,"_saveSession"],[1190,37,887,39],[1190,38,887,40,"session"],[1190,45,887,47],[1190,46,887,48],[1191,14,888,16],[1191,20,888,22],[1191,24,888,26],[1191,25,888,27,"_notifyAllSubscribers"],[1191,46,888,48],[1191,47,888,49,"params"],[1191,53,888,55],[1191,54,888,56,"type"],[1191,58,888,60],[1191,62,888,64],[1191,72,888,74],[1191,75,888,77],[1191,94,888,96],[1191,97,888,99],[1191,108,888,110],[1191,110,888,112,"session"],[1191,117,888,119],[1191,118,888,120],[1192,12,889,12],[1193,12,890,12],[1193,19,890,19],[1194,14,890,21,"data"],[1194,18,890,25],[1194,20,890,27],[1195,16,890,29,"user"],[1195,20,890,33],[1196,16,890,35,"session"],[1197,14,890,43],[1197,15,890,44],[1198,14,890,46,"error"],[1198,19,890,51],[1198,21,890,53],[1199,12,890,58],[1199,13,890,59],[1200,10,891,8],[1200,11,891,9],[1200,12,892,8],[1200,19,892,15,"error"],[1200,24,892,20],[1200,26,892,22],[1201,12,893,12],[1201,16,893,16],[1201,17,893,17],[1201,18,893,18],[1201,20,893,20,"errors_1"],[1201,28,893,28],[1201,29,893,29,"isAuthError"],[1201,40,893,40],[1201,42,893,42,"error"],[1201,47,893,47],[1201,48,893,48],[1201,50,893,50],[1202,14,894,16],[1202,21,894,23],[1203,16,894,25,"data"],[1203,20,894,29],[1203,22,894,31],[1204,18,894,33,"user"],[1204,22,894,37],[1204,24,894,39],[1204,28,894,43],[1205,18,894,45,"session"],[1205,25,894,52],[1205,27,894,54],[1206,16,894,59],[1206,17,894,60],[1207,16,894,62,"error"],[1208,14,894,68],[1208,15,894,69],[1209,12,895,12],[1210,12,896,12],[1210,18,896,18,"error"],[1210,23,896,23],[1211,10,897,8],[1212,8,898,4],[1212,9,898,5],[1213,8,898,5],[1213,17,863,10,"verifyOtp"],[1213,26,863,19,"verifyOtp"],[1213,27,863,19,"_x14"],[1213,31,863,19],[1214,10,863,19],[1214,17,863,19,"_verifyOtp"],[1214,27,863,19],[1214,28,863,19,"apply"],[1214,33,863,19],[1214,40,863,19,"arguments"],[1214,49,863,19],[1215,8,863,19],[1216,8,863,19],[1216,15,863,10,"verifyOtp"],[1216,24,863,19],[1217,6,863,19],[1218,6,899,4],[1219,0,900,0],[1220,0,901,0],[1221,0,902,0],[1222,0,903,0],[1223,0,904,0],[1224,0,905,0],[1225,0,906,0],[1226,0,907,0],[1227,0,908,0],[1228,0,909,0],[1229,0,910,0],[1230,0,911,0],[1231,0,912,0],[1232,6,899,4],[1233,4,899,4],[1234,6,899,4,"key"],[1234,9,899,4],[1235,6,899,4,"value"],[1235,11,899,4],[1236,8,899,4],[1236,12,899,4,"_signInWithSSO"],[1236,26,899,4],[1236,29,899,4,"_asyncToGenerator"],[1236,46,899,4],[1236,47,913,4],[1236,58,913,24,"params"],[1236,64,913,30],[1236,66,913,32],[1237,10,914,8],[1237,14,914,12,"_a"],[1237,16,914,14],[1237,18,914,16,"_b"],[1237,20,914,18],[1237,22,914,20,"_c"],[1237,24,914,22],[1238,10,915,8],[1238,14,915,12],[1239,12,916,12],[1239,16,916,16,"codeChallenge"],[1239,29,916,29],[1239,32,916,32],[1239,36,916,36],[1240,12,917,12],[1240,16,917,16,"codeChallengeMethod"],[1240,35,917,35],[1240,38,917,38],[1240,42,917,42],[1241,12,918,12],[1241,16,918,16],[1241,20,918,20],[1241,21,918,21,"flowType"],[1241,29,918,29],[1241,34,918,34],[1241,40,918,40],[1241,42,918,42],[1242,14,919,16],[1243,14,919,17],[1243,18,919,17,"_yield1"],[1243,25,919,17],[1243,34,920,61],[1243,35,920,62],[1243,36,920,63],[1243,38,920,65,"helpers_1"],[1243,47,920,74],[1243,48,920,75,"getCodeChallengeAndMethod"],[1243,73,920,100],[1243,75,920,102],[1243,79,920,106],[1243,80,920,107,"storage"],[1243,87,920,114],[1243,89,920,116],[1243,93,920,120],[1243,94,920,121,"storageKey"],[1243,104,920,131],[1243,105,920,132],[1244,14,920,132],[1244,18,920,132,"_yield10"],[1244,26,920,132],[1244,29,920,132,"_slicedToArray"],[1244,43,920,132],[1244,44,920,132,"_yield1"],[1244,51,920,132],[1245,14,920,17,"codeChallenge"],[1245,27,920,30],[1245,30,920,30,"_yield10"],[1245,38,920,30],[1246,14,920,32,"codeChallengeMethod"],[1246,33,920,51],[1246,36,920,51,"_yield10"],[1246,44,920,51],[1247,12,921,12],[1248,12,922,12],[1248,25,922,25],[1248,26,922,26],[1248,27,922,27],[1248,29,922,29,"fetch_1"],[1248,36,922,36],[1248,37,922,37,"_request"],[1248,45,922,45],[1248,47,922,47],[1248,51,922,51],[1248,52,922,52,"fetch"],[1248,57,922,57],[1248,59,922,59],[1248,65,922,65],[1248,67,922,67],[1248,70,922,70],[1248,74,922,74],[1248,75,922,75,"url"],[1248,78,922,78],[1248,84,922,84],[1248,86,922,86],[1249,14,923,16,"body"],[1249,18,923,20],[1249,20,923,22,"Object"],[1249,26,923,28],[1249,27,923,29,"assign"],[1249,33,923,35],[1249,34,923,36,"Object"],[1249,40,923,42],[1249,41,923,43,"assign"],[1249,47,923,49],[1249,48,923,50,"Object"],[1249,54,923,56],[1249,55,923,57,"assign"],[1249,61,923,63],[1249,62,923,64,"Object"],[1249,68,923,70],[1249,69,923,71,"assign"],[1249,75,923,77],[1249,76,923,78,"Object"],[1249,82,923,84],[1249,83,923,85,"assign"],[1249,89,923,91],[1249,90,923,92],[1249,91,923,93],[1249,92,923,94],[1249,94,923,97],[1249,106,923,109],[1249,110,923,113,"params"],[1249,116,923,119],[1249,119,923,122],[1250,16,923,124,"provider_id"],[1250,27,923,135],[1250,29,923,137,"params"],[1250,35,923,143],[1250,36,923,144,"providerId"],[1251,14,923,155],[1251,15,923,156],[1251,18,923,159],[1251,22,923,164],[1251,23,923,165],[1251,25,923,168],[1251,33,923,176],[1251,37,923,180,"params"],[1251,43,923,186],[1251,46,923,189],[1252,16,923,191,"domain"],[1252,22,923,197],[1252,24,923,199,"params"],[1252,30,923,205],[1252,31,923,206,"domain"],[1253,14,923,213],[1253,15,923,214],[1253,18,923,217],[1253,22,923,222],[1253,23,923,223],[1253,25,923,225],[1254,16,923,227,"redirect_to"],[1254,27,923,238],[1254,29,923,240],[1254,30,923,241,"_b"],[1254,32,923,243],[1254,35,923,246],[1254,36,923,247,"_a"],[1254,38,923,249],[1254,41,923,252,"params"],[1254,47,923,258],[1254,48,923,259,"options"],[1254,55,923,266],[1254,61,923,272],[1254,65,923,276],[1254,69,923,280,"_a"],[1254,71,923,282],[1254,76,923,287],[1254,81,923,292],[1254,82,923,293],[1254,85,923,296],[1254,90,923,301],[1254,91,923,302],[1254,94,923,305,"_a"],[1254,96,923,307],[1254,97,923,308,"redirectTo"],[1254,107,923,318],[1254,113,923,324],[1254,117,923,328],[1254,121,923,332,"_b"],[1254,123,923,334],[1254,128,923,339],[1254,133,923,344],[1254,134,923,345],[1254,137,923,348,"_b"],[1254,139,923,350],[1254,142,923,353,"undefined"],[1255,14,923,363],[1255,15,923,364],[1255,16,923,365],[1255,18,923,368],[1255,19,923,369],[1255,20,923,370,"_c"],[1255,22,923,372],[1255,25,923,375,"params"],[1255,31,923,381],[1255,36,923,386],[1255,40,923,390],[1255,44,923,394,"params"],[1255,50,923,400],[1255,55,923,405],[1255,60,923,410],[1255,61,923,411],[1255,64,923,414],[1255,69,923,419],[1255,70,923,420],[1255,73,923,423,"params"],[1255,79,923,429],[1255,80,923,430,"options"],[1255,87,923,437],[1255,93,923,443],[1255,97,923,447],[1255,101,923,451,"_c"],[1255,103,923,453],[1255,108,923,458],[1255,113,923,463],[1255,114,923,464],[1255,117,923,467],[1255,122,923,472],[1255,123,923,473],[1255,126,923,476,"_c"],[1255,128,923,478],[1255,129,923,479,"captchaToken"],[1255,141,923,491],[1255,145,924,22],[1256,16,924,24,"gotrue_meta_security"],[1256,36,924,44],[1256,38,924,46],[1257,18,924,48,"captcha_token"],[1257,31,924,61],[1257,33,924,63,"params"],[1257,39,924,69],[1257,40,924,70,"options"],[1257,47,924,77],[1257,48,924,78,"captchaToken"],[1258,16,924,91],[1259,14,924,93],[1259,15,924,94],[1259,18,925,22],[1259,22,925,27],[1259,23,925,28],[1259,25,925,30],[1260,16,925,32,"skip_http_redirect"],[1260,34,925,50],[1260,36,925,52],[1260,40,925,56],[1261,16,925,58,"code_challenge"],[1261,30,925,72],[1261,32,925,74,"codeChallenge"],[1261,45,925,87],[1262,16,925,89,"code_challenge_method"],[1262,37,925,110],[1262,39,925,112,"codeChallengeMethod"],[1263,14,925,132],[1263,15,925,133],[1263,16,925,134],[1264,14,926,16,"headers"],[1264,21,926,23],[1264,23,926,25],[1264,27,926,29],[1264,28,926,30,"headers"],[1264,35,926,37],[1265,14,927,16,"xform"],[1265,19,927,21],[1265,21,927,23,"fetch_1"],[1265,28,927,30],[1265,29,927,31,"_ssoResponse"],[1266,12,928,12],[1266,13,928,13],[1266,14,928,14],[1267,10,929,8],[1267,11,929,9],[1267,12,930,8],[1267,19,930,15,"error"],[1267,24,930,20],[1267,26,930,22],[1268,12,931,12],[1268,16,931,16],[1268,17,931,17],[1268,18,931,18],[1268,20,931,20,"errors_1"],[1268,28,931,28],[1268,29,931,29,"isAuthError"],[1268,40,931,40],[1268,42,931,42,"error"],[1268,47,931,47],[1268,48,931,48],[1268,50,931,50],[1269,14,932,16],[1269,21,932,23],[1270,16,932,25,"data"],[1270,20,932,29],[1270,22,932,31],[1270,26,932,35],[1271,16,932,37,"error"],[1272,14,932,43],[1272,15,932,44],[1273,12,933,12],[1274,12,934,12],[1274,18,934,18,"error"],[1274,23,934,23],[1275,10,935,8],[1276,8,936,4],[1276,9,936,5],[1277,8,936,5],[1277,17,913,10,"signInWithSSO"],[1277,30,913,23,"signInWithSSO"],[1277,31,913,23,"_x15"],[1277,35,913,23],[1278,10,913,23],[1278,17,913,23,"_signInWithSSO"],[1278,31,913,23],[1278,32,913,23,"apply"],[1278,37,913,23],[1278,44,913,23,"arguments"],[1278,53,913,23],[1279,8,913,23],[1280,8,913,23],[1280,15,913,10,"signInWithSSO"],[1280,28,913,23],[1281,6,913,23],[1282,6,937,4],[1283,0,938,0],[1284,0,939,0],[1285,0,940,0],[1286,6,937,4],[1287,4,937,4],[1288,6,937,4,"key"],[1288,9,937,4],[1289,6,937,4,"value"],[1289,11,937,4],[1290,8,937,4],[1290,12,937,4,"_reauthenticate2"],[1290,28,937,4],[1290,31,937,4,"_asyncToGenerator"],[1290,48,937,4],[1290,49,941,4],[1290,62,941,27],[1291,10,941,27],[1291,14,941,27,"_this5"],[1291,20,941,27],[1292,10,942,8],[1292,16,942,14],[1292,20,942,18],[1292,21,942,19,"initializePromise"],[1292,38,942,36],[1293,10,943,8],[1293,23,943,21],[1293,27,943,25],[1293,28,943,26,"_acquireLock"],[1293,40,943,38],[1293,41,943,39],[1293,42,943,40],[1293,43,943,41],[1293,58,943,41,"_asyncToGenerator"],[1293,75,943,41],[1293,76,943,43],[1293,89,943,55],[1294,12,944,12],[1294,25,944,25,"_this5"],[1294,31,944,29],[1294,32,944,30,"_reauthenticate"],[1294,47,944,45],[1294,48,944,46],[1294,49,944,47],[1295,10,945,8],[1295,11,945,9],[1295,13,945,10],[1296,8,946,4],[1296,9,946,5],[1297,8,946,5],[1297,17,941,10,"reauthenticate"],[1297,31,941,24,"reauthenticate"],[1297,32,941,24],[1298,10,941,24],[1298,17,941,24,"_reauthenticate2"],[1298,33,941,24],[1298,34,941,24,"apply"],[1298,39,941,24],[1298,46,941,24,"arguments"],[1298,55,941,24],[1299,8,941,24],[1300,8,941,24],[1300,15,941,10,"reauthenticate"],[1300,29,941,24],[1301,6,941,24],[1302,4,941,24],[1303,6,941,24,"key"],[1303,9,941,24],[1304,6,941,24,"value"],[1304,11,941,24],[1305,8,941,24],[1305,12,941,24,"_reauthenticate3"],[1305,28,941,24],[1305,31,941,24,"_asyncToGenerator"],[1305,48,941,24],[1305,49,947,4],[1305,62,947,28],[1306,10,947,28],[1306,14,947,28,"_this6"],[1306,20,947,28],[1307,10,948,8],[1307,14,948,12],[1308,12,949,12],[1308,25,949,25],[1308,29,949,29],[1308,30,949,30,"_useSession"],[1308,41,949,41],[1309,14,949,41],[1309,18,949,41,"_ref7"],[1309,23,949,41],[1309,26,949,41,"_asyncToGenerator"],[1309,43,949,41],[1309,44,949,42],[1309,55,949,49,"result"],[1309,61,949,55],[1309,63,949,60],[1310,16,950,16],[1310,20,950,32,"session"],[1310,27,950,39],[1310,30,950,68,"result"],[1310,36,950,74],[1310,37,950,24,"data"],[1310,41,950,28],[1310,42,950,32,"session"],[1310,49,950,39],[1311,18,950,50,"sessionError"],[1311,30,950,62],[1311,33,950,68,"result"],[1311,39,950,74],[1311,40,950,43,"error"],[1311,45,950,48],[1312,16,951,16],[1312,20,951,20,"sessionError"],[1312,32,951,32],[1312,34,952,20],[1312,40,952,26,"sessionError"],[1312,52,952,38],[1313,16,953,16],[1313,20,953,20],[1313,21,953,21,"session"],[1313,28,953,28],[1313,30,954,20],[1313,36,954,26],[1313,40,954,30,"errors_1"],[1313,48,954,38],[1313,49,954,39,"AuthSessionMissingError"],[1313,72,954,62],[1313,73,954,63],[1313,74,954,64],[1314,16,955,16],[1314,20,955,16,"_yield11"],[1314,28,955,16],[1314,37,955,40],[1314,38,955,41],[1314,39,955,42],[1314,41,955,44,"fetch_1"],[1314,48,955,51],[1314,49,955,52,"_request"],[1314,57,955,60],[1314,59,955,62,"_this6"],[1314,65,955,66],[1314,66,955,67,"fetch"],[1314,71,955,72],[1314,73,955,74],[1314,78,955,79],[1314,80,955,81],[1314,83,955,84,"_this6"],[1314,89,955,88],[1314,90,955,89,"url"],[1314,93,955,92],[1314,110,955,109],[1314,112,955,111],[1315,20,956,20,"headers"],[1315,27,956,27],[1315,29,956,29,"_this6"],[1315,35,956,33],[1315,36,956,34,"headers"],[1315,43,956,41],[1316,20,957,20,"jwt"],[1316,23,957,23],[1316,25,957,25,"session"],[1316,32,957,32],[1316,33,957,33,"access_token"],[1317,18,958,16],[1317,19,958,17],[1317,20,958,18],[1318,18,955,24,"error"],[1318,23,955,29],[1318,26,955,29,"_yield11"],[1318,34,955,29],[1318,35,955,24,"error"],[1318,40,955,29],[1319,16,959,16],[1319,23,959,23],[1320,18,959,25,"data"],[1320,22,959,29],[1320,24,959,31],[1321,20,959,33,"user"],[1321,24,959,37],[1321,26,959,39],[1321,30,959,43],[1322,20,959,45,"session"],[1322,27,959,52],[1322,29,959,54],[1323,18,959,59],[1323,19,959,60],[1324,18,959,62,"error"],[1325,16,959,68],[1325,17,959,69],[1326,14,960,12],[1326,15,960,13],[1327,14,960,13],[1327,31,960,13,"_x16"],[1327,35,960,13],[1328,16,960,13],[1328,23,960,13,"_ref7"],[1328,28,960,13],[1328,29,960,13,"apply"],[1328,34,960,13],[1328,41,960,13,"arguments"],[1328,50,960,13],[1329,14,960,13],[1330,12,960,13],[1330,16,960,14],[1331,10,961,8],[1331,11,961,9],[1331,12,962,8],[1331,19,962,15,"error"],[1331,24,962,20],[1331,26,962,22],[1332,12,963,12],[1332,16,963,16],[1332,17,963,17],[1332,18,963,18],[1332,20,963,20,"errors_1"],[1332,28,963,28],[1332,29,963,29,"isAuthError"],[1332,40,963,40],[1332,42,963,42,"error"],[1332,47,963,47],[1332,48,963,48],[1332,50,963,50],[1333,14,964,16],[1333,21,964,23],[1334,16,964,25,"data"],[1334,20,964,29],[1334,22,964,31],[1335,18,964,33,"user"],[1335,22,964,37],[1335,24,964,39],[1335,28,964,43],[1336,18,964,45,"session"],[1336,25,964,52],[1336,27,964,54],[1337,16,964,59],[1337,17,964,60],[1338,16,964,62,"error"],[1339,14,964,68],[1339,15,964,69],[1340,12,965,12],[1341,12,966,12],[1341,18,966,18,"error"],[1341,23,966,23],[1342,10,967,8],[1343,8,968,4],[1343,9,968,5],[1344,8,968,5],[1344,17,947,10,"_reauthenticate"],[1344,32,947,25,"_reauthenticate"],[1344,33,947,25],[1345,10,947,25],[1345,17,947,25,"_reauthenticate3"],[1345,33,947,25],[1345,34,947,25,"apply"],[1345,39,947,25],[1345,46,947,25,"arguments"],[1345,55,947,25],[1346,8,947,25],[1347,8,947,25],[1347,15,947,10,"_reauthenticate"],[1347,30,947,25],[1348,6,947,25],[1349,6,969,4],[1350,0,970,0],[1351,0,971,0],[1352,4,969,4],[1353,6,969,4,"key"],[1353,9,969,4],[1354,6,969,4,"value"],[1354,11,969,4],[1355,8,969,4],[1355,12,969,4,"_resend"],[1355,19,969,4],[1355,22,969,4,"_asyncToGenerator"],[1355,39,969,4],[1355,40,972,4],[1355,51,972,17,"credentials"],[1355,62,972,28],[1355,64,972,30],[1356,10,973,8],[1356,14,973,12],[1357,12,974,12],[1357,16,974,18,"endpoint"],[1357,24,974,26],[1357,27,974,29],[1357,30,974,32],[1357,34,974,36],[1357,35,974,37,"url"],[1357,38,974,40],[1357,47,974,49],[1358,12,975,12],[1358,16,975,16],[1358,23,975,23],[1358,27,975,27,"credentials"],[1358,38,975,38],[1358,40,975,40],[1359,14,976,16],[1359,18,976,24,"email"],[1359,23,976,29],[1359,26,976,49,"credentials"],[1359,37,976,60],[1359,38,976,24,"email"],[1359,43,976,29],[1360,16,976,31,"type"],[1360,20,976,35],[1360,23,976,49,"credentials"],[1360,34,976,60],[1360,35,976,31,"type"],[1360,39,976,35],[1361,16,976,37,"options"],[1361,23,976,44],[1361,26,976,49,"credentials"],[1361,37,976,60],[1361,38,976,37,"options"],[1361,45,976,44],[1362,14,977,16],[1362,18,977,16,"_yield12"],[1362,26,977,16],[1362,35,977,40],[1362,36,977,41],[1362,37,977,42],[1362,39,977,44,"fetch_1"],[1362,46,977,51],[1362,47,977,52,"_request"],[1362,55,977,60],[1362,57,977,62],[1362,61,977,66],[1362,62,977,67,"fetch"],[1362,67,977,72],[1362,69,977,74],[1362,75,977,80],[1362,77,977,82,"endpoint"],[1362,85,977,90],[1362,87,977,92],[1363,18,978,20,"headers"],[1363,25,978,27],[1363,27,978,29],[1363,31,978,33],[1363,32,978,34,"headers"],[1363,39,978,41],[1364,18,979,20,"body"],[1364,22,979,24],[1364,24,979,26],[1365,20,980,24,"email"],[1365,25,980,29],[1366,20,981,24,"type"],[1366,24,981,28],[1367,20,982,24,"gotrue_meta_security"],[1367,40,982,44],[1367,42,982,46],[1368,22,982,48,"captcha_token"],[1368,35,982,61],[1368,37,982,63,"options"],[1368,44,982,70],[1368,49,982,75],[1368,53,982,79],[1368,57,982,83,"options"],[1368,64,982,90],[1368,69,982,95],[1368,74,982,100],[1368,75,982,101],[1368,78,982,104],[1368,83,982,109],[1368,84,982,110],[1368,87,982,113,"options"],[1368,94,982,120],[1368,95,982,121,"captchaToken"],[1369,20,982,134],[1370,18,983,20],[1370,19,983,21],[1371,18,984,20,"redirectTo"],[1371,28,984,30],[1371,30,984,32,"options"],[1371,37,984,39],[1371,42,984,44],[1371,46,984,48],[1371,50,984,52,"options"],[1371,57,984,59],[1371,62,984,64],[1371,67,984,69],[1371,68,984,70],[1371,71,984,73],[1371,76,984,78],[1371,77,984,79],[1371,80,984,82,"options"],[1371,87,984,89],[1371,88,984,90,"emailRedirectTo"],[1372,16,985,16],[1372,17,985,17],[1372,18,985,18],[1373,16,977,24,"error"],[1373,21,977,29],[1373,24,977,29,"_yield12"],[1373,32,977,29],[1373,33,977,24,"error"],[1373,38,977,29],[1374,14,986,16],[1374,21,986,23],[1375,16,986,25,"data"],[1375,20,986,29],[1375,22,986,31],[1376,18,986,33,"user"],[1376,22,986,37],[1376,24,986,39],[1376,28,986,43],[1377,18,986,45,"session"],[1377,25,986,52],[1377,27,986,54],[1378,16,986,59],[1378,17,986,60],[1379,16,986,62,"error"],[1380,14,986,68],[1380,15,986,69],[1381,12,987,12],[1381,13,987,13],[1381,19,988,17],[1381,23,988,21],[1381,30,988,28],[1381,34,988,32,"credentials"],[1381,45,988,43],[1381,47,988,45],[1382,14,989,16],[1382,18,989,24,"phone"],[1382,23,989,29],[1382,26,989,49,"credentials"],[1382,37,989,60],[1382,38,989,24,"phone"],[1382,43,989,29],[1383,16,989,31,"type"],[1383,21,989,35],[1383,24,989,49,"credentials"],[1383,35,989,60],[1383,36,989,31,"type"],[1383,40,989,35],[1384,16,989,37,"options"],[1384,25,989,44],[1384,28,989,49,"credentials"],[1384,39,989,60],[1384,40,989,37,"options"],[1384,47,989,44],[1385,14,990,16],[1385,18,990,16,"_yield13"],[1385,26,990,16],[1385,35,990,46],[1385,36,990,47],[1385,37,990,48],[1385,39,990,50,"fetch_1"],[1385,46,990,57],[1385,47,990,58,"_request"],[1385,55,990,66],[1385,57,990,68],[1385,61,990,72],[1385,62,990,73,"fetch"],[1385,67,990,78],[1385,69,990,80],[1385,75,990,86],[1385,77,990,88,"endpoint"],[1385,85,990,96],[1385,87,990,98],[1386,18,991,20,"headers"],[1386,25,991,27],[1386,27,991,29],[1386,31,991,33],[1386,32,991,34,"headers"],[1386,39,991,41],[1387,18,992,20,"body"],[1387,22,992,24],[1387,24,992,26],[1388,20,993,24,"phone"],[1388,25,993,29],[1389,20,994,24,"type"],[1389,24,994,28],[1389,26,994,24,"type"],[1389,31,994,28],[1390,20,995,24,"gotrue_meta_security"],[1390,40,995,44],[1390,42,995,46],[1391,22,995,48,"captcha_token"],[1391,35,995,61],[1391,37,995,63,"options"],[1391,46,995,70],[1391,51,995,75],[1391,55,995,79],[1391,59,995,83,"options"],[1391,68,995,90],[1391,73,995,95],[1391,78,995,100],[1391,79,995,101],[1391,82,995,104],[1391,87,995,109],[1391,88,995,110],[1391,91,995,113,"options"],[1391,100,995,120],[1391,101,995,121,"captchaToken"],[1392,20,995,134],[1393,18,996,20],[1394,16,997,16],[1394,17,997,17],[1394,18,997,18],[1395,16,990,24,"data"],[1395,20,990,28],[1395,23,990,28,"_yield13"],[1395,31,990,28],[1395,32,990,24,"data"],[1395,36,990,28],[1396,16,990,30,"error"],[1396,23,990,35],[1396,26,990,35,"_yield13"],[1396,34,990,35],[1396,35,990,30,"error"],[1396,40,990,35],[1397,14,998,16],[1397,21,998,23],[1398,16,998,25,"data"],[1398,20,998,29],[1398,22,998,31],[1399,18,998,33,"user"],[1399,22,998,37],[1399,24,998,39],[1399,28,998,43],[1400,18,998,45,"session"],[1400,25,998,52],[1400,27,998,54],[1400,31,998,58],[1401,18,998,60,"messageId"],[1401,27,998,69],[1401,29,998,71,"data"],[1401,33,998,75],[1401,38,998,80],[1401,42,998,84],[1401,46,998,88,"data"],[1401,50,998,92],[1401,55,998,97],[1401,60,998,102],[1401,61,998,103],[1401,64,998,106],[1401,69,998,111],[1401,70,998,112],[1401,73,998,115,"data"],[1401,77,998,119],[1401,78,998,120,"message_id"],[1402,16,998,131],[1402,17,998,132],[1403,16,998,134,"error"],[1403,21,998,139],[1403,23,998,134,"error"],[1404,14,998,140],[1404,15,998,141],[1405,12,999,12],[1406,12,1000,12],[1406,18,1000,18],[1406,22,1000,22,"errors_1"],[1406,30,1000,30],[1406,31,1000,31,"AuthInvalidCredentialsError"],[1406,58,1000,58],[1406,59,1000,59],[1406,120,1000,120],[1406,121,1000,121],[1407,10,1001,8],[1407,11,1001,9],[1407,12,1002,8],[1407,19,1002,15,"error"],[1407,24,1002,20],[1407,26,1002,22],[1408,12,1003,12],[1408,16,1003,16],[1408,17,1003,17],[1408,18,1003,18],[1408,20,1003,20,"errors_1"],[1408,28,1003,28],[1408,29,1003,29,"isAuthError"],[1408,40,1003,40],[1408,42,1003,42,"error"],[1408,47,1003,47],[1408,48,1003,48],[1408,50,1003,50],[1409,14,1004,16],[1409,21,1004,23],[1410,16,1004,25,"data"],[1410,20,1004,29],[1410,22,1004,31],[1411,18,1004,33,"user"],[1411,22,1004,37],[1411,24,1004,39],[1411,28,1004,43],[1412,18,1004,45,"session"],[1412,25,1004,52],[1412,27,1004,54],[1413,16,1004,59],[1413,17,1004,60],[1414,16,1004,62,"error"],[1415,14,1004,68],[1415,15,1004,69],[1416,12,1005,12],[1417,12,1006,12],[1417,18,1006,18,"error"],[1417,23,1006,23],[1418,10,1007,8],[1419,8,1008,4],[1419,9,1008,5],[1420,8,1008,5],[1420,17,972,10,"resend"],[1420,23,972,16,"resend"],[1420,24,972,16,"_x17"],[1420,28,972,16],[1421,10,972,16],[1421,17,972,16,"_resend"],[1421,24,972,16],[1421,25,972,16,"apply"],[1421,30,972,16],[1421,37,972,16,"arguments"],[1421,46,972,16],[1422,8,972,16],[1423,8,972,16],[1423,15,972,10,"resend"],[1423,21,972,16],[1424,6,972,16],[1425,6,1009,4],[1426,0,1010,0],[1427,0,1011,0],[1428,0,1012,0],[1429,0,1013,0],[1430,0,1014,0],[1431,0,1015,0],[1432,0,1016,0],[1433,0,1017,0],[1434,0,1018,0],[1435,0,1019,0],[1436,6,1009,4],[1437,4,1009,4],[1438,6,1009,4,"key"],[1438,9,1009,4],[1439,6,1009,4,"value"],[1439,11,1009,4],[1440,8,1009,4],[1440,12,1009,4,"_getSession"],[1440,23,1009,4],[1440,26,1009,4,"_asyncToGenerator"],[1440,43,1009,4],[1440,44,1020,4],[1440,57,1020,23],[1441,10,1020,23],[1441,14,1020,23,"_this7"],[1441,20,1020,23],[1442,10,1021,8],[1442,16,1021,14],[1442,20,1021,18],[1442,21,1021,19,"initializePromise"],[1442,38,1021,36],[1443,10,1022,8],[1443,14,1022,14,"result"],[1443,20,1022,20],[1443,29,1022,29],[1443,33,1022,33],[1443,34,1022,34,"_acquireLock"],[1443,46,1022,46],[1443,47,1022,47],[1443,48,1022,48],[1443,49,1022,49],[1443,64,1022,49,"_asyncToGenerator"],[1443,81,1022,49],[1443,82,1022,51],[1443,95,1022,63],[1444,12,1023,12],[1444,19,1023,19,"_this7"],[1444,25,1023,23],[1444,26,1023,24,"_useSession"],[1444,37,1023,35],[1445,14,1023,35],[1445,18,1023,35,"_ref9"],[1445,23,1023,35],[1445,26,1023,35,"_asyncToGenerator"],[1445,43,1023,35],[1445,44,1023,36],[1445,55,1023,43,"result"],[1445,61,1023,49],[1445,63,1023,54],[1446,16,1024,16],[1446,23,1024,23,"result"],[1446,29,1024,29],[1447,14,1025,12],[1447,15,1025,13],[1448,14,1025,13],[1448,31,1025,13,"_x18"],[1448,35,1025,13],[1449,16,1025,13],[1449,23,1025,13,"_ref9"],[1449,28,1025,13],[1449,29,1025,13,"apply"],[1449,34,1025,13],[1449,41,1025,13,"arguments"],[1449,50,1025,13],[1450,14,1025,13],[1451,12,1025,13],[1451,16,1025,14],[1452,10,1026,8],[1452,11,1026,9],[1452,13,1026,10],[1453,10,1027,8],[1453,17,1027,15,"result"],[1453,23,1027,21],[1454,8,1028,4],[1454,9,1028,5],[1455,8,1028,5],[1455,17,1020,10,"getSession"],[1455,27,1020,20,"getSession"],[1455,28,1020,20],[1456,10,1020,20],[1456,17,1020,20,"_getSession"],[1456,28,1020,20],[1456,29,1020,20,"apply"],[1456,34,1020,20],[1456,41,1020,20,"arguments"],[1456,50,1020,20],[1457,8,1020,20],[1458,8,1020,20],[1458,15,1020,10,"getSession"],[1458,25,1020,20],[1459,6,1020,20],[1460,6,1029,4],[1461,0,1030,0],[1462,0,1031,0],[1463,6,1029,4],[1464,4,1029,4],[1465,6,1029,4,"key"],[1465,9,1029,4],[1466,6,1029,4,"value"],[1466,11,1029,4],[1467,8,1029,4],[1467,12,1029,4,"_acquireLock2"],[1467,25,1029,4],[1467,28,1029,4,"_asyncToGenerator"],[1467,45,1029,4],[1467,46,1032,4],[1467,57,1032,23,"acquireTimeout"],[1467,71,1032,37],[1467,73,1032,39,"fn"],[1467,75,1032,41],[1467,77,1032,43],[1468,10,1032,43],[1468,14,1032,43,"_this8"],[1468,20,1032,43],[1469,10,1033,8],[1469,14,1033,12],[1469,15,1033,13,"_debug"],[1469,21,1033,19],[1469,22,1033,20],[1469,37,1033,35],[1469,39,1033,37],[1469,46,1033,44],[1469,48,1033,46,"acquireTimeout"],[1469,62,1033,60],[1469,63,1033,61],[1470,10,1034,8],[1470,14,1034,12],[1471,12,1035,12],[1471,16,1035,16],[1471,20,1035,20],[1471,21,1035,21,"lockAcquired"],[1471,33,1035,33],[1471,35,1035,35],[1472,14,1036,16],[1472,18,1036,22,"last"],[1472,22,1036,26],[1472,25,1036,29],[1472,29,1036,33],[1472,30,1036,34,"pendingInLock"],[1472,43,1036,47],[1472,44,1036,48,"length"],[1472,50,1036,54],[1472,53,1037,22],[1472,57,1037,26],[1472,58,1037,27,"pendingInLock"],[1472,71,1037,40],[1472,72,1037,41],[1472,76,1037,45],[1472,77,1037,46,"pendingInLock"],[1472,90,1037,59],[1472,91,1037,60,"length"],[1472,97,1037,66],[1472,100,1037,69],[1472,101,1037,70],[1472,102,1037,71],[1472,105,1038,22,"Promise"],[1472,112,1038,29],[1472,113,1038,30,"resolve"],[1472,120,1038,37],[1472,121,1038,38],[1472,122,1038,39],[1473,14,1039,16],[1473,18,1039,22,"result"],[1473,24,1039,28],[1473,27,1039,31,"_asyncToGenerator"],[1473,44,1039,31],[1473,45,1039,32],[1473,58,1039,44],[1474,16,1040,20],[1474,22,1040,26,"last"],[1474,26,1040,30],[1475,16,1041,20],[1475,29,1041,33,"fn"],[1475,31,1041,35],[1475,32,1041,36],[1475,33,1041,37],[1476,14,1042,16],[1476,15,1042,17],[1476,17,1042,19],[1476,18,1042,20],[1477,14,1043,16],[1477,18,1043,20],[1477,19,1043,21,"pendingInLock"],[1477,32,1043,34],[1477,33,1043,35,"push"],[1477,37,1043,39],[1477,38,1043,40,"_asyncToGenerator"],[1477,55,1043,40],[1477,56,1043,41],[1477,69,1043,53],[1478,16,1044,20],[1478,20,1044,24],[1479,18,1045,24],[1479,24,1045,30,"result"],[1479,30,1045,36],[1480,16,1046,20],[1480,17,1046,21],[1480,18,1047,20],[1480,25,1047,27,"e"],[1480,26,1047,28],[1480,28,1047,30],[1481,18,1048,24],[1482,16,1048,24],[1483,14,1050,16],[1483,15,1050,17],[1483,17,1050,19],[1483,18,1050,20],[1483,19,1050,21],[1484,14,1051,16],[1484,21,1051,23,"result"],[1484,27,1051,29],[1485,12,1052,12],[1486,12,1053,12],[1486,25,1053,25],[1486,29,1053,29],[1486,30,1053,30,"lock"],[1486,34,1053,34],[1486,35,1053,35],[1486,43,1053,43],[1486,47,1053,47],[1486,48,1053,48,"storageKey"],[1486,58,1053,58],[1486,60,1053,60],[1486,62,1053,62,"acquireTimeout"],[1486,76,1053,76],[1486,91,1053,76,"_asyncToGenerator"],[1486,108,1053,76],[1486,109,1053,78],[1486,122,1053,90],[1487,14,1054,16,"_this8"],[1487,20,1054,20],[1487,21,1054,21,"_debug"],[1487,27,1054,27],[1487,28,1054,28],[1487,43,1054,43],[1487,45,1054,45],[1487,76,1054,76],[1487,78,1054,78,"_this8"],[1487,84,1054,82],[1487,85,1054,83,"storageKey"],[1487,95,1054,93],[1487,96,1054,94],[1488,14,1055,16],[1488,18,1055,20],[1489,16,1056,20,"_this8"],[1489,22,1056,24],[1489,23,1056,25,"lockAcquired"],[1489,35,1056,37],[1489,38,1056,40],[1489,42,1056,44],[1490,16,1057,20],[1490,20,1057,26,"result"],[1490,27,1057,32],[1490,30,1057,35,"fn"],[1490,32,1057,37],[1490,33,1057,38],[1490,34,1057,39],[1491,16,1058,20,"_this8"],[1491,22,1058,24],[1491,23,1058,25,"pendingInLock"],[1491,36,1058,38],[1491,37,1058,39,"push"],[1491,41,1058,43],[1491,42,1058,44,"_asyncToGenerator"],[1491,59,1058,44],[1491,60,1058,45],[1491,73,1058,57],[1492,18,1059,24],[1492,22,1059,28],[1493,20,1060,28],[1493,26,1060,34,"result"],[1493,33,1060,40],[1494,18,1061,24],[1494,19,1061,25],[1494,20,1062,24],[1494,27,1062,31,"e"],[1494,28,1062,32],[1494,30,1062,34],[1495,20,1063,28],[1496,18,1063,28],[1497,16,1065,20],[1497,17,1065,21],[1497,19,1065,23],[1497,20,1065,24],[1497,21,1065,25],[1498,16,1066,20],[1498,22,1066,26,"result"],[1498,29,1066,32],[1499,16,1067,20],[1500,16,1068,20],[1500,23,1068,27,"_this8"],[1500,29,1068,31],[1500,30,1068,32,"pendingInLock"],[1500,43,1068,45],[1500,44,1068,46,"length"],[1500,50,1068,52],[1500,52,1068,54],[1501,18,1069,24],[1501,22,1069,30,"waitOn"],[1501,28,1069,36],[1501,31,1069,39],[1501,32,1069,40],[1501,35,1069,43,"_this8"],[1501,41,1069,47],[1501,42,1069,48,"pendingInLock"],[1501,55,1069,61],[1501,56,1069,62],[1502,18,1070,24],[1502,24,1070,30,"Promise"],[1502,31,1070,37],[1502,32,1070,38,"all"],[1502,35,1070,41],[1502,36,1070,42,"waitOn"],[1502,42,1070,48],[1502,43,1070,49],[1503,18,1071,24,"_this8"],[1503,24,1071,28],[1503,25,1071,29,"pendingInLock"],[1503,38,1071,42],[1503,39,1071,43,"splice"],[1503,45,1071,49],[1503,46,1071,50],[1503,47,1071,51],[1503,49,1071,53,"waitOn"],[1503,55,1071,59],[1503,56,1071,60,"length"],[1503,62,1071,66],[1503,63,1071,67],[1504,16,1072,20],[1505,16,1073,20],[1505,29,1073,33,"result"],[1505,36,1073,39],[1506,14,1074,16],[1506,15,1074,17],[1506,24,1075,24],[1507,16,1076,20,"_this8"],[1507,22,1076,24],[1507,23,1076,25,"_debug"],[1507,29,1076,31],[1507,30,1076,32],[1507,45,1076,47],[1507,47,1076,49],[1507,78,1076,80],[1507,80,1076,82,"_this8"],[1507,86,1076,86],[1507,87,1076,87,"storageKey"],[1507,97,1076,97],[1507,98,1076,98],[1508,16,1077,20,"_this8"],[1508,22,1077,24],[1508,23,1077,25,"lockAcquired"],[1508,35,1077,37],[1508,38,1077,40],[1508,43,1077,45],[1509,14,1078,16],[1510,12,1079,12],[1510,13,1079,13],[1510,15,1079,14],[1511,10,1080,8],[1511,11,1080,9],[1511,20,1081,16],[1512,12,1082,12],[1512,16,1082,16],[1512,17,1082,17,"_debug"],[1512,23,1082,23],[1512,24,1082,24],[1512,39,1082,39],[1512,41,1082,41],[1512,46,1082,46],[1512,47,1082,47],[1513,10,1083,8],[1514,8,1084,4],[1514,9,1084,5],[1515,8,1084,5],[1515,17,1032,10,"_acquireLock"],[1515,29,1032,22,"_acquireLock"],[1515,30,1032,22,"_x19"],[1515,34,1032,22],[1515,36,1032,22,"_x20"],[1515,40,1032,22],[1516,10,1032,22],[1516,17,1032,22,"_acquireLock2"],[1516,30,1032,22],[1516,31,1032,22,"apply"],[1516,36,1032,22],[1516,43,1032,22,"arguments"],[1516,52,1032,22],[1517,8,1032,22],[1518,8,1032,22],[1518,15,1032,10,"_acquireLock"],[1518,27,1032,22],[1519,6,1032,22],[1520,6,1085,4],[1521,0,1086,0],[1522,0,1087,0],[1523,0,1088,0],[1524,0,1089,0],[1525,0,1090,0],[1526,6,1085,4],[1527,4,1085,4],[1528,6,1085,4,"key"],[1528,9,1085,4],[1529,6,1085,4,"value"],[1529,11,1085,4],[1530,8,1085,4],[1530,12,1085,4,"_useSession2"],[1530,24,1085,4],[1530,27,1085,4,"_asyncToGenerator"],[1530,44,1085,4],[1530,45,1091,4],[1530,56,1091,22,"fn"],[1530,58,1091,24],[1530,60,1091,26],[1531,10,1092,8],[1531,14,1092,12],[1531,15,1092,13,"_debug"],[1531,21,1092,19],[1531,22,1092,20],[1531,36,1092,34],[1531,38,1092,36],[1531,45,1092,43],[1531,46,1092,44],[1532,10,1093,8],[1532,14,1093,12],[1533,12,1094,12],[1534,12,1095,12],[1534,16,1095,18,"result"],[1534,22,1095,24],[1534,31,1095,33],[1534,35,1095,37],[1534,36,1095,38,"__loadSession"],[1534,49,1095,51],[1534,50,1095,52],[1534,51,1095,53],[1535,12,1096,12],[1535,25,1096,25,"fn"],[1535,27,1096,27],[1535,28,1096,28,"result"],[1535,34,1096,34],[1535,35,1096,35],[1536,10,1097,8],[1536,11,1097,9],[1536,20,1098,16],[1537,12,1099,12],[1537,16,1099,16],[1537,17,1099,17,"_debug"],[1537,23,1099,23],[1537,24,1099,24],[1537,38,1099,38],[1537,40,1099,40],[1537,45,1099,45],[1537,46,1099,46],[1538,10,1100,8],[1539,8,1101,4],[1539,9,1101,5],[1540,8,1101,5],[1540,17,1091,10,"_useSession"],[1540,28,1091,21,"_useSession"],[1540,29,1091,21,"_x21"],[1540,33,1091,21],[1541,10,1091,21],[1541,17,1091,21,"_useSession2"],[1541,29,1091,21],[1541,30,1091,21,"apply"],[1541,35,1091,21],[1541,42,1091,21,"arguments"],[1541,51,1091,21],[1542,8,1091,21],[1543,8,1091,21],[1543,15,1091,10,"_useSession"],[1543,26,1091,21],[1544,6,1091,21],[1545,6,1102,4],[1546,0,1103,0],[1547,0,1104,0],[1548,0,1105,0],[1549,0,1106,0],[1550,6,1102,4],[1551,4,1102,4],[1552,6,1102,4,"key"],[1552,9,1102,4],[1553,6,1102,4,"value"],[1553,11,1102,4],[1554,8,1102,4],[1554,12,1102,4,"_loadSession"],[1554,24,1102,4],[1554,27,1102,4,"_asyncToGenerator"],[1554,44,1102,4],[1554,45,1107,4],[1554,58,1107,26],[1555,10,1108,8],[1555,14,1108,12],[1555,15,1108,13,"_debug"],[1555,21,1108,19],[1555,22,1108,20],[1555,40,1108,38],[1555,42,1108,40],[1555,49,1108,47],[1555,50,1108,48],[1556,10,1109,8],[1556,14,1109,12],[1556,15,1109,13],[1556,19,1109,17],[1556,20,1109,18,"lockAcquired"],[1556,32,1109,30],[1556,34,1109,32],[1557,12,1110,12],[1557,16,1110,16],[1557,17,1110,17,"_debug"],[1557,23,1110,23],[1557,24,1110,24],[1557,42,1110,42],[1557,44,1110,44],[1557,79,1110,79],[1557,81,1110,81],[1557,85,1110,85,"Error"],[1557,90,1110,90],[1557,91,1110,91],[1557,92,1110,92],[1557,93,1110,93,"stack"],[1557,98,1110,98],[1557,99,1110,99],[1558,10,1111,8],[1559,10,1112,8],[1559,14,1112,12],[1560,12,1113,12],[1560,16,1113,16,"currentSession"],[1560,30,1113,30],[1560,33,1113,33],[1560,37,1113,37],[1561,12,1114,12],[1561,16,1114,18,"maybeSession"],[1561,28,1114,30],[1561,37,1114,39],[1561,38,1114,40],[1561,39,1114,41],[1561,41,1114,43,"helpers_1"],[1561,50,1114,52],[1561,51,1114,53,"getItemAsync"],[1561,63,1114,65],[1561,65,1114,67],[1561,69,1114,71],[1561,70,1114,72,"storage"],[1561,77,1114,79],[1561,79,1114,81],[1561,83,1114,85],[1561,84,1114,86,"storageKey"],[1561,94,1114,96],[1561,95,1114,97],[1562,12,1115,12],[1562,16,1115,16],[1562,17,1115,17,"_debug"],[1562,23,1115,23],[1562,24,1115,24],[1562,39,1115,39],[1562,41,1115,41],[1562,63,1115,63],[1562,65,1115,65,"maybeSession"],[1562,77,1115,77],[1562,78,1115,78],[1563,12,1116,12],[1563,16,1116,16,"maybeSession"],[1563,28,1116,28],[1563,33,1116,33],[1563,37,1116,37],[1563,39,1116,39],[1564,14,1117,16],[1564,18,1117,20],[1564,22,1117,24],[1564,23,1117,25,"_isValidSession"],[1564,38,1117,40],[1564,39,1117,41,"maybeSession"],[1564,51,1117,53],[1564,52,1117,54],[1564,54,1117,56],[1565,16,1118,20,"currentSession"],[1565,30,1118,34],[1565,33,1118,37,"maybeSession"],[1565,45,1118,49],[1566,14,1119,16],[1566,15,1119,17],[1566,21,1120,21],[1567,16,1121,20],[1567,20,1121,24],[1567,21,1121,25,"_debug"],[1567,27,1121,31],[1567,28,1121,32],[1567,43,1121,47],[1567,45,1121,49],[1567,80,1121,84],[1567,81,1121,85],[1568,16,1122,20],[1568,22,1122,26],[1568,26,1122,30],[1568,27,1122,31,"_removeSession"],[1568,41,1122,45],[1568,42,1122,46],[1568,43,1122,47],[1569,14,1123,16],[1570,12,1124,12],[1571,12,1125,12],[1571,16,1125,16],[1571,17,1125,17,"currentSession"],[1571,31,1125,31],[1571,33,1125,33],[1572,14,1126,16],[1572,21,1126,23],[1573,16,1126,25,"data"],[1573,20,1126,29],[1573,22,1126,31],[1574,18,1126,33,"session"],[1574,25,1126,40],[1574,27,1126,42],[1575,16,1126,47],[1575,17,1126,48],[1576,16,1126,50,"error"],[1576,21,1126,55],[1576,23,1126,57],[1577,14,1126,62],[1577,15,1126,63],[1578,12,1127,12],[1579,12,1128,12],[1580,12,1129,12],[1581,12,1130,12],[1582,12,1131,12],[1583,12,1132,12],[1584,12,1133,12],[1584,16,1133,18,"hasExpired"],[1584,26,1133,28],[1584,29,1133,31,"currentSession"],[1584,43,1133,45],[1584,44,1133,46,"expires_at"],[1584,54,1133,56],[1584,57,1134,18,"currentSession"],[1584,71,1134,32],[1584,72,1134,33,"expires_at"],[1584,82,1134,43],[1584,85,1134,46],[1584,89,1134,50],[1584,92,1134,53,"Date"],[1584,96,1134,57],[1584,97,1134,58,"now"],[1584,100,1134,61],[1584,101,1134,62],[1584,102,1134,63],[1584,105,1134,66,"constants_1"],[1584,116,1134,77],[1584,117,1134,78,"EXPIRY_MARGIN_MS"],[1584,133,1134,94],[1584,136,1135,18],[1584,141,1135,23],[1585,12,1136,12],[1585,16,1136,16],[1585,17,1136,17,"_debug"],[1585,23,1136,23],[1585,24,1136,24],[1585,42,1136,42],[1585,44,1136,44],[1585,58,1136,58,"hasExpired"],[1585,68,1136,68],[1585,71,1136,71],[1585,73,1136,73],[1585,76,1136,76],[1585,82,1136,82],[1585,92,1136,92],[1585,94,1136,94],[1585,106,1136,106],[1585,108,1136,108,"currentSession"],[1585,122,1136,122],[1585,123,1136,123,"expires_at"],[1585,133,1136,133],[1585,134,1136,134],[1586,12,1137,12],[1586,16,1137,16],[1586,17,1137,17,"hasExpired"],[1586,27,1137,27],[1586,29,1137,29],[1587,14,1138,16],[1587,18,1138,20],[1587,22,1138,24],[1587,23,1138,25,"userStorage"],[1587,34,1138,36],[1587,36,1138,38],[1588,16,1139,20],[1588,20,1139,26,"maybeUser"],[1588,29,1139,35],[1588,38,1139,45],[1588,39,1139,46],[1588,40,1139,47],[1588,42,1139,49,"helpers_1"],[1588,51,1139,58],[1588,52,1139,59,"getItemAsync"],[1588,64,1139,71],[1588,66,1139,73],[1588,70,1139,77],[1588,71,1139,78,"userStorage"],[1588,82,1139,89],[1588,84,1139,91],[1588,88,1139,95],[1588,89,1139,96,"storageKey"],[1588,99,1139,106],[1588,102,1139,109],[1588,109,1139,116],[1588,110,1139,118],[1589,16,1140,20],[1589,20,1140,24,"maybeUser"],[1589,29,1140,33],[1589,34,1140,38],[1589,38,1140,42],[1589,42,1140,46,"maybeUser"],[1589,51,1140,55],[1589,56,1140,60],[1589,61,1140,65],[1589,62,1140,66],[1589,65,1140,69],[1589,70,1140,74],[1589,71,1140,75],[1589,74,1140,78,"maybeUser"],[1589,83,1140,87],[1589,84,1140,88,"user"],[1589,88,1140,92],[1589,90,1140,94],[1590,18,1141,24,"currentSession"],[1590,32,1141,38],[1590,33,1141,39,"user"],[1590,37,1141,43],[1590,40,1141,46,"maybeUser"],[1590,49,1141,55],[1590,50,1141,56,"user"],[1590,54,1141,60],[1591,16,1142,20],[1591,17,1142,21],[1591,23,1143,25],[1592,18,1144,24,"currentSession"],[1592,32,1144,38],[1592,33,1144,39,"user"],[1592,37,1144,43],[1592,40,1144,46],[1592,41,1144,47],[1592,42,1144,48],[1592,44,1144,50,"helpers_1"],[1592,53,1144,59],[1592,54,1144,60,"userNotAvailableProxy"],[1592,75,1144,81],[1592,77,1144,83],[1592,78,1144,84],[1593,16,1145,20],[1594,14,1146,16],[1595,14,1147,16],[1595,18,1147,20],[1595,22,1147,24],[1595,23,1147,25,"storage"],[1595,30,1147,32],[1595,31,1147,33,"isServer"],[1595,39,1147,41],[1595,43,1147,45,"currentSession"],[1595,57,1147,59],[1595,58,1147,60,"user"],[1595,62,1147,64],[1595,64,1147,66],[1596,16,1148,20],[1596,20,1148,24,"suppressWarning"],[1596,35,1148,39],[1596,38,1148,42],[1596,42,1148,46],[1596,43,1148,47,"suppressGetSessionWarning"],[1596,68,1148,72],[1597,16,1149,20],[1597,20,1149,26,"proxySession"],[1597,32,1149,38],[1597,35,1149,41],[1597,39,1149,45,"Proxy"],[1597,44,1149,50],[1597,45,1149,51,"currentSession"],[1597,59,1149,65],[1597,61,1149,67],[1598,18,1150,24,"get"],[1598,21,1150,27],[1598,23,1150,29,"get"],[1598,24,1150,30,"target"],[1598,30,1150,36],[1598,32,1150,38,"prop"],[1598,36,1150,42],[1598,38,1150,44,"receiver"],[1598,46,1150,52],[1598,51,1150,57],[1599,20,1151,28],[1599,24,1151,32],[1599,25,1151,33,"suppressWarning"],[1599,40,1151,48],[1599,44,1151,52,"prop"],[1599,48,1151,56],[1599,53,1151,61],[1599,59,1151,67],[1599,61,1151,69],[1600,22,1152,32],[1601,22,1153,32,"console"],[1601,29,1153,39],[1601,30,1153,40,"warn"],[1601,34,1153,44],[1601,35,1153,45],[1601,388,1153,398],[1601,389,1153,399],[1602,22,1154,32,"suppressWarning"],[1602,37,1154,47],[1602,40,1154,50],[1602,44,1154,54],[1602,45,1154,55],[1602,46,1154,56],[1603,22,1155,32],[1603,26,1155,36],[1603,27,1155,37,"suppressGetSessionWarning"],[1603,52,1155,62],[1603,55,1155,65],[1603,59,1155,69],[1603,60,1155,70],[1603,61,1155,71],[1604,20,1156,28],[1605,20,1157,28],[1605,27,1157,35,"Reflect"],[1605,34,1157,42],[1605,35,1157,43,"get"],[1605,38,1157,46],[1605,39,1157,47,"target"],[1605,45,1157,53],[1605,47,1157,55,"prop"],[1605,51,1157,59],[1605,53,1157,61,"receiver"],[1605,61,1157,69],[1605,62,1157,70],[1606,18,1158,24],[1607,16,1159,20],[1607,17,1159,21],[1607,18,1159,22],[1608,16,1160,20,"currentSession"],[1608,30,1160,34],[1608,33,1160,37,"proxySession"],[1608,45,1160,49],[1609,14,1161,16],[1610,14,1162,16],[1610,21,1162,23],[1611,16,1162,25,"data"],[1611,20,1162,29],[1611,22,1162,31],[1612,18,1162,33,"session"],[1612,25,1162,40],[1612,27,1162,42,"currentSession"],[1613,16,1162,57],[1613,17,1162,58],[1614,16,1162,60,"error"],[1614,21,1162,65],[1614,23,1162,67],[1615,14,1162,72],[1615,15,1162,73],[1616,12,1163,12],[1617,12,1164,12],[1617,16,1164,12,"_yield$this$_callRefr"],[1617,37,1164,12],[1617,46,1164,51],[1617,50,1164,55],[1617,51,1164,56,"_callRefreshToken"],[1617,68,1164,73],[1617,69,1164,74,"currentSession"],[1617,83,1164,88],[1617,84,1164,89,"refresh_token"],[1617,97,1164,102],[1617,98,1164,103],[1618,14,1164,26,"session"],[1618,21,1164,33],[1618,24,1164,33,"_yield$this$_callRefr"],[1618,45,1164,33],[1618,46,1164,20,"data"],[1618,50,1164,24],[1619,14,1164,35,"error"],[1619,19,1164,40],[1619,22,1164,40,"_yield$this$_callRefr"],[1619,43,1164,40],[1619,44,1164,35,"error"],[1619,49,1164,40],[1620,12,1165,12],[1620,16,1165,16,"error"],[1620,21,1165,21],[1620,23,1165,23],[1621,14,1166,16],[1621,21,1166,23],[1622,16,1166,25,"data"],[1622,20,1166,29],[1622,22,1166,31],[1623,18,1166,33,"session"],[1623,25,1166,40],[1623,27,1166,42],[1624,16,1166,47],[1624,17,1166,48],[1625,16,1166,50,"error"],[1626,14,1166,56],[1626,15,1166,57],[1627,12,1167,12],[1628,12,1168,12],[1628,19,1168,19],[1629,14,1168,21,"data"],[1629,18,1168,25],[1629,20,1168,27],[1630,16,1168,29,"session"],[1631,14,1168,37],[1631,15,1168,38],[1632,14,1168,40,"error"],[1632,19,1168,45],[1632,21,1168,47],[1633,12,1168,52],[1633,13,1168,53],[1634,10,1169,8],[1634,11,1169,9],[1634,20,1170,16],[1635,12,1171,12],[1635,16,1171,16],[1635,17,1171,17,"_debug"],[1635,23,1171,23],[1635,24,1171,24],[1635,42,1171,42],[1635,44,1171,44],[1635,49,1171,49],[1635,50,1171,50],[1636,10,1172,8],[1637,8,1173,4],[1637,9,1173,5],[1638,8,1173,5],[1638,17,1107,10,"__loadSession"],[1638,30,1107,23,"__loadSession"],[1638,31,1107,23],[1639,10,1107,23],[1639,17,1107,23,"_loadSession"],[1639,29,1107,23],[1639,30,1107,23,"apply"],[1639,35,1107,23],[1639,42,1107,23,"arguments"],[1639,51,1107,23],[1640,8,1107,23],[1641,8,1107,23],[1641,15,1107,10,"__loadSession"],[1641,28,1107,23],[1642,6,1107,23],[1643,6,1174,4],[1644,0,1175,0],[1645,0,1176,0],[1646,0,1177,0],[1647,0,1178,0],[1648,0,1179,0],[1649,0,1180,0],[1650,6,1174,4],[1651,4,1174,4],[1652,6,1174,4,"key"],[1652,9,1174,4],[1653,6,1174,4,"value"],[1653,11,1174,4],[1654,8,1174,4],[1654,12,1174,4,"_getUser2"],[1654,21,1174,4],[1654,24,1174,4,"_asyncToGenerator"],[1654,41,1174,4],[1654,42,1181,4],[1654,53,1181,18,"jwt"],[1654,56,1181,21],[1654,58,1181,23],[1655,10,1181,23],[1655,14,1181,23,"_this9"],[1655,20,1181,23],[1656,10,1182,8],[1656,14,1182,12,"jwt"],[1656,17,1182,15],[1656,19,1182,17],[1657,12,1183,12],[1657,25,1183,25],[1657,29,1183,29],[1657,30,1183,30,"_getUser"],[1657,38,1183,38],[1657,39,1183,39,"jwt"],[1657,42,1183,42],[1657,43,1183,43],[1658,10,1184,8],[1659,10,1185,8],[1659,16,1185,14],[1659,20,1185,18],[1659,21,1185,19,"initializePromise"],[1659,38,1185,36],[1660,10,1186,8],[1660,14,1186,14,"result"],[1660,20,1186,20],[1660,29,1186,29],[1660,33,1186,33],[1660,34,1186,34,"_acquireLock"],[1660,46,1186,46],[1660,47,1186,47],[1660,48,1186,48],[1660,49,1186,49],[1660,64,1186,49,"_asyncToGenerator"],[1660,81,1186,49],[1660,82,1186,51],[1660,95,1186,63],[1661,12,1187,12],[1661,25,1187,25,"_this9"],[1661,31,1187,29],[1661,32,1187,30,"_getUser"],[1661,40,1187,38],[1661,41,1187,39],[1661,42,1187,40],[1662,10,1188,8],[1662,11,1188,9],[1662,13,1188,10],[1663,10,1189,8],[1663,17,1189,15,"result"],[1663,23,1189,21],[1664,8,1190,4],[1664,9,1190,5],[1665,8,1190,5],[1665,17,1181,10,"getUser"],[1665,24,1181,17,"getUser"],[1665,25,1181,17,"_x22"],[1665,29,1181,17],[1666,10,1181,17],[1666,17,1181,17,"_getUser2"],[1666,26,1181,17],[1666,27,1181,17,"apply"],[1666,32,1181,17],[1666,39,1181,17,"arguments"],[1666,48,1181,17],[1667,8,1181,17],[1668,8,1181,17],[1668,15,1181,10,"getUser"],[1668,22,1181,17],[1669,6,1181,17],[1670,4,1181,17],[1671,6,1181,17,"key"],[1671,9,1181,17],[1672,6,1181,17,"value"],[1672,11,1181,17],[1673,8,1181,17],[1673,12,1181,17,"_getUser3"],[1673,21,1181,17],[1673,24,1181,17,"_asyncToGenerator"],[1673,41,1181,17],[1673,42,1191,4],[1673,53,1191,19,"jwt"],[1673,56,1191,22],[1673,58,1191,24],[1674,10,1191,24],[1674,14,1191,24,"_this0"],[1674,20,1191,24],[1675,10,1192,8],[1675,14,1192,12],[1676,12,1193,12],[1676,16,1193,16,"jwt"],[1676,19,1193,19],[1676,21,1193,21],[1677,14,1194,16],[1677,27,1194,29],[1677,28,1194,30],[1677,29,1194,31],[1677,31,1194,33,"fetch_1"],[1677,38,1194,40],[1677,39,1194,41,"_request"],[1677,47,1194,49],[1677,49,1194,51],[1677,53,1194,55],[1677,54,1194,56,"fetch"],[1677,59,1194,61],[1677,61,1194,63],[1677,66,1194,68],[1677,68,1194,70],[1677,71,1194,73],[1677,75,1194,77],[1677,76,1194,78,"url"],[1677,79,1194,81],[1677,86,1194,88],[1677,88,1194,90],[1678,16,1195,20,"headers"],[1678,23,1195,27],[1678,25,1195,29],[1678,29,1195,33],[1678,30,1195,34,"headers"],[1678,37,1195,41],[1679,16,1196,20,"jwt"],[1679,19,1196,23],[1679,21,1196,25,"jwt"],[1679,24,1196,28],[1680,16,1197,20,"xform"],[1680,21,1197,25],[1680,23,1197,27,"fetch_1"],[1680,30,1197,34],[1680,31,1197,35,"_userResponse"],[1681,14,1198,16],[1681,15,1198,17],[1681,16,1198,18],[1682,12,1199,12],[1683,12,1200,12],[1683,25,1200,25],[1683,29,1200,29],[1683,30,1200,30,"_useSession"],[1683,41,1200,41],[1684,14,1200,41],[1684,18,1200,41,"_ref13"],[1684,24,1200,41],[1684,27,1200,41,"_asyncToGenerator"],[1684,44,1200,41],[1684,45,1200,42],[1684,56,1200,49,"result"],[1684,62,1200,55],[1684,64,1200,60],[1685,16,1201,16],[1685,20,1201,20,"_a"],[1685,22,1201,22],[1685,24,1201,24,"_b"],[1685,26,1201,26],[1685,28,1201,28,"_c"],[1685,30,1201,30],[1686,16,1202,16],[1686,20,1202,24,"data"],[1686,24,1202,28],[1686,27,1202,40,"result"],[1686,33,1202,46],[1686,34,1202,24,"data"],[1686,38,1202,28],[1687,18,1202,30,"error"],[1687,23,1202,35],[1687,26,1202,40,"result"],[1687,32,1202,46],[1687,33,1202,30,"error"],[1687,38,1202,35],[1688,16,1203,16],[1688,20,1203,20,"error"],[1688,25,1203,25],[1688,27,1203,27],[1689,18,1204,20],[1689,24,1204,26,"error"],[1689,29,1204,31],[1690,16,1205,16],[1691,16,1206,16],[1692,16,1207,16],[1692,20,1207,20],[1692,22,1207,22],[1692,23,1207,23,"_a"],[1692,25,1207,25],[1692,28,1207,28,"data"],[1692,32,1207,32],[1692,33,1207,33,"session"],[1692,40,1207,40],[1692,46,1207,46],[1692,50,1207,50],[1692,54,1207,54,"_a"],[1692,56,1207,56],[1692,61,1207,61],[1692,66,1207,66],[1692,67,1207,67],[1692,70,1207,70],[1692,75,1207,75],[1692,76,1207,76],[1692,79,1207,79,"_a"],[1692,81,1207,81],[1692,82,1207,82,"access_token"],[1692,94,1207,94],[1692,95,1207,95],[1692,99,1207,99],[1692,100,1207,100,"_this0"],[1692,106,1207,104],[1692,107,1207,105,"hasCustomAuthorizationHeader"],[1692,135,1207,133],[1692,137,1207,135],[1693,18,1208,20],[1693,25,1208,27],[1694,20,1208,29,"data"],[1694,24,1208,33],[1694,26,1208,35],[1695,22,1208,37,"user"],[1695,26,1208,41],[1695,28,1208,43],[1696,20,1208,48],[1696,21,1208,49],[1697,20,1208,51,"error"],[1697,25,1208,56],[1697,27,1208,58],[1697,31,1208,62,"errors_1"],[1697,39,1208,70],[1697,40,1208,71,"AuthSessionMissingError"],[1697,63,1208,94],[1697,64,1208,95],[1698,18,1208,97],[1698,19,1208,98],[1699,16,1209,16],[1700,16,1210,16],[1700,29,1210,29],[1700,30,1210,30],[1700,31,1210,31],[1700,33,1210,33,"fetch_1"],[1700,40,1210,40],[1700,41,1210,41,"_request"],[1700,49,1210,49],[1700,51,1210,51,"_this0"],[1700,57,1210,55],[1700,58,1210,56,"fetch"],[1700,63,1210,61],[1700,65,1210,63],[1700,70,1210,68],[1700,72,1210,70],[1700,75,1210,73,"_this0"],[1700,81,1210,77],[1700,82,1210,78,"url"],[1700,85,1210,81],[1700,92,1210,88],[1700,94,1210,90],[1701,18,1211,20,"headers"],[1701,25,1211,27],[1701,27,1211,29,"_this0"],[1701,33,1211,33],[1701,34,1211,34,"headers"],[1701,41,1211,41],[1702,18,1212,20,"jwt"],[1702,21,1212,23],[1702,23,1212,25],[1702,24,1212,26,"_c"],[1702,26,1212,28],[1702,29,1212,31],[1702,30,1212,32,"_b"],[1702,32,1212,34],[1702,35,1212,37,"data"],[1702,39,1212,41],[1702,40,1212,42,"session"],[1702,47,1212,49],[1702,53,1212,55],[1702,57,1212,59],[1702,61,1212,63,"_b"],[1702,63,1212,65],[1702,68,1212,70],[1702,73,1212,75],[1702,74,1212,76],[1702,77,1212,79],[1702,82,1212,84],[1702,83,1212,85],[1702,86,1212,88,"_b"],[1702,88,1212,90],[1702,89,1212,91,"access_token"],[1702,101,1212,103],[1702,107,1212,109],[1702,111,1212,113],[1702,115,1212,117,"_c"],[1702,117,1212,119],[1702,122,1212,124],[1702,127,1212,129],[1702,128,1212,130],[1702,131,1212,133,"_c"],[1702,133,1212,135],[1702,136,1212,138,"undefined"],[1702,145,1212,147],[1703,18,1213,20,"xform"],[1703,23,1213,25],[1703,25,1213,27,"fetch_1"],[1703,32,1213,34],[1703,33,1213,35,"_userResponse"],[1704,16,1214,16],[1704,17,1214,17],[1704,18,1214,18],[1705,14,1215,12],[1705,15,1215,13],[1706,14,1215,13],[1706,31,1215,13,"_x24"],[1706,35,1215,13],[1707,16,1215,13],[1707,23,1215,13,"_ref13"],[1707,29,1215,13],[1707,30,1215,13,"apply"],[1707,35,1215,13],[1707,42,1215,13,"arguments"],[1707,51,1215,13],[1708,14,1215,13],[1709,12,1215,13],[1709,16,1215,14],[1710,10,1216,8],[1710,11,1216,9],[1710,12,1217,8],[1710,19,1217,15,"error"],[1710,24,1217,20],[1710,26,1217,22],[1711,12,1218,12],[1711,16,1218,16],[1711,17,1218,17],[1711,18,1218,18],[1711,20,1218,20,"errors_1"],[1711,28,1218,28],[1711,29,1218,29,"isAuthError"],[1711,40,1218,40],[1711,42,1218,42,"error"],[1711,47,1218,47],[1711,48,1218,48],[1711,50,1218,50],[1712,14,1219,16],[1712,18,1219,20],[1712,19,1219,21],[1712,20,1219,22],[1712,22,1219,24,"errors_1"],[1712,30,1219,32],[1712,31,1219,33,"isAuthSessionMissingError"],[1712,56,1219,58],[1712,58,1219,60,"error"],[1712,63,1219,65],[1712,64,1219,66],[1712,66,1219,68],[1713,16,1220,20],[1714,16,1221,20],[1715,16,1222,20],[1715,22,1222,26],[1715,26,1222,30],[1715,27,1222,31,"_removeSession"],[1715,41,1222,45],[1715,42,1222,46],[1715,43,1222,47],[1716,16,1223,20],[1716,22,1223,26],[1716,23,1223,27],[1716,24,1223,28],[1716,26,1223,30,"helpers_1"],[1716,35,1223,39],[1716,36,1223,40,"removeItemAsync"],[1716,51,1223,55],[1716,53,1223,57],[1716,57,1223,61],[1716,58,1223,62,"storage"],[1716,65,1223,69],[1716,67,1223,71],[1716,70,1223,74],[1716,74,1223,78],[1716,75,1223,79,"storageKey"],[1716,85,1223,89],[1716,101,1223,105],[1716,102,1223,106],[1717,14,1224,16],[1718,14,1225,16],[1718,21,1225,23],[1719,16,1225,25,"data"],[1719,20,1225,29],[1719,22,1225,31],[1720,18,1225,33,"user"],[1720,22,1225,37],[1720,24,1225,39],[1721,16,1225,44],[1721,17,1225,45],[1722,16,1225,47,"error"],[1723,14,1225,53],[1723,15,1225,54],[1724,12,1226,12],[1725,12,1227,12],[1725,18,1227,18,"error"],[1725,23,1227,23],[1726,10,1228,8],[1727,8,1229,4],[1727,9,1229,5],[1728,8,1229,5],[1728,17,1191,10,"_getUser"],[1728,25,1191,18,"_getUser"],[1728,26,1191,18,"_x23"],[1728,30,1191,18],[1729,10,1191,18],[1729,17,1191,18,"_getUser3"],[1729,26,1191,18],[1729,27,1191,18,"apply"],[1729,32,1191,18],[1729,39,1191,18,"arguments"],[1729,48,1191,18],[1730,8,1191,18],[1731,8,1191,18],[1731,15,1191,10,"_getUser"],[1731,23,1191,18],[1732,6,1191,18],[1733,6,1230,4],[1734,0,1231,0],[1735,0,1232,0],[1736,4,1230,4],[1737,6,1230,4,"key"],[1737,9,1230,4],[1738,6,1230,4,"value"],[1738,11,1230,4],[1739,8,1230,4],[1739,12,1230,4,"_updateUser2"],[1739,24,1230,4],[1739,27,1230,4,"_asyncToGenerator"],[1739,44,1230,4],[1739,45,1233,4],[1739,56,1233,21,"attributes"],[1739,66,1233,31],[1739,68,1233,47],[1740,10,1233,47],[1740,14,1233,47,"_this1"],[1740,20,1233,47],[1741,10,1233,47],[1741,14,1233,33,"options"],[1741,21,1233,40],[1741,24,1233,40,"arguments"],[1741,33,1233,40],[1741,34,1233,40,"length"],[1741,40,1233,40],[1741,48,1233,40,"arguments"],[1741,57,1233,40],[1741,65,1233,40,"undefined"],[1741,74,1233,40],[1741,77,1233,40,"arguments"],[1741,86,1233,40],[1741,92,1233,43],[1741,93,1233,44],[1741,94,1233,45],[1742,10,1234,8],[1742,16,1234,14],[1742,20,1234,18],[1742,21,1234,19,"initializePromise"],[1742,38,1234,36],[1743,10,1235,8],[1743,23,1235,21],[1743,27,1235,25],[1743,28,1235,26,"_acquireLock"],[1743,40,1235,38],[1743,41,1235,39],[1743,42,1235,40],[1743,43,1235,41],[1743,58,1235,41,"_asyncToGenerator"],[1743,75,1235,41],[1743,76,1235,43],[1743,89,1235,55],[1744,12,1236,12],[1744,25,1236,25,"_this1"],[1744,31,1236,29],[1744,32,1236,30,"_updateUser"],[1744,43,1236,41],[1744,44,1236,42,"attributes"],[1744,54,1236,52],[1744,56,1236,54,"options"],[1744,63,1236,61],[1744,64,1236,62],[1745,10,1237,8],[1745,11,1237,9],[1745,13,1237,10],[1746,8,1238,4],[1746,9,1238,5],[1747,8,1238,5],[1747,17,1233,10,"updateUser"],[1747,27,1233,20,"updateUser"],[1747,28,1233,20,"_x25"],[1747,32,1233,20],[1748,10,1233,20],[1748,17,1233,20,"_updateUser2"],[1748,29,1233,20],[1748,30,1233,20,"apply"],[1748,35,1233,20],[1748,42,1233,20,"arguments"],[1748,51,1233,20],[1749,8,1233,20],[1750,8,1233,20],[1750,15,1233,10,"updateUser"],[1750,25,1233,20],[1751,6,1233,20],[1752,4,1233,20],[1753,6,1233,20,"key"],[1753,9,1233,20],[1754,6,1233,20,"value"],[1754,11,1233,20],[1755,8,1233,20],[1755,12,1233,20,"_updateUser3"],[1755,24,1233,20],[1755,27,1233,20,"_asyncToGenerator"],[1755,44,1233,20],[1755,45,1239,4],[1755,56,1239,22,"attributes"],[1755,66,1239,32],[1755,68,1239,48],[1756,10,1239,48],[1756,14,1239,48,"_this10"],[1756,21,1239,48],[1757,10,1239,48],[1757,14,1239,34,"options"],[1757,21,1239,41],[1757,24,1239,41,"arguments"],[1757,33,1239,41],[1757,34,1239,41,"length"],[1757,40,1239,41],[1757,48,1239,41,"arguments"],[1757,57,1239,41],[1757,65,1239,41,"undefined"],[1757,74,1239,41],[1757,77,1239,41,"arguments"],[1757,86,1239,41],[1757,92,1239,44],[1757,93,1239,45],[1757,94,1239,46],[1758,10,1240,8],[1758,14,1240,12],[1759,12,1241,12],[1759,25,1241,25],[1759,29,1241,29],[1759,30,1241,30,"_useSession"],[1759,41,1241,41],[1760,14,1241,41],[1760,18,1241,41,"_ref15"],[1760,24,1241,41],[1760,27,1241,41,"_asyncToGenerator"],[1760,44,1241,41],[1760,45,1241,42],[1760,56,1241,49,"result"],[1760,62,1241,55],[1760,64,1241,60],[1761,16,1242,16],[1761,20,1242,30,"sessionData"],[1761,31,1242,41],[1761,34,1242,67,"result"],[1761,40,1242,73],[1761,41,1242,24,"data"],[1761,45,1242,28],[1762,18,1242,50,"sessionError"],[1762,30,1242,62],[1762,33,1242,67,"result"],[1762,39,1242,73],[1762,40,1242,43,"error"],[1762,45,1242,48],[1763,16,1243,16],[1763,20,1243,20,"sessionError"],[1763,32,1243,32],[1763,34,1243,34],[1764,18,1244,20],[1764,24,1244,26,"sessionError"],[1764,36,1244,38],[1765,16,1245,16],[1766,16,1246,16],[1766,20,1246,20],[1766,21,1246,21,"sessionData"],[1766,32,1246,32],[1766,33,1246,33,"session"],[1766,40,1246,40],[1766,42,1246,42],[1767,18,1247,20],[1767,24,1247,26],[1767,28,1247,30,"errors_1"],[1767,36,1247,38],[1767,37,1247,39,"AuthSessionMissingError"],[1767,60,1247,62],[1767,61,1247,63],[1767,62,1247,64],[1768,16,1248,16],[1769,16,1249,16],[1769,20,1249,22,"session"],[1769,27,1249,29],[1769,30,1249,32,"sessionData"],[1769,41,1249,43],[1769,42,1249,44,"session"],[1769,49,1249,51],[1770,16,1250,16],[1770,20,1250,20,"codeChallenge"],[1770,33,1250,33],[1770,36,1250,36],[1770,40,1250,40],[1771,16,1251,16],[1771,20,1251,20,"codeChallengeMethod"],[1771,39,1251,39],[1771,42,1251,42],[1771,46,1251,46],[1772,16,1252,16],[1772,20,1252,20,"_this10"],[1772,27,1252,24],[1772,28,1252,25,"flowType"],[1772,36,1252,33],[1772,41,1252,38],[1772,47,1252,44],[1772,51,1252,48,"attributes"],[1772,61,1252,58],[1772,62,1252,59,"email"],[1772,67,1252,64],[1772,71,1252,68],[1772,75,1252,72],[1772,77,1252,74],[1773,18,1253,20],[1774,18,1253,21],[1774,22,1253,21,"_yield14"],[1774,30,1253,21],[1774,39,1254,65],[1774,40,1254,66],[1774,41,1254,67],[1774,43,1254,69,"helpers_1"],[1774,52,1254,78],[1774,53,1254,79,"getCodeChallengeAndMethod"],[1774,78,1254,104],[1774,80,1254,106,"_this10"],[1774,87,1254,110],[1774,88,1254,111,"storage"],[1774,95,1254,118],[1774,97,1254,120,"_this10"],[1774,104,1254,124],[1774,105,1254,125,"storageKey"],[1774,115,1254,135],[1774,116,1254,136],[1775,18,1254,136],[1775,22,1254,136,"_yield15"],[1775,30,1254,136],[1775,33,1254,136,"_slicedToArray"],[1775,47,1254,136],[1775,48,1254,136,"_yield14"],[1775,56,1254,136],[1776,18,1254,21,"codeChallenge"],[1776,31,1254,34],[1776,34,1254,34,"_yield15"],[1776,42,1254,34],[1777,18,1254,36,"codeChallengeMethod"],[1777,37,1254,55],[1777,40,1254,55,"_yield15"],[1777,48,1254,55],[1778,16,1255,16],[1779,16,1256,16],[1779,20,1256,16,"_yield16"],[1779,28,1256,16],[1779,37,1256,57],[1779,38,1256,58],[1779,39,1256,59],[1779,41,1256,61,"fetch_1"],[1779,48,1256,68],[1779,49,1256,69,"_request"],[1779,57,1256,77],[1779,59,1256,79,"_this10"],[1779,66,1256,83],[1779,67,1256,84,"fetch"],[1779,72,1256,89],[1779,74,1256,91],[1779,79,1256,96],[1779,81,1256,98],[1779,84,1256,101,"_this10"],[1779,91,1256,105],[1779,92,1256,106,"url"],[1779,95,1256,109],[1779,102,1256,116],[1779,104,1256,118],[1780,20,1257,20,"headers"],[1780,27,1257,27],[1780,29,1257,29,"_this10"],[1780,36,1257,33],[1780,37,1257,34,"headers"],[1780,44,1257,41],[1781,20,1258,20,"redirectTo"],[1781,30,1258,30],[1781,32,1258,32,"options"],[1781,39,1258,39],[1781,44,1258,44],[1781,48,1258,48],[1781,52,1258,52,"options"],[1781,59,1258,59],[1781,64,1258,64],[1781,69,1258,69],[1781,70,1258,70],[1781,73,1258,73],[1781,78,1258,78],[1781,79,1258,79],[1781,82,1258,82,"options"],[1781,89,1258,89],[1781,90,1258,90,"emailRedirectTo"],[1781,105,1258,105],[1782,20,1259,20,"body"],[1782,24,1259,24],[1782,26,1259,26,"Object"],[1782,32,1259,32],[1782,33,1259,33,"assign"],[1782,39,1259,39],[1782,40,1259,40,"Object"],[1782,46,1259,46],[1782,47,1259,47,"assign"],[1782,53,1259,53],[1782,54,1259,54],[1782,55,1259,55],[1782,56,1259,56],[1782,58,1259,58,"attributes"],[1782,68,1259,68],[1782,69,1259,69],[1782,71,1259,71],[1783,22,1259,73,"code_challenge"],[1783,36,1259,87],[1783,38,1259,89,"codeChallenge"],[1783,51,1259,102],[1784,22,1259,104,"code_challenge_method"],[1784,43,1259,125],[1784,45,1259,127,"codeChallengeMethod"],[1785,20,1259,147],[1785,21,1259,148],[1785,22,1259,149],[1786,20,1260,20,"jwt"],[1786,23,1260,23],[1786,25,1260,25,"session"],[1786,32,1260,32],[1786,33,1260,33,"access_token"],[1786,45,1260,45],[1787,20,1261,20,"xform"],[1787,25,1261,25],[1787,27,1261,27,"fetch_1"],[1787,34,1261,34],[1787,35,1261,35,"_userResponse"],[1788,18,1262,16],[1788,19,1262,17],[1788,20,1262,18],[1789,18,1256,24,"data"],[1789,22,1256,28],[1789,25,1256,28,"_yield16"],[1789,33,1256,28],[1789,34,1256,24,"data"],[1789,38,1256,28],[1790,18,1256,37,"userError"],[1790,27,1256,46],[1790,30,1256,46,"_yield16"],[1790,38,1256,46],[1790,39,1256,30,"error"],[1790,44,1256,35],[1791,16,1263,16],[1791,20,1263,20,"userError"],[1791,29,1263,29],[1791,31,1264,20],[1791,37,1264,26,"userError"],[1791,46,1264,35],[1792,16,1265,16,"session"],[1792,23,1265,23],[1792,24,1265,24,"user"],[1792,28,1265,28],[1792,31,1265,31,"data"],[1792,35,1265,35],[1792,36,1265,36,"user"],[1792,40,1265,40],[1793,16,1266,16],[1793,22,1266,22,"_this10"],[1793,29,1266,26],[1793,30,1266,27,"_saveSession"],[1793,42,1266,39],[1793,43,1266,40,"session"],[1793,50,1266,47],[1793,51,1266,48],[1794,16,1267,16],[1794,22,1267,22,"_this10"],[1794,29,1267,26],[1794,30,1267,27,"_notifyAllSubscribers"],[1794,51,1267,48],[1794,52,1267,49],[1794,66,1267,63],[1794,68,1267,65,"session"],[1794,75,1267,72],[1794,76,1267,73],[1795,16,1268,16],[1795,23,1268,23],[1796,18,1268,25,"data"],[1796,22,1268,29],[1796,24,1268,31],[1797,20,1268,33,"user"],[1797,24,1268,37],[1797,26,1268,39,"session"],[1797,33,1268,46],[1797,34,1268,47,"user"],[1798,18,1268,52],[1798,19,1268,53],[1799,18,1268,55,"error"],[1799,23,1268,60],[1799,25,1268,62],[1800,16,1268,67],[1800,17,1268,68],[1801,14,1269,12],[1801,15,1269,13],[1802,14,1269,13],[1802,31,1269,13,"_x27"],[1802,35,1269,13],[1803,16,1269,13],[1803,23,1269,13,"_ref15"],[1803,29,1269,13],[1803,30,1269,13,"apply"],[1803,35,1269,13],[1803,42,1269,13,"arguments"],[1803,51,1269,13],[1804,14,1269,13],[1805,12,1269,13],[1805,16,1269,14],[1806,10,1270,8],[1806,11,1270,9],[1806,12,1271,8],[1806,19,1271,15,"error"],[1806,24,1271,20],[1806,26,1271,22],[1807,12,1272,12],[1807,16,1272,16],[1807,17,1272,17],[1807,18,1272,18],[1807,20,1272,20,"errors_1"],[1807,28,1272,28],[1807,29,1272,29,"isAuthError"],[1807,40,1272,40],[1807,42,1272,42,"error"],[1807,47,1272,47],[1807,48,1272,48],[1807,50,1272,50],[1808,14,1273,16],[1808,21,1273,23],[1809,16,1273,25,"data"],[1809,20,1273,29],[1809,22,1273,31],[1810,18,1273,33,"user"],[1810,22,1273,37],[1810,24,1273,39],[1811,16,1273,44],[1811,17,1273,45],[1812,16,1273,47,"error"],[1813,14,1273,53],[1813,15,1273,54],[1814,12,1274,12],[1815,12,1275,12],[1815,18,1275,18,"error"],[1815,23,1275,23],[1816,10,1276,8],[1817,8,1277,4],[1817,9,1277,5],[1818,8,1277,5],[1818,17,1239,10,"_updateUser"],[1818,28,1239,21,"_updateUser"],[1818,29,1239,21,"_x26"],[1818,33,1239,21],[1819,10,1239,21],[1819,17,1239,21,"_updateUser3"],[1819,29,1239,21],[1819,30,1239,21,"apply"],[1819,35,1239,21],[1819,42,1239,21,"arguments"],[1819,51,1239,21],[1820,8,1239,21],[1821,8,1239,21],[1821,15,1239,10,"_updateUser"],[1821,26,1239,21],[1822,6,1239,21],[1823,6,1278,4],[1824,0,1279,0],[1825,0,1280,0],[1826,0,1281,0],[1827,0,1282,0],[1828,4,1278,4],[1829,6,1278,4,"key"],[1829,9,1278,4],[1830,6,1278,4,"value"],[1830,11,1278,4],[1831,8,1278,4],[1831,12,1278,4,"_setSession2"],[1831,24,1278,4],[1831,27,1278,4,"_asyncToGenerator"],[1831,44,1278,4],[1831,45,1283,4],[1831,56,1283,21,"currentSession"],[1831,70,1283,35],[1831,72,1283,37],[1832,10,1283,37],[1832,14,1283,37,"_this11"],[1832,21,1283,37],[1833,10,1284,8],[1833,16,1284,14],[1833,20,1284,18],[1833,21,1284,19,"initializePromise"],[1833,38,1284,36],[1834,10,1285,8],[1834,23,1285,21],[1834,27,1285,25],[1834,28,1285,26,"_acquireLock"],[1834,40,1285,38],[1834,41,1285,39],[1834,42,1285,40],[1834,43,1285,41],[1834,58,1285,41,"_asyncToGenerator"],[1834,75,1285,41],[1834,76,1285,43],[1834,89,1285,55],[1835,12,1286,12],[1835,25,1286,25,"_this11"],[1835,32,1286,29],[1835,33,1286,30,"_setSession"],[1835,44,1286,41],[1835,45,1286,42,"currentSession"],[1835,59,1286,56],[1835,60,1286,57],[1836,10,1287,8],[1836,11,1287,9],[1836,13,1287,10],[1837,8,1288,4],[1837,9,1288,5],[1838,8,1288,5],[1838,17,1283,10,"setSession"],[1838,27,1283,20,"setSession"],[1838,28,1283,20,"_x28"],[1838,32,1283,20],[1839,10,1283,20],[1839,17,1283,20,"_setSession2"],[1839,29,1283,20],[1839,30,1283,20,"apply"],[1839,35,1283,20],[1839,42,1283,20,"arguments"],[1839,51,1283,20],[1840,8,1283,20],[1841,8,1283,20],[1841,15,1283,10,"setSession"],[1841,25,1283,20],[1842,6,1283,20],[1843,4,1283,20],[1844,6,1283,20,"key"],[1844,9,1283,20],[1845,6,1283,20,"value"],[1845,11,1283,20],[1846,8,1283,20],[1846,12,1283,20,"_setSession3"],[1846,24,1283,20],[1846,27,1283,20,"_asyncToGenerator"],[1846,44,1283,20],[1846,45,1289,4],[1846,56,1289,22,"currentSession"],[1846,70,1289,36],[1846,72,1289,38],[1847,10,1290,8],[1847,14,1290,12],[1848,12,1291,12],[1848,16,1291,16],[1848,17,1291,17,"currentSession"],[1848,31,1291,31],[1848,32,1291,32,"access_token"],[1848,44,1291,44],[1848,48,1291,48],[1848,49,1291,49,"currentSession"],[1848,63,1291,63],[1848,64,1291,64,"refresh_token"],[1848,77,1291,77],[1848,79,1291,79],[1849,14,1292,16],[1849,20,1292,22],[1849,24,1292,26,"errors_1"],[1849,32,1292,34],[1849,33,1292,35,"AuthSessionMissingError"],[1849,56,1292,58],[1849,57,1292,59],[1849,58,1292,60],[1850,12,1293,12],[1851,12,1294,12],[1851,16,1294,18,"timeNow"],[1851,23,1294,25],[1851,26,1294,28,"Date"],[1851,30,1294,32],[1851,31,1294,33,"now"],[1851,34,1294,36],[1851,35,1294,37],[1851,36,1294,38],[1851,39,1294,41],[1851,43,1294,45],[1852,12,1295,12],[1852,16,1295,16,"expiresAt"],[1852,25,1295,25],[1852,28,1295,28,"timeNow"],[1852,35,1295,35],[1853,12,1296,12],[1853,16,1296,16,"hasExpired"],[1853,26,1296,26],[1853,29,1296,29],[1853,33,1296,33],[1854,12,1297,12],[1854,16,1297,16,"session"],[1854,23,1297,23],[1854,26,1297,26],[1854,30,1297,30],[1855,12,1298,12],[1855,16,1298,12,"_ref17"],[1855,22,1298,12],[1855,25,1298,32],[1855,26,1298,33],[1855,27,1298,34],[1855,29,1298,36,"helpers_1"],[1855,38,1298,45],[1855,39,1298,46,"decodeJWT"],[1855,48,1298,55],[1855,50,1298,57,"currentSession"],[1855,64,1298,71],[1855,65,1298,72,"access_token"],[1855,77,1298,84],[1855,78,1298,85],[1856,14,1298,20,"payload"],[1856,21,1298,27],[1856,24,1298,27,"_ref17"],[1856,30,1298,27],[1856,31,1298,20,"payload"],[1856,38,1298,27],[1857,12,1299,12],[1857,16,1299,16,"payload"],[1857,23,1299,23],[1857,24,1299,24,"exp"],[1857,27,1299,27],[1857,29,1299,29],[1858,14,1300,16,"expiresAt"],[1858,23,1300,25],[1858,26,1300,28,"payload"],[1858,33,1300,35],[1858,34,1300,36,"exp"],[1858,37,1300,39],[1859,14,1301,16,"hasExpired"],[1859,24,1301,26],[1859,27,1301,29,"expiresAt"],[1859,36,1301,38],[1859,40,1301,42,"timeNow"],[1859,47,1301,49],[1860,12,1302,12],[1861,12,1303,12],[1861,16,1303,16,"hasExpired"],[1861,26,1303,26],[1861,28,1303,28],[1862,14,1304,16],[1862,18,1304,16,"_yield$this$_callRefr2"],[1862,40,1304,16],[1862,49,1304,64],[1862,53,1304,68],[1862,54,1304,69,"_callRefreshToken"],[1862,71,1304,86],[1862,72,1304,87,"currentSession"],[1862,86,1304,101],[1862,87,1304,102,"refresh_token"],[1862,100,1304,115],[1862,101,1304,116],[1863,16,1304,30,"refreshedSession"],[1863,32,1304,46],[1863,35,1304,46,"_yield$this$_callRefr2"],[1863,57,1304,46],[1863,58,1304,24,"data"],[1863,62,1304,28],[1864,16,1304,48,"error"],[1864,21,1304,53],[1864,24,1304,53,"_yield$this$_callRefr2"],[1864,46,1304,53],[1864,47,1304,48,"error"],[1864,52,1304,53],[1865,14,1305,16],[1865,18,1305,20,"error"],[1865,23,1305,25],[1865,25,1305,27],[1866,16,1306,20],[1866,23,1306,27],[1867,18,1306,29,"data"],[1867,22,1306,33],[1867,24,1306,35],[1868,20,1306,37,"user"],[1868,24,1306,41],[1868,26,1306,43],[1868,30,1306,47],[1869,20,1306,49,"session"],[1869,27,1306,56],[1869,29,1306,58],[1870,18,1306,63],[1870,19,1306,64],[1871,18,1306,66,"error"],[1871,23,1306,71],[1871,25,1306,73,"error"],[1872,16,1306,79],[1872,17,1306,80],[1873,14,1307,16],[1874,14,1308,16],[1874,18,1308,20],[1874,19,1308,21,"refreshedSession"],[1874,35,1308,37],[1874,37,1308,39],[1875,16,1309,20],[1875,23,1309,27],[1876,18,1309,29,"data"],[1876,22,1309,33],[1876,24,1309,35],[1877,20,1309,37,"user"],[1877,24,1309,41],[1877,26,1309,43],[1877,30,1309,47],[1878,20,1309,49,"session"],[1878,27,1309,56],[1878,29,1309,58],[1879,18,1309,63],[1879,19,1309,64],[1880,18,1309,66,"error"],[1880,23,1309,71],[1880,25,1309,73],[1881,16,1309,78],[1881,17,1309,79],[1882,14,1310,16],[1883,14,1311,16,"session"],[1883,21,1311,23],[1883,24,1311,26,"refreshedSession"],[1883,40,1311,42],[1884,12,1312,12],[1884,13,1312,13],[1884,19,1313,17],[1885,14,1314,16],[1885,18,1314,16,"_yield$this$_getUser"],[1885,38,1314,16],[1885,47,1314,46],[1885,51,1314,50],[1885,52,1314,51,"_getUser"],[1885,60,1314,59],[1885,61,1314,60,"currentSession"],[1885,75,1314,74],[1885,76,1314,75,"access_token"],[1885,88,1314,87],[1885,89,1314,88],[1886,16,1314,24,"data"],[1886,20,1314,28],[1886,23,1314,28,"_yield$this$_getUser"],[1886,43,1314,28],[1886,44,1314,24,"data"],[1886,48,1314,28],[1887,16,1314,30,"error"],[1887,23,1314,35],[1887,26,1314,35,"_yield$this$_getUser"],[1887,46,1314,35],[1887,47,1314,30,"error"],[1887,52,1314,35],[1888,14,1315,16],[1888,18,1315,20,"error"],[1888,25,1315,25],[1888,27,1315,27],[1889,16,1316,20],[1889,22,1316,26,"error"],[1889,29,1316,31],[1890,14,1317,16],[1891,14,1318,16,"session"],[1891,21,1318,23],[1891,24,1318,26],[1892,16,1319,20,"access_token"],[1892,28,1319,32],[1892,30,1319,34,"currentSession"],[1892,44,1319,48],[1892,45,1319,49,"access_token"],[1892,57,1319,61],[1893,16,1320,20,"refresh_token"],[1893,29,1320,33],[1893,31,1320,35,"currentSession"],[1893,45,1320,49],[1893,46,1320,50,"refresh_token"],[1893,59,1320,63],[1894,16,1321,20,"user"],[1894,20,1321,24],[1894,22,1321,26,"data"],[1894,26,1321,30],[1894,27,1321,31,"user"],[1894,31,1321,35],[1895,16,1322,20,"token_type"],[1895,26,1322,30],[1895,28,1322,32],[1895,36,1322,40],[1896,16,1323,20,"expires_in"],[1896,26,1323,30],[1896,28,1323,32,"expiresAt"],[1896,37,1323,41],[1896,40,1323,44,"timeNow"],[1896,47,1323,51],[1897,16,1324,20,"expires_at"],[1897,26,1324,30],[1897,28,1324,32,"expiresAt"],[1898,14,1325,16],[1898,15,1325,17],[1899,14,1326,16],[1899,20,1326,22],[1899,24,1326,26],[1899,25,1326,27,"_saveSession"],[1899,37,1326,39],[1899,38,1326,40,"session"],[1899,45,1326,47],[1899,46,1326,48],[1900,14,1327,16],[1900,20,1327,22],[1900,24,1327,26],[1900,25,1327,27,"_notifyAllSubscribers"],[1900,46,1327,48],[1900,47,1327,49],[1900,58,1327,60],[1900,60,1327,62,"session"],[1900,67,1327,69],[1900,68,1327,70],[1901,12,1328,12],[1902,12,1329,12],[1902,19,1329,19],[1903,14,1329,21,"data"],[1903,18,1329,25],[1903,20,1329,27],[1904,16,1329,29,"user"],[1904,20,1329,33],[1904,22,1329,35,"session"],[1904,29,1329,42],[1904,30,1329,43,"user"],[1904,34,1329,47],[1905,16,1329,49,"session"],[1906,14,1329,57],[1906,15,1329,58],[1907,14,1329,60,"error"],[1907,19,1329,65],[1907,21,1329,67],[1908,12,1329,72],[1908,13,1329,73],[1909,10,1330,8],[1909,11,1330,9],[1909,12,1331,8],[1909,19,1331,15,"error"],[1909,24,1331,20],[1909,26,1331,22],[1910,12,1332,12],[1910,16,1332,16],[1910,17,1332,17],[1910,18,1332,18],[1910,20,1332,20,"errors_1"],[1910,28,1332,28],[1910,29,1332,29,"isAuthError"],[1910,40,1332,40],[1910,42,1332,42,"error"],[1910,47,1332,47],[1910,48,1332,48],[1910,50,1332,50],[1911,14,1333,16],[1911,21,1333,23],[1912,16,1333,25,"data"],[1912,20,1333,29],[1912,22,1333,31],[1913,18,1333,33,"session"],[1913,25,1333,40],[1913,27,1333,42],[1913,31,1333,46],[1914,18,1333,48,"user"],[1914,22,1333,52],[1914,24,1333,54],[1915,16,1333,59],[1915,17,1333,60],[1916,16,1333,62,"error"],[1917,14,1333,68],[1917,15,1333,69],[1918,12,1334,12],[1919,12,1335,12],[1919,18,1335,18,"error"],[1919,23,1335,23],[1920,10,1336,8],[1921,8,1337,4],[1921,9,1337,5],[1922,8,1337,5],[1922,17,1289,10,"_setSession"],[1922,28,1289,21,"_setSession"],[1922,29,1289,21,"_x29"],[1922,33,1289,21],[1923,10,1289,21],[1923,17,1289,21,"_setSession3"],[1923,29,1289,21],[1923,30,1289,21,"apply"],[1923,35,1289,21],[1923,42,1289,21,"arguments"],[1923,51,1289,21],[1924,8,1289,21],[1925,8,1289,21],[1925,15,1289,10,"_setSession"],[1925,26,1289,21],[1926,6,1289,21],[1927,6,1338,4],[1928,0,1339,0],[1929,0,1340,0],[1930,0,1341,0],[1931,0,1342,0],[1932,0,1343,0],[1933,4,1338,4],[1934,6,1338,4,"key"],[1934,9,1338,4],[1935,6,1338,4,"value"],[1935,11,1338,4],[1936,8,1338,4],[1936,12,1338,4,"_refreshSession2"],[1936,28,1338,4],[1936,31,1338,4,"_asyncToGenerator"],[1936,48,1338,4],[1936,49,1344,4],[1936,60,1344,25,"currentSession"],[1936,74,1344,39],[1936,76,1344,41],[1937,10,1344,41],[1937,14,1344,41,"_this12"],[1937,21,1344,41],[1938,10,1345,8],[1938,16,1345,14],[1938,20,1345,18],[1938,21,1345,19,"initializePromise"],[1938,38,1345,36],[1939,10,1346,8],[1939,23,1346,21],[1939,27,1346,25],[1939,28,1346,26,"_acquireLock"],[1939,40,1346,38],[1939,41,1346,39],[1939,42,1346,40],[1939,43,1346,41],[1939,58,1346,41,"_asyncToGenerator"],[1939,75,1346,41],[1939,76,1346,43],[1939,89,1346,55],[1940,12,1347,12],[1940,25,1347,25,"_this12"],[1940,32,1347,29],[1940,33,1347,30,"_refreshSession"],[1940,48,1347,45],[1940,49,1347,46,"currentSession"],[1940,63,1347,60],[1940,64,1347,61],[1941,10,1348,8],[1941,11,1348,9],[1941,13,1348,10],[1942,8,1349,4],[1942,9,1349,5],[1943,8,1349,5],[1943,17,1344,10,"refreshSession"],[1943,31,1344,24,"refreshSession"],[1943,32,1344,24,"_x30"],[1943,36,1344,24],[1944,10,1344,24],[1944,17,1344,24,"_refreshSession2"],[1944,33,1344,24],[1944,34,1344,24,"apply"],[1944,39,1344,24],[1944,46,1344,24,"arguments"],[1944,55,1344,24],[1945,8,1344,24],[1946,8,1344,24],[1946,15,1344,10,"refreshSession"],[1946,29,1344,24],[1947,6,1344,24],[1948,4,1344,24],[1949,6,1344,24,"key"],[1949,9,1344,24],[1950,6,1344,24,"value"],[1950,11,1344,24],[1951,8,1344,24],[1951,12,1344,24,"_refreshSession3"],[1951,28,1344,24],[1951,31,1344,24,"_asyncToGenerator"],[1951,48,1344,24],[1951,49,1350,4],[1951,60,1350,26,"currentSession"],[1951,74,1350,40],[1951,76,1350,42],[1952,10,1350,42],[1952,14,1350,42,"_this13"],[1952,21,1350,42],[1953,10,1351,8],[1953,14,1351,12],[1954,12,1352,12],[1954,25,1352,25],[1954,29,1352,29],[1954,30,1352,30,"_useSession"],[1954,41,1352,41],[1955,14,1352,41],[1955,18,1352,41,"_ref19"],[1955,24,1352,41],[1955,27,1352,41,"_asyncToGenerator"],[1955,44,1352,41],[1955,45,1352,42],[1955,56,1352,49,"result"],[1955,62,1352,55],[1955,64,1352,60],[1956,16,1353,16],[1956,20,1353,20,"_a"],[1956,22,1353,22],[1957,16,1354,16],[1957,20,1354,20],[1957,21,1354,21,"currentSession"],[1957,35,1354,35],[1957,37,1354,37],[1958,18,1355,20],[1958,22,1355,28,"data"],[1958,26,1355,32],[1958,29,1355,44,"result"],[1958,35,1355,50],[1958,36,1355,28,"data"],[1958,40,1355,32],[1959,20,1355,34,"error"],[1959,27,1355,39],[1959,30,1355,44,"result"],[1959,36,1355,50],[1959,37,1355,34,"error"],[1959,42,1355,39],[1960,18,1356,20],[1960,22,1356,24,"error"],[1960,29,1356,29],[1960,31,1356,31],[1961,20,1357,24],[1961,26,1357,30,"error"],[1961,33,1357,35],[1962,18,1358,20],[1963,18,1359,20,"currentSession"],[1963,32,1359,34],[1963,35,1359,37],[1963,36,1359,38,"_a"],[1963,38,1359,40],[1963,41,1359,43,"data"],[1963,45,1359,47],[1963,46,1359,48,"session"],[1963,53,1359,55],[1963,59,1359,61],[1963,63,1359,65],[1963,67,1359,69,"_a"],[1963,69,1359,71],[1963,74,1359,76],[1963,79,1359,81],[1963,80,1359,82],[1963,83,1359,85,"_a"],[1963,85,1359,87],[1963,88,1359,90,"undefined"],[1963,97,1359,99],[1964,16,1360,16],[1965,16,1361,16],[1965,20,1361,20],[1965,22,1361,22,"currentSession"],[1965,36,1361,36],[1965,41,1361,41],[1965,45,1361,45],[1965,49,1361,49,"currentSession"],[1965,63,1361,63],[1965,68,1361,68],[1965,73,1361,73],[1965,74,1361,74],[1965,77,1361,77],[1965,82,1361,82],[1965,83,1361,83],[1965,86,1361,86,"currentSession"],[1965,100,1361,100],[1965,101,1361,101,"refresh_token"],[1965,114,1361,114],[1965,115,1361,115],[1965,117,1361,117],[1966,18,1362,20],[1966,24,1362,26],[1966,28,1362,30,"errors_1"],[1966,36,1362,38],[1966,37,1362,39,"AuthSessionMissingError"],[1966,60,1362,62],[1966,61,1362,63],[1966,62,1362,64],[1967,16,1363,16],[1968,16,1364,16],[1968,20,1364,16,"_yield$_this13$_callR"],[1968,41,1364,16],[1968,50,1364,55,"_this13"],[1968,57,1364,59],[1968,58,1364,60,"_callRefreshToken"],[1968,75,1364,77],[1968,76,1364,78,"currentSession"],[1968,90,1364,92],[1968,91,1364,93,"refresh_token"],[1968,104,1364,106],[1968,105,1364,107],[1969,18,1364,30,"session"],[1969,25,1364,37],[1969,28,1364,37,"_yield$_this13$_callR"],[1969,49,1364,37],[1969,50,1364,24,"data"],[1969,54,1364,28],[1970,18,1364,39,"error"],[1970,23,1364,44],[1970,26,1364,44,"_yield$_this13$_callR"],[1970,47,1364,44],[1970,48,1364,39,"error"],[1970,53,1364,44],[1971,16,1365,16],[1971,20,1365,20,"error"],[1971,25,1365,25],[1971,27,1365,27],[1972,18,1366,20],[1972,25,1366,27],[1973,20,1366,29,"data"],[1973,24,1366,33],[1973,26,1366,35],[1974,22,1366,37,"user"],[1974,26,1366,41],[1974,28,1366,43],[1974,32,1366,47],[1975,22,1366,49,"session"],[1975,29,1366,56],[1975,31,1366,58],[1976,20,1366,63],[1976,21,1366,64],[1977,20,1366,66,"error"],[1977,25,1366,71],[1977,27,1366,73,"error"],[1978,18,1366,79],[1978,19,1366,80],[1979,16,1367,16],[1980,16,1368,16],[1980,20,1368,20],[1980,21,1368,21,"session"],[1980,28,1368,28],[1980,30,1368,30],[1981,18,1369,20],[1981,25,1369,27],[1982,20,1369,29,"data"],[1982,24,1369,33],[1982,26,1369,35],[1983,22,1369,37,"user"],[1983,26,1369,41],[1983,28,1369,43],[1983,32,1369,47],[1984,22,1369,49,"session"],[1984,29,1369,56],[1984,31,1369,58],[1985,20,1369,63],[1985,21,1369,64],[1986,20,1369,66,"error"],[1986,25,1369,71],[1986,27,1369,73],[1987,18,1369,78],[1987,19,1369,79],[1988,16,1370,16],[1989,16,1371,16],[1989,23,1371,23],[1990,18,1371,25,"data"],[1990,22,1371,29],[1990,24,1371,31],[1991,20,1371,33,"user"],[1991,24,1371,37],[1991,26,1371,39,"session"],[1991,33,1371,46],[1991,34,1371,47,"user"],[1991,38,1371,51],[1992,20,1371,53,"session"],[1993,18,1371,61],[1993,19,1371,62],[1994,18,1371,64,"error"],[1994,23,1371,69],[1994,25,1371,71],[1995,16,1371,76],[1995,17,1371,77],[1996,14,1372,12],[1996,15,1372,13],[1997,14,1372,13],[1997,31,1372,13,"_x32"],[1997,35,1372,13],[1998,16,1372,13],[1998,23,1372,13,"_ref19"],[1998,29,1372,13],[1998,30,1372,13,"apply"],[1998,35,1372,13],[1998,42,1372,13,"arguments"],[1998,51,1372,13],[1999,14,1372,13],[2000,12,1372,13],[2000,16,1372,14],[2001,10,1373,8],[2001,11,1373,9],[2001,12,1374,8],[2001,19,1374,15,"error"],[2001,24,1374,20],[2001,26,1374,22],[2002,12,1375,12],[2002,16,1375,16],[2002,17,1375,17],[2002,18,1375,18],[2002,20,1375,20,"errors_1"],[2002,28,1375,28],[2002,29,1375,29,"isAuthError"],[2002,40,1375,40],[2002,42,1375,42,"error"],[2002,47,1375,47],[2002,48,1375,48],[2002,50,1375,50],[2003,14,1376,16],[2003,21,1376,23],[2004,16,1376,25,"data"],[2004,20,1376,29],[2004,22,1376,31],[2005,18,1376,33,"user"],[2005,22,1376,37],[2005,24,1376,39],[2005,28,1376,43],[2006,18,1376,45,"session"],[2006,25,1376,52],[2006,27,1376,54],[2007,16,1376,59],[2007,17,1376,60],[2008,16,1376,62,"error"],[2009,14,1376,68],[2009,15,1376,69],[2010,12,1377,12],[2011,12,1378,12],[2011,18,1378,18,"error"],[2011,23,1378,23],[2012,10,1379,8],[2013,8,1380,4],[2013,9,1380,5],[2014,8,1380,5],[2014,17,1350,10,"_refreshSession"],[2014,32,1350,25,"_refreshSession"],[2014,33,1350,25,"_x31"],[2014,37,1350,25],[2015,10,1350,25],[2015,17,1350,25,"_refreshSession3"],[2015,33,1350,25],[2015,34,1350,25,"apply"],[2015,39,1350,25],[2015,46,1350,25,"arguments"],[2015,55,1350,25],[2016,8,1350,25],[2017,8,1350,25],[2017,15,1350,10,"_refreshSession"],[2017,30,1350,25],[2018,6,1350,25],[2019,6,1381,4],[2020,0,1382,0],[2021,0,1383,0],[2022,4,1381,4],[2023,6,1381,4,"key"],[2023,9,1381,4],[2024,6,1381,4,"value"],[2024,11,1381,4],[2025,8,1381,4],[2025,12,1381,4,"_getSessionFromURL2"],[2025,31,1381,4],[2025,34,1381,4,"_asyncToGenerator"],[2025,51,1381,4],[2025,52,1384,4],[2025,63,1384,29,"params"],[2025,69,1384,35],[2025,71,1384,37,"callbackUrlType"],[2025,86,1384,52],[2025,88,1384,54],[2026,10,1385,8],[2026,14,1385,12],[2027,12,1386,12],[2027,16,1386,16],[2027,17,1386,17],[2027,18,1386,18],[2027,19,1386,19],[2027,21,1386,21,"helpers_1"],[2027,30,1386,30],[2027,31,1386,31,"isBrowser"],[2027,40,1386,40],[2027,42,1386,42],[2027,43,1386,43],[2027,45,1387,16],[2027,51,1387,22],[2027,55,1387,26,"errors_1"],[2027,63,1387,34],[2027,64,1387,35,"AuthImplicitGrantRedirectError"],[2027,94,1387,65],[2027,95,1387,66],[2027,117,1387,88],[2027,118,1387,89],[2028,12,1388,12],[2029,12,1389,12],[2029,16,1389,16,"params"],[2029,22,1389,22],[2029,23,1389,23,"error"],[2029,28,1389,28],[2029,32,1389,32,"params"],[2029,38,1389,38],[2029,39,1389,39,"error_description"],[2029,56,1389,56],[2029,60,1389,60,"params"],[2029,66,1389,66],[2029,67,1389,67,"error_code"],[2029,77,1389,77],[2029,79,1389,79],[2030,14,1390,16],[2031,14,1391,16],[2032,14,1392,16],[2032,20,1392,22],[2032,24,1392,26,"errors_1"],[2032,32,1392,34],[2032,33,1392,35,"AuthImplicitGrantRedirectError"],[2032,63,1392,65],[2032,64,1392,66,"params"],[2032,70,1392,72],[2032,71,1392,73,"error_description"],[2032,88,1392,90],[2032,92,1392,94],[2032,141,1392,143],[2032,143,1392,145],[2033,16,1393,20,"error"],[2033,21,1393,25],[2033,23,1393,27,"params"],[2033,29,1393,33],[2033,30,1393,34,"error"],[2033,35,1393,39],[2033,39,1393,43],[2033,58,1393,62],[2034,16,1394,20,"code"],[2034,20,1394,24],[2034,22,1394,26,"params"],[2034,28,1394,32],[2034,29,1394,33,"error_code"],[2034,39,1394,43],[2034,43,1394,47],[2035,14,1395,16],[2035,15,1395,17],[2035,16,1395,18],[2036,12,1396,12],[2037,12,1397,12],[2038,12,1398,12],[2038,20,1398,20,"callbackUrlType"],[2038,35,1398,35],[2039,14,1399,16],[2039,19,1399,21],[2039,29,1399,31],[2040,16,1400,20],[2040,20,1400,24],[2040,24,1400,28],[2040,25,1400,29,"flowType"],[2040,33,1400,37],[2040,38,1400,42],[2040,44,1400,48],[2040,46,1400,50],[2041,18,1401,24],[2041,24,1401,30],[2041,28,1401,34,"errors_1"],[2041,36,1401,42],[2041,37,1401,43,"AuthPKCEGrantCodeExchangeError"],[2041,67,1401,73],[2041,68,1401,74],[2041,96,1401,102],[2041,97,1401,103],[2042,16,1402,20],[2043,16,1403,20],[2044,14,1404,16],[2044,19,1404,21],[2044,25,1404,27],[2045,16,1405,20],[2045,20,1405,24],[2045,24,1405,28],[2045,25,1405,29,"flowType"],[2045,33,1405,37],[2045,38,1405,42],[2045,48,1405,52],[2045,50,1405,54],[2046,18,1406,24],[2046,24,1406,30],[2046,28,1406,34,"errors_1"],[2046,36,1406,42],[2046,37,1406,43,"AuthImplicitGrantRedirectError"],[2046,67,1406,73],[2046,68,1406,74],[2046,106,1406,112],[2046,107,1406,113],[2047,16,1407,20],[2048,16,1408,20],[2049,14,1409,16],[2050,14,1410,16],[2051,12,1411,12],[2052,12,1412,12],[2053,12,1413,12],[2053,16,1413,16,"callbackUrlType"],[2053,31,1413,31],[2053,36,1413,36],[2053,42,1413,42],[2053,44,1413,44],[2054,14,1414,16],[2054,18,1414,20],[2054,19,1414,21,"_debug"],[2054,25,1414,27],[2054,26,1414,28],[2054,42,1414,44],[2054,44,1414,46],[2054,51,1414,53],[2054,53,1414,55],[2054,67,1414,69],[2054,69,1414,71],[2054,73,1414,75],[2054,74,1414,76],[2055,14,1415,16],[2055,18,1415,20],[2055,19,1415,21,"params"],[2055,25,1415,27],[2055,26,1415,28,"code"],[2055,30,1415,32],[2055,32,1416,20],[2055,38,1416,26],[2055,42,1416,30,"errors_1"],[2055,50,1416,38],[2055,51,1416,39,"AuthPKCEGrantCodeExchangeError"],[2055,81,1416,69],[2055,82,1416,70],[2055,101,1416,89],[2055,102,1416,90],[2056,14,1417,16],[2056,18,1417,16,"_yield$this$_exchange"],[2056,39,1417,16],[2056,48,1417,46],[2056,52,1417,50],[2056,53,1417,51,"_exchangeCodeForSession"],[2056,76,1417,74],[2056,77,1417,75,"params"],[2056,83,1417,81],[2056,84,1417,82,"code"],[2056,88,1417,86],[2056,89,1417,87],[2057,16,1417,24,"data"],[2057,21,1417,28],[2057,24,1417,28,"_yield$this$_exchange"],[2057,45,1417,28],[2057,46,1417,24,"data"],[2057,50,1417,28],[2058,16,1417,30,"error"],[2058,23,1417,35],[2058,26,1417,35,"_yield$this$_exchange"],[2058,47,1417,35],[2058,48,1417,30,"error"],[2058,53,1417,35],[2059,14,1418,16],[2059,18,1418,20,"error"],[2059,25,1418,25],[2059,27,1419,20],[2059,33,1419,26,"error"],[2059,40,1419,31],[2060,14,1420,16],[2060,18,1420,22,"url"],[2060,21,1420,25],[2060,24,1420,28],[2060,28,1420,32,"URL"],[2060,31,1420,35],[2060,32,1420,36,"window"],[2060,38,1420,42],[2060,39,1420,43,"location"],[2060,47,1420,51],[2060,48,1420,52,"href"],[2060,52,1420,56],[2060,53,1420,57],[2061,14,1421,16,"url"],[2061,17,1421,19],[2061,18,1421,20,"searchParams"],[2061,30,1421,32],[2061,31,1421,33,"delete"],[2061,37,1421,39],[2061,38,1421,40],[2061,44,1421,46],[2061,45,1421,47],[2062,14,1422,16,"window"],[2062,20,1422,22],[2062,21,1422,23,"history"],[2062,28,1422,30],[2062,29,1422,31,"replaceState"],[2062,41,1422,43],[2062,42,1422,44,"window"],[2062,48,1422,50],[2062,49,1422,51,"history"],[2062,56,1422,58],[2062,57,1422,59,"state"],[2062,62,1422,64],[2062,64,1422,66],[2062,66,1422,68],[2062,68,1422,70,"url"],[2062,71,1422,73],[2062,72,1422,74,"toString"],[2062,80,1422,82],[2062,81,1422,83],[2062,82,1422,84],[2062,83,1422,85],[2063,14,1423,16],[2063,21,1423,23],[2064,16,1423,25,"data"],[2064,20,1423,29],[2064,22,1423,31],[2065,18,1423,33,"session"],[2065,25,1423,40],[2065,27,1423,42,"data"],[2065,32,1423,46],[2065,33,1423,47,"session"],[2065,40,1423,54],[2066,18,1423,56,"redirectType"],[2066,30,1423,68],[2066,32,1423,70],[2067,16,1423,75],[2067,17,1423,76],[2068,16,1423,78,"error"],[2068,21,1423,83],[2068,23,1423,85],[2069,14,1423,90],[2069,15,1423,91],[2070,12,1424,12],[2071,12,1425,12],[2071,16,1425,20,"provider_token"],[2071,30,1425,34],[2071,33,1425,129,"params"],[2071,39,1425,135],[2071,40,1425,20,"provider_token"],[2071,54,1425,34],[2072,14,1425,36,"provider_refresh_token"],[2072,36,1425,58],[2072,39,1425,129,"params"],[2072,45,1425,135],[2072,46,1425,36,"provider_refresh_token"],[2072,68,1425,58],[2073,14,1425,60,"access_token"],[2073,26,1425,72],[2073,29,1425,129,"params"],[2073,35,1425,135],[2073,36,1425,60,"access_token"],[2073,48,1425,72],[2074,14,1425,74,"refresh_token"],[2074,27,1425,87],[2074,30,1425,129,"params"],[2074,36,1425,135],[2074,37,1425,74,"refresh_token"],[2074,50,1425,87],[2075,14,1425,89,"expires_in"],[2075,24,1425,99],[2075,27,1425,129,"params"],[2075,33,1425,135],[2075,34,1425,89,"expires_in"],[2075,44,1425,99],[2076,14,1425,101,"expires_at"],[2076,24,1425,111],[2076,27,1425,129,"params"],[2076,33,1425,135],[2076,34,1425,101,"expires_at"],[2076,44,1425,111],[2077,14,1425,113,"token_type"],[2077,24,1425,123],[2077,27,1425,129,"params"],[2077,33,1425,135],[2077,34,1425,113,"token_type"],[2077,44,1425,123],[2078,12,1426,12],[2078,16,1426,16],[2078,17,1426,17,"access_token"],[2078,29,1426,29],[2078,33,1426,33],[2078,34,1426,34,"expires_in"],[2078,44,1426,44],[2078,48,1426,48],[2078,49,1426,49,"refresh_token"],[2078,62,1426,62],[2078,66,1426,66],[2078,67,1426,67,"token_type"],[2078,77,1426,77],[2078,79,1426,79],[2079,14,1427,16],[2079,20,1427,22],[2079,24,1427,26,"errors_1"],[2079,32,1427,34],[2079,33,1427,35,"AuthImplicitGrantRedirectError"],[2079,63,1427,65],[2079,64,1427,66],[2079,91,1427,93],[2079,92,1427,94],[2080,12,1428,12],[2081,12,1429,12],[2081,16,1429,18,"timeNow"],[2081,23,1429,25],[2081,26,1429,28,"Math"],[2081,30,1429,32],[2081,31,1429,33,"round"],[2081,36,1429,38],[2081,37,1429,39,"Date"],[2081,41,1429,43],[2081,42,1429,44,"now"],[2081,45,1429,47],[2081,46,1429,48],[2081,47,1429,49],[2081,50,1429,52],[2081,54,1429,56],[2081,55,1429,57],[2082,12,1430,12],[2082,16,1430,18,"expiresIn"],[2082,25,1430,27],[2082,28,1430,30,"parseInt"],[2082,36,1430,38],[2082,37,1430,39,"expires_in"],[2082,47,1430,49],[2082,48,1430,50],[2083,12,1431,12],[2083,16,1431,16,"expiresAt"],[2083,25,1431,25],[2083,28,1431,28,"timeNow"],[2083,35,1431,35],[2083,38,1431,38,"expiresIn"],[2083,47,1431,47],[2084,12,1432,12],[2084,16,1432,16,"expires_at"],[2084,26,1432,26],[2084,28,1432,28],[2085,14,1433,16,"expiresAt"],[2085,23,1433,25],[2085,26,1433,28,"parseInt"],[2085,34,1433,36],[2085,35,1433,37,"expires_at"],[2085,45,1433,47],[2085,46,1433,48],[2086,12,1434,12],[2087,12,1435,12],[2087,16,1435,18,"actuallyExpiresIn"],[2087,33,1435,35],[2087,36,1435,38,"expiresAt"],[2087,45,1435,47],[2087,48,1435,50,"timeNow"],[2087,55,1435,57],[2088,12,1436,12],[2088,16,1436,16,"actuallyExpiresIn"],[2088,33,1436,33],[2088,36,1436,36],[2088,40,1436,40],[2088,44,1436,44,"constants_1"],[2088,55,1436,55],[2088,56,1436,56,"AUTO_REFRESH_TICK_DURATION_MS"],[2088,85,1436,85],[2088,87,1436,87],[2089,14,1437,16,"console"],[2089,21,1437,23],[2089,22,1437,24,"warn"],[2089,26,1437,28],[2089,27,1437,29],[2089,92,1437,94,"actuallyExpiresIn"],[2089,109,1437,111],[2089,142,1437,144,"expiresIn"],[2089,151,1437,153],[2089,154,1437,156],[2089,155,1437,157],[2090,12,1438,12],[2091,12,1439,12],[2091,16,1439,18,"issuedAt"],[2091,24,1439,26],[2091,27,1439,29,"expiresAt"],[2091,36,1439,38],[2091,39,1439,41,"expiresIn"],[2091,48,1439,50],[2092,12,1440,12],[2092,16,1440,16,"timeNow"],[2092,23,1440,23],[2092,26,1440,26,"issuedAt"],[2092,34,1440,34],[2092,38,1440,38],[2092,41,1440,41],[2092,43,1440,43],[2093,14,1441,16,"console"],[2093,21,1441,23],[2093,22,1441,24,"warn"],[2093,26,1441,28],[2093,27,1441,29],[2093,124,1441,126],[2093,126,1441,128,"issuedAt"],[2093,134,1441,136],[2093,136,1441,138,"expiresAt"],[2093,145,1441,147],[2093,147,1441,149,"timeNow"],[2093,154,1441,156],[2093,155,1441,157],[2094,12,1442,12],[2094,13,1442,13],[2094,19,1443,17],[2094,23,1443,21,"timeNow"],[2094,30,1443,28],[2094,33,1443,31,"issuedAt"],[2094,41,1443,39],[2094,44,1443,42],[2094,45,1443,43],[2094,47,1443,45],[2095,14,1444,16,"console"],[2095,21,1444,23],[2095,22,1444,24,"warn"],[2095,26,1444,28],[2095,27,1444,29],[2095,137,1444,139],[2095,139,1444,141,"issuedAt"],[2095,147,1444,149],[2095,149,1444,151,"expiresAt"],[2095,158,1444,160],[2095,160,1444,162,"timeNow"],[2095,167,1444,169],[2095,168,1444,170],[2096,12,1445,12],[2097,12,1446,12],[2097,16,1446,12,"_yield$this$_getUser2"],[2097,37,1446,12],[2097,46,1446,42],[2097,50,1446,46],[2097,51,1446,47,"_getUser"],[2097,59,1446,55],[2097,60,1446,56,"access_token"],[2097,72,1446,68],[2097,73,1446,69],[2098,14,1446,20,"data"],[2098,18,1446,24],[2098,21,1446,24,"_yield$this$_getUser2"],[2098,42,1446,24],[2098,43,1446,20,"data"],[2098,47,1446,24],[2099,14,1446,26,"error"],[2099,19,1446,31],[2099,22,1446,31,"_yield$this$_getUser2"],[2099,43,1446,31],[2099,44,1446,26,"error"],[2099,49,1446,31],[2100,12,1447,12],[2100,16,1447,16,"error"],[2100,21,1447,21],[2100,23,1448,16],[2100,29,1448,22,"error"],[2100,34,1448,27],[2101,12,1449,12],[2101,16,1449,18,"session"],[2101,23,1449,25],[2101,26,1449,28],[2102,14,1450,16,"provider_token"],[2102,28,1450,30],[2103,14,1451,16,"provider_refresh_token"],[2103,36,1451,38],[2104,14,1452,16,"access_token"],[2104,26,1452,28],[2105,14,1453,16,"expires_in"],[2105,24,1453,26],[2105,26,1453,28,"expiresIn"],[2105,35,1453,37],[2106,14,1454,16,"expires_at"],[2106,24,1454,26],[2106,26,1454,28,"expiresAt"],[2106,35,1454,37],[2107,14,1455,16,"refresh_token"],[2107,27,1455,29],[2108,14,1456,16,"token_type"],[2108,24,1456,26],[2108,26,1456,28,"token_type"],[2108,36,1456,38],[2109,14,1457,16,"user"],[2109,18,1457,20],[2109,20,1457,22,"data"],[2109,24,1457,26],[2109,25,1457,27,"user"],[2110,12,1458,12],[2110,13,1458,13],[2111,12,1459,12],[2112,12,1460,12,"window"],[2112,18,1460,18],[2112,19,1460,19,"location"],[2112,27,1460,27],[2112,28,1460,28,"hash"],[2112,32,1460,32],[2112,35,1460,35],[2112,37,1460,37],[2113,12,1461,12],[2113,16,1461,16],[2113,17,1461,17,"_debug"],[2113,23,1461,23],[2113,24,1461,24],[2113,47,1461,47],[2113,49,1461,49],[2113,80,1461,80],[2113,81,1461,81],[2114,12,1462,12],[2114,19,1462,19],[2115,14,1462,21,"data"],[2115,18,1462,25],[2115,20,1462,27],[2116,16,1462,29,"session"],[2116,23,1462,36],[2117,16,1462,38,"redirectType"],[2117,28,1462,50],[2117,30,1462,52,"params"],[2117,36,1462,58],[2117,37,1462,59,"type"],[2118,14,1462,64],[2118,15,1462,65],[2119,14,1462,67,"error"],[2119,19,1462,72],[2119,21,1462,74],[2120,12,1462,79],[2120,13,1462,80],[2121,10,1463,8],[2121,11,1463,9],[2121,12,1464,8],[2121,19,1464,15,"error"],[2121,24,1464,20],[2121,26,1464,22],[2122,12,1465,12],[2122,16,1465,16],[2122,17,1465,17],[2122,18,1465,18],[2122,20,1465,20,"errors_1"],[2122,28,1465,28],[2122,29,1465,29,"isAuthError"],[2122,40,1465,40],[2122,42,1465,42,"error"],[2122,47,1465,47],[2122,48,1465,48],[2122,50,1465,50],[2123,14,1466,16],[2123,21,1466,23],[2124,16,1466,25,"data"],[2124,20,1466,29],[2124,22,1466,31],[2125,18,1466,33,"session"],[2125,25,1466,40],[2125,27,1466,42],[2125,31,1466,46],[2126,18,1466,48,"redirectType"],[2126,30,1466,60],[2126,32,1466,62],[2127,16,1466,67],[2127,17,1466,68],[2128,16,1466,70,"error"],[2129,14,1466,76],[2129,15,1466,77],[2130,12,1467,12],[2131,12,1468,12],[2131,18,1468,18,"error"],[2131,23,1468,23],[2132,10,1469,8],[2133,8,1470,4],[2133,9,1470,5],[2134,8,1470,5],[2134,17,1384,10,"_getSessionFromURL"],[2134,35,1384,28,"_getSessionFromURL"],[2134,36,1384,28,"_x33"],[2134,40,1384,28],[2134,42,1384,28,"_x34"],[2134,46,1384,28],[2135,10,1384,28],[2135,17,1384,28,"_getSessionFromURL2"],[2135,36,1384,28],[2135,37,1384,28,"apply"],[2135,42,1384,28],[2135,49,1384,28,"arguments"],[2135,58,1384,28],[2136,8,1384,28],[2137,8,1384,28],[2137,15,1384,10,"_getSessionFromURL"],[2137,33,1384,28],[2138,6,1384,28],[2139,6,1471,4],[2140,0,1472,0],[2141,0,1473,0],[2142,6,1471,4],[2143,4,1471,4],[2144,6,1471,4,"key"],[2144,9,1471,4],[2145,6,1471,4,"value"],[2145,11,1471,4],[2145,13,1474,4],[2145,22,1474,4,"_isImplicitGrantCallback"],[2145,46,1474,28,"_isImplicitGrantCallback"],[2145,47,1474,29,"params"],[2145,53,1474,35],[2145,55,1474,37],[2146,8,1475,8],[2146,15,1475,15,"Boolean"],[2146,22,1475,22],[2146,23,1475,23,"params"],[2146,29,1475,29],[2146,30,1475,30,"access_token"],[2146,42,1475,42],[2146,46,1475,46,"params"],[2146,52,1475,52],[2146,53,1475,53,"error_description"],[2146,70,1475,70],[2146,71,1475,71],[2147,6,1476,4],[2148,6,1477,4],[2149,0,1478,0],[2150,0,1479,0],[2151,4,1477,4],[2152,6,1477,4,"key"],[2152,9,1477,4],[2153,6,1477,4,"value"],[2153,11,1477,4],[2154,8,1477,4],[2154,12,1477,4,"_isPKCECallback2"],[2154,28,1477,4],[2154,31,1477,4,"_asyncToGenerator"],[2154,48,1477,4],[2154,49,1480,4],[2154,60,1480,26,"params"],[2154,66,1480,32],[2154,68,1480,34],[2155,10,1481,8],[2155,14,1481,14,"currentStorageContent"],[2155,35,1481,35],[2155,44,1481,44],[2155,45,1481,45],[2155,46,1481,46],[2155,48,1481,48,"helpers_1"],[2155,57,1481,57],[2155,58,1481,58,"getItemAsync"],[2155,70,1481,70],[2155,72,1481,72],[2155,76,1481,76],[2155,77,1481,77,"storage"],[2155,84,1481,84],[2155,86,1481,86],[2155,89,1481,89],[2155,93,1481,93],[2155,94,1481,94,"storageKey"],[2155,104,1481,104],[2155,120,1481,120],[2155,121,1481,121],[2156,10,1482,8],[2156,17,1482,15],[2156,18,1482,16],[2156,20,1482,18,"params"],[2156,26,1482,24],[2156,27,1482,25,"code"],[2156,31,1482,29],[2156,35,1482,33,"currentStorageContent"],[2156,56,1482,54],[2156,57,1482,55],[2157,8,1483,4],[2157,9,1483,5],[2158,8,1483,5],[2158,17,1480,10,"_isPKCECallback"],[2158,32,1480,25,"_isPKCECallback"],[2158,33,1480,25,"_x35"],[2158,37,1480,25],[2159,10,1480,25],[2159,17,1480,25,"_isPKCECallback2"],[2159,33,1480,25],[2159,34,1480,25,"apply"],[2159,39,1480,25],[2159,46,1480,25,"arguments"],[2159,55,1480,25],[2160,8,1480,25],[2161,8,1480,25],[2161,15,1480,10,"_isPKCECallback"],[2161,30,1480,25],[2162,6,1480,25],[2163,6,1484,4],[2164,0,1485,0],[2165,0,1486,0],[2166,0,1487,0],[2167,0,1488,0],[2168,0,1489,0],[2169,0,1490,0],[2170,0,1491,0],[2171,6,1484,4],[2172,4,1484,4],[2173,6,1484,4,"key"],[2173,9,1484,4],[2174,6,1484,4,"value"],[2174,11,1484,4],[2175,8,1484,4],[2175,12,1484,4,"_signOut2"],[2175,21,1484,4],[2175,24,1484,4,"_asyncToGenerator"],[2175,41,1484,4],[2175,42,1492,4],[2175,55,1492,49],[2176,10,1492,49],[2176,14,1492,49,"_this14"],[2176,21,1492,49],[2177,10,1492,49],[2177,14,1492,18,"options"],[2177,21,1492,25],[2177,24,1492,25,"arguments"],[2177,33,1492,25],[2177,34,1492,25,"length"],[2177,40,1492,25],[2177,48,1492,25,"arguments"],[2177,57,1492,25],[2177,65,1492,25,"undefined"],[2177,74,1492,25],[2177,77,1492,25,"arguments"],[2177,86,1492,25],[2177,92,1492,28],[2178,12,1492,30,"scope"],[2178,17,1492,35],[2178,19,1492,37],[2179,10,1492,46],[2179,11,1492,47],[2180,10,1493,8],[2180,16,1493,14],[2180,20,1493,18],[2180,21,1493,19,"initializePromise"],[2180,38,1493,36],[2181,10,1494,8],[2181,23,1494,21],[2181,27,1494,25],[2181,28,1494,26,"_acquireLock"],[2181,40,1494,38],[2181,41,1494,39],[2181,42,1494,40],[2181,43,1494,41],[2181,58,1494,41,"_asyncToGenerator"],[2181,75,1494,41],[2181,76,1494,43],[2181,89,1494,55],[2182,12,1495,12],[2182,25,1495,25,"_this14"],[2182,32,1495,29],[2182,33,1495,30,"_signOut"],[2182,41,1495,38],[2182,42,1495,39,"options"],[2182,49,1495,46],[2182,50,1495,47],[2183,10,1496,8],[2183,11,1496,9],[2183,13,1496,10],[2184,8,1497,4],[2184,9,1497,5],[2185,8,1497,5],[2185,17,1492,10,"signOut"],[2185,24,1492,17,"signOut"],[2185,25,1492,17],[2186,10,1492,17],[2186,17,1492,17,"_signOut2"],[2186,26,1492,17],[2186,27,1492,17,"apply"],[2186,32,1492,17],[2186,39,1492,17,"arguments"],[2186,48,1492,17],[2187,8,1492,17],[2188,8,1492,17],[2188,15,1492,10,"signOut"],[2188,22,1492,17],[2189,6,1492,17],[2190,4,1492,17],[2191,6,1492,17,"key"],[2191,9,1492,17],[2192,6,1492,17,"value"],[2192,11,1492,17],[2193,8,1492,17],[2193,12,1492,17,"_signOut3"],[2193,21,1492,17],[2193,24,1492,17,"_asyncToGenerator"],[2193,41,1492,17],[2193,42,1498,4],[2193,55,1498,52],[2194,10,1498,52],[2194,14,1498,52,"_this15"],[2194,21,1498,52],[2195,10,1498,52],[2195,14,1498,52,"_ref21"],[2195,20,1498,52],[2195,23,1498,52,"arguments"],[2195,32,1498,52],[2195,33,1498,52,"length"],[2195,39,1498,52],[2195,47,1498,52,"arguments"],[2195,56,1498,52],[2195,64,1498,52,"undefined"],[2195,73,1498,52],[2195,76,1498,52,"arguments"],[2195,85,1498,52],[2195,91,1498,31],[2196,14,1498,33,"scope"],[2196,19,1498,38],[2196,21,1498,40],[2197,12,1498,49],[2197,13,1498,50],[2198,12,1498,21,"scope"],[2198,17,1498,26],[2198,20,1498,26,"_ref21"],[2198,26,1498,26],[2198,27,1498,21,"scope"],[2198,32,1498,26],[2199,10,1499,8],[2199,23,1499,21],[2199,27,1499,25],[2199,28,1499,26,"_useSession"],[2199,39,1499,37],[2200,12,1499,37],[2200,16,1499,37,"_ref22"],[2200,22,1499,37],[2200,25,1499,37,"_asyncToGenerator"],[2200,42,1499,37],[2200,43,1499,38],[2200,54,1499,45,"result"],[2200,60,1499,51],[2200,62,1499,56],[2201,14,1500,12],[2201,18,1500,16,"_a"],[2201,20,1500,18],[2202,14,1501,12],[2202,18,1501,20,"data"],[2202,22,1501,24],[2202,25,1501,50,"result"],[2202,31,1501,56],[2202,32,1501,20,"data"],[2202,36,1501,24],[2203,16,1501,33,"sessionError"],[2203,28,1501,45],[2203,31,1501,50,"result"],[2203,37,1501,56],[2203,38,1501,26,"error"],[2203,43,1501,31],[2204,14,1502,12],[2204,18,1502,16,"sessionError"],[2204,30,1502,28],[2204,32,1502,30],[2205,16,1503,16],[2205,23,1503,23],[2206,18,1503,25,"error"],[2206,23,1503,30],[2206,25,1503,32,"sessionError"],[2207,16,1503,45],[2207,17,1503,46],[2208,14,1504,12],[2209,14,1505,12],[2209,18,1505,18,"accessToken"],[2209,29,1505,29],[2209,32,1505,32],[2209,33,1505,33,"_a"],[2209,35,1505,35],[2209,38,1505,38,"data"],[2209,42,1505,42],[2209,43,1505,43,"session"],[2209,50,1505,50],[2209,56,1505,56],[2209,60,1505,60],[2209,64,1505,64,"_a"],[2209,66,1505,66],[2209,71,1505,71],[2209,76,1505,76],[2209,77,1505,77],[2209,80,1505,80],[2209,85,1505,85],[2209,86,1505,86],[2209,89,1505,89,"_a"],[2209,91,1505,91],[2209,92,1505,92,"access_token"],[2209,104,1505,104],[2210,14,1506,12],[2210,18,1506,16,"accessToken"],[2210,29,1506,27],[2210,31,1506,29],[2211,16,1507,16],[2211,20,1507,16,"_yield$_this15$admin$"],[2211,41,1507,16],[2211,50,1507,40,"_this15"],[2211,57,1507,44],[2211,58,1507,45,"admin"],[2211,63,1507,50],[2211,64,1507,51,"signOut"],[2211,71,1507,58],[2211,72,1507,59,"accessToken"],[2211,83,1507,70],[2211,85,1507,72,"scope"],[2211,90,1507,77],[2211,91,1507,78],[2212,18,1507,24,"error"],[2212,23,1507,29],[2212,26,1507,29,"_yield$_this15$admin$"],[2212,47,1507,29],[2212,48,1507,24,"error"],[2212,53,1507,29],[2213,16,1508,16],[2213,20,1508,20,"error"],[2213,25,1508,25],[2213,27,1508,27],[2214,18,1509,20],[2215,18,1510,20],[2216,18,1511,20],[2216,22,1511,24],[2216,24,1511,26],[2216,25,1511,27],[2216,26,1511,28],[2216,28,1511,30,"errors_1"],[2216,36,1511,38],[2216,37,1511,39,"isAuthApiError"],[2216,51,1511,53],[2216,53,1511,55,"error"],[2216,58,1511,60],[2216,59,1511,61],[2216,64,1512,25,"error"],[2216,69,1512,30],[2216,70,1512,31,"status"],[2216,76,1512,37],[2216,81,1512,42],[2216,84,1512,45],[2216,88,1512,49,"error"],[2216,93,1512,54],[2216,94,1512,55,"status"],[2216,100,1512,61],[2216,105,1512,66],[2216,108,1512,69],[2216,112,1512,73,"error"],[2216,117,1512,78],[2216,118,1512,79,"status"],[2216,124,1512,85],[2216,129,1512,90],[2216,132,1512,93],[2216,133,1512,94],[2216,134,1512,95],[2216,136,1512,97],[2217,20,1513,24],[2217,27,1513,31],[2218,22,1513,33,"error"],[2219,20,1513,39],[2219,21,1513,40],[2220,18,1514,20],[2221,16,1515,16],[2222,14,1516,12],[2223,14,1517,12],[2223,18,1517,16,"scope"],[2223,23,1517,21],[2223,28,1517,26],[2223,36,1517,34],[2223,38,1517,36],[2224,16,1518,16],[2224,22,1518,22,"_this15"],[2224,29,1518,26],[2224,30,1518,27,"_removeSession"],[2224,44,1518,41],[2224,45,1518,42],[2224,46,1518,43],[2225,16,1519,16],[2225,22,1519,22],[2225,23,1519,23],[2225,24,1519,24],[2225,26,1519,26,"helpers_1"],[2225,35,1519,35],[2225,36,1519,36,"removeItemAsync"],[2225,51,1519,51],[2225,53,1519,53,"_this15"],[2225,60,1519,57],[2225,61,1519,58,"storage"],[2225,68,1519,65],[2225,70,1519,67],[2225,73,1519,70,"_this15"],[2225,80,1519,74],[2225,81,1519,75,"storageKey"],[2225,91,1519,85],[2225,107,1519,101],[2225,108,1519,102],[2226,14,1520,12],[2227,14,1521,12],[2227,21,1521,19],[2228,16,1521,21,"error"],[2228,21,1521,26],[2228,23,1521,28],[2229,14,1521,33],[2229,15,1521,34],[2230,12,1522,8],[2230,13,1522,9],[2231,12,1522,9],[2231,29,1522,9,"_x36"],[2231,33,1522,9],[2232,14,1522,9],[2232,21,1522,9,"_ref22"],[2232,27,1522,9],[2232,28,1522,9,"apply"],[2232,33,1522,9],[2232,40,1522,9,"arguments"],[2232,49,1522,9],[2233,12,1522,9],[2234,10,1522,9],[2234,14,1522,10],[2235,8,1523,4],[2235,9,1523,5],[2236,8,1523,5],[2236,17,1498,10,"_signOut"],[2236,25,1498,18,"_signOut"],[2236,26,1498,18],[2237,10,1498,18],[2237,17,1498,18,"_signOut3"],[2237,26,1498,18],[2237,27,1498,18,"apply"],[2237,32,1498,18],[2237,39,1498,18,"arguments"],[2237,48,1498,18],[2238,8,1498,18],[2239,8,1498,18],[2239,15,1498,10,"_signOut"],[2239,23,1498,18],[2240,6,1498,18],[2241,4,1498,18],[2242,6,1498,18,"key"],[2242,9,1498,18],[2243,6,1498,18,"value"],[2243,11,1498,18],[2243,13,1524,4],[2243,22,1524,4,"onAuthStateChange"],[2243,39,1524,21,"onAuthStateChange"],[2243,40,1524,22,"callback"],[2243,48,1524,30],[2243,50,1524,32],[2244,8,1524,32],[2244,12,1524,32,"_this16"],[2244,19,1524,32],[2245,8,1525,8],[2245,12,1525,14,"id"],[2245,14,1525,16],[2245,17,1525,19],[2245,18,1525,20],[2245,19,1525,21],[2245,21,1525,23,"helpers_1"],[2245,30,1525,32],[2245,31,1525,33,"uuid"],[2245,35,1525,37],[2245,37,1525,39],[2245,38,1525,40],[2246,8,1526,8],[2246,12,1526,14,"subscription"],[2246,24,1526,26],[2246,27,1526,29],[2247,10,1527,12,"id"],[2247,12,1527,14],[2248,10,1528,12,"callback"],[2248,18,1528,20],[2249,10,1529,12,"unsubscribe"],[2249,21,1529,23],[2249,23,1529,25,"unsubscribe"],[2249,24,1529,25],[2249,29,1529,31],[2250,12,1530,16],[2250,16,1530,20],[2250,17,1530,21,"_debug"],[2250,23,1530,27],[2250,24,1530,28],[2250,40,1530,44],[2250,42,1530,46],[2250,81,1530,85],[2250,83,1530,87,"id"],[2250,85,1530,89],[2250,86,1530,90],[2251,12,1531,16],[2251,16,1531,20],[2251,17,1531,21,"stateChangeEmitters"],[2251,36,1531,40],[2251,37,1531,41,"delete"],[2251,43,1531,47],[2251,44,1531,48,"id"],[2251,46,1531,50],[2251,47,1531,51],[2252,10,1532,12],[2253,8,1533,8],[2253,9,1533,9],[2254,8,1534,8],[2254,12,1534,12],[2254,13,1534,13,"_debug"],[2254,19,1534,19],[2254,20,1534,20],[2254,42,1534,42],[2254,44,1534,44],[2254,73,1534,73],[2254,75,1534,75,"id"],[2254,77,1534,77],[2254,78,1534,78],[2255,8,1535,8],[2255,12,1535,12],[2255,13,1535,13,"stateChangeEmitters"],[2255,32,1535,32],[2255,33,1535,33,"set"],[2255,36,1535,36],[2255,37,1535,37,"id"],[2255,39,1535,39],[2255,41,1535,41,"subscription"],[2255,53,1535,53],[2255,54,1535,54],[2256,8,1536,8,"_asyncToGenerator"],[2256,25,1536,8],[2256,26,1536,9],[2256,39,1536,21],[2257,10,1537,12],[2257,16,1537,18,"_this16"],[2257,23,1537,22],[2257,24,1537,23,"initializePromise"],[2257,41,1537,40],[2258,10,1538,12],[2258,16,1538,18,"_this16"],[2258,23,1538,22],[2258,24,1538,23,"_acquireLock"],[2258,36,1538,35],[2258,37,1538,36],[2258,38,1538,37],[2258,39,1538,38],[2258,54,1538,38,"_asyncToGenerator"],[2258,71,1538,38],[2258,72,1538,40],[2258,85,1538,52],[2259,12,1539,16,"_this16"],[2259,19,1539,20],[2259,20,1539,21,"_emitInitialSession"],[2259,39,1539,40],[2259,40,1539,41,"id"],[2259,42,1539,43],[2259,43,1539,44],[2260,10,1540,12],[2260,11,1540,13],[2260,13,1540,14],[2261,8,1541,8],[2261,9,1541,9],[2261,11,1541,11],[2261,12,1541,12],[2262,8,1542,8],[2262,15,1542,15],[2263,10,1542,17,"data"],[2263,14,1542,21],[2263,16,1542,23],[2264,12,1542,25,"subscription"],[2265,10,1542,38],[2266,8,1542,40],[2266,9,1542,41],[2267,6,1543,4],[2268,4,1543,5],[2269,6,1543,5,"key"],[2269,9,1543,5],[2270,6,1543,5,"value"],[2270,11,1543,5],[2271,8,1543,5],[2271,12,1543,5,"_emitInitialSession2"],[2271,32,1543,5],[2271,35,1543,5,"_asyncToGenerator"],[2271,52,1543,5],[2271,53,1544,4],[2271,64,1544,30,"id"],[2271,66,1544,32],[2271,68,1544,34],[2272,10,1544,34],[2272,14,1544,34,"_this17"],[2272,21,1544,34],[2273,10,1545,8],[2273,23,1545,21],[2273,27,1545,25],[2273,28,1545,26,"_useSession"],[2273,39,1545,37],[2274,12,1545,37],[2274,16,1545,37,"_ref25"],[2274,22,1545,37],[2274,25,1545,37,"_asyncToGenerator"],[2274,42,1545,37],[2274,43,1545,38],[2274,54,1545,45,"result"],[2274,60,1545,51],[2274,62,1545,56],[2275,14,1546,12],[2275,18,1546,16,"_a"],[2275,20,1546,18],[2275,22,1546,20,"_b"],[2275,24,1546,22],[2276,14,1547,12],[2276,18,1547,16],[2277,16,1548,16],[2277,20,1548,32,"session"],[2277,27,1548,39],[2277,30,1548,54,"result"],[2277,36,1548,60],[2277,37,1548,24,"data"],[2277,41,1548,28],[2277,42,1548,32,"session"],[2277,49,1548,39],[2278,18,1548,43,"error"],[2278,23,1548,48],[2278,26,1548,54,"result"],[2278,32,1548,60],[2278,33,1548,43,"error"],[2278,38,1548,48],[2279,16,1549,16],[2279,20,1549,20,"error"],[2279,25,1549,25],[2279,27,1550,20],[2279,33,1550,26,"error"],[2279,38,1550,31],[2280,16,1551,16],[2280,22,1551,23],[2280,23,1551,24,"_a"],[2280,25,1551,26],[2280,28,1551,29,"_this17"],[2280,35,1551,33],[2280,36,1551,34,"stateChangeEmitters"],[2280,55,1551,53],[2280,56,1551,54,"get"],[2280,59,1551,57],[2280,60,1551,58,"id"],[2280,62,1551,60],[2280,63,1551,61],[2280,69,1551,67],[2280,73,1551,71],[2280,77,1551,75,"_a"],[2280,79,1551,77],[2280,84,1551,82],[2280,89,1551,87],[2280,90,1551,88],[2280,93,1551,91],[2280,98,1551,96],[2280,99,1551,97],[2280,102,1551,100,"_a"],[2280,104,1551,102],[2280,105,1551,103,"callback"],[2280,113,1551,111],[2280,114,1551,112],[2280,131,1551,129],[2280,133,1551,131,"session"],[2280,140,1551,138],[2280,141,1551,139],[2281,16,1552,16,"_this17"],[2281,23,1552,20],[2281,24,1552,21,"_debug"],[2281,30,1552,27],[2281,31,1552,28],[2281,48,1552,45],[2281,50,1552,47],[2281,63,1552,60],[2281,65,1552,62,"id"],[2281,67,1552,64],[2281,69,1552,66],[2281,78,1552,75],[2281,80,1552,77,"session"],[2281,87,1552,84],[2281,88,1552,85],[2282,14,1553,12],[2282,15,1553,13],[2282,16,1554,12],[2282,23,1554,19,"err"],[2282,26,1554,22],[2282,28,1554,24],[2283,16,1555,16],[2283,22,1555,23],[2283,23,1555,24,"_b"],[2283,25,1555,26],[2283,28,1555,29,"_this17"],[2283,35,1555,33],[2283,36,1555,34,"stateChangeEmitters"],[2283,55,1555,53],[2283,56,1555,54,"get"],[2283,59,1555,57],[2283,60,1555,58,"id"],[2283,62,1555,60],[2283,63,1555,61],[2283,69,1555,67],[2283,73,1555,71],[2283,77,1555,75,"_b"],[2283,79,1555,77],[2283,84,1555,82],[2283,89,1555,87],[2283,90,1555,88],[2283,93,1555,91],[2283,98,1555,96],[2283,99,1555,97],[2283,102,1555,100,"_b"],[2283,104,1555,102],[2283,105,1555,103,"callback"],[2283,113,1555,111],[2283,114,1555,112],[2283,131,1555,129],[2283,133,1555,131],[2283,137,1555,135],[2283,138,1555,136],[2284,16,1556,16,"_this17"],[2284,23,1556,20],[2284,24,1556,21,"_debug"],[2284,30,1556,27],[2284,31,1556,28],[2284,48,1556,45],[2284,50,1556,47],[2284,63,1556,60],[2284,65,1556,62,"id"],[2284,67,1556,64],[2284,69,1556,66],[2284,76,1556,73],[2284,78,1556,75,"err"],[2284,81,1556,78],[2284,82,1556,79],[2285,16,1557,16,"console"],[2285,23,1557,23],[2285,24,1557,24,"error"],[2285,29,1557,29],[2285,30,1557,30,"err"],[2285,33,1557,33],[2285,34,1557,34],[2286,14,1558,12],[2287,12,1559,8],[2287,13,1559,9],[2288,12,1559,9],[2288,29,1559,9,"_x38"],[2288,33,1559,9],[2289,14,1559,9],[2289,21,1559,9,"_ref25"],[2289,27,1559,9],[2289,28,1559,9,"apply"],[2289,33,1559,9],[2289,40,1559,9,"arguments"],[2289,49,1559,9],[2290,12,1559,9],[2291,10,1559,9],[2291,14,1559,10],[2292,8,1560,4],[2292,9,1560,5],[2293,8,1560,5],[2293,17,1544,10,"_emitInitialSession"],[2293,36,1544,29,"_emitInitialSession"],[2293,37,1544,29,"_x37"],[2293,41,1544,29],[2294,10,1544,29],[2294,17,1544,29,"_emitInitialSession2"],[2294,37,1544,29],[2294,38,1544,29,"apply"],[2294,43,1544,29],[2294,50,1544,29,"arguments"],[2294,59,1544,29],[2295,8,1544,29],[2296,8,1544,29],[2296,15,1544,10,"_emitInitialSession"],[2296,34,1544,29],[2297,6,1544,29],[2298,6,1561,4],[2299,0,1562,0],[2300,0,1563,0],[2301,0,1564,0],[2302,0,1565,0],[2303,0,1566,0],[2304,0,1567,0],[2305,4,1561,4],[2306,6,1561,4,"key"],[2306,9,1561,4],[2307,6,1561,4,"value"],[2307,11,1561,4],[2308,8,1561,4],[2308,12,1561,4,"_resetPasswordForEmail"],[2308,34,1561,4],[2308,37,1561,4,"_asyncToGenerator"],[2308,54,1561,4],[2308,55,1568,4],[2308,66,1568,32,"email"],[2308,71,1568,37],[2308,73,1568,53],[2309,10,1568,53],[2309,14,1568,39,"options"],[2309,21,1568,46],[2309,24,1568,46,"arguments"],[2309,33,1568,46],[2309,34,1568,46,"length"],[2309,40,1568,46],[2309,48,1568,46,"arguments"],[2309,57,1568,46],[2309,65,1568,46,"undefined"],[2309,74,1568,46],[2309,77,1568,46,"arguments"],[2309,86,1568,46],[2309,92,1568,49],[2309,93,1568,50],[2309,94,1568,51],[2310,10,1569,8],[2310,14,1569,12,"codeChallenge"],[2310,27,1569,25],[2310,30,1569,28],[2310,34,1569,32],[2311,10,1570,8],[2311,14,1570,12,"codeChallengeMethod"],[2311,33,1570,31],[2311,36,1570,34],[2311,40,1570,38],[2312,10,1571,8],[2312,14,1571,12],[2312,18,1571,16],[2312,19,1571,17,"flowType"],[2312,27,1571,25],[2312,32,1571,30],[2312,38,1571,36],[2312,40,1571,38],[2313,12,1572,12],[2314,12,1572,13],[2314,16,1572,13,"_yield17"],[2314,24,1572,13],[2314,33,1573,57],[2314,34,1573,58],[2314,35,1573,59],[2314,37,1573,61,"helpers_1"],[2314,46,1573,70],[2314,47,1573,71,"getCodeChallengeAndMethod"],[2314,72,1573,96],[2314,74,1573,98],[2314,78,1573,102],[2314,79,1573,103,"storage"],[2314,86,1573,110],[2314,88,1573,112],[2314,92,1573,116],[2314,93,1573,117,"storageKey"],[2314,103,1573,127],[2314,105,1573,129],[2314,109,1573,133],[2314,110,1573,134],[2315,12,1574,12],[2315,13,1574,13],[2316,12,1574,13],[2316,16,1574,13,"_yield18"],[2316,24,1574,13],[2316,27,1574,13,"_slicedToArray"],[2316,41,1574,13],[2316,42,1574,13,"_yield17"],[2316,50,1574,13],[2317,12,1573,13,"codeChallenge"],[2317,25,1573,26],[2317,28,1573,26,"_yield18"],[2317,36,1573,26],[2318,12,1573,28,"codeChallengeMethod"],[2318,31,1573,47],[2318,34,1573,47,"_yield18"],[2318,42,1573,47],[2319,10,1575,8],[2320,10,1576,8],[2320,14,1576,12],[2321,12,1577,12],[2321,25,1577,25],[2321,26,1577,26],[2321,27,1577,27],[2321,29,1577,29,"fetch_1"],[2321,36,1577,36],[2321,37,1577,37,"_request"],[2321,45,1577,45],[2321,47,1577,47],[2321,51,1577,51],[2321,52,1577,52,"fetch"],[2321,57,1577,57],[2321,59,1577,59],[2321,65,1577,65],[2321,67,1577,67],[2321,70,1577,70],[2321,74,1577,74],[2321,75,1577,75,"url"],[2321,78,1577,78],[2321,88,1577,88],[2321,90,1577,90],[2322,14,1578,16,"body"],[2322,18,1578,20],[2322,20,1578,22],[2323,16,1579,20,"email"],[2323,21,1579,25],[2324,16,1580,20,"code_challenge"],[2324,30,1580,34],[2324,32,1580,36,"codeChallenge"],[2324,45,1580,49],[2325,16,1581,20,"code_challenge_method"],[2325,37,1581,41],[2325,39,1581,43,"codeChallengeMethod"],[2325,58,1581,62],[2326,16,1582,20,"gotrue_meta_security"],[2326,36,1582,40],[2326,38,1582,42],[2327,18,1582,44,"captcha_token"],[2327,31,1582,57],[2327,33,1582,59,"options"],[2327,40,1582,66],[2327,41,1582,67,"captchaToken"],[2328,16,1582,80],[2329,14,1583,16],[2329,15,1583,17],[2330,14,1584,16,"headers"],[2330,21,1584,23],[2330,23,1584,25],[2330,27,1584,29],[2330,28,1584,30,"headers"],[2330,35,1584,37],[2331,14,1585,16,"redirectTo"],[2331,24,1585,26],[2331,26,1585,28,"options"],[2331,33,1585,35],[2331,34,1585,36,"redirectTo"],[2332,12,1586,12],[2332,13,1586,13],[2332,14,1586,14],[2333,10,1587,8],[2333,11,1587,9],[2333,12,1588,8],[2333,19,1588,15,"error"],[2333,24,1588,20],[2333,26,1588,22],[2334,12,1589,12],[2334,16,1589,16],[2334,17,1589,17],[2334,18,1589,18],[2334,20,1589,20,"errors_1"],[2334,28,1589,28],[2334,29,1589,29,"isAuthError"],[2334,40,1589,40],[2334,42,1589,42,"error"],[2334,47,1589,47],[2334,48,1589,48],[2334,50,1589,50],[2335,14,1590,16],[2335,21,1590,23],[2336,16,1590,25,"data"],[2336,20,1590,29],[2336,22,1590,31],[2336,26,1590,35],[2337,16,1590,37,"error"],[2338,14,1590,43],[2338,15,1590,44],[2339,12,1591,12],[2340,12,1592,12],[2340,18,1592,18,"error"],[2340,23,1592,23],[2341,10,1593,8],[2342,8,1594,4],[2342,9,1594,5],[2343,8,1594,5],[2343,17,1568,10,"resetPasswordForEmail"],[2343,38,1568,31,"resetPasswordForEmail"],[2343,39,1568,31,"_x39"],[2343,43,1568,31],[2344,10,1568,31],[2344,17,1568,31,"_resetPasswordForEmail"],[2344,39,1568,31],[2344,40,1568,31,"apply"],[2344,45,1568,31],[2344,52,1568,31,"arguments"],[2344,61,1568,31],[2345,8,1568,31],[2346,8,1568,31],[2346,15,1568,10,"resetPasswordForEmail"],[2346,36,1568,31],[2347,6,1568,31],[2348,6,1595,4],[2349,0,1596,0],[2350,0,1597,0],[2351,6,1595,4],[2352,4,1595,4],[2353,6,1595,4,"key"],[2353,9,1595,4],[2354,6,1595,4,"value"],[2354,11,1595,4],[2355,8,1595,4],[2355,12,1595,4,"_getUserIdentities"],[2355,30,1595,4],[2355,33,1595,4,"_asyncToGenerator"],[2355,50,1595,4],[2355,51,1598,4],[2355,64,1598,30],[2356,10,1599,8],[2356,14,1599,12,"_a"],[2356,16,1599,14],[2357,10,1600,8],[2357,14,1600,12],[2358,12,1601,12],[2358,16,1601,12,"_yield$this$getUser"],[2358,35,1601,12],[2358,44,1601,42],[2358,48,1601,46],[2358,49,1601,47,"getUser"],[2358,56,1601,54],[2358,57,1601,55],[2358,58,1601,56],[2359,14,1601,20,"data"],[2359,18,1601,24],[2359,21,1601,24,"_yield$this$getUser"],[2359,40,1601,24],[2359,41,1601,20,"data"],[2359,45,1601,24],[2360,14,1601,26,"error"],[2360,19,1601,31],[2360,22,1601,31,"_yield$this$getUser"],[2360,41,1601,31],[2360,42,1601,26,"error"],[2360,47,1601,31],[2361,12,1602,12],[2361,16,1602,16,"error"],[2361,21,1602,21],[2361,23,1603,16],[2361,29,1603,22,"error"],[2361,34,1603,27],[2362,12,1604,12],[2362,19,1604,19],[2363,14,1604,21,"data"],[2363,18,1604,25],[2363,20,1604,27],[2364,16,1604,29,"identities"],[2364,26,1604,39],[2364,28,1604,41],[2364,29,1604,42,"_a"],[2364,31,1604,44],[2364,34,1604,47,"data"],[2364,38,1604,51],[2364,39,1604,52,"user"],[2364,43,1604,56],[2364,44,1604,57,"identities"],[2364,54,1604,67],[2364,60,1604,73],[2364,64,1604,77],[2364,68,1604,81,"_a"],[2364,70,1604,83],[2364,75,1604,88],[2364,80,1604,93],[2364,81,1604,94],[2364,84,1604,97,"_a"],[2364,86,1604,99],[2364,89,1604,102],[2365,14,1604,105],[2365,15,1604,106],[2366,14,1604,108,"error"],[2366,19,1604,113],[2366,21,1604,115],[2367,12,1604,120],[2367,13,1604,121],[2368,10,1605,8],[2368,11,1605,9],[2368,12,1606,8],[2368,19,1606,15,"error"],[2368,24,1606,20],[2368,26,1606,22],[2369,12,1607,12],[2369,16,1607,16],[2369,17,1607,17],[2369,18,1607,18],[2369,20,1607,20,"errors_1"],[2369,28,1607,28],[2369,29,1607,29,"isAuthError"],[2369,40,1607,40],[2369,42,1607,42,"error"],[2369,47,1607,47],[2369,48,1607,48],[2369,50,1607,50],[2370,14,1608,16],[2370,21,1608,23],[2371,16,1608,25,"data"],[2371,20,1608,29],[2371,22,1608,31],[2371,26,1608,35],[2372,16,1608,37,"error"],[2373,14,1608,43],[2373,15,1608,44],[2374,12,1609,12],[2375,12,1610,12],[2375,18,1610,18,"error"],[2375,23,1610,23],[2376,10,1611,8],[2377,8,1612,4],[2377,9,1612,5],[2378,8,1612,5],[2378,17,1598,10,"getUserIdentities"],[2378,34,1598,27,"getUserIdentities"],[2378,35,1598,27],[2379,10,1598,27],[2379,17,1598,27,"_getUserIdentities"],[2379,35,1598,27],[2379,36,1598,27,"apply"],[2379,41,1598,27],[2379,48,1598,27,"arguments"],[2379,57,1598,27],[2380,8,1598,27],[2381,8,1598,27],[2381,15,1598,10,"getUserIdentities"],[2381,32,1598,27],[2382,6,1598,27],[2383,4,1598,27],[2384,6,1598,27,"key"],[2384,9,1598,27],[2385,6,1598,27,"value"],[2385,11,1598,27],[2386,8,1598,27],[2386,12,1598,27,"_linkIdentity"],[2386,25,1598,27],[2386,28,1598,27,"_asyncToGenerator"],[2386,45,1598,27],[2386,46,1613,4],[2386,57,1613,23,"credentials"],[2386,68,1613,34],[2386,70,1613,36],[2387,10,1614,8],[2387,14,1614,12],[2387,21,1614,19],[2387,25,1614,23,"credentials"],[2387,36,1614,34],[2387,38,1614,36],[2388,12,1615,12],[2388,19,1615,19],[2388,23,1615,23],[2388,24,1615,24,"linkIdentityIdToken"],[2388,43,1615,43],[2388,44,1615,44,"credentials"],[2388,55,1615,55],[2388,56,1615,56],[2389,10,1616,8],[2390,10,1617,8],[2390,17,1617,15],[2390,21,1617,19],[2390,22,1617,20,"linkIdentityOAuth"],[2390,39,1617,37],[2390,40,1617,38,"credentials"],[2390,51,1617,49],[2390,52,1617,50],[2391,8,1618,4],[2391,9,1618,5],[2392,8,1618,5],[2392,17,1613,10,"linkIdentity"],[2392,29,1613,22,"linkIdentity"],[2392,30,1613,22,"_x40"],[2392,34,1613,22],[2393,10,1613,22],[2393,17,1613,22,"_linkIdentity"],[2393,30,1613,22],[2393,31,1613,22,"apply"],[2393,36,1613,22],[2393,43,1613,22,"arguments"],[2393,52,1613,22],[2394,8,1613,22],[2395,8,1613,22],[2395,15,1613,10,"linkIdentity"],[2395,27,1613,22],[2396,6,1613,22],[2397,4,1613,22],[2398,6,1613,22,"key"],[2398,9,1613,22],[2399,6,1613,22,"value"],[2399,11,1613,22],[2400,8,1613,22],[2400,12,1613,22,"_linkIdentityOAuth"],[2400,30,1613,22],[2400,33,1613,22,"_asyncToGenerator"],[2400,50,1613,22],[2400,51,1619,4],[2400,62,1619,28,"credentials"],[2400,73,1619,39],[2400,75,1619,41],[2401,10,1619,41],[2401,14,1619,41,"_this18"],[2401,21,1619,41],[2402,10,1620,8],[2402,14,1620,12,"_a"],[2402,16,1620,14],[2403,10,1621,8],[2403,14,1621,12],[2404,12,1622,12],[2404,16,1622,12,"_yield$this$_useSessi"],[2404,37,1622,12],[2404,46,1622,42],[2404,50,1622,46],[2404,51,1622,47,"_useSession"],[2404,62,1622,58],[2405,16,1622,58],[2405,20,1622,58,"_ref26"],[2405,26,1622,58],[2405,29,1622,58,"_asyncToGenerator"],[2405,46,1622,58],[2405,47,1622,59],[2405,58,1622,66,"result"],[2405,64,1622,72],[2405,66,1622,77],[2406,18,1623,16],[2406,22,1623,20,"_a"],[2406,24,1623,22],[2406,26,1623,24,"_b"],[2406,28,1623,26],[2406,30,1623,28,"_c"],[2406,32,1623,30],[2406,34,1623,32,"_d"],[2406,36,1623,34],[2406,38,1623,36,"_e"],[2406,40,1623,38],[2407,18,1624,16],[2407,22,1624,24,"data"],[2407,26,1624,28],[2407,29,1624,40,"result"],[2407,35,1624,46],[2407,36,1624,24,"data"],[2407,40,1624,28],[2408,20,1624,30,"error"],[2408,25,1624,35],[2408,28,1624,40,"result"],[2408,34,1624,46],[2408,35,1624,30,"error"],[2408,40,1624,35],[2409,18,1625,16],[2409,22,1625,20,"error"],[2409,27,1625,25],[2409,29,1626,20],[2409,35,1626,26,"error"],[2409,40,1626,31],[2410,18,1627,16],[2410,22,1627,22,"url"],[2410,25,1627,25],[2410,34,1627,34,"_this18"],[2410,41,1627,38],[2410,42,1627,39,"_getUrlForProvider"],[2410,60,1627,57],[2410,61,1627,58],[2410,64,1627,61,"_this18"],[2410,71,1627,65],[2410,72,1627,66,"url"],[2410,75,1627,69],[2410,103,1627,97],[2410,105,1627,99,"credentials"],[2410,116,1627,110],[2410,117,1627,111,"provider"],[2410,125,1627,119],[2410,127,1627,121],[2411,20,1628,20,"redirectTo"],[2411,30,1628,30],[2411,32,1628,32],[2411,33,1628,33,"_a"],[2411,35,1628,35],[2411,38,1628,38,"credentials"],[2411,49,1628,49],[2411,50,1628,50,"options"],[2411,57,1628,57],[2411,63,1628,63],[2411,67,1628,67],[2411,71,1628,71,"_a"],[2411,73,1628,73],[2411,78,1628,78],[2411,83,1628,83],[2411,84,1628,84],[2411,87,1628,87],[2411,92,1628,92],[2411,93,1628,93],[2411,96,1628,96,"_a"],[2411,98,1628,98],[2411,99,1628,99,"redirectTo"],[2411,109,1628,109],[2412,20,1629,20,"scopes"],[2412,26,1629,26],[2412,28,1629,28],[2412,29,1629,29,"_b"],[2412,31,1629,31],[2412,34,1629,34,"credentials"],[2412,45,1629,45],[2412,46,1629,46,"options"],[2412,53,1629,53],[2412,59,1629,59],[2412,63,1629,63],[2412,67,1629,67,"_b"],[2412,69,1629,69],[2412,74,1629,74],[2412,79,1629,79],[2412,80,1629,80],[2412,83,1629,83],[2412,88,1629,88],[2412,89,1629,89],[2412,92,1629,92,"_b"],[2412,94,1629,94],[2412,95,1629,95,"scopes"],[2412,101,1629,101],[2413,20,1630,20,"queryParams"],[2413,31,1630,31],[2413,33,1630,33],[2413,34,1630,34,"_c"],[2413,36,1630,36],[2413,39,1630,39,"credentials"],[2413,50,1630,50],[2413,51,1630,51,"options"],[2413,58,1630,58],[2413,64,1630,64],[2413,68,1630,68],[2413,72,1630,72,"_c"],[2413,74,1630,74],[2413,79,1630,79],[2413,84,1630,84],[2413,85,1630,85],[2413,88,1630,88],[2413,93,1630,93],[2413,94,1630,94],[2413,97,1630,97,"_c"],[2413,99,1630,99],[2413,100,1630,100,"queryParams"],[2413,111,1630,111],[2414,20,1631,20,"skipBrowserRedirect"],[2414,39,1631,39],[2414,41,1631,41],[2415,18,1632,16],[2415,19,1632,17],[2415,20,1632,18],[2416,18,1633,16],[2416,31,1633,29],[2416,32,1633,30],[2416,33,1633,31],[2416,35,1633,33,"fetch_1"],[2416,42,1633,40],[2416,43,1633,41,"_request"],[2416,51,1633,49],[2416,53,1633,51,"_this18"],[2416,60,1633,55],[2416,61,1633,56,"fetch"],[2416,66,1633,61],[2416,68,1633,63],[2416,73,1633,68],[2416,75,1633,70,"url"],[2416,78,1633,73],[2416,80,1633,75],[2417,20,1634,20,"headers"],[2417,27,1634,27],[2417,29,1634,29,"_this18"],[2417,36,1634,33],[2417,37,1634,34,"headers"],[2417,44,1634,41],[2418,20,1635,20,"jwt"],[2418,23,1635,23],[2418,25,1635,25],[2418,26,1635,26,"_e"],[2418,28,1635,28],[2418,31,1635,31],[2418,32,1635,32,"_d"],[2418,34,1635,34],[2418,37,1635,37,"data"],[2418,41,1635,41],[2418,42,1635,42,"session"],[2418,49,1635,49],[2418,55,1635,55],[2418,59,1635,59],[2418,63,1635,63,"_d"],[2418,65,1635,65],[2418,70,1635,70],[2418,75,1635,75],[2418,76,1635,76],[2418,79,1635,79],[2418,84,1635,84],[2418,85,1635,85],[2418,88,1635,88,"_d"],[2418,90,1635,90],[2418,91,1635,91,"access_token"],[2418,103,1635,103],[2418,109,1635,109],[2418,113,1635,113],[2418,117,1635,117,"_e"],[2418,119,1635,119],[2418,124,1635,124],[2418,129,1635,129],[2418,130,1635,130],[2418,133,1635,133,"_e"],[2418,135,1635,135],[2418,138,1635,138,"undefined"],[2419,18,1636,16],[2419,19,1636,17],[2419,20,1636,18],[2420,16,1637,12],[2420,17,1637,13],[2421,16,1637,13],[2421,33,1637,13,"_x42"],[2421,37,1637,13],[2422,18,1637,13],[2422,25,1637,13,"_ref26"],[2422,31,1637,13],[2422,32,1637,13,"apply"],[2422,37,1637,13],[2422,44,1637,13,"arguments"],[2422,53,1637,13],[2423,16,1637,13],[2424,14,1637,13],[2424,18,1637,14],[2425,14,1622,20,"data"],[2425,18,1622,24],[2425,21,1622,24,"_yield$this$_useSessi"],[2425,42,1622,24],[2425,43,1622,20,"data"],[2425,47,1622,24],[2426,14,1622,26,"error"],[2426,19,1622,31],[2426,22,1622,31,"_yield$this$_useSessi"],[2426,43,1622,31],[2426,44,1622,26,"error"],[2426,49,1622,31],[2427,12,1638,12],[2427,16,1638,16,"error"],[2427,21,1638,21],[2427,23,1639,16],[2427,29,1639,22,"error"],[2427,34,1639,27],[2428,12,1640,12],[2428,16,1640,16],[2428,17,1640,17],[2428,18,1640,18],[2428,20,1640,20,"helpers_1"],[2428,29,1640,29],[2428,30,1640,30,"isBrowser"],[2428,39,1640,39],[2428,41,1640,41],[2428,42,1640,42],[2428,46,1640,46],[2428,48,1640,48],[2428,49,1640,49,"_a"],[2428,51,1640,51],[2428,54,1640,54,"credentials"],[2428,65,1640,65],[2428,66,1640,66,"options"],[2428,73,1640,73],[2428,79,1640,79],[2428,83,1640,83],[2428,87,1640,87,"_a"],[2428,89,1640,89],[2428,94,1640,94],[2428,99,1640,99],[2428,100,1640,100],[2428,103,1640,103],[2428,108,1640,108],[2428,109,1640,109],[2428,112,1640,112,"_a"],[2428,114,1640,114],[2428,115,1640,115,"skipBrowserRedirect"],[2428,134,1640,134],[2428,135,1640,135],[2428,137,1640,137],[2429,14,1641,16,"window"],[2429,20,1641,22],[2429,21,1641,23,"location"],[2429,29,1641,31],[2429,30,1641,32,"assign"],[2429,36,1641,38],[2429,37,1641,39,"data"],[2429,41,1641,43],[2429,46,1641,48],[2429,50,1641,52],[2429,54,1641,56,"data"],[2429,58,1641,60],[2429,63,1641,65],[2429,68,1641,70],[2429,69,1641,71],[2429,72,1641,74],[2429,77,1641,79],[2429,78,1641,80],[2429,81,1641,83,"data"],[2429,85,1641,87],[2429,86,1641,88,"url"],[2429,89,1641,91],[2429,90,1641,92],[2430,12,1642,12],[2431,12,1643,12],[2431,19,1643,19],[2432,14,1643,21,"data"],[2432,18,1643,25],[2432,20,1643,27],[2433,16,1643,29,"provider"],[2433,24,1643,37],[2433,26,1643,39,"credentials"],[2433,37,1643,50],[2433,38,1643,51,"provider"],[2433,46,1643,59],[2434,16,1643,61,"url"],[2434,19,1643,64],[2434,21,1643,66,"data"],[2434,25,1643,70],[2434,30,1643,75],[2434,34,1643,79],[2434,38,1643,83,"data"],[2434,42,1643,87],[2434,47,1643,92],[2434,52,1643,97],[2434,53,1643,98],[2434,56,1643,101],[2434,61,1643,106],[2434,62,1643,107],[2434,65,1643,110,"data"],[2434,69,1643,114],[2434,70,1643,115,"url"],[2435,14,1643,119],[2435,15,1643,120],[2436,14,1643,122,"error"],[2436,19,1643,127],[2436,21,1643,129],[2437,12,1643,134],[2437,13,1643,135],[2438,10,1644,8],[2438,11,1644,9],[2438,12,1645,8],[2438,19,1645,15,"error"],[2438,24,1645,20],[2438,26,1645,22],[2439,12,1646,12],[2439,16,1646,16],[2439,17,1646,17],[2439,18,1646,18],[2439,20,1646,20,"errors_1"],[2439,28,1646,28],[2439,29,1646,29,"isAuthError"],[2439,40,1646,40],[2439,42,1646,42,"error"],[2439,47,1646,47],[2439,48,1646,48],[2439,50,1646,50],[2440,14,1647,16],[2440,21,1647,23],[2441,16,1647,25,"data"],[2441,20,1647,29],[2441,22,1647,31],[2442,18,1647,33,"provider"],[2442,26,1647,41],[2442,28,1647,43,"credentials"],[2442,39,1647,54],[2442,40,1647,55,"provider"],[2442,48,1647,63],[2443,18,1647,65,"url"],[2443,21,1647,68],[2443,23,1647,70],[2444,16,1647,75],[2444,17,1647,76],[2445,16,1647,78,"error"],[2446,14,1647,84],[2446,15,1647,85],[2447,12,1648,12],[2448,12,1649,12],[2448,18,1649,18,"error"],[2448,23,1649,23],[2449,10,1650,8],[2450,8,1651,4],[2450,9,1651,5],[2451,8,1651,5],[2451,17,1619,10,"linkIdentityOAuth"],[2451,34,1619,27,"linkIdentityOAuth"],[2451,35,1619,27,"_x41"],[2451,39,1619,27],[2452,10,1619,27],[2452,17,1619,27,"_linkIdentityOAuth"],[2452,35,1619,27],[2452,36,1619,27,"apply"],[2452,41,1619,27],[2452,48,1619,27,"arguments"],[2452,57,1619,27],[2453,8,1619,27],[2454,8,1619,27],[2454,15,1619,10,"linkIdentityOAuth"],[2454,32,1619,27],[2455,6,1619,27],[2456,4,1619,27],[2457,6,1619,27,"key"],[2457,9,1619,27],[2458,6,1619,27,"value"],[2458,11,1619,27],[2459,8,1619,27],[2459,12,1619,27,"_linkIdentityIdToken"],[2459,32,1619,27],[2459,35,1619,27,"_asyncToGenerator"],[2459,52,1619,27],[2459,53,1652,4],[2459,64,1652,30,"credentials"],[2459,75,1652,41],[2459,77,1652,43],[2460,10,1652,43],[2460,14,1652,43,"_this19"],[2460,21,1652,43],[2461,10,1653,8],[2461,23,1653,21],[2461,27,1653,25],[2461,28,1653,26,"_useSession"],[2461,39,1653,37],[2462,12,1653,37],[2462,16,1653,37,"_ref27"],[2462,22,1653,37],[2462,25,1653,37,"_asyncToGenerator"],[2462,42,1653,37],[2462,43,1653,38],[2462,54,1653,45,"result"],[2462,60,1653,51],[2462,62,1653,56],[2463,14,1654,12],[2463,18,1654,16,"_a"],[2463,20,1654,18],[2464,14,1655,12],[2464,18,1655,16],[2465,16,1656,16],[2465,20,1656,31,"sessionError"],[2465,32,1656,43],[2465,35,1656,68,"result"],[2465,41,1656,74],[2465,42,1656,24,"error"],[2465,47,1656,29],[2466,18,1656,53,"session"],[2466,25,1656,60],[2466,28,1656,68,"result"],[2466,34,1656,74],[2466,35,1656,45,"data"],[2466,39,1656,49],[2466,40,1656,53,"session"],[2466,47,1656,60],[2467,16,1657,16],[2467,20,1657,20,"sessionError"],[2467,32,1657,32],[2467,34,1658,20],[2467,40,1658,26,"sessionError"],[2467,52,1658,38],[2468,16,1659,16],[2468,20,1659,24,"options"],[2468,27,1659,31],[2468,30,1659,74,"credentials"],[2468,41,1659,85],[2468,42,1659,24,"options"],[2468,49,1659,31],[2469,18,1659,33,"provider"],[2469,26,1659,41],[2469,29,1659,74,"credentials"],[2469,40,1659,85],[2469,41,1659,33,"provider"],[2469,49,1659,41],[2470,18,1659,43,"token"],[2470,23,1659,48],[2470,26,1659,74,"credentials"],[2470,37,1659,85],[2470,38,1659,43,"token"],[2470,43,1659,48],[2471,18,1659,50,"access_token"],[2471,30,1659,62],[2471,33,1659,74,"credentials"],[2471,44,1659,85],[2471,45,1659,50,"access_token"],[2471,57,1659,62],[2472,18,1659,64,"nonce"],[2472,23,1659,69],[2472,26,1659,74,"credentials"],[2472,37,1659,85],[2472,38,1659,64,"nonce"],[2472,43,1659,69],[2473,16,1660,16],[2473,20,1660,22,"res"],[2473,23,1660,25],[2473,32,1660,34],[2473,33,1660,35],[2473,34,1660,36],[2473,36,1660,38,"fetch_1"],[2473,43,1660,45],[2473,44,1660,46,"_request"],[2473,52,1660,54],[2473,54,1660,56,"_this19"],[2473,61,1660,60],[2473,62,1660,61,"fetch"],[2473,67,1660,66],[2473,69,1660,68],[2473,75,1660,74],[2473,77,1660,76],[2473,80,1660,79,"_this19"],[2473,87,1660,83],[2473,88,1660,84,"url"],[2473,91,1660,87],[2473,119,1660,115],[2473,121,1660,117],[2474,18,1661,20,"headers"],[2474,25,1661,27],[2474,27,1661,29,"_this19"],[2474,34,1661,33],[2474,35,1661,34,"headers"],[2474,42,1661,41],[2475,18,1662,20,"jwt"],[2475,21,1662,23],[2475,23,1662,25],[2475,24,1662,26,"_a"],[2475,26,1662,28],[2475,29,1662,31,"session"],[2475,36,1662,38],[2475,41,1662,43],[2475,45,1662,47],[2475,49,1662,51,"session"],[2475,56,1662,58],[2475,61,1662,63],[2475,66,1662,68],[2475,67,1662,69],[2475,70,1662,72],[2475,75,1662,77],[2475,76,1662,78],[2475,79,1662,81,"session"],[2475,86,1662,88],[2475,87,1662,89,"access_token"],[2475,99,1662,101],[2475,105,1662,107],[2475,109,1662,111],[2475,113,1662,115,"_a"],[2475,115,1662,117],[2475,120,1662,122],[2475,125,1662,127],[2475,126,1662,128],[2475,129,1662,131,"_a"],[2475,131,1662,133],[2475,134,1662,136,"undefined"],[2475,143,1662,145],[2476,18,1663,20,"body"],[2476,22,1663,24],[2476,24,1663,26],[2477,20,1664,24,"provider"],[2477,28,1664,32],[2478,20,1665,24,"id_token"],[2478,28,1665,32],[2478,30,1665,34,"token"],[2478,35,1665,39],[2479,20,1666,24,"access_token"],[2479,32,1666,36],[2480,20,1667,24,"nonce"],[2480,25,1667,29],[2481,20,1668,24,"link_identity"],[2481,33,1668,37],[2481,35,1668,39],[2481,39,1668,43],[2482,20,1669,24,"gotrue_meta_security"],[2482,40,1669,44],[2482,42,1669,46],[2483,22,1669,48,"captcha_token"],[2483,35,1669,61],[2483,37,1669,63,"options"],[2483,44,1669,70],[2483,49,1669,75],[2483,53,1669,79],[2483,57,1669,83,"options"],[2483,64,1669,90],[2483,69,1669,95],[2483,74,1669,100],[2483,75,1669,101],[2483,78,1669,104],[2483,83,1669,109],[2483,84,1669,110],[2483,87,1669,113,"options"],[2483,94,1669,120],[2483,95,1669,121,"captchaToken"],[2484,20,1669,134],[2485,18,1670,20],[2485,19,1670,21],[2486,18,1671,20,"xform"],[2486,23,1671,25],[2486,25,1671,27,"fetch_1"],[2486,32,1671,34],[2486,33,1671,35,"_sessionResponse"],[2487,16,1672,16],[2487,17,1672,17],[2487,18,1672,18],[2488,16,1673,16],[2488,20,1673,24,"data"],[2488,24,1673,28],[2488,27,1673,40,"res"],[2488,30,1673,43],[2488,31,1673,24,"data"],[2488,35,1673,28],[2489,18,1673,30,"error"],[2489,23,1673,35],[2489,26,1673,40,"res"],[2489,29,1673,43],[2489,30,1673,30,"error"],[2489,35,1673,35],[2490,16,1674,16],[2490,20,1674,20,"error"],[2490,25,1674,25],[2490,27,1674,27],[2491,18,1675,20],[2491,25,1675,27],[2492,20,1675,29,"data"],[2492,24,1675,33],[2492,26,1675,35],[2493,22,1675,37,"user"],[2493,26,1675,41],[2493,28,1675,43],[2493,32,1675,47],[2494,22,1675,49,"session"],[2494,29,1675,56],[2494,31,1675,58],[2495,20,1675,63],[2495,21,1675,64],[2496,20,1675,66,"error"],[2497,18,1675,72],[2497,19,1675,73],[2498,16,1676,16],[2498,17,1676,17],[2498,23,1677,21],[2498,27,1677,25],[2498,28,1677,26,"data"],[2498,32,1677,30],[2498,36,1677,34],[2498,37,1677,35,"data"],[2498,41,1677,39],[2498,42,1677,40,"session"],[2498,49,1677,47],[2498,53,1677,51],[2498,54,1677,52,"data"],[2498,58,1677,56],[2498,59,1677,57,"user"],[2498,63,1677,61],[2498,65,1677,63],[2499,18,1678,20],[2499,25,1678,27],[2500,20,1679,24,"data"],[2500,24,1679,28],[2500,26,1679,30],[2501,22,1679,32,"user"],[2501,26,1679,36],[2501,28,1679,38],[2501,32,1679,42],[2502,22,1679,44,"session"],[2502,29,1679,51],[2502,31,1679,53],[2503,20,1679,58],[2503,21,1679,59],[2504,20,1680,24,"error"],[2504,25,1680,29],[2504,27,1680,31],[2504,31,1680,35,"errors_1"],[2504,39,1680,43],[2504,40,1680,44,"AuthInvalidTokenResponseError"],[2504,69,1680,73],[2504,70,1680,74],[2505,18,1681,20],[2505,19,1681,21],[2506,16,1682,16],[2507,16,1683,16],[2507,20,1683,20,"data"],[2507,24,1683,24],[2507,25,1683,25,"session"],[2507,32,1683,32],[2507,34,1683,34],[2508,18,1684,20],[2508,24,1684,26,"_this19"],[2508,31,1684,30],[2508,32,1684,31,"_saveSession"],[2508,44,1684,43],[2508,45,1684,44,"data"],[2508,49,1684,48],[2508,50,1684,49,"session"],[2508,57,1684,56],[2508,58,1684,57],[2509,18,1685,20],[2509,24,1685,26,"_this19"],[2509,31,1685,30],[2509,32,1685,31,"_notifyAllSubscribers"],[2509,53,1685,52],[2509,54,1685,53],[2509,68,1685,67],[2509,70,1685,69,"data"],[2509,74,1685,73],[2509,75,1685,74,"session"],[2509,82,1685,81],[2509,83,1685,82],[2510,16,1686,16],[2511,16,1687,16],[2511,23,1687,23],[2512,18,1687,25,"data"],[2512,22,1687,29],[2513,18,1687,31,"error"],[2514,16,1687,37],[2514,17,1687,38],[2515,14,1688,12],[2515,15,1688,13],[2515,16,1689,12],[2515,23,1689,19,"error"],[2515,28,1689,24],[2515,30,1689,26],[2516,16,1690,16],[2516,20,1690,20],[2516,21,1690,21],[2516,22,1690,22],[2516,24,1690,24,"errors_1"],[2516,32,1690,32],[2516,33,1690,33,"isAuthError"],[2516,44,1690,44],[2516,46,1690,46,"error"],[2516,51,1690,51],[2516,52,1690,52],[2516,54,1690,54],[2517,18,1691,20],[2517,25,1691,27],[2518,20,1691,29,"data"],[2518,24,1691,33],[2518,26,1691,35],[2519,22,1691,37,"user"],[2519,26,1691,41],[2519,28,1691,43],[2519,32,1691,47],[2520,22,1691,49,"session"],[2520,29,1691,56],[2520,31,1691,58],[2521,20,1691,63],[2521,21,1691,64],[2522,20,1691,66,"error"],[2523,18,1691,72],[2523,19,1691,73],[2524,16,1692,16],[2525,16,1693,16],[2525,22,1693,22,"error"],[2525,27,1693,27],[2526,14,1694,12],[2527,12,1695,8],[2527,13,1695,9],[2528,12,1695,9],[2528,29,1695,9,"_x44"],[2528,33,1695,9],[2529,14,1695,9],[2529,21,1695,9,"_ref27"],[2529,27,1695,9],[2529,28,1695,9,"apply"],[2529,33,1695,9],[2529,40,1695,9,"arguments"],[2529,49,1695,9],[2530,12,1695,9],[2531,10,1695,9],[2531,14,1695,10],[2532,8,1696,4],[2532,9,1696,5],[2533,8,1696,5],[2533,17,1652,10,"linkIdentityIdToken"],[2533,36,1652,29,"linkIdentityIdToken"],[2533,37,1652,29,"_x43"],[2533,41,1652,29],[2534,10,1652,29],[2534,17,1652,29,"_linkIdentityIdToken"],[2534,37,1652,29],[2534,38,1652,29,"apply"],[2534,43,1652,29],[2534,50,1652,29,"arguments"],[2534,59,1652,29],[2535,8,1652,29],[2536,8,1652,29],[2536,15,1652,10,"linkIdentityIdToken"],[2536,34,1652,29],[2537,6,1652,29],[2538,6,1697,4],[2539,0,1698,0],[2540,0,1699,0],[2541,4,1697,4],[2542,6,1697,4,"key"],[2542,9,1697,4],[2543,6,1697,4,"value"],[2543,11,1697,4],[2544,8,1697,4],[2544,12,1697,4,"_unlinkIdentity"],[2544,27,1697,4],[2544,30,1697,4,"_asyncToGenerator"],[2544,47,1697,4],[2544,48,1700,4],[2544,59,1700,25,"identity"],[2544,67,1700,33],[2544,69,1700,35],[2545,10,1700,35],[2545,14,1700,35,"_this20"],[2545,21,1700,35],[2546,10,1701,8],[2546,14,1701,12],[2547,12,1702,12],[2547,25,1702,25],[2547,29,1702,29],[2547,30,1702,30,"_useSession"],[2547,41,1702,41],[2548,14,1702,41],[2548,18,1702,41,"_ref28"],[2548,24,1702,41],[2548,27,1702,41,"_asyncToGenerator"],[2548,44,1702,41],[2548,45,1702,42],[2548,56,1702,49,"result"],[2548,62,1702,55],[2548,64,1702,60],[2549,16,1703,16],[2549,20,1703,20,"_a"],[2549,22,1703,22],[2549,24,1703,24,"_b"],[2549,26,1703,26],[2550,16,1704,16],[2550,20,1704,24,"data"],[2550,24,1704,28],[2550,27,1704,40,"result"],[2550,33,1704,46],[2550,34,1704,24,"data"],[2550,38,1704,28],[2551,18,1704,30,"error"],[2551,23,1704,35],[2551,26,1704,40,"result"],[2551,32,1704,46],[2551,33,1704,30,"error"],[2551,38,1704,35],[2552,16,1705,16],[2552,20,1705,20,"error"],[2552,25,1705,25],[2552,27,1705,27],[2553,18,1706,20],[2553,24,1706,26,"error"],[2553,29,1706,31],[2554,16,1707,16],[2555,16,1708,16],[2555,29,1708,29],[2555,30,1708,30],[2555,31,1708,31],[2555,33,1708,33,"fetch_1"],[2555,40,1708,40],[2555,41,1708,41,"_request"],[2555,49,1708,49],[2555,51,1708,51,"_this20"],[2555,58,1708,55],[2555,59,1708,56,"fetch"],[2555,64,1708,61],[2555,66,1708,63],[2555,74,1708,71],[2555,76,1708,73],[2555,79,1708,76,"_this20"],[2555,86,1708,80],[2555,87,1708,81,"url"],[2555,90,1708,84],[2555,110,1708,104,"identity"],[2555,118,1708,112],[2555,119,1708,113,"identity_id"],[2555,130,1708,124],[2555,132,1708,126],[2555,134,1708,128],[2556,18,1709,20,"headers"],[2556,25,1709,27],[2556,27,1709,29,"_this20"],[2556,34,1709,33],[2556,35,1709,34,"headers"],[2556,42,1709,41],[2557,18,1710,20,"jwt"],[2557,21,1710,23],[2557,23,1710,25],[2557,24,1710,26,"_b"],[2557,26,1710,28],[2557,29,1710,31],[2557,30,1710,32,"_a"],[2557,32,1710,34],[2557,35,1710,37,"data"],[2557,39,1710,41],[2557,40,1710,42,"session"],[2557,47,1710,49],[2557,53,1710,55],[2557,57,1710,59],[2557,61,1710,63,"_a"],[2557,63,1710,65],[2557,68,1710,70],[2557,73,1710,75],[2557,74,1710,76],[2557,77,1710,79],[2557,82,1710,84],[2557,83,1710,85],[2557,86,1710,88,"_a"],[2557,88,1710,90],[2557,89,1710,91,"access_token"],[2557,101,1710,103],[2557,107,1710,109],[2557,111,1710,113],[2557,115,1710,117,"_b"],[2557,117,1710,119],[2557,122,1710,124],[2557,127,1710,129],[2557,128,1710,130],[2557,131,1710,133,"_b"],[2557,133,1710,135],[2557,136,1710,138,"undefined"],[2558,16,1711,16],[2558,17,1711,17],[2558,18,1711,18],[2559,14,1712,12],[2559,15,1712,13],[2560,14,1712,13],[2560,31,1712,13,"_x46"],[2560,35,1712,13],[2561,16,1712,13],[2561,23,1712,13,"_ref28"],[2561,29,1712,13],[2561,30,1712,13,"apply"],[2561,35,1712,13],[2561,42,1712,13,"arguments"],[2561,51,1712,13],[2562,14,1712,13],[2563,12,1712,13],[2563,16,1712,14],[2564,10,1713,8],[2564,11,1713,9],[2564,12,1714,8],[2564,19,1714,15,"error"],[2564,24,1714,20],[2564,26,1714,22],[2565,12,1715,12],[2565,16,1715,16],[2565,17,1715,17],[2565,18,1715,18],[2565,20,1715,20,"errors_1"],[2565,28,1715,28],[2565,29,1715,29,"isAuthError"],[2565,40,1715,40],[2565,42,1715,42,"error"],[2565,47,1715,47],[2565,48,1715,48],[2565,50,1715,50],[2566,14,1716,16],[2566,21,1716,23],[2567,16,1716,25,"data"],[2567,20,1716,29],[2567,22,1716,31],[2567,26,1716,35],[2568,16,1716,37,"error"],[2569,14,1716,43],[2569,15,1716,44],[2570,12,1717,12],[2571,12,1718,12],[2571,18,1718,18,"error"],[2571,23,1718,23],[2572,10,1719,8],[2573,8,1720,4],[2573,9,1720,5],[2574,8,1720,5],[2574,17,1700,10,"unlinkIdentity"],[2574,31,1700,24,"unlinkIdentity"],[2574,32,1700,24,"_x45"],[2574,36,1700,24],[2575,10,1700,24],[2575,17,1700,24,"_unlinkIdentity"],[2575,32,1700,24],[2575,33,1700,24,"apply"],[2575,38,1700,24],[2575,45,1700,24,"arguments"],[2575,54,1700,24],[2576,8,1700,24],[2577,8,1700,24],[2577,15,1700,10,"unlinkIdentity"],[2577,29,1700,24],[2578,6,1700,24],[2579,6,1721,4],[2580,0,1722,0],[2581,0,1723,0],[2582,0,1724,0],[2583,6,1721,4],[2584,4,1721,4],[2585,6,1721,4,"key"],[2585,9,1721,4],[2586,6,1721,4,"value"],[2586,11,1721,4],[2587,8,1721,4],[2587,12,1721,4,"_refreshAccessToken2"],[2587,32,1721,4],[2587,35,1721,4,"_asyncToGenerator"],[2587,52,1721,4],[2587,53,1725,4],[2587,64,1725,30,"refreshToken"],[2587,76,1725,42],[2587,78,1725,44],[2588,10,1725,44],[2588,14,1725,44,"_this21"],[2588,21,1725,44],[2589,10,1726,8],[2589,14,1726,14,"debugName"],[2589,23,1726,23],[2589,26,1726,26],[2589,50,1726,50,"refreshToken"],[2589,62,1726,62],[2589,63,1726,63,"substring"],[2589,72,1726,72],[2589,73,1726,73],[2589,74,1726,74],[2589,76,1726,76],[2589,77,1726,77],[2589,78,1726,78],[2589,84,1726,84],[2590,10,1727,8],[2590,14,1727,12],[2590,15,1727,13,"_debug"],[2590,21,1727,19],[2590,22,1727,20,"debugName"],[2590,31,1727,29],[2590,33,1727,31],[2590,40,1727,38],[2590,41,1727,39],[2591,10,1728,8],[2591,14,1728,12],[2592,12,1729,12],[2592,16,1729,18,"startedAt"],[2592,25,1729,27],[2592,28,1729,30,"Date"],[2592,32,1729,34],[2592,33,1729,35,"now"],[2592,36,1729,38],[2592,37,1729,39],[2592,38,1729,40],[2593,12,1730,12],[2594,12,1731,12],[2594,25,1731,25],[2594,26,1731,26],[2594,27,1731,27],[2594,29,1731,29,"helpers_1"],[2594,38,1731,38],[2594,39,1731,39,"retryable"],[2594,48,1731,48],[2595,14,1731,48],[2595,18,1731,48,"_ref29"],[2595,24,1731,48],[2595,27,1731,48,"_asyncToGenerator"],[2595,44,1731,48],[2595,45,1731,50],[2595,56,1731,57,"attempt"],[2595,63,1731,64],[2595,65,1731,69],[2596,16,1732,16],[2596,20,1732,20,"attempt"],[2596,27,1732,27],[2596,30,1732,30],[2596,31,1732,31],[2596,33,1732,33],[2597,18,1733,20],[2597,24,1733,26],[2597,25,1733,27],[2597,26,1733,28],[2597,28,1733,30,"helpers_1"],[2597,37,1733,39],[2597,38,1733,40,"sleep"],[2597,43,1733,45],[2597,45,1733,47],[2597,48,1733,50],[2597,51,1733,53,"Math"],[2597,55,1733,57],[2597,56,1733,58,"pow"],[2597,59,1733,61],[2597,60,1733,62],[2597,61,1733,63],[2597,63,1733,65,"attempt"],[2597,70,1733,72],[2597,73,1733,75],[2597,74,1733,76],[2597,75,1733,77],[2597,76,1733,78],[2597,77,1733,79],[2597,78,1733,80],[2598,16,1734,16],[2599,16,1735,16,"_this21"],[2599,23,1735,20],[2599,24,1735,21,"_debug"],[2599,30,1735,27],[2599,31,1735,28,"debugName"],[2599,40,1735,37],[2599,42,1735,39],[2599,62,1735,59],[2599,64,1735,61,"attempt"],[2599,71,1735,68],[2599,72,1735,69],[2600,16,1736,16],[2600,29,1736,29],[2600,30,1736,30],[2600,31,1736,31],[2600,33,1736,33,"fetch_1"],[2600,40,1736,40],[2600,41,1736,41,"_request"],[2600,49,1736,49],[2600,51,1736,51,"_this21"],[2600,58,1736,55],[2600,59,1736,56,"fetch"],[2600,64,1736,61],[2600,66,1736,63],[2600,72,1736,69],[2600,74,1736,71],[2600,77,1736,74,"_this21"],[2600,84,1736,78],[2600,85,1736,79,"url"],[2600,88,1736,82],[2600,121,1736,115],[2600,123,1736,117],[2601,18,1737,20,"body"],[2601,22,1737,24],[2601,24,1737,26],[2602,20,1737,28,"refresh_token"],[2602,33,1737,41],[2602,35,1737,43,"refreshToken"],[2603,18,1737,56],[2603,19,1737,57],[2604,18,1738,20,"headers"],[2604,25,1738,27],[2604,27,1738,29,"_this21"],[2604,34,1738,33],[2604,35,1738,34,"headers"],[2604,42,1738,41],[2605,18,1739,20,"xform"],[2605,23,1739,25],[2605,25,1739,27,"fetch_1"],[2605,32,1739,34],[2605,33,1739,35,"_sessionResponse"],[2606,16,1740,16],[2606,17,1740,17],[2606,18,1740,18],[2607,14,1741,12],[2607,15,1741,13],[2608,14,1741,13],[2608,31,1741,13,"_x48"],[2608,35,1741,13],[2609,16,1741,13],[2609,23,1741,13,"_ref29"],[2609,29,1741,13],[2609,30,1741,13,"apply"],[2609,35,1741,13],[2609,42,1741,13,"arguments"],[2609,51,1741,13],[2610,14,1741,13],[2611,12,1741,13],[2611,17,1741,15],[2611,18,1741,16,"attempt"],[2611,25,1741,23],[2611,27,1741,25,"error"],[2611,32,1741,30],[2611,37,1741,35],[2612,14,1742,16],[2612,18,1742,22,"nextBackOffInterval"],[2612,37,1742,41],[2612,40,1742,44],[2612,43,1742,47],[2612,46,1742,50,"Math"],[2612,50,1742,54],[2612,51,1742,55,"pow"],[2612,54,1742,58],[2612,55,1742,59],[2612,56,1742,60],[2612,58,1742,62,"attempt"],[2612,65,1742,69],[2612,66,1742,70],[2613,14,1743,16],[2613,21,1743,24,"error"],[2613,26,1743,29],[2613,30,1744,20],[2613,31,1744,21],[2613,32,1744,22],[2613,34,1744,24,"errors_1"],[2613,42,1744,32],[2613,43,1744,33,"isAuthRetryableFetchError"],[2613,68,1744,58],[2613,70,1744,60,"error"],[2613,75,1744,65],[2613,76,1744,66],[2614,14,1745,20],[2615,14,1746,20,"Date"],[2615,18,1746,24],[2615,19,1746,25,"now"],[2615,22,1746,28],[2615,23,1746,29],[2615,24,1746,30],[2615,27,1746,33,"nextBackOffInterval"],[2615,46,1746,52],[2615,49,1746,55,"startedAt"],[2615,58,1746,64],[2615,61,1746,67,"constants_1"],[2615,72,1746,78],[2615,73,1746,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2615,102,1746,108],[2616,12,1747,12],[2616,13,1747,13],[2616,14,1747,14],[2617,10,1748,8],[2617,11,1748,9],[2617,12,1749,8],[2617,19,1749,15,"error"],[2617,24,1749,20],[2617,26,1749,22],[2618,12,1750,12],[2618,16,1750,16],[2618,17,1750,17,"_debug"],[2618,23,1750,23],[2618,24,1750,24,"debugName"],[2618,33,1750,33],[2618,35,1750,35],[2618,42,1750,42],[2618,44,1750,44,"error"],[2618,49,1750,49],[2618,50,1750,50],[2619,12,1751,12],[2619,16,1751,16],[2619,17,1751,17],[2619,18,1751,18],[2619,20,1751,20,"errors_1"],[2619,28,1751,28],[2619,29,1751,29,"isAuthError"],[2619,40,1751,40],[2619,42,1751,42,"error"],[2619,47,1751,47],[2619,48,1751,48],[2619,50,1751,50],[2620,14,1752,16],[2620,21,1752,23],[2621,16,1752,25,"data"],[2621,20,1752,29],[2621,22,1752,31],[2622,18,1752,33,"session"],[2622,25,1752,40],[2622,27,1752,42],[2622,31,1752,46],[2623,18,1752,48,"user"],[2623,22,1752,52],[2623,24,1752,54],[2624,16,1752,59],[2624,17,1752,60],[2625,16,1752,62,"error"],[2626,14,1752,68],[2626,15,1752,69],[2627,12,1753,12],[2628,12,1754,12],[2628,18,1754,18,"error"],[2628,23,1754,23],[2629,10,1755,8],[2629,11,1755,9],[2629,20,1756,16],[2630,12,1757,12],[2630,16,1757,16],[2630,17,1757,17,"_debug"],[2630,23,1757,23],[2630,24,1757,24,"debugName"],[2630,33,1757,33],[2630,35,1757,35],[2630,40,1757,40],[2630,41,1757,41],[2631,10,1758,8],[2632,8,1759,4],[2632,9,1759,5],[2633,8,1759,5],[2633,17,1725,10,"_refreshAccessToken"],[2633,36,1725,29,"_refreshAccessToken"],[2633,37,1725,29,"_x47"],[2633,41,1725,29],[2634,10,1725,29],[2634,17,1725,29,"_refreshAccessToken2"],[2634,37,1725,29],[2634,38,1725,29,"apply"],[2634,43,1725,29],[2634,50,1725,29,"arguments"],[2634,59,1725,29],[2635,8,1725,29],[2636,8,1725,29],[2636,15,1725,10,"_refreshAccessToken"],[2636,34,1725,29],[2637,6,1725,29],[2638,4,1725,29],[2639,6,1725,29,"key"],[2639,9,1725,29],[2640,6,1725,29,"value"],[2640,11,1725,29],[2640,13,1760,4],[2640,22,1760,4,"_isValidSession"],[2640,37,1760,19,"_isValidSession"],[2640,38,1760,20,"maybeSession"],[2640,50,1760,32],[2640,52,1760,34],[2641,8,1761,8],[2641,12,1761,14,"isValidSession"],[2641,26,1761,28],[2641,29,1761,31],[2641,36,1761,38,"maybeSession"],[2641,48,1761,50],[2641,53,1761,55],[2641,61,1761,63],[2641,65,1762,12,"maybeSession"],[2641,77,1762,24],[2641,82,1762,29],[2641,86,1762,33],[2641,90,1763,12],[2641,104,1763,26],[2641,108,1763,30,"maybeSession"],[2641,120,1763,42],[2641,124,1764,12],[2641,139,1764,27],[2641,143,1764,31,"maybeSession"],[2641,155,1764,43],[2641,159,1765,12],[2641,171,1765,24],[2641,175,1765,28,"maybeSession"],[2641,187,1765,40],[2642,8,1766,8],[2642,15,1766,15,"isValidSession"],[2642,29,1766,29],[2643,6,1767,4],[2644,4,1767,5],[2645,6,1767,5,"key"],[2645,9,1767,5],[2646,6,1767,5,"value"],[2646,11,1767,5],[2647,8,1767,5],[2647,12,1767,5,"_handleProviderSignIn2"],[2647,34,1767,5],[2647,37,1767,5,"_asyncToGenerator"],[2647,54,1767,5],[2647,55,1768,4],[2647,66,1768,32,"provider"],[2647,74,1768,40],[2647,76,1768,42,"options"],[2647,83,1768,49],[2647,85,1768,51],[2648,10,1769,8],[2648,14,1769,14,"url"],[2648,17,1769,17],[2648,26,1769,26],[2648,30,1769,30],[2648,31,1769,31,"_getUrlForProvider"],[2648,49,1769,49],[2648,50,1769,50],[2648,53,1769,53],[2648,57,1769,57],[2648,58,1769,58,"url"],[2648,61,1769,61],[2648,73,1769,73],[2648,75,1769,75,"provider"],[2648,83,1769,83],[2648,85,1769,85],[2649,12,1770,12,"redirectTo"],[2649,22,1770,22],[2649,24,1770,24,"options"],[2649,31,1770,31],[2649,32,1770,32,"redirectTo"],[2649,42,1770,42],[2650,12,1771,12,"scopes"],[2650,18,1771,18],[2650,20,1771,20,"options"],[2650,27,1771,27],[2650,28,1771,28,"scopes"],[2650,34,1771,34],[2651,12,1772,12,"queryParams"],[2651,23,1772,23],[2651,25,1772,25,"options"],[2651,32,1772,32],[2651,33,1772,33,"queryParams"],[2652,10,1773,8],[2652,11,1773,9],[2652,12,1773,10],[2653,10,1774,8],[2653,14,1774,12],[2653,15,1774,13,"_debug"],[2653,21,1774,19],[2653,22,1774,20],[2653,48,1774,46],[2653,50,1774,48],[2653,60,1774,58],[2653,62,1774,60,"provider"],[2653,70,1774,68],[2653,72,1774,70],[2653,81,1774,79],[2653,83,1774,81,"options"],[2653,90,1774,88],[2653,92,1774,90],[2653,97,1774,95],[2653,99,1774,97,"url"],[2653,102,1774,100],[2653,103,1774,101],[2654,10,1775,8],[2655,10,1776,8],[2655,14,1776,12],[2655,15,1776,13],[2655,16,1776,14],[2655,18,1776,16,"helpers_1"],[2655,27,1776,25],[2655,28,1776,26,"isBrowser"],[2655,37,1776,35],[2655,39,1776,37],[2655,40,1776,38],[2655,44,1776,42],[2655,45,1776,43,"options"],[2655,52,1776,50],[2655,53,1776,51,"skipBrowserRedirect"],[2655,72,1776,70],[2655,74,1776,72],[2656,12,1777,12,"window"],[2656,18,1777,18],[2656,19,1777,19,"location"],[2656,27,1777,27],[2656,28,1777,28,"assign"],[2656,34,1777,34],[2656,35,1777,35,"url"],[2656,38,1777,38],[2656,39,1777,39],[2657,10,1778,8],[2658,10,1779,8],[2658,17,1779,15],[2659,12,1779,17,"data"],[2659,16,1779,21],[2659,18,1779,23],[2660,14,1779,25,"provider"],[2660,22,1779,33],[2661,14,1779,35,"url"],[2662,12,1779,39],[2662,13,1779,40],[2663,12,1779,42,"error"],[2663,17,1779,47],[2663,19,1779,49],[2664,10,1779,54],[2664,11,1779,55],[2665,8,1780,4],[2665,9,1780,5],[2666,8,1780,5],[2666,17,1768,10,"_handleProviderSignIn"],[2666,38,1768,31,"_handleProviderSignIn"],[2666,39,1768,31,"_x49"],[2666,43,1768,31],[2666,45,1768,31,"_x50"],[2666,49,1768,31],[2667,10,1768,31],[2667,17,1768,31,"_handleProviderSignIn2"],[2667,39,1768,31],[2667,40,1768,31,"apply"],[2667,45,1768,31],[2667,52,1768,31,"arguments"],[2667,61,1768,31],[2668,8,1768,31],[2669,8,1768,31],[2669,15,1768,10,"_handleProviderSignIn"],[2669,36,1768,31],[2670,6,1768,31],[2671,6,1781,4],[2672,0,1782,0],[2673,0,1783,0],[2674,0,1784,0],[2675,4,1781,4],[2676,6,1781,4,"key"],[2676,9,1781,4],[2677,6,1781,4,"value"],[2677,11,1781,4],[2678,8,1781,4],[2678,12,1781,4,"_recoverAndRefresh2"],[2678,31,1781,4],[2678,34,1781,4,"_asyncToGenerator"],[2678,51,1781,4],[2678,52,1785,4],[2678,65,1785,31],[2679,10,1786,8],[2679,14,1786,12,"_a"],[2679,16,1786,14],[2679,18,1786,16,"_b"],[2679,20,1786,18],[2680,10,1787,8],[2680,14,1787,14,"debugName"],[2680,23,1787,23],[2680,26,1787,26],[2680,49,1787,49],[2681,10,1788,8],[2681,14,1788,12],[2681,15,1788,13,"_debug"],[2681,21,1788,19],[2681,22,1788,20,"debugName"],[2681,31,1788,29],[2681,33,1788,31],[2681,40,1788,38],[2681,41,1788,39],[2682,10,1789,8],[2682,14,1789,12],[2683,12,1790,12],[2683,16,1790,18,"currentSession"],[2683,30,1790,32],[2683,39,1790,42],[2683,40,1790,43],[2683,41,1790,44],[2683,43,1790,46,"helpers_1"],[2683,52,1790,55],[2683,53,1790,56,"getItemAsync"],[2683,65,1790,68],[2683,67,1790,70],[2683,71,1790,74],[2683,72,1790,75,"storage"],[2683,79,1790,82],[2683,81,1790,84],[2683,85,1790,88],[2683,86,1790,89,"storageKey"],[2683,96,1790,99],[2683,97,1790,101],[2684,12,1791,12],[2684,16,1791,16,"currentSession"],[2684,30,1791,30],[2684,34,1791,34],[2684,38,1791,38],[2684,39,1791,39,"userStorage"],[2684,50,1791,50],[2684,52,1791,52],[2685,14,1792,16],[2685,18,1792,20,"maybeUser"],[2685,27,1792,29],[2685,36,1792,39],[2685,37,1792,40],[2685,38,1792,41],[2685,40,1792,43,"helpers_1"],[2685,49,1792,52],[2685,50,1792,53,"getItemAsync"],[2685,62,1792,65],[2685,64,1792,67],[2685,68,1792,71],[2685,69,1792,72,"userStorage"],[2685,80,1792,83],[2685,82,1792,85],[2685,86,1792,89],[2685,87,1792,90,"storageKey"],[2685,97,1792,100],[2685,100,1792,103],[2685,107,1792,110],[2685,108,1792,112],[2686,14,1793,16],[2686,18,1793,20],[2686,19,1793,21],[2686,23,1793,25],[2686,24,1793,26,"storage"],[2686,31,1793,33],[2686,32,1793,34,"isServer"],[2686,40,1793,42],[2686,44,1793,46,"Object"],[2686,50,1793,52],[2686,51,1793,53,"is"],[2686,53,1793,55],[2686,54,1793,56],[2686,58,1793,60],[2686,59,1793,61,"storage"],[2686,66,1793,68],[2686,68,1793,70],[2686,72,1793,74],[2686,73,1793,75,"userStorage"],[2686,84,1793,86],[2686,85,1793,87],[2686,89,1793,91],[2686,90,1793,92,"maybeUser"],[2686,99,1793,101],[2686,101,1793,103],[2687,16,1794,20],[2688,16,1795,20],[2689,16,1796,20],[2690,16,1797,20],[2691,16,1798,20,"maybeUser"],[2691,25,1798,29],[2691,28,1798,32],[2692,18,1798,34,"user"],[2692,22,1798,38],[2692,24,1798,40,"currentSession"],[2692,38,1798,54],[2692,39,1798,55,"user"],[2693,16,1798,60],[2693,17,1798,61],[2694,16,1799,20],[2694,22,1799,26],[2694,23,1799,27],[2694,24,1799,28],[2694,26,1799,30,"helpers_1"],[2694,35,1799,39],[2694,36,1799,40,"setItemAsync"],[2694,48,1799,52],[2694,50,1799,54],[2694,54,1799,58],[2694,55,1799,59,"userStorage"],[2694,66,1799,70],[2694,68,1799,72],[2694,72,1799,76],[2694,73,1799,77,"storageKey"],[2694,83,1799,87],[2694,86,1799,90],[2694,93,1799,97],[2694,95,1799,99,"maybeUser"],[2694,104,1799,108],[2694,105,1799,109],[2695,14,1800,16],[2696,14,1801,16,"currentSession"],[2696,28,1801,30],[2696,29,1801,31,"user"],[2696,33,1801,35],[2696,36,1801,38],[2696,37,1801,39,"_a"],[2696,39,1801,41],[2696,42,1801,44,"maybeUser"],[2696,51,1801,53],[2696,56,1801,58],[2696,60,1801,62],[2696,64,1801,66,"maybeUser"],[2696,73,1801,75],[2696,78,1801,80],[2696,83,1801,85],[2696,84,1801,86],[2696,87,1801,89],[2696,92,1801,94],[2696,93,1801,95],[2696,96,1801,98,"maybeUser"],[2696,105,1801,107],[2696,106,1801,108,"user"],[2696,110,1801,112],[2696,116,1801,118],[2696,120,1801,122],[2696,124,1801,126,"_a"],[2696,126,1801,128],[2696,131,1801,133],[2696,136,1801,138],[2696,137,1801,139],[2696,140,1801,142,"_a"],[2696,142,1801,144],[2696,145,1801,147],[2696,146,1801,148],[2696,147,1801,149],[2696,149,1801,151,"helpers_1"],[2696,158,1801,160],[2696,159,1801,161,"userNotAvailableProxy"],[2696,180,1801,182],[2696,182,1801,184],[2696,183,1801,185],[2697,12,1802,12],[2697,13,1802,13],[2697,19,1803,17],[2697,23,1803,21,"currentSession"],[2697,37,1803,35],[2697,41,1803,39],[2697,42,1803,40,"currentSession"],[2697,56,1803,54],[2697,57,1803,55,"user"],[2697,61,1803,59],[2697,63,1803,61],[2698,14,1804,16],[2699,14,1805,16],[2700,14,1806,16],[2700,18,1806,20],[2700,19,1806,21,"currentSession"],[2700,33,1806,35],[2700,34,1806,36,"user"],[2700,38,1806,40],[2700,40,1806,42],[2701,16,1807,20],[2702,16,1808,20],[2702,20,1808,26,"separateUser"],[2702,32,1808,38],[2702,41,1808,48],[2702,42,1808,49],[2702,43,1808,50],[2702,45,1808,52,"helpers_1"],[2702,54,1808,61],[2702,55,1808,62,"getItemAsync"],[2702,67,1808,74],[2702,69,1808,76],[2702,73,1808,80],[2702,74,1808,81,"storage"],[2702,81,1808,88],[2702,83,1808,90],[2702,87,1808,94],[2702,88,1808,95,"storageKey"],[2702,98,1808,105],[2702,101,1808,108],[2702,108,1808,115],[2702,109,1808,117],[2703,16,1809,20],[2703,20,1809,24,"separateUser"],[2703,32,1809,36],[2703,37,1809,41,"separateUser"],[2703,49,1809,53],[2703,54,1809,58],[2703,58,1809,62],[2703,62,1809,66,"separateUser"],[2703,74,1809,78],[2703,79,1809,83],[2703,84,1809,88],[2703,85,1809,89],[2703,88,1809,92],[2703,93,1809,97],[2703,94,1809,98],[2703,97,1809,101,"separateUser"],[2703,109,1809,113],[2703,110,1809,114,"user"],[2703,114,1809,118],[2703,115,1809,119],[2703,117,1809,121],[2704,18,1810,24,"currentSession"],[2704,32,1810,38],[2704,33,1810,39,"user"],[2704,37,1810,43],[2704,40,1810,46,"separateUser"],[2704,52,1810,58],[2704,53,1810,59,"user"],[2704,57,1810,63],[2705,18,1811,24],[2705,24,1811,30],[2705,25,1811,31],[2705,26,1811,32],[2705,28,1811,34,"helpers_1"],[2705,37,1811,43],[2705,38,1811,44,"removeItemAsync"],[2705,53,1811,59],[2705,55,1811,61],[2705,59,1811,65],[2705,60,1811,66,"storage"],[2705,67,1811,73],[2705,69,1811,75],[2705,73,1811,79],[2705,74,1811,80,"storageKey"],[2705,84,1811,90],[2705,87,1811,93],[2705,94,1811,100],[2705,95,1811,101],[2706,18,1812,24],[2706,24,1812,30],[2706,25,1812,31],[2706,26,1812,32],[2706,28,1812,34,"helpers_1"],[2706,37,1812,43],[2706,38,1812,44,"setItemAsync"],[2706,50,1812,56],[2706,52,1812,58],[2706,56,1812,62],[2706,57,1812,63,"storage"],[2706,64,1812,70],[2706,66,1812,72],[2706,70,1812,76],[2706,71,1812,77,"storageKey"],[2706,81,1812,87],[2706,83,1812,89,"currentSession"],[2706,97,1812,103],[2706,98,1812,104],[2707,16,1813,20],[2707,17,1813,21],[2707,23,1814,25],[2708,18,1815,24,"currentSession"],[2708,32,1815,38],[2708,33,1815,39,"user"],[2708,37,1815,43],[2708,40,1815,46],[2708,41,1815,47],[2708,42,1815,48],[2708,44,1815,50,"helpers_1"],[2708,53,1815,59],[2708,54,1815,60,"userNotAvailableProxy"],[2708,75,1815,81],[2708,77,1815,83],[2708,78,1815,84],[2709,16,1816,20],[2710,14,1817,16],[2711,12,1818,12],[2712,12,1819,12],[2712,16,1819,16],[2712,17,1819,17,"_debug"],[2712,23,1819,23],[2712,24,1819,24,"debugName"],[2712,33,1819,33],[2712,35,1819,35],[2712,57,1819,57],[2712,59,1819,59,"currentSession"],[2712,73,1819,73],[2712,74,1819,74],[2713,12,1820,12],[2713,16,1820,16],[2713,17,1820,17],[2713,21,1820,21],[2713,22,1820,22,"_isValidSession"],[2713,37,1820,37],[2713,38,1820,38,"currentSession"],[2713,52,1820,52],[2713,53,1820,53],[2713,55,1820,55],[2714,14,1821,16],[2714,18,1821,20],[2714,19,1821,21,"_debug"],[2714,25,1821,27],[2714,26,1821,28,"debugName"],[2714,35,1821,37],[2714,37,1821,39],[2714,59,1821,61],[2714,60,1821,62],[2715,14,1822,16],[2715,18,1822,20,"currentSession"],[2715,32,1822,34],[2715,37,1822,39],[2715,41,1822,43],[2715,43,1822,45],[2716,16,1823,20],[2716,22,1823,26],[2716,26,1823,30],[2716,27,1823,31,"_removeSession"],[2716,41,1823,45],[2716,42,1823,46],[2716,43,1823,47],[2717,14,1824,16],[2718,14,1825,16],[2719,12,1826,12],[2720,12,1827,12],[2720,16,1827,18,"expiresWithMargin"],[2720,33,1827,35],[2720,36,1827,38],[2720,37,1827,39],[2720,38,1827,40,"_b"],[2720,40,1827,42],[2720,43,1827,45,"currentSession"],[2720,57,1827,59],[2720,58,1827,60,"expires_at"],[2720,68,1827,70],[2720,74,1827,76],[2720,78,1827,80],[2720,82,1827,84,"_b"],[2720,84,1827,86],[2720,89,1827,91],[2720,94,1827,96],[2720,95,1827,97],[2720,98,1827,100,"_b"],[2720,100,1827,102],[2720,103,1827,105,"Infinity"],[2720,111,1827,113],[2720,115,1827,117],[2720,119,1827,121],[2720,122,1827,124,"Date"],[2720,126,1827,128],[2720,127,1827,129,"now"],[2720,130,1827,132],[2720,131,1827,133],[2720,132,1827,134],[2720,135,1827,137,"constants_1"],[2720,146,1827,148],[2720,147,1827,149,"EXPIRY_MARGIN_MS"],[2720,163,1827,165],[2721,12,1828,12],[2721,16,1828,16],[2721,17,1828,17,"_debug"],[2721,23,1828,23],[2721,24,1828,24,"debugName"],[2721,33,1828,33],[2721,35,1828,35],[2721,49,1828,49,"expiresWithMargin"],[2721,66,1828,66],[2721,69,1828,69],[2721,71,1828,71],[2721,74,1828,74],[2721,80,1828,80],[2721,107,1828,107,"constants_1"],[2721,118,1828,118],[2721,119,1828,119,"EXPIRY_MARGIN_MS"],[2721,135,1828,135],[2721,138,1828,138],[2721,139,1828,139],[2722,12,1829,12],[2722,16,1829,16,"expiresWithMargin"],[2722,33,1829,33],[2722,35,1829,35],[2723,14,1830,16],[2723,18,1830,20],[2723,22,1830,24],[2723,23,1830,25,"autoRefreshToken"],[2723,39,1830,41],[2723,43,1830,45,"currentSession"],[2723,57,1830,59],[2723,58,1830,60,"refresh_token"],[2723,71,1830,73],[2723,73,1830,75],[2724,16,1831,20],[2724,20,1831,20,"_yield$this$_callRefr3"],[2724,42,1831,20],[2724,51,1831,44],[2724,55,1831,48],[2724,56,1831,49,"_callRefreshToken"],[2724,73,1831,66],[2724,74,1831,67,"currentSession"],[2724,88,1831,81],[2724,89,1831,82,"refresh_token"],[2724,102,1831,95],[2724,103,1831,96],[2725,18,1831,28,"error"],[2725,23,1831,33],[2725,26,1831,33,"_yield$this$_callRefr3"],[2725,48,1831,33],[2725,49,1831,28,"error"],[2725,54,1831,33],[2726,16,1832,20],[2726,20,1832,24,"error"],[2726,25,1832,29],[2726,27,1832,31],[2727,18,1833,24,"console"],[2727,25,1833,31],[2727,26,1833,32,"error"],[2727,31,1833,37],[2727,32,1833,38,"error"],[2727,37,1833,43],[2727,38,1833,44],[2728,18,1834,24],[2728,22,1834,28],[2728,23,1834,29],[2728,24,1834,30],[2728,25,1834,31],[2728,27,1834,33,"errors_1"],[2728,35,1834,41],[2728,36,1834,42,"isAuthRetryableFetchError"],[2728,61,1834,67],[2728,63,1834,69,"error"],[2728,68,1834,74],[2728,69,1834,75],[2728,71,1834,77],[2729,20,1835,28],[2729,24,1835,32],[2729,25,1835,33,"_debug"],[2729,31,1835,39],[2729,32,1835,40,"debugName"],[2729,41,1835,49],[2729,43,1835,51],[2729,108,1835,116],[2729,110,1835,118,"error"],[2729,115,1835,123],[2729,116,1835,124],[2730,20,1836,28],[2730,26,1836,34],[2730,30,1836,38],[2730,31,1836,39,"_removeSession"],[2730,45,1836,53],[2730,46,1836,54],[2730,47,1836,55],[2731,18,1837,24],[2732,16,1838,20],[2733,14,1839,16],[2734,12,1840,12],[2734,13,1840,13],[2734,19,1841,17],[2734,23,1841,21,"currentSession"],[2734,37,1841,35],[2734,38,1841,36,"user"],[2734,42,1841,40],[2734,46,1842,16,"currentSession"],[2734,60,1842,30],[2734,61,1842,31,"user"],[2734,65,1842,35],[2734,66,1842,36,"__isUserNotAvailableProxy"],[2734,91,1842,61],[2734,96,1842,66],[2734,100,1842,70],[2734,102,1842,72],[2735,14,1843,16],[2736,14,1844,16],[2736,18,1844,20],[2737,16,1845,20],[2737,20,1845,20,"_yield$this$_getUser3"],[2737,41,1845,20],[2737,50,1845,61],[2737,54,1845,65],[2737,55,1845,66,"_getUser"],[2737,63,1845,74],[2737,64,1845,75,"currentSession"],[2737,78,1845,89],[2737,79,1845,90,"access_token"],[2737,91,1845,102],[2737,92,1845,103],[2738,18,1845,28,"data"],[2738,22,1845,32],[2738,25,1845,32,"_yield$this$_getUser3"],[2738,46,1845,32],[2738,47,1845,28,"data"],[2738,51,1845,32],[2739,18,1845,41,"userError"],[2739,27,1845,50],[2739,30,1845,50,"_yield$this$_getUser3"],[2739,51,1845,50],[2739,52,1845,34,"error"],[2739,57,1845,39],[2740,16,1846,20],[2740,20,1846,24],[2740,21,1846,25,"userError"],[2740,30,1846,34],[2740,35,1846,39,"data"],[2740,39,1846,43],[2740,44,1846,48],[2740,48,1846,52],[2740,52,1846,56,"data"],[2740,56,1846,60],[2740,61,1846,65],[2740,66,1846,70],[2740,67,1846,71],[2740,70,1846,74],[2740,75,1846,79],[2740,76,1846,80],[2740,79,1846,83,"data"],[2740,83,1846,87],[2740,84,1846,88,"user"],[2740,88,1846,92],[2740,89,1846,93],[2740,91,1846,95],[2741,18,1847,24,"currentSession"],[2741,32,1847,38],[2741,33,1847,39,"user"],[2741,37,1847,43],[2741,40,1847,46,"data"],[2741,44,1847,50],[2741,45,1847,51,"user"],[2741,49,1847,55],[2742,18,1848,24],[2742,24,1848,30],[2742,28,1848,34],[2742,29,1848,35,"_saveSession"],[2742,41,1848,47],[2742,42,1848,48,"currentSession"],[2742,56,1848,62],[2742,57,1848,63],[2743,18,1849,24],[2743,24,1849,30],[2743,28,1849,34],[2743,29,1849,35,"_notifyAllSubscribers"],[2743,50,1849,56],[2743,51,1849,57],[2743,62,1849,68],[2743,64,1849,70,"currentSession"],[2743,78,1849,84],[2743,79,1849,85],[2744,16,1850,20],[2744,17,1850,21],[2744,23,1851,25],[2745,18,1852,24],[2745,22,1852,28],[2745,23,1852,29,"_debug"],[2745,29,1852,35],[2745,30,1852,36,"debugName"],[2745,39,1852,45],[2745,41,1852,47],[2745,99,1852,105],[2745,100,1852,106],[2746,16,1853,20],[2747,14,1854,16],[2747,15,1854,17],[2747,16,1855,16],[2747,23,1855,23,"getUserError"],[2747,35,1855,35],[2747,37,1855,37],[2748,16,1856,20,"console"],[2748,23,1856,27],[2748,24,1856,28,"error"],[2748,29,1856,33],[2748,30,1856,34],[2748,56,1856,60],[2748,58,1856,62,"getUserError"],[2748,70,1856,74],[2748,71,1856,75],[2749,16,1857,20],[2749,20,1857,24],[2749,21,1857,25,"_debug"],[2749,27,1857,31],[2749,28,1857,32,"debugName"],[2749,37,1857,41],[2749,39,1857,43],[2749,97,1857,101],[2749,99,1857,103,"getUserError"],[2749,111,1857,115],[2749,112,1857,116],[2750,14,1858,16],[2751,12,1859,12],[2751,13,1859,13],[2751,19,1860,17],[2752,14,1861,16],[2753,14,1862,16],[2754,14,1863,16],[2755,14,1864,16],[2755,20,1864,22],[2755,24,1864,26],[2755,25,1864,27,"_notifyAllSubscribers"],[2755,46,1864,48],[2755,47,1864,49],[2755,58,1864,60],[2755,60,1864,62,"currentSession"],[2755,74,1864,76],[2755,75,1864,77],[2756,12,1865,12],[2757,10,1866,8],[2757,11,1866,9],[2757,12,1867,8],[2757,19,1867,15,"err"],[2757,22,1867,18],[2757,24,1867,20],[2758,12,1868,12],[2758,16,1868,16],[2758,17,1868,17,"_debug"],[2758,23,1868,23],[2758,24,1868,24,"debugName"],[2758,33,1868,33],[2758,35,1868,35],[2758,42,1868,42],[2758,44,1868,44,"err"],[2758,47,1868,47],[2758,48,1868,48],[2759,12,1869,12,"console"],[2759,19,1869,19],[2759,20,1869,20,"error"],[2759,25,1869,25],[2759,26,1869,26,"err"],[2759,29,1869,29],[2759,30,1869,30],[2760,12,1870,12],[2761,10,1871,8],[2761,11,1871,9],[2761,20,1872,16],[2762,12,1873,12],[2762,16,1873,16],[2762,17,1873,17,"_debug"],[2762,23,1873,23],[2762,24,1873,24,"debugName"],[2762,33,1873,33],[2762,35,1873,35],[2762,40,1873,40],[2762,41,1873,41],[2763,10,1874,8],[2764,8,1875,4],[2764,9,1875,5],[2765,8,1875,5],[2765,17,1785,10,"_recoverAndRefresh"],[2765,35,1785,28,"_recoverAndRefresh"],[2765,36,1785,28],[2766,10,1785,28],[2766,17,1785,28,"_recoverAndRefresh2"],[2766,36,1785,28],[2766,37,1785,28,"apply"],[2766,42,1785,28],[2766,49,1785,28,"arguments"],[2766,58,1785,28],[2767,8,1785,28],[2768,8,1785,28],[2768,15,1785,10,"_recoverAndRefresh"],[2768,33,1785,28],[2769,6,1785,28],[2770,4,1785,28],[2771,6,1785,28,"key"],[2771,9,1785,28],[2772,6,1785,28,"value"],[2772,11,1785,28],[2773,8,1785,28],[2773,12,1785,28,"_callRefreshToken2"],[2773,30,1785,28],[2773,33,1785,28,"_asyncToGenerator"],[2773,50,1785,28],[2773,51,1876,4],[2773,62,1876,28,"refreshToken"],[2773,74,1876,40],[2773,76,1876,42],[2774,10,1877,8],[2774,14,1877,12,"_a"],[2774,16,1877,14],[2774,18,1877,16,"_b"],[2774,20,1877,18],[2775,10,1878,8],[2775,14,1878,12],[2775,15,1878,13,"refreshToken"],[2775,27,1878,25],[2775,29,1878,27],[2776,12,1879,12],[2776,18,1879,18],[2776,22,1879,22,"errors_1"],[2776,30,1879,30],[2776,31,1879,31,"AuthSessionMissingError"],[2776,54,1879,54],[2776,55,1879,55],[2776,56,1879,56],[2777,10,1880,8],[2778,10,1881,8],[2779,10,1882,8],[2779,14,1882,12],[2779,18,1882,16],[2779,19,1882,17,"refreshingDeferred"],[2779,37,1882,35],[2779,39,1882,37],[2780,12,1883,12],[2780,19,1883,19],[2780,23,1883,23],[2780,24,1883,24,"refreshingDeferred"],[2780,42,1883,42],[2780,43,1883,43,"promise"],[2780,50,1883,50],[2781,10,1884,8],[2782,10,1885,8],[2782,14,1885,14,"debugName"],[2782,23,1885,23],[2782,26,1885,26],[2782,48,1885,48,"refreshToken"],[2782,60,1885,60],[2782,61,1885,61,"substring"],[2782,70,1885,70],[2782,71,1885,71],[2782,72,1885,72],[2782,74,1885,74],[2782,75,1885,75],[2782,76,1885,76],[2782,82,1885,82],[2783,10,1886,8],[2783,14,1886,12],[2783,15,1886,13,"_debug"],[2783,21,1886,19],[2783,22,1886,20,"debugName"],[2783,31,1886,29],[2783,33,1886,31],[2783,40,1886,38],[2783,41,1886,39],[2784,10,1887,8],[2784,14,1887,12],[2785,12,1888,12],[2785,16,1888,16],[2785,17,1888,17,"refreshingDeferred"],[2785,35,1888,35],[2785,38,1888,38],[2785,42,1888,42,"helpers_1"],[2785,51,1888,51],[2785,52,1888,52,"Deferred"],[2785,60,1888,60],[2785,61,1888,61],[2785,62,1888,62],[2786,12,1889,12],[2786,16,1889,12,"_yield$this$_refreshA"],[2786,37,1889,12],[2786,46,1889,42],[2786,50,1889,46],[2786,51,1889,47,"_refreshAccessToken"],[2786,70,1889,66],[2786,71,1889,67,"refreshToken"],[2786,83,1889,79],[2786,84,1889,80],[2787,14,1889,20,"data"],[2787,18,1889,24],[2787,21,1889,24,"_yield$this$_refreshA"],[2787,42,1889,24],[2787,43,1889,20,"data"],[2787,47,1889,24],[2788,14,1889,26,"error"],[2788,19,1889,31],[2788,22,1889,31,"_yield$this$_refreshA"],[2788,43,1889,31],[2788,44,1889,26,"error"],[2788,49,1889,31],[2789,12,1890,12],[2789,16,1890,16,"error"],[2789,21,1890,21],[2789,23,1891,16],[2789,29,1891,22,"error"],[2789,34,1891,27],[2790,12,1892,12],[2790,16,1892,16],[2790,17,1892,17,"data"],[2790,21,1892,21],[2790,22,1892,22,"session"],[2790,29,1892,29],[2790,31,1893,16],[2790,37,1893,22],[2790,41,1893,26,"errors_1"],[2790,49,1893,34],[2790,50,1893,35,"AuthSessionMissingError"],[2790,73,1893,58],[2790,74,1893,59],[2790,75,1893,60],[2791,12,1894,12],[2791,18,1894,18],[2791,22,1894,22],[2791,23,1894,23,"_saveSession"],[2791,35,1894,35],[2791,36,1894,36,"data"],[2791,40,1894,40],[2791,41,1894,41,"session"],[2791,48,1894,48],[2791,49,1894,49],[2792,12,1895,12],[2792,18,1895,18],[2792,22,1895,22],[2792,23,1895,23,"_notifyAllSubscribers"],[2792,44,1895,44],[2792,45,1895,45],[2792,62,1895,62],[2792,64,1895,64,"data"],[2792,68,1895,68],[2792,69,1895,69,"session"],[2792,76,1895,76],[2792,77,1895,77],[2793,12,1896,12],[2793,16,1896,18,"result"],[2793,22,1896,24],[2793,25,1896,27],[2794,14,1896,29,"data"],[2794,18,1896,33],[2794,20,1896,35,"data"],[2794,24,1896,39],[2794,25,1896,40,"session"],[2794,32,1896,47],[2795,14,1896,49,"error"],[2795,19,1896,54],[2795,21,1896,56],[2796,12,1896,61],[2796,13,1896,62],[2797,12,1897,12],[2797,16,1897,16],[2797,17,1897,17,"refreshingDeferred"],[2797,35,1897,35],[2797,36,1897,36,"resolve"],[2797,43,1897,43],[2797,44,1897,44,"result"],[2797,50,1897,50],[2797,51,1897,51],[2798,12,1898,12],[2798,19,1898,19,"result"],[2798,25,1898,25],[2799,10,1899,8],[2799,11,1899,9],[2799,12,1900,8],[2799,19,1900,15,"error"],[2799,24,1900,20],[2799,26,1900,22],[2800,12,1901,12],[2800,16,1901,16],[2800,17,1901,17,"_debug"],[2800,23,1901,23],[2800,24,1901,24,"debugName"],[2800,33,1901,33],[2800,35,1901,35],[2800,42,1901,42],[2800,44,1901,44,"error"],[2800,49,1901,49],[2800,50,1901,50],[2801,12,1902,12],[2801,16,1902,16],[2801,17,1902,17],[2801,18,1902,18],[2801,20,1902,20,"errors_1"],[2801,28,1902,28],[2801,29,1902,29,"isAuthError"],[2801,40,1902,40],[2801,42,1902,42,"error"],[2801,47,1902,47],[2801,48,1902,48],[2801,50,1902,50],[2802,14,1903,16],[2802,18,1903,22,"result"],[2802,26,1903,28],[2802,29,1903,31],[2803,16,1903,33,"data"],[2803,20,1903,37],[2803,22,1903,39],[2803,26,1903,43],[2804,16,1903,45,"error"],[2805,14,1903,51],[2805,15,1903,52],[2806,14,1904,16],[2806,18,1904,20],[2806,19,1904,21],[2806,20,1904,22],[2806,21,1904,23],[2806,23,1904,25,"errors_1"],[2806,31,1904,33],[2806,32,1904,34,"isAuthRetryableFetchError"],[2806,57,1904,59],[2806,59,1904,61,"error"],[2806,64,1904,66],[2806,65,1904,67],[2806,67,1904,69],[2807,16,1905,20],[2807,22,1905,26],[2807,26,1905,30],[2807,27,1905,31,"_removeSession"],[2807,41,1905,45],[2807,42,1905,46],[2807,43,1905,47],[2808,14,1906,16],[2809,14,1907,16],[2809,15,1907,17,"_a"],[2809,17,1907,19],[2809,20,1907,22],[2809,24,1907,26],[2809,25,1907,27,"refreshingDeferred"],[2809,43,1907,45],[2809,49,1907,51],[2809,53,1907,55],[2809,57,1907,59,"_a"],[2809,59,1907,61],[2809,64,1907,66],[2809,69,1907,71],[2809,70,1907,72],[2809,73,1907,75],[2809,78,1907,80],[2809,79,1907,81],[2809,82,1907,84,"_a"],[2809,84,1907,86],[2809,85,1907,87,"resolve"],[2809,92,1907,94],[2809,93,1907,95,"result"],[2809,101,1907,101],[2809,102,1907,102],[2810,14,1908,16],[2810,21,1908,23,"result"],[2810,29,1908,29],[2811,12,1909,12],[2812,12,1910,12],[2812,13,1910,13,"_b"],[2812,15,1910,15],[2812,18,1910,18],[2812,22,1910,22],[2812,23,1910,23,"refreshingDeferred"],[2812,41,1910,41],[2812,47,1910,47],[2812,51,1910,51],[2812,55,1910,55,"_b"],[2812,57,1910,57],[2812,62,1910,62],[2812,67,1910,67],[2812,68,1910,68],[2812,71,1910,71],[2812,76,1910,76],[2812,77,1910,77],[2812,80,1910,80,"_b"],[2812,82,1910,82],[2812,83,1910,83,"reject"],[2812,89,1910,89],[2812,90,1910,90,"error"],[2812,95,1910,95],[2812,96,1910,96],[2813,12,1911,12],[2813,18,1911,18,"error"],[2813,23,1911,23],[2814,10,1912,8],[2814,11,1912,9],[2814,20,1913,16],[2815,12,1914,12],[2815,16,1914,16],[2815,17,1914,17,"refreshingDeferred"],[2815,35,1914,35],[2815,38,1914,38],[2815,42,1914,42],[2816,12,1915,12],[2816,16,1915,16],[2816,17,1915,17,"_debug"],[2816,23,1915,23],[2816,24,1915,24,"debugName"],[2816,33,1915,33],[2816,35,1915,35],[2816,40,1915,40],[2816,41,1915,41],[2817,10,1916,8],[2818,8,1917,4],[2818,9,1917,5],[2819,8,1917,5],[2819,17,1876,10,"_callRefreshToken"],[2819,34,1876,27,"_callRefreshToken"],[2819,35,1876,27,"_x51"],[2819,39,1876,27],[2820,10,1876,27],[2820,17,1876,27,"_callRefreshToken2"],[2820,35,1876,27],[2820,36,1876,27,"apply"],[2820,41,1876,27],[2820,48,1876,27,"arguments"],[2820,57,1876,27],[2821,8,1876,27],[2822,8,1876,27],[2822,15,1876,10,"_callRefreshToken"],[2822,32,1876,27],[2823,6,1876,27],[2824,4,1876,27],[2825,6,1876,27,"key"],[2825,9,1876,27],[2826,6,1876,27,"value"],[2826,11,1876,27],[2827,8,1876,27],[2827,12,1876,27,"_notifyAllSubscribers2"],[2827,34,1876,27],[2827,37,1876,27,"_asyncToGenerator"],[2827,54,1876,27],[2827,55,1918,4],[2827,66,1918,32,"event"],[2827,71,1918,37],[2827,73,1918,39,"session"],[2827,80,1918,46],[2827,82,1918,66],[2828,10,1918,66],[2828,14,1918,48,"broadcast"],[2828,23,1918,57],[2828,26,1918,57,"arguments"],[2828,35,1918,57],[2828,36,1918,57,"length"],[2828,42,1918,57],[2828,50,1918,57,"arguments"],[2828,59,1918,57],[2828,67,1918,57,"undefined"],[2828,76,1918,57],[2828,79,1918,57,"arguments"],[2828,88,1918,57],[2828,94,1918,60],[2828,98,1918,64],[2829,10,1919,8],[2829,14,1919,14,"debugName"],[2829,23,1919,23],[2829,26,1919,26],[2829,52,1919,52,"event"],[2829,57,1919,57],[2829,60,1919,60],[2830,10,1920,8],[2830,14,1920,12],[2830,15,1920,13,"_debug"],[2830,21,1920,19],[2830,22,1920,20,"debugName"],[2830,31,1920,29],[2830,33,1920,31],[2830,40,1920,38],[2830,42,1920,40,"session"],[2830,49,1920,47],[2830,51,1920,49],[2830,66,1920,64,"broadcast"],[2830,75,1920,73],[2830,77,1920,75],[2830,78,1920,76],[2831,10,1921,8],[2831,14,1921,12],[2832,12,1922,12],[2832,16,1922,16],[2832,20,1922,20],[2832,21,1922,21,"broadcastChannel"],[2832,37,1922,37],[2832,41,1922,41,"broadcast"],[2832,50,1922,50],[2832,52,1922,52],[2833,14,1923,16],[2833,18,1923,20],[2833,19,1923,21,"broadcastChannel"],[2833,35,1923,37],[2833,36,1923,38,"postMessage"],[2833,47,1923,49],[2833,48,1923,50],[2834,16,1923,52,"event"],[2834,21,1923,57],[2835,16,1923,59,"session"],[2836,14,1923,67],[2836,15,1923,68],[2836,16,1923,69],[2837,12,1924,12],[2838,12,1925,12],[2838,16,1925,18,"errors"],[2838,22,1925,24],[2838,25,1925,27],[2838,27,1925,29],[2839,12,1926,12],[2839,16,1926,18,"promises"],[2839,24,1926,26],[2839,27,1926,29,"Array"],[2839,32,1926,34],[2839,33,1926,35,"from"],[2839,37,1926,39],[2839,38,1926,40],[2839,42,1926,44],[2839,43,1926,45,"stateChangeEmitters"],[2839,62,1926,64],[2839,63,1926,65,"values"],[2839,69,1926,71],[2839,70,1926,72],[2839,71,1926,73],[2839,72,1926,74],[2839,73,1926,75,"map"],[2839,76,1926,78],[2840,14,1926,78],[2840,18,1926,78,"_ref30"],[2840,24,1926,78],[2840,27,1926,78,"_asyncToGenerator"],[2840,44,1926,78],[2840,45,1926,79],[2840,56,1926,86,"x"],[2840,57,1926,87],[2840,59,1926,92],[2841,16,1927,16],[2841,20,1927,20],[2842,18,1928,20],[2842,24,1928,26,"x"],[2842,25,1928,27],[2842,26,1928,28,"callback"],[2842,34,1928,36],[2842,35,1928,37,"event"],[2842,40,1928,42],[2842,42,1928,44,"session"],[2842,49,1928,51],[2842,50,1928,52],[2843,16,1929,16],[2843,17,1929,17],[2843,18,1930,16],[2843,25,1930,23,"e"],[2843,26,1930,24],[2843,28,1930,26],[2844,18,1931,20,"errors"],[2844,24,1931,26],[2844,25,1931,27,"push"],[2844,29,1931,31],[2844,30,1931,32,"e"],[2844,31,1931,33],[2844,32,1931,34],[2845,16,1932,16],[2846,14,1933,12],[2846,15,1933,13],[2847,14,1933,13],[2847,31,1933,13,"_x54"],[2847,35,1933,13],[2848,16,1933,13],[2848,23,1933,13,"_ref30"],[2848,29,1933,13],[2848,30,1933,13,"apply"],[2848,35,1933,13],[2848,42,1933,13,"arguments"],[2848,51,1933,13],[2849,14,1933,13],[2850,12,1933,13],[2850,16,1933,14],[2851,12,1934,12],[2851,18,1934,18,"Promise"],[2851,25,1934,25],[2851,26,1934,26,"all"],[2851,29,1934,29],[2851,30,1934,30,"promises"],[2851,38,1934,38],[2851,39,1934,39],[2852,12,1935,12],[2852,16,1935,16,"errors"],[2852,22,1935,22],[2852,23,1935,23,"length"],[2852,29,1935,29],[2852,32,1935,32],[2852,33,1935,33],[2852,35,1935,35],[2853,14,1936,16],[2853,19,1936,21],[2853,23,1936,25,"i"],[2853,24,1936,26],[2853,27,1936,29],[2853,28,1936,30],[2853,30,1936,32,"i"],[2853,31,1936,33],[2853,34,1936,36,"errors"],[2853,40,1936,42],[2853,41,1936,43,"length"],[2853,47,1936,49],[2853,49,1936,51,"i"],[2853,50,1936,52],[2853,54,1936,56],[2853,55,1936,57],[2853,57,1936,59],[2854,16,1937,20,"console"],[2854,23,1937,27],[2854,24,1937,28,"error"],[2854,29,1937,33],[2854,30,1937,34,"errors"],[2854,36,1937,40],[2854,37,1937,41,"i"],[2854,38,1937,42],[2854,39,1937,43],[2854,40,1937,44],[2855,14,1938,16],[2856,14,1939,16],[2856,20,1939,22,"errors"],[2856,26,1939,28],[2856,27,1939,29],[2856,28,1939,30],[2856,29,1939,31],[2857,12,1940,12],[2858,10,1941,8],[2858,11,1941,9],[2858,20,1942,16],[2859,12,1943,12],[2859,16,1943,16],[2859,17,1943,17,"_debug"],[2859,23,1943,23],[2859,24,1943,24,"debugName"],[2859,33,1943,33],[2859,35,1943,35],[2859,40,1943,40],[2859,41,1943,41],[2860,10,1944,8],[2861,8,1945,4],[2861,9,1945,5],[2862,8,1945,5],[2862,17,1918,10,"_notifyAllSubscribers"],[2862,38,1918,31,"_notifyAllSubscribers"],[2862,39,1918,31,"_x52"],[2862,43,1918,31],[2862,45,1918,31,"_x53"],[2862,49,1918,31],[2863,10,1918,31],[2863,17,1918,31,"_notifyAllSubscribers2"],[2863,39,1918,31],[2863,40,1918,31,"apply"],[2863,45,1918,31],[2863,52,1918,31,"arguments"],[2863,61,1918,31],[2864,8,1918,31],[2865,8,1918,31],[2865,15,1918,10,"_notifyAllSubscribers"],[2865,36,1918,31],[2866,6,1918,31],[2867,6,1946,4],[2868,0,1947,0],[2869,0,1948,0],[2870,0,1949,0],[2871,4,1946,4],[2872,6,1946,4,"key"],[2872,9,1946,4],[2873,6,1946,4,"value"],[2873,11,1946,4],[2874,8,1946,4],[2874,12,1946,4,"_saveSession2"],[2874,25,1946,4],[2874,28,1946,4,"_asyncToGenerator"],[2874,45,1946,4],[2874,46,1950,4],[2874,57,1950,23,"session"],[2874,64,1950,30],[2874,66,1950,32],[2875,10,1951,8],[2875,14,1951,12],[2875,15,1951,13,"_debug"],[2875,21,1951,19],[2875,22,1951,20],[2875,39,1951,37],[2875,41,1951,39,"session"],[2875,48,1951,46],[2875,49,1951,47],[2876,10,1952,8],[2877,10,1953,8],[2878,10,1954,8],[2878,14,1954,12],[2878,15,1954,13,"suppressGetSessionWarning"],[2878,40,1954,38],[2878,43,1954,41],[2878,47,1954,45],[2879,10,1955,8],[2880,10,1956,8],[2880,14,1956,14,"sessionToProcess"],[2880,30,1956,30],[2880,33,1956,33,"Object"],[2880,39,1956,39],[2880,40,1956,40,"assign"],[2880,46,1956,46],[2880,47,1956,47],[2880,48,1956,48],[2880,49,1956,49],[2880,51,1956,51,"session"],[2880,58,1956,58],[2880,59,1956,59],[2881,10,1957,8],[2881,14,1957,14,"userIsProxy"],[2881,25,1957,25],[2881,28,1957,28,"sessionToProcess"],[2881,44,1957,44],[2881,45,1957,45,"user"],[2881,49,1957,49],[2881,53,1957,53,"sessionToProcess"],[2881,69,1957,69],[2881,70,1957,70,"user"],[2881,74,1957,74],[2881,75,1957,75,"__isUserNotAvailableProxy"],[2881,100,1957,100],[2881,105,1957,105],[2881,109,1957,109],[2882,10,1958,8],[2882,14,1958,12],[2882,18,1958,16],[2882,19,1958,17,"userStorage"],[2882,30,1958,28],[2882,32,1958,30],[2883,12,1959,12],[2883,16,1959,16],[2883,17,1959,17,"userIsProxy"],[2883,28,1959,28],[2883,32,1959,32,"sessionToProcess"],[2883,48,1959,48],[2883,49,1959,49,"user"],[2883,53,1959,53],[2883,55,1959,55],[2884,14,1960,16],[2885,14,1961,16],[2885,20,1961,22],[2885,21,1961,23],[2885,22,1961,24],[2885,24,1961,26,"helpers_1"],[2885,33,1961,35],[2885,34,1961,36,"setItemAsync"],[2885,46,1961,48],[2885,48,1961,50],[2885,52,1961,54],[2885,53,1961,55,"userStorage"],[2885,64,1961,66],[2885,66,1961,68],[2885,70,1961,72],[2885,71,1961,73,"storageKey"],[2885,81,1961,83],[2885,84,1961,86],[2885,91,1961,93],[2885,93,1961,95],[2886,16,1962,20,"user"],[2886,20,1962,24],[2886,22,1962,26,"sessionToProcess"],[2886,38,1962,42],[2886,39,1962,43,"user"],[2887,14,1963,16],[2887,15,1963,17],[2887,16,1963,18],[2888,12,1964,12],[2888,13,1964,13],[2888,19,1965,17],[2888,23,1965,21,"userIsProxy"],[2888,34,1965,32],[2888,36,1965,34],[2889,14,1966,16],[2890,14,1967,16],[2891,14,1968,16],[2892,14,1969,16],[2893,12,1969,16],[2894,12,1971,12],[2895,12,1972,12],[2896,12,1973,12],[2896,16,1973,18,"mainSessionData"],[2896,31,1973,33],[2896,34,1973,36,"Object"],[2896,40,1973,42],[2896,41,1973,43,"assign"],[2896,47,1973,49],[2896,48,1973,50],[2896,49,1973,51],[2896,50,1973,52],[2896,52,1973,54,"sessionToProcess"],[2896,68,1973,70],[2896,69,1973,71],[2897,12,1974,12],[2897,19,1974,19,"mainSessionData"],[2897,34,1974,34],[2897,35,1974,35,"user"],[2897,39,1974,39],[2897,40,1974,40],[2897,41,1974,41],[2898,12,1975,12],[2898,16,1975,18,"clonedMainSessionData"],[2898,37,1975,39],[2898,40,1975,42],[2898,41,1975,43],[2898,42,1975,44],[2898,44,1975,46,"helpers_1"],[2898,53,1975,55],[2898,54,1975,56,"deepClone"],[2898,63,1975,65],[2898,65,1975,67,"mainSessionData"],[2898,80,1975,82],[2898,81,1975,83],[2899,12,1976,12],[2899,18,1976,18],[2899,19,1976,19],[2899,20,1976,20],[2899,22,1976,22,"helpers_1"],[2899,31,1976,31],[2899,32,1976,32,"setItemAsync"],[2899,44,1976,44],[2899,46,1976,46],[2899,50,1976,50],[2899,51,1976,51,"storage"],[2899,58,1976,58],[2899,60,1976,60],[2899,64,1976,64],[2899,65,1976,65,"storageKey"],[2899,75,1976,75],[2899,77,1976,77,"clonedMainSessionData"],[2899,98,1976,98],[2899,99,1976,99],[2900,10,1977,8],[2900,11,1977,9],[2900,17,1978,13],[2901,12,1979,12],[2902,12,1980,12],[2903,12,1981,12],[2904,12,1982,12],[2904,16,1982,18,"clonedSession"],[2904,29,1982,31],[2904,32,1982,34],[2904,33,1982,35],[2904,34,1982,36],[2904,36,1982,38,"helpers_1"],[2904,45,1982,47],[2904,46,1982,48,"deepClone"],[2904,55,1982,57],[2904,57,1982,59,"sessionToProcess"],[2904,73,1982,75],[2904,74,1982,76],[2904,75,1982,77],[2904,76,1982,78],[2905,12,1983,12],[2905,18,1983,18],[2905,19,1983,19],[2905,20,1983,20],[2905,22,1983,22,"helpers_1"],[2905,31,1983,31],[2905,32,1983,32,"setItemAsync"],[2905,44,1983,44],[2905,46,1983,46],[2905,50,1983,50],[2905,51,1983,51,"storage"],[2905,58,1983,58],[2905,60,1983,60],[2905,64,1983,64],[2905,65,1983,65,"storageKey"],[2905,75,1983,75],[2905,77,1983,77,"clonedSession"],[2905,90,1983,90],[2905,91,1983,91],[2906,10,1984,8],[2907,8,1985,4],[2907,9,1985,5],[2908,8,1985,5],[2908,17,1950,10,"_saveSession"],[2908,29,1950,22,"_saveSession"],[2908,30,1950,22,"_x55"],[2908,34,1950,22],[2909,10,1950,22],[2909,17,1950,22,"_saveSession2"],[2909,30,1950,22],[2909,31,1950,22,"apply"],[2909,36,1950,22],[2909,43,1950,22,"arguments"],[2909,52,1950,22],[2910,8,1950,22],[2911,8,1950,22],[2911,15,1950,10,"_saveSession"],[2911,27,1950,22],[2912,6,1950,22],[2913,4,1950,22],[2914,6,1950,22,"key"],[2914,9,1950,22],[2915,6,1950,22,"value"],[2915,11,1950,22],[2916,8,1950,22],[2916,12,1950,22,"_removeSession2"],[2916,27,1950,22],[2916,30,1950,22,"_asyncToGenerator"],[2916,47,1950,22],[2916,48,1986,4],[2916,61,1986,27],[2917,10,1987,8],[2917,14,1987,12],[2917,15,1987,13,"_debug"],[2917,21,1987,19],[2917,22,1987,20],[2917,41,1987,39],[2917,42,1987,40],[2918,10,1988,8],[2918,16,1988,14],[2918,17,1988,15],[2918,18,1988,16],[2918,20,1988,18,"helpers_1"],[2918,29,1988,27],[2918,30,1988,28,"removeItemAsync"],[2918,45,1988,43],[2918,47,1988,45],[2918,51,1988,49],[2918,52,1988,50,"storage"],[2918,59,1988,57],[2918,61,1988,59],[2918,65,1988,63],[2918,66,1988,64,"storageKey"],[2918,76,1988,74],[2918,77,1988,75],[2919,10,1989,8],[2919,16,1989,14],[2919,17,1989,15],[2919,18,1989,16],[2919,20,1989,18,"helpers_1"],[2919,29,1989,27],[2919,30,1989,28,"removeItemAsync"],[2919,45,1989,43],[2919,47,1989,45],[2919,51,1989,49],[2919,52,1989,50,"storage"],[2919,59,1989,57],[2919,61,1989,59],[2919,65,1989,63],[2919,66,1989,64,"storageKey"],[2919,76,1989,74],[2919,79,1989,77],[2919,95,1989,93],[2919,96,1989,94],[2920,10,1990,8],[2920,16,1990,14],[2920,17,1990,15],[2920,18,1990,16],[2920,20,1990,18,"helpers_1"],[2920,29,1990,27],[2920,30,1990,28,"removeItemAsync"],[2920,45,1990,43],[2920,47,1990,45],[2920,51,1990,49],[2920,52,1990,50,"storage"],[2920,59,1990,57],[2920,61,1990,59],[2920,65,1990,63],[2920,66,1990,64,"storageKey"],[2920,76,1990,74],[2920,79,1990,77],[2920,86,1990,84],[2920,87,1990,85],[2921,10,1991,8],[2921,14,1991,12],[2921,18,1991,16],[2921,19,1991,17,"userStorage"],[2921,30,1991,28],[2921,32,1991,30],[2922,12,1992,12],[2922,18,1992,18],[2922,19,1992,19],[2922,20,1992,20],[2922,22,1992,22,"helpers_1"],[2922,31,1992,31],[2922,32,1992,32,"removeItemAsync"],[2922,47,1992,47],[2922,49,1992,49],[2922,53,1992,53],[2922,54,1992,54,"userStorage"],[2922,65,1992,65],[2922,67,1992,67],[2922,71,1992,71],[2922,72,1992,72,"storageKey"],[2922,82,1992,82],[2922,85,1992,85],[2922,92,1992,92],[2922,93,1992,93],[2923,10,1993,8],[2924,10,1994,8],[2924,16,1994,14],[2924,20,1994,18],[2924,21,1994,19,"_notifyAllSubscribers"],[2924,42,1994,40],[2924,43,1994,41],[2924,55,1994,53],[2924,57,1994,55],[2924,61,1994,59],[2924,62,1994,60],[2925,8,1995,4],[2925,9,1995,5],[2926,8,1995,5],[2926,17,1986,10,"_removeSession"],[2926,31,1986,24,"_removeSession"],[2926,32,1986,24],[2927,10,1986,24],[2927,17,1986,24,"_removeSession2"],[2927,32,1986,24],[2927,33,1986,24,"apply"],[2927,38,1986,24],[2927,45,1986,24,"arguments"],[2927,54,1986,24],[2928,8,1986,24],[2929,8,1986,24],[2929,15,1986,10,"_removeSession"],[2929,29,1986,24],[2930,6,1986,24],[2931,6,1996,4],[2932,0,1997,0],[2933,0,1998,0],[2934,0,1999,0],[2935,0,2000,0],[2936,0,2001,0],[2937,4,1996,4],[2938,6,1996,4,"key"],[2938,9,1996,4],[2939,6,1996,4,"value"],[2939,11,1996,4],[2939,13,2002,4],[2939,22,2002,4,"_removeVisibilityChangedCallback"],[2939,54,2002,36,"_removeVisibilityChangedCallback"],[2939,55,2002,36],[2939,57,2002,39],[2940,8,2003,8],[2940,12,2003,12],[2940,13,2003,13,"_debug"],[2940,19,2003,19],[2940,20,2003,20],[2940,57,2003,57],[2940,58,2003,58],[2941,8,2004,8],[2941,12,2004,14,"callback"],[2941,20,2004,22],[2941,23,2004,25],[2941,27,2004,29],[2941,28,2004,30,"visibilityChangedCallback"],[2941,53,2004,55],[2942,8,2005,8],[2942,12,2005,12],[2942,13,2005,13,"visibilityChangedCallback"],[2942,38,2005,38],[2942,41,2005,41],[2942,45,2005,45],[2943,8,2006,8],[2943,12,2006,12],[2944,10,2007,12],[2944,14,2007,16,"callback"],[2944,22,2007,24],[2944,26,2007,28],[2944,27,2007,29],[2944,28,2007,30],[2944,30,2007,32,"helpers_1"],[2944,39,2007,41],[2944,40,2007,42,"isBrowser"],[2944,49,2007,51],[2944,51,2007,53],[2944,52,2007,54],[2944,57,2007,59,"window"],[2944,63,2007,65],[2944,68,2007,70],[2944,72,2007,74],[2944,76,2007,78,"window"],[2944,82,2007,84],[2944,87,2007,89],[2944,92,2007,94],[2944,93,2007,95],[2944,96,2007,98],[2944,101,2007,103],[2944,102,2007,104],[2944,105,2007,107,"window"],[2944,111,2007,113],[2944,112,2007,114,"removeEventListener"],[2944,131,2007,133],[2944,132,2007,134],[2944,134,2007,136],[2945,12,2008,16,"window"],[2945,18,2008,22],[2945,19,2008,23,"removeEventListener"],[2945,38,2008,42],[2945,39,2008,43],[2945,57,2008,61],[2945,59,2008,63,"callback"],[2945,67,2008,71],[2945,68,2008,72],[2946,10,2009,12],[2947,8,2010,8],[2947,9,2010,9],[2947,10,2011,8],[2947,17,2011,15,"e"],[2947,18,2011,16],[2947,20,2011,18],[2948,10,2012,12,"console"],[2948,17,2012,19],[2948,18,2012,20,"error"],[2948,23,2012,25],[2948,24,2012,26],[2948,67,2012,69],[2948,69,2012,71,"e"],[2948,70,2012,72],[2948,71,2012,73],[2949,8,2013,8],[2950,6,2014,4],[2951,6,2015,4],[2952,0,2016,0],[2953,0,2017,0],[2954,0,2018,0],[2955,4,2015,4],[2956,6,2015,4,"key"],[2956,9,2015,4],[2957,6,2015,4,"value"],[2957,11,2015,4],[2958,8,2015,4],[2958,12,2015,4,"_startAutoRefresh2"],[2958,30,2015,4],[2958,33,2015,4,"_asyncToGenerator"],[2958,50,2015,4],[2958,51,2019,4],[2958,64,2019,30],[2959,10,2019,30],[2959,14,2019,30,"_this22"],[2959,21,2019,30],[2960,10,2020,8],[2960,16,2020,14],[2960,20,2020,18],[2960,21,2020,19,"_stopAutoRefresh"],[2960,37,2020,35],[2960,38,2020,36],[2960,39,2020,37],[2961,10,2021,8],[2961,14,2021,12],[2961,15,2021,13,"_debug"],[2961,21,2021,19],[2961,22,2021,20],[2961,44,2021,42],[2961,45,2021,43],[2962,10,2022,8],[2962,14,2022,14,"ticker"],[2962,20,2022,20],[2962,23,2022,23,"setInterval"],[2962,34,2022,34],[2962,35,2022,35],[2962,41,2022,41],[2962,45,2022,45],[2962,46,2022,46,"_autoRefreshTokenTick"],[2962,67,2022,67],[2962,68,2022,68],[2962,69,2022,69],[2962,71,2022,71,"constants_1"],[2962,82,2022,82],[2962,83,2022,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2962,112,2022,112],[2962,113,2022,113],[2963,10,2023,8],[2963,14,2023,12],[2963,15,2023,13,"autoRefreshTicker"],[2963,32,2023,30],[2963,35,2023,33,"ticker"],[2963,41,2023,39],[2964,10,2024,8],[2964,14,2024,12,"ticker"],[2964,20,2024,18],[2964,24,2024,22],[2964,31,2024,29,"ticker"],[2964,37,2024,35],[2964,42,2024,40],[2964,50,2024,48],[2964,54,2024,52],[2964,61,2024,59,"ticker"],[2964,67,2024,65],[2964,68,2024,66,"unref"],[2964,73,2024,71],[2964,78,2024,76],[2964,88,2024,86],[2964,90,2024,88],[2965,12,2025,12],[2966,12,2026,12],[2967,12,2027,12],[2968,12,2028,12],[2969,12,2029,12],[2970,12,2030,12],[2971,12,2031,12,"ticker"],[2971,18,2031,18],[2971,19,2031,19,"unref"],[2971,24,2031,24],[2971,25,2031,25],[2971,26,2031,26],[2972,12,2032,12],[2973,10,2033,8],[2973,11,2033,9],[2973,17,2034,13],[2973,21,2034,17],[2973,28,2034,24,"Deno"],[2973,32,2034,28],[2973,37,2034,33],[2973,48,2034,44],[2973,52,2034,48],[2973,59,2034,55,"Deno"],[2973,63,2034,59],[2973,64,2034,60,"unrefTimer"],[2973,74,2034,70],[2973,79,2034,75],[2973,89,2034,85],[2973,91,2034,87],[2974,12,2035,12],[2975,12,2036,12],[2976,12,2037,12],[2977,12,2038,12,"Deno"],[2977,16,2038,16],[2977,17,2038,17,"unrefTimer"],[2977,27,2038,27],[2977,28,2038,28,"ticker"],[2977,34,2038,34],[2977,35,2038,35],[2978,10,2039,8],[2979,10,2040,8],[2980,10,2041,8],[2981,10,2042,8],[2982,10,2043,8,"setTimeout"],[2982,20,2043,18],[2982,34,2043,18,"_asyncToGenerator"],[2982,51,2043,18],[2982,52,2043,19],[2982,65,2043,31],[2983,12,2044,12],[2983,18,2044,18,"_this22"],[2983,25,2044,22],[2983,26,2044,23,"initializePromise"],[2983,43,2044,40],[2984,12,2045,12],[2984,18,2045,18,"_this22"],[2984,25,2045,22],[2984,26,2045,23,"_autoRefreshTokenTick"],[2984,47,2045,44],[2984,48,2045,45],[2984,49,2045,46],[2985,10,2046,8],[2985,11,2046,9],[2985,14,2046,11],[2985,15,2046,12],[2985,16,2046,13],[2986,8,2047,4],[2986,9,2047,5],[2987,8,2047,5],[2987,17,2019,10,"_startAutoRefresh"],[2987,34,2019,27,"_startAutoRefresh"],[2987,35,2019,27],[2988,10,2019,27],[2988,17,2019,27,"_startAutoRefresh2"],[2988,35,2019,27],[2988,36,2019,27,"apply"],[2988,41,2019,27],[2988,48,2019,27,"arguments"],[2988,57,2019,27],[2989,8,2019,27],[2990,8,2019,27],[2990,15,2019,10,"_startAutoRefresh"],[2990,32,2019,27],[2991,6,2019,27],[2992,6,2048,4],[2993,0,2049,0],[2994,0,2050,0],[2995,0,2051,0],[2996,6,2048,4],[2997,4,2048,4],[2998,6,2048,4,"key"],[2998,9,2048,4],[2999,6,2048,4,"value"],[2999,11,2048,4],[3000,8,2048,4],[3000,12,2048,4,"_stopAutoRefresh2"],[3000,29,2048,4],[3000,32,2048,4,"_asyncToGenerator"],[3000,49,2048,4],[3000,50,2052,4],[3000,63,2052,29],[3001,10,2053,8],[3001,14,2053,12],[3001,15,2053,13,"_debug"],[3001,21,2053,19],[3001,22,2053,20],[3001,43,2053,41],[3001,44,2053,42],[3002,10,2054,8],[3002,14,2054,14,"ticker"],[3002,20,2054,20],[3002,23,2054,23],[3002,27,2054,27],[3002,28,2054,28,"autoRefreshTicker"],[3002,45,2054,45],[3003,10,2055,8],[3003,14,2055,12],[3003,15,2055,13,"autoRefreshTicker"],[3003,32,2055,30],[3003,35,2055,33],[3003,39,2055,37],[3004,10,2056,8],[3004,14,2056,12,"ticker"],[3004,20,2056,18],[3004,22,2056,20],[3005,12,2057,12,"clearInterval"],[3005,25,2057,25],[3005,26,2057,26,"ticker"],[3005,32,2057,32],[3005,33,2057,33],[3006,10,2058,8],[3007,8,2059,4],[3007,9,2059,5],[3008,8,2059,5],[3008,17,2052,10,"_stopAutoRefresh"],[3008,33,2052,26,"_stopAutoRefresh"],[3008,34,2052,26],[3009,10,2052,26],[3009,17,2052,26,"_stopAutoRefresh2"],[3009,34,2052,26],[3009,35,2052,26,"apply"],[3009,40,2052,26],[3009,47,2052,26,"arguments"],[3009,56,2052,26],[3010,8,2052,26],[3011,8,2052,26],[3011,15,2052,10,"_stopAutoRefresh"],[3011,31,2052,26],[3012,6,2052,26],[3013,6,2060,4],[3014,0,2061,0],[3015,0,2062,0],[3016,0,2063,0],[3017,0,2064,0],[3018,0,2065,0],[3019,0,2066,0],[3020,0,2067,0],[3021,0,2068,0],[3022,0,2069,0],[3023,0,2070,0],[3024,0,2071,0],[3025,0,2072,0],[3026,0,2073,0],[3027,0,2074,0],[3028,0,2075,0],[3029,0,2076,0],[3030,0,2077,0],[3031,0,2078,0],[3032,0,2079,0],[3033,0,2080,0],[3034,0,2081,0],[3035,6,2060,4],[3036,4,2060,4],[3037,6,2060,4,"key"],[3037,9,2060,4],[3038,6,2060,4,"value"],[3038,11,2060,4],[3039,8,2060,4],[3039,12,2060,4,"_startAutoRefresh3"],[3039,30,2060,4],[3039,33,2060,4,"_asyncToGenerator"],[3039,50,2060,4],[3039,51,2082,4],[3039,64,2082,29],[3040,10,2083,8],[3040,14,2083,12],[3040,15,2083,13,"_removeVisibilityChangedCallback"],[3040,47,2083,45],[3040,48,2083,46],[3040,49,2083,47],[3041,10,2084,8],[3041,16,2084,14],[3041,20,2084,18],[3041,21,2084,19,"_startAutoRefresh"],[3041,38,2084,36],[3041,39,2084,37],[3041,40,2084,38],[3042,8,2085,4],[3042,9,2085,5],[3043,8,2085,5],[3043,17,2082,10,"startAutoRefresh"],[3043,33,2082,26,"startAutoRefresh"],[3043,34,2082,26],[3044,10,2082,26],[3044,17,2082,26,"_startAutoRefresh3"],[3044,35,2082,26],[3044,36,2082,26,"apply"],[3044,41,2082,26],[3044,48,2082,26,"arguments"],[3044,57,2082,26],[3045,8,2082,26],[3046,8,2082,26],[3046,15,2082,10,"startAutoRefresh"],[3046,31,2082,26],[3047,6,2082,26],[3048,6,2086,4],[3049,0,2087,0],[3050,0,2088,0],[3051,0,2089,0],[3052,0,2090,0],[3053,0,2091,0],[3054,0,2092,0],[3055,0,2093,0],[3056,6,2086,4],[3057,4,2086,4],[3058,6,2086,4,"key"],[3058,9,2086,4],[3059,6,2086,4,"value"],[3059,11,2086,4],[3060,8,2086,4],[3060,12,2086,4,"_stopAutoRefresh3"],[3060,29,2086,4],[3060,32,2086,4,"_asyncToGenerator"],[3060,49,2086,4],[3060,50,2094,4],[3060,63,2094,28],[3061,10,2095,8],[3061,14,2095,12],[3061,15,2095,13,"_removeVisibilityChangedCallback"],[3061,47,2095,45],[3061,48,2095,46],[3061,49,2095,47],[3062,10,2096,8],[3062,16,2096,14],[3062,20,2096,18],[3062,21,2096,19,"_stopAutoRefresh"],[3062,37,2096,35],[3062,38,2096,36],[3062,39,2096,37],[3063,8,2097,4],[3063,9,2097,5],[3064,8,2097,5],[3064,17,2094,10,"stopAutoRefresh"],[3064,32,2094,25,"stopAutoRefresh"],[3064,33,2094,25],[3065,10,2094,25],[3065,17,2094,25,"_stopAutoRefresh3"],[3065,34,2094,25],[3065,35,2094,25,"apply"],[3065,40,2094,25],[3065,47,2094,25,"arguments"],[3065,56,2094,25],[3066,8,2094,25],[3067,8,2094,25],[3067,15,2094,10,"stopAutoRefresh"],[3067,30,2094,25],[3068,6,2094,25],[3069,6,2098,4],[3070,0,2099,0],[3071,0,2100,0],[3072,6,2098,4],[3073,4,2098,4],[3074,6,2098,4,"key"],[3074,9,2098,4],[3075,6,2098,4,"value"],[3075,11,2098,4],[3076,8,2098,4],[3076,12,2098,4,"_autoRefreshTokenTick2"],[3076,34,2098,4],[3076,37,2098,4,"_asyncToGenerator"],[3076,54,2098,4],[3076,55,2101,4],[3076,68,2101,34],[3077,10,2101,34],[3077,14,2101,34,"_this23"],[3077,21,2101,34],[3078,10,2102,8],[3078,14,2102,12],[3078,15,2102,13,"_debug"],[3078,21,2102,19],[3078,22,2102,20],[3078,48,2102,46],[3078,50,2102,48],[3078,57,2102,55],[3078,58,2102,56],[3079,10,2103,8],[3079,14,2103,12],[3080,12,2104,12],[3080,18,2104,18],[3080,22,2104,22],[3080,23,2104,23,"_acquireLock"],[3080,35,2104,35],[3080,36,2104,36],[3080,37,2104,37],[3080,52,2104,37,"_asyncToGenerator"],[3080,69,2104,37],[3080,70,2104,39],[3080,83,2104,51],[3081,14,2105,16],[3081,18,2105,20],[3082,16,2106,20],[3082,20,2106,26,"now"],[3082,23,2106,29],[3082,26,2106,32,"Date"],[3082,30,2106,36],[3082,31,2106,37,"now"],[3082,34,2106,40],[3082,35,2106,41],[3082,36,2106,42],[3083,16,2107,20],[3083,20,2107,24],[3084,18,2108,24],[3084,31,2108,37,"_this23"],[3084,38,2108,41],[3084,39,2108,42,"_useSession"],[3084,50,2108,53],[3085,20,2108,53],[3085,24,2108,53,"_ref33"],[3085,30,2108,53],[3085,33,2108,53,"_asyncToGenerator"],[3085,50,2108,53],[3085,51,2108,54],[3085,62,2108,61,"result"],[3085,68,2108,67],[3085,70,2108,72],[3086,22,2109,28],[3086,26,2109,44,"session"],[3086,33,2109,51],[3086,36,2109,59,"result"],[3086,42,2109,65],[3086,43,2109,36,"data"],[3086,47,2109,40],[3086,48,2109,44,"session"],[3086,55,2109,51],[3087,22,2110,28],[3087,26,2110,32],[3087,27,2110,33,"session"],[3087,34,2110,40],[3087,38,2110,44],[3087,39,2110,45,"session"],[3087,46,2110,52],[3087,47,2110,53,"refresh_token"],[3087,60,2110,66],[3087,64,2110,70],[3087,65,2110,71,"session"],[3087,72,2110,78],[3087,73,2110,79,"expires_at"],[3087,83,2110,89],[3087,85,2110,91],[3088,24,2111,32,"_this23"],[3088,31,2111,36],[3088,32,2111,37,"_debug"],[3088,38,2111,43],[3088,39,2111,44],[3088,65,2111,70],[3088,67,2111,72],[3088,79,2111,84],[3088,80,2111,85],[3089,24,2112,32],[3090,22,2113,28],[3091,22,2114,28],[3092,22,2115,28],[3092,26,2115,34,"expiresInTicks"],[3092,40,2115,48],[3092,43,2115,51,"Math"],[3092,47,2115,55],[3092,48,2115,56,"floor"],[3092,53,2115,61],[3092,54,2115,62],[3092,55,2115,63,"session"],[3092,62,2115,70],[3092,63,2115,71,"expires_at"],[3092,73,2115,81],[3092,76,2115,84],[3092,80,2115,88],[3092,83,2115,91,"now"],[3092,86,2115,94],[3092,90,2115,98,"constants_1"],[3092,101,2115,109],[3092,102,2115,110,"AUTO_REFRESH_TICK_DURATION_MS"],[3092,131,2115,139],[3092,132,2115,140],[3093,22,2116,28,"_this23"],[3093,29,2116,32],[3093,30,2116,33,"_debug"],[3093,36,2116,39],[3093,37,2116,40],[3093,63,2116,66],[3093,65,2116,68],[3093,92,2116,95,"expiresInTicks"],[3093,106,2116,109],[3093,130,2116,133,"constants_1"],[3093,141,2116,144],[3093,142,2116,145,"AUTO_REFRESH_TICK_DURATION_MS"],[3093,171,2116,174],[3093,199,2116,202,"constants_1"],[3093,210,2116,213],[3093,211,2116,214,"AUTO_REFRESH_TICK_THRESHOLD"],[3093,238,2116,241],[3093,246,2116,249],[3093,247,2116,250],[3094,22,2117,28],[3094,26,2117,32,"expiresInTicks"],[3094,40,2117,46],[3094,44,2117,50,"constants_1"],[3094,55,2117,61],[3094,56,2117,62,"AUTO_REFRESH_TICK_THRESHOLD"],[3094,83,2117,89],[3094,85,2117,91],[3095,24,2118,32],[3095,30,2118,38,"_this23"],[3095,37,2118,42],[3095,38,2118,43,"_callRefreshToken"],[3095,55,2118,60],[3095,56,2118,61,"session"],[3095,63,2118,68],[3095,64,2118,69,"refresh_token"],[3095,77,2118,82],[3095,78,2118,83],[3096,22,2119,28],[3097,20,2120,24],[3097,21,2120,25],[3098,20,2120,25],[3098,37,2120,25,"_x56"],[3098,41,2120,25],[3099,22,2120,25],[3099,29,2120,25,"_ref33"],[3099,35,2120,25],[3099,36,2120,25,"apply"],[3099,41,2120,25],[3099,48,2120,25,"arguments"],[3099,57,2120,25],[3100,20,2120,25],[3101,18,2120,25],[3101,22,2120,26],[3102,16,2121,20],[3102,17,2121,21],[3102,18,2122,20],[3102,25,2122,27,"e"],[3102,26,2122,28],[3102,28,2122,30],[3103,18,2123,24,"console"],[3103,25,2123,31],[3103,26,2123,32,"error"],[3103,31,2123,37],[3103,32,2123,38],[3103,104,2123,110],[3103,106,2123,112,"e"],[3103,107,2123,113],[3103,108,2123,114],[3104,16,2124,20],[3105,14,2125,16],[3105,15,2125,17],[3105,24,2126,24],[3106,16,2127,20,"_this23"],[3106,23,2127,24],[3106,24,2127,25,"_debug"],[3106,30,2127,31],[3106,31,2127,32],[3106,57,2127,58],[3106,59,2127,60],[3106,64,2127,65],[3106,65,2127,66],[3107,14,2128,16],[3108,12,2129,12],[3108,13,2129,13],[3108,15,2129,14],[3109,10,2130,8],[3109,11,2130,9],[3109,12,2131,8],[3109,19,2131,15,"e"],[3109,20,2131,16],[3109,22,2131,18],[3110,12,2132,12],[3110,16,2132,16,"e"],[3110,17,2132,17],[3110,18,2132,18,"isAcquireTimeout"],[3110,34,2132,34],[3110,38,2132,38,"e"],[3110,39,2132,39],[3110,51,2132,51,"locks_1"],[3110,58,2132,58],[3110,59,2132,59,"LockAcquireTimeoutError"],[3110,82,2132,82],[3110,84,2132,84],[3111,14,2133,16],[3111,18,2133,20],[3111,19,2133,21,"_debug"],[3111,25,2133,27],[3111,26,2133,28],[3111,70,2133,72],[3111,71,2133,73],[3112,12,2134,12],[3112,13,2134,13],[3112,19,2135,17],[3113,14,2136,16],[3113,20,2136,22,"e"],[3113,21,2136,23],[3114,12,2137,12],[3115,10,2138,8],[3116,8,2139,4],[3116,9,2139,5],[3117,8,2139,5],[3117,17,2101,10,"_autoRefreshTokenTick"],[3117,38,2101,31,"_autoRefreshTokenTick"],[3117,39,2101,31],[3118,10,2101,31],[3118,17,2101,31,"_autoRefreshTokenTick2"],[3118,39,2101,31],[3118,40,2101,31,"apply"],[3118,45,2101,31],[3118,52,2101,31,"arguments"],[3118,61,2101,31],[3119,8,2101,31],[3120,8,2101,31],[3120,15,2101,10,"_autoRefreshTokenTick"],[3120,36,2101,31],[3121,6,2101,31],[3122,6,2140,4],[3123,0,2141,0],[3124,0,2142,0],[3125,0,2143,0],[3126,0,2144,0],[3127,6,2140,4],[3128,4,2140,4],[3129,6,2140,4,"key"],[3129,9,2140,4],[3130,6,2140,4,"value"],[3130,11,2140,4],[3131,8,2140,4],[3131,12,2140,4,"_handleVisibilityChange2"],[3131,36,2140,4],[3131,39,2140,4,"_asyncToGenerator"],[3131,56,2140,4],[3131,57,2145,4],[3131,70,2145,36],[3132,10,2145,36],[3132,14,2145,36,"_this24"],[3132,21,2145,36],[3133,10,2146,8],[3133,14,2146,12],[3133,15,2146,13,"_debug"],[3133,21,2146,19],[3133,22,2146,20],[3133,50,2146,48],[3133,51,2146,49],[3134,10,2147,8],[3134,14,2147,12],[3134,15,2147,13],[3134,16,2147,14],[3134,17,2147,15],[3134,19,2147,17,"helpers_1"],[3134,28,2147,26],[3134,29,2147,27,"isBrowser"],[3134,38,2147,36],[3134,40,2147,38],[3134,41,2147,39],[3134,45,2147,43],[3134,47,2147,45,"window"],[3134,53,2147,51],[3134,58,2147,56],[3134,62,2147,60],[3134,66,2147,64,"window"],[3134,72,2147,70],[3134,77,2147,75],[3134,82,2147,80],[3134,83,2147,81],[3134,86,2147,84],[3134,91,2147,89],[3134,92,2147,90],[3134,95,2147,93,"window"],[3134,101,2147,99],[3134,102,2147,100,"addEventListener"],[3134,118,2147,116],[3134,119,2147,117],[3134,121,2147,119],[3135,12,2148,12],[3135,16,2148,16],[3135,20,2148,20],[3135,21,2148,21,"autoRefreshToken"],[3135,37,2148,37],[3135,39,2148,39],[3136,14,2149,16],[3137,14,2150,16],[3137,18,2150,20],[3137,19,2150,21,"startAutoRefresh"],[3137,35,2150,37],[3137,36,2150,38],[3137,37,2150,39],[3138,12,2151,12],[3139,12,2152,12],[3139,19,2152,19],[3139,24,2152,24],[3140,10,2153,8],[3141,10,2154,8],[3141,14,2154,12],[3142,12,2155,12],[3142,16,2155,16],[3142,17,2155,17,"visibilityChangedCallback"],[3142,42,2155,42],[3142,58,2155,42,"_asyncToGenerator"],[3142,75,2155,42],[3142,76,2155,45],[3143,14,2155,45],[3143,27,2155,63,"_this24"],[3143,34,2155,67],[3143,35,2155,68,"_onVisibilityChanged"],[3143,55,2155,88],[3143,56,2155,89],[3143,61,2155,94],[3143,62,2155,95],[3144,12,2155,95],[3145,12,2156,12,"window"],[3145,18,2156,18],[3145,23,2156,23],[3145,27,2156,27],[3145,31,2156,31,"window"],[3145,37,2156,37],[3145,42,2156,42],[3145,47,2156,47],[3145,48,2156,48],[3145,51,2156,51],[3145,56,2156,56],[3145,57,2156,57],[3145,60,2156,60,"window"],[3145,66,2156,66],[3145,67,2156,67,"addEventListener"],[3145,83,2156,83],[3145,84,2156,84],[3145,102,2156,102],[3145,104,2156,104],[3145,108,2156,108],[3145,109,2156,109,"visibilityChangedCallback"],[3145,134,2156,134],[3145,135,2156,135],[3146,12,2157,12],[3147,12,2158,12],[3148,12,2159,12],[3148,18,2159,18],[3148,22,2159,22],[3148,23,2159,23,"_onVisibilityChanged"],[3148,43,2159,43],[3148,44,2159,44],[3148,48,2159,48],[3148,49,2159,49],[3148,50,2159,50],[3148,51,2159,51],[3149,10,2160,8],[3149,11,2160,9],[3149,12,2161,8],[3149,19,2161,15,"error"],[3149,24,2161,20],[3149,26,2161,22],[3150,12,2162,12,"console"],[3150,19,2162,19],[3150,20,2162,20,"error"],[3150,25,2162,25],[3150,26,2162,26],[3150,51,2162,51],[3150,53,2162,53,"error"],[3150,58,2162,58],[3150,59,2162,59],[3151,10,2163,8],[3152,8,2164,4],[3152,9,2164,5],[3153,8,2164,5],[3153,17,2145,10,"_handleVisibilityChange"],[3153,40,2145,33,"_handleVisibilityChange"],[3153,41,2145,33],[3154,10,2145,33],[3154,17,2145,33,"_handleVisibilityChange2"],[3154,41,2145,33],[3154,42,2145,33,"apply"],[3154,47,2145,33],[3154,54,2145,33,"arguments"],[3154,63,2145,33],[3155,8,2145,33],[3156,8,2145,33],[3156,15,2145,10,"_handleVisibilityChange"],[3156,38,2145,33],[3157,6,2145,33],[3158,6,2165,4],[3159,0,2166,0],[3160,0,2167,0],[3161,6,2165,4],[3162,4,2165,4],[3163,6,2165,4,"key"],[3163,9,2165,4],[3164,6,2165,4,"value"],[3164,11,2165,4],[3165,8,2165,4],[3165,12,2165,4,"_onVisibilityChanged2"],[3165,33,2165,4],[3165,36,2165,4,"_asyncToGenerator"],[3165,53,2165,4],[3165,54,2168,4],[3165,65,2168,31,"calledFromInitialize"],[3165,85,2168,51],[3165,87,2168,53],[3166,10,2168,53],[3166,14,2168,53,"_this25"],[3166,21,2168,53],[3167,10,2169,8],[3167,14,2169,14,"methodName"],[3167,24,2169,24],[3167,27,2169,27],[3167,52,2169,52,"calledFromInitialize"],[3167,72,2169,72],[3167,75,2169,75],[3168,10,2170,8],[3168,14,2170,12],[3168,15,2170,13,"_debug"],[3168,21,2170,19],[3168,22,2170,20,"methodName"],[3168,32,2170,30],[3168,34,2170,32],[3168,51,2170,49],[3168,53,2170,51,"document"],[3168,61,2170,59],[3168,62,2170,60,"visibilityState"],[3168,77,2170,75],[3168,78,2170,76],[3169,10,2171,8],[3169,14,2171,12,"document"],[3169,22,2171,20],[3169,23,2171,21,"visibilityState"],[3169,38,2171,36],[3169,43,2171,41],[3169,52,2171,50],[3169,54,2171,52],[3170,12,2172,12],[3170,16,2172,16],[3170,20,2172,20],[3170,21,2172,21,"autoRefreshToken"],[3170,37,2172,37],[3170,39,2172,39],[3171,14,2173,16],[3172,14,2174,16],[3173,14,2175,16],[3173,18,2175,20],[3173,19,2175,21,"_startAutoRefresh"],[3173,36,2175,38],[3173,37,2175,39],[3173,38,2175,40],[3174,12,2176,12],[3175,12,2177,12],[3175,16,2177,16],[3175,17,2177,17,"calledFromInitialize"],[3175,37,2177,37],[3175,39,2177,39],[3176,14,2178,16],[3177,14,2179,16],[3178,14,2180,16],[3179,14,2181,16],[3180,14,2182,16],[3180,20,2182,22],[3180,24,2182,26],[3180,25,2182,27,"initializePromise"],[3180,42,2182,44],[3181,14,2183,16],[3181,20,2183,22],[3181,24,2183,26],[3181,25,2183,27,"_acquireLock"],[3181,37,2183,39],[3181,38,2183,40],[3181,39,2183,41],[3181,40,2183,42],[3181,55,2183,42,"_asyncToGenerator"],[3181,72,2183,42],[3181,73,2183,44],[3181,86,2183,56],[3182,16,2184,20],[3182,20,2184,24,"document"],[3182,28,2184,32],[3182,29,2184,33,"visibilityState"],[3182,44,2184,48],[3182,49,2184,53],[3182,58,2184,62],[3182,60,2184,64],[3183,18,2185,24,"_this25"],[3183,25,2185,28],[3183,26,2185,29,"_debug"],[3183,32,2185,35],[3183,33,2185,36,"methodName"],[3183,43,2185,46],[3183,45,2185,48],[3183,151,2185,154],[3183,152,2185,155],[3184,18,2186,24],[3185,18,2187,24],[3186,16,2188,20],[3187,16,2189,20],[3188,16,2190,20],[3188,22,2190,26,"_this25"],[3188,29,2190,30],[3188,30,2190,31,"_recoverAndRefresh"],[3188,48,2190,49],[3188,49,2190,50],[3188,50,2190,51],[3189,14,2191,16],[3189,15,2191,17],[3189,17,2191,18],[3190,12,2192,12],[3191,10,2193,8],[3191,11,2193,9],[3191,17,2194,13],[3191,21,2194,17,"document"],[3191,29,2194,25],[3191,30,2194,26,"visibilityState"],[3191,45,2194,41],[3191,50,2194,46],[3191,58,2194,54],[3191,60,2194,56],[3192,12,2195,12],[3192,16,2195,16],[3192,20,2195,20],[3192,21,2195,21,"autoRefreshToken"],[3192,37,2195,37],[3192,39,2195,39],[3193,14,2196,16],[3193,18,2196,20],[3193,19,2196,21,"_stopAutoRefresh"],[3193,35,2196,37],[3193,36,2196,38],[3193,37,2196,39],[3194,12,2197,12],[3195,10,2198,8],[3196,8,2199,4],[3196,9,2199,5],[3197,8,2199,5],[3197,17,2168,10,"_onVisibilityChanged"],[3197,37,2168,30,"_onVisibilityChanged"],[3197,38,2168,30,"_x57"],[3197,42,2168,30],[3198,10,2168,30],[3198,17,2168,30,"_onVisibilityChanged2"],[3198,38,2168,30],[3198,39,2168,30,"apply"],[3198,44,2168,30],[3198,51,2168,30,"arguments"],[3198,60,2168,30],[3199,8,2168,30],[3200,8,2168,30],[3200,15,2168,10,"_onVisibilityChanged"],[3200,35,2168,30],[3201,6,2168,30],[3202,6,2200,4],[3203,0,2201,0],[3204,0,2202,0],[3205,0,2203,0],[3206,0,2204,0],[3207,0,2205,0],[3208,6,2200,4],[3209,4,2200,4],[3210,6,2200,4,"key"],[3210,9,2200,4],[3211,6,2200,4,"value"],[3211,11,2200,4],[3212,8,2200,4],[3212,12,2200,4,"_getUrlForProvider2"],[3212,31,2200,4],[3212,34,2200,4,"_asyncToGenerator"],[3212,51,2200,4],[3212,52,2206,4],[3212,63,2206,29,"url"],[3212,66,2206,32],[3212,68,2206,34,"provider"],[3212,76,2206,42],[3212,78,2206,44,"options"],[3212,85,2206,51],[3212,87,2206,53],[3213,10,2207,8],[3213,14,2207,14,"urlParams"],[3213,23,2207,23],[3213,26,2207,26],[3213,27,2207,27],[3213,39,2207,39,"encodeURIComponent"],[3213,57,2207,57],[3213,58,2207,58,"provider"],[3213,66,2207,66],[3213,67,2207,67],[3213,69,2207,69],[3213,70,2207,70],[3214,10,2208,8],[3214,14,2208,12,"options"],[3214,21,2208,19],[3214,26,2208,24],[3214,30,2208,28],[3214,34,2208,32,"options"],[3214,41,2208,39],[3214,46,2208,44],[3214,51,2208,49],[3214,52,2208,50],[3214,55,2208,53],[3214,60,2208,58],[3214,61,2208,59],[3214,64,2208,62,"options"],[3214,71,2208,69],[3214,72,2208,70,"redirectTo"],[3214,82,2208,80],[3214,84,2208,82],[3215,12,2209,12,"urlParams"],[3215,21,2209,21],[3215,22,2209,22,"push"],[3215,26,2209,26],[3215,27,2209,27],[3215,42,2209,42,"encodeURIComponent"],[3215,60,2209,60],[3215,61,2209,61,"options"],[3215,68,2209,68],[3215,69,2209,69,"redirectTo"],[3215,79,2209,79],[3215,80,2209,80],[3215,82,2209,82],[3215,83,2209,83],[3216,10,2210,8],[3217,10,2211,8],[3217,14,2211,12,"options"],[3217,21,2211,19],[3217,26,2211,24],[3217,30,2211,28],[3217,34,2211,32,"options"],[3217,41,2211,39],[3217,46,2211,44],[3217,51,2211,49],[3217,52,2211,50],[3217,55,2211,53],[3217,60,2211,58],[3217,61,2211,59],[3217,64,2211,62,"options"],[3217,71,2211,69],[3217,72,2211,70,"scopes"],[3217,78,2211,76],[3217,80,2211,78],[3218,12,2212,12,"urlParams"],[3218,21,2212,21],[3218,22,2212,22,"push"],[3218,26,2212,26],[3218,27,2212,27],[3218,37,2212,37,"encodeURIComponent"],[3218,55,2212,55],[3218,56,2212,56,"options"],[3218,63,2212,63],[3218,64,2212,64,"scopes"],[3218,70,2212,70],[3218,71,2212,71],[3218,73,2212,73],[3218,74,2212,74],[3219,10,2213,8],[3220,10,2214,8],[3220,14,2214,12],[3220,18,2214,16],[3220,19,2214,17,"flowType"],[3220,27,2214,25],[3220,32,2214,30],[3220,38,2214,36],[3220,40,2214,38],[3221,12,2215,12],[3221,16,2215,12,"_yield19"],[3221,24,2215,12],[3221,33,2215,63],[3221,34,2215,64],[3221,35,2215,65],[3221,37,2215,67,"helpers_1"],[3221,46,2215,76],[3221,47,2215,77,"getCodeChallengeAndMethod"],[3221,72,2215,102],[3221,74,2215,104],[3221,78,2215,108],[3221,79,2215,109,"storage"],[3221,86,2215,116],[3221,88,2215,118],[3221,92,2215,122],[3221,93,2215,123,"storageKey"],[3221,103,2215,133],[3221,104,2215,134],[3222,14,2215,134,"_yield20"],[3222,22,2215,134],[3222,25,2215,134,"_slicedToArray"],[3222,39,2215,134],[3222,40,2215,134,"_yield19"],[3222,48,2215,134],[3223,14,2215,19,"codeChallenge"],[3223,27,2215,32],[3223,30,2215,32,"_yield20"],[3223,38,2215,32],[3224,14,2215,34,"codeChallengeMethod"],[3224,33,2215,53],[3224,36,2215,53,"_yield20"],[3224,44,2215,53],[3225,12,2216,12],[3225,16,2216,18,"flowParams"],[3225,26,2216,28],[3225,29,2216,31],[3225,33,2216,35,"URLSearchParams"],[3225,48,2216,50],[3225,49,2216,51],[3226,14,2217,16,"code_challenge"],[3226,28,2217,30],[3226,30,2217,32],[3226,33,2217,35,"encodeURIComponent"],[3226,51,2217,53],[3226,52,2217,54,"codeChallenge"],[3226,65,2217,67],[3226,66,2217,68],[3226,68,2217,70],[3227,14,2218,16,"code_challenge_method"],[3227,35,2218,37],[3227,37,2218,39],[3227,40,2218,42,"encodeURIComponent"],[3227,58,2218,60],[3227,59,2218,61,"codeChallengeMethod"],[3227,78,2218,80],[3227,79,2218,81],[3228,12,2219,12],[3228,13,2219,13],[3228,14,2219,14],[3229,12,2220,12,"urlParams"],[3229,21,2220,21],[3229,22,2220,22,"push"],[3229,26,2220,26],[3229,27,2220,27,"flowParams"],[3229,37,2220,37],[3229,38,2220,38,"toString"],[3229,46,2220,46],[3229,47,2220,47],[3229,48,2220,48],[3229,49,2220,49],[3230,10,2221,8],[3231,10,2222,8],[3231,14,2222,12,"options"],[3231,21,2222,19],[3231,26,2222,24],[3231,30,2222,28],[3231,34,2222,32,"options"],[3231,41,2222,39],[3231,46,2222,44],[3231,51,2222,49],[3231,52,2222,50],[3231,55,2222,53],[3231,60,2222,58],[3231,61,2222,59],[3231,64,2222,62,"options"],[3231,71,2222,69],[3231,72,2222,70,"queryParams"],[3231,83,2222,81],[3231,85,2222,83],[3232,12,2223,12],[3232,16,2223,18,"query"],[3232,21,2223,23],[3232,24,2223,26],[3232,28,2223,30,"URLSearchParams"],[3232,43,2223,45],[3232,44,2223,46,"options"],[3232,51,2223,53],[3232,52,2223,54,"queryParams"],[3232,63,2223,65],[3232,64,2223,66],[3233,12,2224,12,"urlParams"],[3233,21,2224,21],[3233,22,2224,22,"push"],[3233,26,2224,26],[3233,27,2224,27,"query"],[3233,32,2224,32],[3233,33,2224,33,"toString"],[3233,41,2224,41],[3233,42,2224,42],[3233,43,2224,43],[3233,44,2224,44],[3234,10,2225,8],[3235,10,2226,8],[3235,14,2226,12,"options"],[3235,21,2226,19],[3235,26,2226,24],[3235,30,2226,28],[3235,34,2226,32,"options"],[3235,41,2226,39],[3235,46,2226,44],[3235,51,2226,49],[3235,52,2226,50],[3235,55,2226,53],[3235,60,2226,58],[3235,61,2226,59],[3235,64,2226,62,"options"],[3235,71,2226,69],[3235,72,2226,70,"skipBrowserRedirect"],[3235,91,2226,89],[3235,93,2226,91],[3236,12,2227,12,"urlParams"],[3236,21,2227,21],[3236,22,2227,22,"push"],[3236,26,2227,26],[3236,27,2227,27],[3236,49,2227,49,"options"],[3236,56,2227,56],[3236,57,2227,57,"skipBrowserRedirect"],[3236,76,2227,76],[3236,78,2227,78],[3236,79,2227,79],[3237,10,2228,8],[3238,10,2229,8],[3238,17,2229,15],[3238,20,2229,18,"url"],[3238,23,2229,21],[3238,27,2229,25,"urlParams"],[3238,36,2229,34],[3238,37,2229,35,"join"],[3238,41,2229,39],[3238,42,2229,40],[3238,45,2229,43],[3238,46,2229,44],[3238,48,2229,46],[3239,8,2230,4],[3239,9,2230,5],[3240,8,2230,5],[3240,17,2206,10,"_getUrlForProvider"],[3240,35,2206,28,"_getUrlForProvider"],[3240,36,2206,28,"_x58"],[3240,40,2206,28],[3240,42,2206,28,"_x59"],[3240,46,2206,28],[3240,48,2206,28,"_x60"],[3240,52,2206,28],[3241,10,2206,28],[3241,17,2206,28,"_getUrlForProvider2"],[3241,36,2206,28],[3241,37,2206,28,"apply"],[3241,42,2206,28],[3241,49,2206,28,"arguments"],[3241,58,2206,28],[3242,8,2206,28],[3243,8,2206,28],[3243,15,2206,10,"_getUrlForProvider"],[3243,33,2206,28],[3244,6,2206,28],[3245,4,2206,28],[3246,6,2206,28,"key"],[3246,9,2206,28],[3247,6,2206,28,"value"],[3247,11,2206,28],[3248,8,2206,28],[3248,12,2206,28,"_unenroll2"],[3248,22,2206,28],[3248,25,2206,28,"_asyncToGenerator"],[3248,42,2206,28],[3248,43,2231,4],[3248,54,2231,20,"params"],[3248,60,2231,26],[3248,62,2231,28],[3249,10,2231,28],[3249,14,2231,28,"_this26"],[3249,21,2231,28],[3250,10,2232,8],[3250,14,2232,12],[3251,12,2233,12],[3251,25,2233,25],[3251,29,2233,29],[3251,30,2233,30,"_useSession"],[3251,41,2233,41],[3252,14,2233,41],[3252,18,2233,41,"_ref36"],[3252,24,2233,41],[3252,27,2233,41,"_asyncToGenerator"],[3252,44,2233,41],[3252,45,2233,42],[3252,56,2233,49,"result"],[3252,62,2233,55],[3252,64,2233,60],[3253,16,2234,16],[3253,20,2234,20,"_a"],[3253,22,2234,22],[3254,16,2235,16],[3254,20,2235,30,"sessionData"],[3254,31,2235,41],[3254,34,2235,67,"result"],[3254,40,2235,73],[3254,41,2235,24,"data"],[3254,45,2235,28],[3255,18,2235,50,"sessionError"],[3255,30,2235,62],[3255,33,2235,67,"result"],[3255,39,2235,73],[3255,40,2235,43,"error"],[3255,45,2235,48],[3256,16,2236,16],[3256,20,2236,20,"sessionError"],[3256,32,2236,32],[3256,34,2236,34],[3257,18,2237,20],[3257,25,2237,27],[3258,20,2237,29,"data"],[3258,24,2237,33],[3258,26,2237,35],[3258,30,2237,39],[3259,20,2237,41,"error"],[3259,25,2237,46],[3259,27,2237,48,"sessionError"],[3260,18,2237,61],[3260,19,2237,62],[3261,16,2238,16],[3262,16,2239,16],[3262,29,2239,29],[3262,30,2239,30],[3262,31,2239,31],[3262,33,2239,33,"fetch_1"],[3262,40,2239,40],[3262,41,2239,41,"_request"],[3262,49,2239,49],[3262,51,2239,51,"_this26"],[3262,58,2239,55],[3262,59,2239,56,"fetch"],[3262,64,2239,61],[3262,66,2239,63],[3262,74,2239,71],[3262,76,2239,73],[3262,79,2239,76,"_this26"],[3262,86,2239,80],[3262,87,2239,81,"url"],[3262,90,2239,84],[3262,102,2239,96,"params"],[3262,108,2239,102],[3262,109,2239,103,"factorId"],[3262,117,2239,111],[3262,119,2239,113],[3262,121,2239,115],[3263,18,2240,20,"headers"],[3263,25,2240,27],[3263,27,2240,29,"_this26"],[3263,34,2240,33],[3263,35,2240,34,"headers"],[3263,42,2240,41],[3264,18,2241,20,"jwt"],[3264,21,2241,23],[3264,23,2241,25],[3264,24,2241,26,"_a"],[3264,26,2241,28],[3264,29,2241,31,"sessionData"],[3264,40,2241,42],[3264,45,2241,47],[3264,49,2241,51],[3264,53,2241,55,"sessionData"],[3264,64,2241,66],[3264,69,2241,71],[3264,74,2241,76],[3264,75,2241,77],[3264,78,2241,80],[3264,83,2241,85],[3264,84,2241,86],[3264,87,2241,89,"sessionData"],[3264,98,2241,100],[3264,99,2241,101,"session"],[3264,106,2241,108],[3264,112,2241,114],[3264,116,2241,118],[3264,120,2241,122,"_a"],[3264,122,2241,124],[3264,127,2241,129],[3264,132,2241,134],[3264,133,2241,135],[3264,136,2241,138],[3264,141,2241,143],[3264,142,2241,144],[3264,145,2241,147,"_a"],[3264,147,2241,149],[3264,148,2241,150,"access_token"],[3265,16,2242,16],[3265,17,2242,17],[3265,18,2242,18],[3266,14,2243,12],[3266,15,2243,13],[3267,14,2243,13],[3267,31,2243,13,"_x62"],[3267,35,2243,13],[3268,16,2243,13],[3268,23,2243,13,"_ref36"],[3268,29,2243,13],[3268,30,2243,13,"apply"],[3268,35,2243,13],[3268,42,2243,13,"arguments"],[3268,51,2243,13],[3269,14,2243,13],[3270,12,2243,13],[3270,16,2243,14],[3271,10,2244,8],[3271,11,2244,9],[3271,12,2245,8],[3271,19,2245,15,"error"],[3271,24,2245,20],[3271,26,2245,22],[3272,12,2246,12],[3272,16,2246,16],[3272,17,2246,17],[3272,18,2246,18],[3272,20,2246,20,"errors_1"],[3272,28,2246,28],[3272,29,2246,29,"isAuthError"],[3272,40,2246,40],[3272,42,2246,42,"error"],[3272,47,2246,47],[3272,48,2246,48],[3272,50,2246,50],[3273,14,2247,16],[3273,21,2247,23],[3274,16,2247,25,"data"],[3274,20,2247,29],[3274,22,2247,31],[3274,26,2247,35],[3275,16,2247,37,"error"],[3276,14,2247,43],[3276,15,2247,44],[3277,12,2248,12],[3278,12,2249,12],[3278,18,2249,18,"error"],[3278,23,2249,23],[3279,10,2250,8],[3280,8,2251,4],[3280,9,2251,5],[3281,8,2251,5],[3281,17,2231,10,"_unenroll"],[3281,26,2231,19,"_unenroll"],[3281,27,2231,19,"_x61"],[3281,31,2231,19],[3282,10,2231,19],[3282,17,2231,19,"_unenroll2"],[3282,27,2231,19],[3282,28,2231,19,"apply"],[3282,33,2231,19],[3282,40,2231,19,"arguments"],[3282,49,2231,19],[3283,8,2231,19],[3284,8,2231,19],[3284,15,2231,10,"_unenroll"],[3284,24,2231,19],[3285,6,2231,19],[3286,4,2231,19],[3287,6,2231,19,"key"],[3287,9,2231,19],[3288,6,2231,19,"value"],[3288,11,2231,19],[3289,8,2231,19],[3289,12,2231,19,"_enroll2"],[3289,20,2231,19],[3289,23,2231,19,"_asyncToGenerator"],[3289,40,2231,19],[3289,41,2252,4],[3289,52,2252,18,"params"],[3289,58,2252,24],[3289,60,2252,26],[3290,10,2252,26],[3290,14,2252,26,"_this27"],[3290,21,2252,26],[3291,10,2253,8],[3291,14,2253,12],[3292,12,2254,12],[3292,25,2254,25],[3292,29,2254,29],[3292,30,2254,30,"_useSession"],[3292,41,2254,41],[3293,14,2254,41],[3293,18,2254,41,"_ref37"],[3293,24,2254,41],[3293,27,2254,41,"_asyncToGenerator"],[3293,44,2254,41],[3293,45,2254,42],[3293,56,2254,49,"result"],[3293,62,2254,55],[3293,64,2254,60],[3294,16,2255,16],[3294,20,2255,20,"_a"],[3294,22,2255,22],[3294,24,2255,24,"_b"],[3294,26,2255,26],[3295,16,2256,16],[3295,20,2256,30,"sessionData"],[3295,31,2256,41],[3295,34,2256,67,"result"],[3295,40,2256,73],[3295,41,2256,24,"data"],[3295,45,2256,28],[3296,18,2256,50,"sessionError"],[3296,30,2256,62],[3296,33,2256,67,"result"],[3296,39,2256,73],[3296,40,2256,43,"error"],[3296,45,2256,48],[3297,16,2257,16],[3297,20,2257,20,"sessionError"],[3297,32,2257,32],[3297,34,2257,34],[3298,18,2258,20],[3298,25,2258,27],[3299,20,2258,29,"data"],[3299,24,2258,33],[3299,26,2258,35],[3299,30,2258,39],[3300,20,2258,41,"error"],[3300,25,2258,46],[3300,27,2258,48,"sessionError"],[3301,18,2258,61],[3301,19,2258,62],[3302,16,2259,16],[3303,16,2260,16],[3303,20,2260,22,"body"],[3303,24,2260,26],[3303,27,2260,29,"Object"],[3303,33,2260,35],[3303,34,2260,36,"assign"],[3303,40,2260,42],[3303,41,2260,43],[3304,18,2260,45,"friendly_name"],[3304,31,2260,58],[3304,33,2260,60,"params"],[3304,39,2260,66],[3304,40,2260,67,"friendlyName"],[3304,52,2260,79],[3305,18,2260,81,"factor_type"],[3305,29,2260,92],[3305,31,2260,94,"params"],[3305,37,2260,100],[3305,38,2260,101,"factorType"],[3306,16,2260,112],[3306,17,2260,113],[3306,19,2260,116,"params"],[3306,25,2260,122],[3306,26,2260,123,"factorType"],[3306,36,2260,133],[3306,41,2260,138],[3306,48,2260,145],[3306,51,2261,22],[3307,18,2261,24,"phone"],[3307,23,2261,29],[3307,25,2261,31,"params"],[3307,31,2261,37],[3307,32,2261,38,"phone"],[3308,16,2261,44],[3308,17,2261,45],[3308,20,2262,22,"params"],[3308,26,2262,28],[3308,27,2262,29,"factorType"],[3308,37,2262,39],[3308,42,2262,44],[3308,48,2262,50],[3308,51,2263,26],[3309,18,2263,28,"issuer"],[3309,24,2263,34],[3309,26,2263,36,"params"],[3309,32,2263,42],[3309,33,2263,43,"issuer"],[3310,16,2263,50],[3310,17,2263,51],[3310,20,2264,26],[3310,21,2264,27],[3310,22,2264,29],[3310,23,2264,30],[3311,16,2265,16],[3311,20,2265,16,"_yield21"],[3311,28,2265,16],[3311,37,2265,47],[3311,38,2265,48],[3311,39,2265,49],[3311,41,2265,51,"fetch_1"],[3311,48,2265,58],[3311,49,2265,59,"_request"],[3311,57,2265,67],[3311,59,2265,69,"_this27"],[3311,66,2265,73],[3311,67,2265,74,"fetch"],[3311,72,2265,79],[3311,74,2265,81],[3311,80,2265,87],[3311,82,2265,89],[3311,85,2265,92,"_this27"],[3311,92,2265,96],[3311,93,2265,97,"url"],[3311,96,2265,100],[3311,106,2265,110],[3311,108,2265,112],[3312,20,2266,20,"body"],[3312,24,2266,24],[3313,20,2267,20,"headers"],[3313,27,2267,27],[3313,29,2267,29,"_this27"],[3313,36,2267,33],[3313,37,2267,34,"headers"],[3313,44,2267,41],[3314,20,2268,20,"jwt"],[3314,23,2268,23],[3314,25,2268,25],[3314,26,2268,26,"_a"],[3314,28,2268,28],[3314,31,2268,31,"sessionData"],[3314,42,2268,42],[3314,47,2268,47],[3314,51,2268,51],[3314,55,2268,55,"sessionData"],[3314,66,2268,66],[3314,71,2268,71],[3314,76,2268,76],[3314,77,2268,77],[3314,80,2268,80],[3314,85,2268,85],[3314,86,2268,86],[3314,89,2268,89,"sessionData"],[3314,100,2268,100],[3314,101,2268,101,"session"],[3314,108,2268,108],[3314,114,2268,114],[3314,118,2268,118],[3314,122,2268,122,"_a"],[3314,124,2268,124],[3314,129,2268,129],[3314,134,2268,134],[3314,135,2268,135],[3314,138,2268,138],[3314,143,2268,143],[3314,144,2268,144],[3314,147,2268,147,"_a"],[3314,149,2268,149],[3314,150,2268,150,"access_token"],[3315,18,2269,16],[3315,19,2269,17],[3315,20,2269,18],[3316,18,2265,24,"data"],[3316,22,2265,28],[3316,25,2265,28,"_yield21"],[3316,33,2265,28],[3316,34,2265,24,"data"],[3316,38,2265,28],[3317,18,2265,30,"error"],[3317,23,2265,35],[3317,26,2265,35,"_yield21"],[3317,34,2265,35],[3317,35,2265,30,"error"],[3317,40,2265,35],[3318,16,2270,16],[3318,20,2270,20,"error"],[3318,25,2270,25],[3318,27,2270,27],[3319,18,2271,20],[3319,25,2271,27],[3320,20,2271,29,"data"],[3320,24,2271,33],[3320,26,2271,35],[3320,30,2271,39],[3321,20,2271,41,"error"],[3322,18,2271,47],[3322,19,2271,48],[3323,16,2272,16],[3324,16,2273,16],[3324,20,2273,20,"params"],[3324,26,2273,26],[3324,27,2273,27,"factorType"],[3324,37,2273,37],[3324,42,2273,42],[3324,48,2273,48],[3324,52,2273,52,"data"],[3324,56,2273,56],[3324,57,2273,57,"type"],[3324,61,2273,61],[3324,66,2273,66],[3324,72,2273,72],[3324,77,2273,77],[3324,78,2273,78,"_b"],[3324,80,2273,80],[3324,83,2273,83,"data"],[3324,87,2273,87],[3324,92,2273,92],[3324,96,2273,96],[3324,100,2273,100,"data"],[3324,104,2273,104],[3324,109,2273,109],[3324,114,2273,114],[3324,115,2273,115],[3324,118,2273,118],[3324,123,2273,123],[3324,124,2273,124],[3324,127,2273,127,"data"],[3324,131,2273,131],[3324,132,2273,132,"totp"],[3324,136,2273,136],[3324,142,2273,142],[3324,146,2273,146],[3324,150,2273,150,"_b"],[3324,152,2273,152],[3324,157,2273,157],[3324,162,2273,162],[3324,163,2273,163],[3324,166,2273,166],[3324,171,2273,171],[3324,172,2273,172],[3324,175,2273,175,"_b"],[3324,177,2273,177],[3324,178,2273,178,"qr_code"],[3324,185,2273,185],[3324,186,2273,186],[3324,188,2273,188],[3325,18,2274,20,"data"],[3325,22,2274,24],[3325,23,2274,25,"totp"],[3325,27,2274,29],[3325,28,2274,30,"qr_code"],[3325,35,2274,37],[3325,38,2274,40],[3325,66,2274,68,"data"],[3325,70,2274,72],[3325,71,2274,73,"totp"],[3325,75,2274,77],[3325,76,2274,78,"qr_code"],[3325,83,2274,85],[3325,85,2274,87],[3326,16,2275,16],[3327,16,2276,16],[3327,23,2276,23],[3328,18,2276,25,"data"],[3328,22,2276,29],[3329,18,2276,31,"error"],[3329,23,2276,36],[3329,25,2276,38],[3330,16,2276,43],[3330,17,2276,44],[3331,14,2277,12],[3331,15,2277,13],[3332,14,2277,13],[3332,31,2277,13,"_x64"],[3332,35,2277,13],[3333,16,2277,13],[3333,23,2277,13,"_ref37"],[3333,29,2277,13],[3333,30,2277,13,"apply"],[3333,35,2277,13],[3333,42,2277,13,"arguments"],[3333,51,2277,13],[3334,14,2277,13],[3335,12,2277,13],[3335,16,2277,14],[3336,10,2278,8],[3336,11,2278,9],[3336,12,2279,8],[3336,19,2279,15,"error"],[3336,24,2279,20],[3336,26,2279,22],[3337,12,2280,12],[3337,16,2280,16],[3337,17,2280,17],[3337,18,2280,18],[3337,20,2280,20,"errors_1"],[3337,28,2280,28],[3337,29,2280,29,"isAuthError"],[3337,40,2280,40],[3337,42,2280,42,"error"],[3337,47,2280,47],[3337,48,2280,48],[3337,50,2280,50],[3338,14,2281,16],[3338,21,2281,23],[3339,16,2281,25,"data"],[3339,20,2281,29],[3339,22,2281,31],[3339,26,2281,35],[3340,16,2281,37,"error"],[3341,14,2281,43],[3341,15,2281,44],[3342,12,2282,12],[3343,12,2283,12],[3343,18,2283,18,"error"],[3343,23,2283,23],[3344,10,2284,8],[3345,8,2285,4],[3345,9,2285,5],[3346,8,2285,5],[3346,17,2252,10,"_enroll"],[3346,24,2252,17,"_enroll"],[3346,25,2252,17,"_x63"],[3346,29,2252,17],[3347,10,2252,17],[3347,17,2252,17,"_enroll2"],[3347,25,2252,17],[3347,26,2252,17,"apply"],[3347,31,2252,17],[3347,38,2252,17,"arguments"],[3347,47,2252,17],[3348,8,2252,17],[3349,8,2252,17],[3349,15,2252,10,"_enroll"],[3349,22,2252,17],[3350,6,2252,17],[3351,4,2252,17],[3352,6,2252,17,"key"],[3352,9,2252,17],[3353,6,2252,17,"value"],[3353,11,2252,17],[3354,8,2252,17],[3354,12,2252,17,"_verify2"],[3354,20,2252,17],[3354,23,2252,17,"_asyncToGenerator"],[3354,40,2252,17],[3354,41,2286,4],[3354,52,2286,18,"params"],[3354,58,2286,24],[3354,60,2286,26],[3355,10,2286,26],[3355,14,2286,26,"_this28"],[3355,21,2286,26],[3356,10,2287,8],[3356,17,2287,15],[3356,21,2287,19],[3356,22,2287,20,"_acquireLock"],[3356,34,2287,32],[3356,35,2287,33],[3356,36,2287,34],[3356,37,2287,35],[3356,52,2287,35,"_asyncToGenerator"],[3356,69,2287,35],[3356,70,2287,37],[3356,83,2287,49],[3357,12,2288,12],[3357,16,2288,16],[3358,14,2289,16],[3358,27,2289,29,"_this28"],[3358,34,2289,33],[3358,35,2289,34,"_useSession"],[3358,46,2289,45],[3359,16,2289,45],[3359,20,2289,45,"_ref39"],[3359,26,2289,45],[3359,29,2289,45,"_asyncToGenerator"],[3359,46,2289,45],[3359,47,2289,46],[3359,58,2289,53,"result"],[3359,64,2289,59],[3359,66,2289,64],[3360,18,2290,20],[3360,22,2290,24,"_a"],[3360,24,2290,26],[3361,18,2291,20],[3361,22,2291,34,"sessionData"],[3361,33,2291,45],[3361,36,2291,71,"result"],[3361,42,2291,77],[3361,43,2291,28,"data"],[3361,47,2291,32],[3362,20,2291,54,"sessionError"],[3362,32,2291,66],[3362,35,2291,71,"result"],[3362,41,2291,77],[3362,42,2291,47,"error"],[3362,47,2291,52],[3363,18,2292,20],[3363,22,2292,24,"sessionError"],[3363,34,2292,36],[3363,36,2292,38],[3364,20,2293,24],[3364,27,2293,31],[3365,22,2293,33,"data"],[3365,26,2293,37],[3365,28,2293,39],[3365,32,2293,43],[3366,22,2293,45,"error"],[3366,27,2293,50],[3366,29,2293,52,"sessionError"],[3367,20,2293,65],[3367,21,2293,66],[3368,18,2294,20],[3369,18,2295,20],[3369,22,2295,26,"body"],[3369,26,2295,30],[3369,29,2295,33,"Object"],[3369,35,2295,39],[3369,36,2295,40,"assign"],[3369,42,2295,46],[3369,43,2295,47],[3370,20,2295,49,"challenge_id"],[3370,32,2295,61],[3370,34,2295,63,"params"],[3370,40,2295,69],[3370,41,2295,70,"challengeId"],[3371,18,2295,82],[3371,19,2295,83],[3371,21,2295,86],[3371,31,2295,96],[3371,35,2295,100,"params"],[3371,41,2295,106],[3371,44,2296,26],[3372,20,2297,28,"webauthn"],[3372,28,2297,36],[3372,30,2297,38,"Object"],[3372,36,2297,44],[3372,37,2297,45,"assign"],[3372,43,2297,51],[3372,44,2297,52,"Object"],[3372,50,2297,58],[3372,51,2297,59,"assign"],[3372,57,2297,65],[3372,58,2297,66],[3372,59,2297,67],[3372,60,2297,68],[3372,62,2297,70,"params"],[3372,68,2297,76],[3372,69,2297,77,"webauthn"],[3372,77,2297,85],[3372,78,2297,86],[3372,80,2297,88],[3373,22,2297,90,"credential_response"],[3373,41,2297,109],[3373,43,2297,111,"params"],[3373,49,2297,117],[3373,50,2297,118,"webauthn"],[3373,58,2297,126],[3373,59,2297,127,"type"],[3373,63,2297,131],[3373,68,2297,136],[3373,76,2297,144],[3373,79,2298,38],[3373,80,2298,39],[3373,81,2298,40],[3373,83,2298,42,"webauthn_1"],[3373,93,2298,52],[3373,94,2298,53,"serializeCredentialCreationResponse"],[3373,129,2298,88],[3373,131,2298,90,"params"],[3373,137,2298,96],[3373,138,2298,97,"webauthn"],[3373,146,2298,105],[3373,147,2298,106,"credential_response"],[3373,166,2298,125],[3373,167,2298,126],[3373,170,2299,38],[3373,171,2299,39],[3373,172,2299,40],[3373,174,2299,42,"webauthn_1"],[3373,184,2299,52],[3373,185,2299,53,"serializeCredentialRequestResponse"],[3373,219,2299,87],[3373,221,2299,89,"params"],[3373,227,2299,95],[3373,228,2299,96,"webauthn"],[3373,236,2299,104],[3373,237,2299,105,"credential_response"],[3373,256,2299,124],[3374,20,2299,126],[3374,21,2299,127],[3375,18,2300,24],[3375,19,2300,25],[3375,22,2301,26],[3376,20,2301,28,"code"],[3376,24,2301,32],[3376,26,2301,34,"params"],[3376,32,2301,40],[3376,33,2301,41,"code"],[3377,18,2301,46],[3377,19,2301,48],[3377,20,2301,49],[3378,18,2302,20],[3378,22,2302,20,"_yield22"],[3378,30,2302,20],[3378,39,2302,50],[3378,40,2302,51],[3378,41,2302,52],[3378,43,2302,54,"fetch_1"],[3378,50,2302,61],[3378,51,2302,62,"_request"],[3378,59,2302,70],[3378,61,2302,72,"_this28"],[3378,68,2302,76],[3378,69,2302,77,"fetch"],[3378,74,2302,82],[3378,76,2302,84],[3378,82,2302,90],[3378,84,2302,92],[3378,87,2302,95,"_this28"],[3378,94,2302,99],[3378,95,2302,100,"url"],[3378,98,2302,103],[3378,110,2302,115,"params"],[3378,116,2302,121],[3378,117,2302,122,"factorId"],[3378,125,2302,130],[3378,134,2302,139],[3378,136,2302,141],[3379,22,2303,24,"body"],[3379,26,2303,28],[3380,22,2304,24,"headers"],[3380,29,2304,31],[3380,31,2304,33,"_this28"],[3380,38,2304,37],[3380,39,2304,38,"headers"],[3380,46,2304,45],[3381,22,2305,24,"jwt"],[3381,25,2305,27],[3381,27,2305,29],[3381,28,2305,30,"_a"],[3381,30,2305,32],[3381,33,2305,35,"sessionData"],[3381,44,2305,46],[3381,49,2305,51],[3381,53,2305,55],[3381,57,2305,59,"sessionData"],[3381,68,2305,70],[3381,73,2305,75],[3381,78,2305,80],[3381,79,2305,81],[3381,82,2305,84],[3381,87,2305,89],[3381,88,2305,90],[3381,91,2305,93,"sessionData"],[3381,102,2305,104],[3381,103,2305,105,"session"],[3381,110,2305,112],[3381,116,2305,118],[3381,120,2305,122],[3381,124,2305,126,"_a"],[3381,126,2305,128],[3381,131,2305,133],[3381,136,2305,138],[3381,137,2305,139],[3381,140,2305,142],[3381,145,2305,147],[3381,146,2305,148],[3381,149,2305,151,"_a"],[3381,151,2305,153],[3381,152,2305,154,"access_token"],[3382,20,2306,20],[3382,21,2306,21],[3382,22,2306,22],[3383,20,2302,28,"data"],[3383,24,2302,32],[3383,27,2302,32,"_yield22"],[3383,35,2302,32],[3383,36,2302,28,"data"],[3383,40,2302,32],[3384,20,2302,34,"error"],[3384,25,2302,39],[3384,28,2302,39,"_yield22"],[3384,36,2302,39],[3384,37,2302,34,"error"],[3384,42,2302,39],[3385,18,2307,20],[3385,22,2307,24,"error"],[3385,27,2307,29],[3385,29,2307,31],[3386,20,2308,24],[3386,27,2308,31],[3387,22,2308,33,"data"],[3387,26,2308,37],[3387,28,2308,39],[3387,32,2308,43],[3388,22,2308,45,"error"],[3389,20,2308,51],[3389,21,2308,52],[3390,18,2309,20],[3391,18,2310,20],[3391,24,2310,26,"_this28"],[3391,31,2310,30],[3391,32,2310,31,"_saveSession"],[3391,44,2310,43],[3391,45,2310,44,"Object"],[3391,51,2310,50],[3391,52,2310,51,"assign"],[3391,58,2310,57],[3391,59,2310,58],[3392,20,2310,60,"expires_at"],[3392,30,2310,70],[3392,32,2310,72,"Math"],[3392,36,2310,76],[3392,37,2310,77,"round"],[3392,42,2310,82],[3392,43,2310,83,"Date"],[3392,47,2310,87],[3392,48,2310,88,"now"],[3392,51,2310,91],[3392,52,2310,92],[3392,53,2310,93],[3392,56,2310,96],[3392,60,2310,100],[3392,61,2310,101],[3392,64,2310,104,"data"],[3392,68,2310,108],[3392,69,2310,109,"expires_in"],[3393,18,2310,120],[3393,19,2310,121],[3393,21,2310,123,"data"],[3393,25,2310,127],[3393,26,2310,128],[3393,27,2310,129],[3394,18,2311,20],[3394,24,2311,26,"_this28"],[3394,31,2311,30],[3394,32,2311,31,"_notifyAllSubscribers"],[3394,53,2311,52],[3394,54,2311,53],[3394,78,2311,77],[3394,80,2311,79,"data"],[3394,84,2311,83],[3394,85,2311,84],[3395,18,2312,20],[3395,25,2312,27],[3396,20,2312,29,"data"],[3396,24,2312,33],[3397,20,2312,35,"error"],[3398,18,2312,41],[3398,19,2312,42],[3399,16,2313,16],[3399,17,2313,17],[3400,16,2313,17],[3400,33,2313,17,"_x66"],[3400,37,2313,17],[3401,18,2313,17],[3401,25,2313,17,"_ref39"],[3401,31,2313,17],[3401,32,2313,17,"apply"],[3401,37,2313,17],[3401,44,2313,17,"arguments"],[3401,53,2313,17],[3402,16,2313,17],[3403,14,2313,17],[3403,18,2313,18],[3404,12,2314,12],[3404,13,2314,13],[3404,14,2315,12],[3404,21,2315,19,"error"],[3404,26,2315,24],[3404,28,2315,26],[3405,14,2316,16],[3405,18,2316,20],[3405,19,2316,21],[3405,20,2316,22],[3405,22,2316,24,"errors_1"],[3405,30,2316,32],[3405,31,2316,33,"isAuthError"],[3405,42,2316,44],[3405,44,2316,46,"error"],[3405,49,2316,51],[3405,50,2316,52],[3405,52,2316,54],[3406,16,2317,20],[3406,23,2317,27],[3407,18,2317,29,"data"],[3407,22,2317,33],[3407,24,2317,35],[3407,28,2317,39],[3408,18,2317,41,"error"],[3409,16,2317,47],[3409,17,2317,48],[3410,14,2318,16],[3411,14,2319,16],[3411,20,2319,22,"error"],[3411,25,2319,27],[3412,12,2320,12],[3413,10,2321,8],[3413,11,2321,9],[3413,13,2321,10],[3414,8,2322,4],[3414,9,2322,5],[3415,8,2322,5],[3415,17,2286,10,"_verify"],[3415,24,2286,17,"_verify"],[3415,25,2286,17,"_x65"],[3415,29,2286,17],[3416,10,2286,17],[3416,17,2286,17,"_verify2"],[3416,25,2286,17],[3416,26,2286,17,"apply"],[3416,31,2286,17],[3416,38,2286,17,"arguments"],[3416,47,2286,17],[3417,8,2286,17],[3418,8,2286,17],[3418,15,2286,10,"_verify"],[3418,22,2286,17],[3419,6,2286,17],[3420,4,2286,17],[3421,6,2286,17,"key"],[3421,9,2286,17],[3422,6,2286,17,"value"],[3422,11,2286,17],[3423,8,2286,17],[3423,12,2286,17,"_challenge2"],[3423,23,2286,17],[3423,26,2286,17,"_asyncToGenerator"],[3423,43,2286,17],[3423,44,2323,4],[3423,55,2323,21,"params"],[3423,61,2323,27],[3423,63,2323,29],[3424,10,2323,29],[3424,14,2323,29,"_this29"],[3424,21,2323,29],[3425,10,2324,8],[3425,17,2324,15],[3425,21,2324,19],[3425,22,2324,20,"_acquireLock"],[3425,34,2324,32],[3425,35,2324,33],[3425,36,2324,34],[3425,37,2324,35],[3425,52,2324,35,"_asyncToGenerator"],[3425,69,2324,35],[3425,70,2324,37],[3425,83,2324,49],[3426,12,2325,12],[3426,16,2325,16],[3427,14,2326,16],[3427,27,2326,29,"_this29"],[3427,34,2326,33],[3427,35,2326,34,"_useSession"],[3427,46,2326,45],[3428,16,2326,45],[3428,20,2326,45,"_ref41"],[3428,26,2326,45],[3428,29,2326,45,"_asyncToGenerator"],[3428,46,2326,45],[3428,47,2326,46],[3428,58,2326,53,"result"],[3428,64,2326,59],[3428,66,2326,64],[3429,18,2327,20],[3429,22,2327,24,"_a"],[3429,24,2327,26],[3430,18,2328,20],[3430,22,2328,34,"sessionData"],[3430,33,2328,45],[3430,36,2328,71,"result"],[3430,42,2328,77],[3430,43,2328,28,"data"],[3430,47,2328,32],[3431,20,2328,54,"sessionError"],[3431,32,2328,66],[3431,35,2328,71,"result"],[3431,41,2328,77],[3431,42,2328,47,"error"],[3431,47,2328,52],[3432,18,2329,20],[3432,22,2329,24,"sessionError"],[3432,34,2329,36],[3432,36,2329,38],[3433,20,2330,24],[3433,27,2330,31],[3434,22,2330,33,"data"],[3434,26,2330,37],[3434,28,2330,39],[3434,32,2330,43],[3435,22,2330,45,"error"],[3435,27,2330,50],[3435,29,2330,52,"sessionError"],[3436,20,2330,65],[3436,21,2330,66],[3437,18,2331,20],[3438,18,2332,20],[3438,22,2332,26,"response"],[3438,30,2332,34],[3438,39,2332,44],[3438,40,2332,45],[3438,41,2332,46],[3438,43,2332,48,"fetch_1"],[3438,50,2332,55],[3438,51,2332,56,"_request"],[3438,59,2332,64],[3438,61,2332,66,"_this29"],[3438,68,2332,70],[3438,69,2332,71,"fetch"],[3438,74,2332,76],[3438,76,2332,78],[3438,82,2332,84],[3438,84,2332,86],[3438,87,2332,89,"_this29"],[3438,94,2332,93],[3438,95,2332,94,"url"],[3438,98,2332,97],[3438,110,2332,109,"params"],[3438,116,2332,115],[3438,117,2332,116,"factorId"],[3438,125,2332,124],[3438,137,2332,136],[3438,139,2332,138],[3439,20,2333,24,"body"],[3439,24,2333,28],[3439,26,2333,30,"params"],[3439,32,2333,36],[3440,20,2334,24,"headers"],[3440,27,2334,31],[3440,29,2334,33,"_this29"],[3440,36,2334,37],[3440,37,2334,38,"headers"],[3440,44,2334,45],[3441,20,2335,24,"jwt"],[3441,23,2335,27],[3441,25,2335,29],[3441,26,2335,30,"_a"],[3441,28,2335,32],[3441,31,2335,35,"sessionData"],[3441,42,2335,46],[3441,47,2335,51],[3441,51,2335,55],[3441,55,2335,59,"sessionData"],[3441,66,2335,70],[3441,71,2335,75],[3441,76,2335,80],[3441,77,2335,81],[3441,80,2335,84],[3441,85,2335,89],[3441,86,2335,90],[3441,89,2335,93,"sessionData"],[3441,100,2335,104],[3441,101,2335,105,"session"],[3441,108,2335,112],[3441,114,2335,118],[3441,118,2335,122],[3441,122,2335,126,"_a"],[3441,124,2335,128],[3441,129,2335,133],[3441,134,2335,138],[3441,135,2335,139],[3441,138,2335,142],[3441,143,2335,147],[3441,144,2335,148],[3441,147,2335,151,"_a"],[3441,149,2335,153],[3441,150,2335,154,"access_token"],[3442,18,2336,20],[3442,19,2336,21],[3442,20,2336,23],[3443,18,2337,20],[3443,22,2337,24,"response"],[3443,30,2337,32],[3443,31,2337,33,"error"],[3443,36,2337,38],[3443,38,2337,40],[3444,20,2338,24],[3444,27,2338,31,"response"],[3444,35,2338,39],[3445,18,2339,20],[3446,18,2340,20],[3446,22,2340,28,"data"],[3446,26,2340,32],[3446,29,2340,37,"response"],[3446,37,2340,45],[3446,38,2340,28,"data"],[3446,42,2340,32],[3447,18,2341,20],[3447,22,2341,24,"data"],[3447,26,2341,28],[3447,27,2341,29,"type"],[3447,31,2341,33],[3447,36,2341,38],[3447,46,2341,48],[3447,48,2341,50],[3448,20,2342,24],[3448,27,2342,31],[3449,22,2342,33,"data"],[3449,26,2342,37],[3450,22,2342,39,"error"],[3450,27,2342,44],[3450,29,2342,46],[3451,20,2342,51],[3451,21,2342,52],[3452,18,2343,20],[3453,18,2344,20],[3453,26,2344,28,"data"],[3453,30,2344,32],[3453,31,2344,33,"webauthn"],[3453,39,2344,41],[3453,40,2344,42,"type"],[3453,44,2344,46],[3454,20,2345,24],[3454,25,2345,29],[3454,33,2345,37],[3455,22,2346,28],[3455,29,2346,35],[3456,24,2347,32,"data"],[3456,28,2347,36],[3456,30,2347,38,"Object"],[3456,36,2347,44],[3456,37,2347,45,"assign"],[3456,43,2347,51],[3456,44,2347,52,"Object"],[3456,50,2347,58],[3456,51,2347,59,"assign"],[3456,57,2347,65],[3456,58,2347,66],[3456,59,2347,67],[3456,60,2347,68],[3456,62,2347,70,"data"],[3456,66,2347,74],[3456,67,2347,75],[3456,69,2347,77],[3457,26,2347,79,"webauthn"],[3457,34,2347,87],[3457,36,2347,89,"Object"],[3457,42,2347,95],[3457,43,2347,96,"assign"],[3457,49,2347,102],[3457,50,2347,103,"Object"],[3457,56,2347,109],[3457,57,2347,110,"assign"],[3457,63,2347,116],[3457,64,2347,117],[3457,65,2347,118],[3457,66,2347,119],[3457,68,2347,121,"data"],[3457,72,2347,125],[3457,73,2347,126,"webauthn"],[3457,81,2347,134],[3457,82,2347,135],[3457,84,2347,137],[3458,28,2347,139,"credential_options"],[3458,46,2347,157],[3458,48,2347,159,"Object"],[3458,54,2347,165],[3458,55,2347,166,"assign"],[3458,61,2347,172],[3458,62,2347,173,"Object"],[3458,68,2347,179],[3458,69,2347,180,"assign"],[3458,75,2347,186],[3458,76,2347,187],[3458,77,2347,188],[3458,78,2347,189],[3458,80,2347,191,"data"],[3458,84,2347,195],[3458,85,2347,196,"webauthn"],[3458,93,2347,204],[3458,94,2347,205,"credential_options"],[3458,112,2347,223],[3458,113,2347,224],[3458,115,2347,226],[3459,30,2347,228,"publicKey"],[3459,39,2347,237],[3459,41,2347,239],[3459,42,2347,240],[3459,43,2347,241],[3459,45,2347,243,"webauthn_1"],[3459,55,2347,253],[3459,56,2347,254,"deserializeCredentialCreationOptions"],[3459,92,2347,290],[3459,94,2347,292,"data"],[3459,98,2347,296],[3459,99,2347,297,"webauthn"],[3459,107,2347,305],[3459,108,2347,306,"credential_options"],[3459,126,2347,324],[3459,127,2347,325,"publicKey"],[3459,136,2347,334],[3460,28,2347,336],[3460,29,2347,337],[3461,26,2347,339],[3461,27,2347,340],[3462,24,2347,342],[3462,25,2347,343],[3462,26,2347,344],[3463,24,2348,32,"error"],[3463,29,2348,37],[3463,31,2348,39],[3464,22,2349,28],[3464,23,2349,29],[3465,20,2350,24],[3465,25,2350,29],[3465,34,2350,38],[3466,22,2351,28],[3466,29,2351,35],[3467,24,2352,32,"data"],[3467,28,2352,36],[3467,30,2352,38,"Object"],[3467,36,2352,44],[3467,37,2352,45,"assign"],[3467,43,2352,51],[3467,44,2352,52,"Object"],[3467,50,2352,58],[3467,51,2352,59,"assign"],[3467,57,2352,65],[3467,58,2352,66],[3467,59,2352,67],[3467,60,2352,68],[3467,62,2352,70,"data"],[3467,66,2352,74],[3467,67,2352,75],[3467,69,2352,77],[3468,26,2352,79,"webauthn"],[3468,34,2352,87],[3468,36,2352,89,"Object"],[3468,42,2352,95],[3468,43,2352,96,"assign"],[3468,49,2352,102],[3468,50,2352,103,"Object"],[3468,56,2352,109],[3468,57,2352,110,"assign"],[3468,63,2352,116],[3468,64,2352,117],[3468,65,2352,118],[3468,66,2352,119],[3468,68,2352,121,"data"],[3468,72,2352,125],[3468,73,2352,126,"webauthn"],[3468,81,2352,134],[3468,82,2352,135],[3468,84,2352,137],[3469,28,2352,139,"credential_options"],[3469,46,2352,157],[3469,48,2352,159,"Object"],[3469,54,2352,165],[3469,55,2352,166,"assign"],[3469,61,2352,172],[3469,62,2352,173,"Object"],[3469,68,2352,179],[3469,69,2352,180,"assign"],[3469,75,2352,186],[3469,76,2352,187],[3469,77,2352,188],[3469,78,2352,189],[3469,80,2352,191,"data"],[3469,84,2352,195],[3469,85,2352,196,"webauthn"],[3469,93,2352,204],[3469,94,2352,205,"credential_options"],[3469,112,2352,223],[3469,113,2352,224],[3469,115,2352,226],[3470,30,2352,228,"publicKey"],[3470,39,2352,237],[3470,41,2352,239],[3470,42,2352,240],[3470,43,2352,241],[3470,45,2352,243,"webauthn_1"],[3470,55,2352,253],[3470,56,2352,254,"deserializeCredentialRequestOptions"],[3470,91,2352,289],[3470,93,2352,291,"data"],[3470,97,2352,295],[3470,98,2352,296,"webauthn"],[3470,106,2352,304],[3470,107,2352,305,"credential_options"],[3470,125,2352,323],[3470,126,2352,324,"publicKey"],[3470,135,2352,333],[3471,28,2352,335],[3471,29,2352,336],[3472,26,2352,338],[3472,27,2352,339],[3473,24,2352,341],[3473,25,2352,342],[3473,26,2352,343],[3474,24,2353,32,"error"],[3474,29,2353,37],[3474,31,2353,39],[3475,22,2354,28],[3475,23,2354,29],[3476,18,2355,20],[3477,16,2356,16],[3477,17,2356,17],[3478,16,2356,17],[3478,33,2356,17,"_x68"],[3478,37,2356,17],[3479,18,2356,17],[3479,25,2356,17,"_ref41"],[3479,31,2356,17],[3479,32,2356,17,"apply"],[3479,37,2356,17],[3479,44,2356,17,"arguments"],[3479,53,2356,17],[3480,16,2356,17],[3481,14,2356,17],[3481,18,2356,18],[3482,12,2357,12],[3482,13,2357,13],[3482,14,2358,12],[3482,21,2358,19,"error"],[3482,26,2358,24],[3482,28,2358,26],[3483,14,2359,16],[3483,18,2359,20],[3483,19,2359,21],[3483,20,2359,22],[3483,22,2359,24,"errors_1"],[3483,30,2359,32],[3483,31,2359,33,"isAuthError"],[3483,42,2359,44],[3483,44,2359,46,"error"],[3483,49,2359,51],[3483,50,2359,52],[3483,52,2359,54],[3484,16,2360,20],[3484,23,2360,27],[3485,18,2360,29,"data"],[3485,22,2360,33],[3485,24,2360,35],[3485,28,2360,39],[3486,18,2360,41,"error"],[3487,16,2360,47],[3487,17,2360,48],[3488,14,2361,16],[3489,14,2362,16],[3489,20,2362,22,"error"],[3489,25,2362,27],[3490,12,2363,12],[3491,10,2364,8],[3491,11,2364,9],[3491,13,2364,10],[3492,8,2365,4],[3492,9,2365,5],[3493,8,2365,5],[3493,17,2323,10,"_challenge"],[3493,27,2323,20,"_challenge"],[3493,28,2323,20,"_x67"],[3493,32,2323,20],[3494,10,2323,20],[3494,17,2323,20,"_challenge2"],[3494,28,2323,20],[3494,29,2323,20,"apply"],[3494,34,2323,20],[3494,41,2323,20,"arguments"],[3494,50,2323,20],[3495,8,2323,20],[3496,8,2323,20],[3496,15,2323,10,"_challenge"],[3496,25,2323,20],[3497,6,2323,20],[3498,6,2366,4],[3499,0,2367,0],[3500,0,2368,0],[3501,4,2366,4],[3502,6,2366,4,"key"],[3502,9,2366,4],[3503,6,2366,4,"value"],[3503,11,2366,4],[3504,8,2366,4],[3504,12,2366,4,"_challengeAndVerify2"],[3504,32,2366,4],[3504,35,2366,4,"_asyncToGenerator"],[3504,52,2366,4],[3504,53,2369,4],[3504,64,2369,30,"params"],[3504,70,2369,36],[3504,72,2369,38],[3505,10,2370,8],[3506,10,2371,8],[3507,10,2372,8],[3507,14,2372,8,"_yield$this$_challeng"],[3507,35,2372,8],[3507,44,2372,69],[3507,48,2372,73],[3507,49,2372,74,"_challenge"],[3507,59,2372,84],[3507,60,2372,85],[3508,14,2373,12,"factorId"],[3508,22,2373,20],[3508,24,2373,22,"params"],[3508,30,2373,28],[3508,31,2373,29,"factorId"],[3509,12,2374,8],[3509,13,2374,9],[3509,14,2374,10],[3510,12,2372,22,"challengeData"],[3510,25,2372,35],[3510,28,2372,35,"_yield$this$_challeng"],[3510,49,2372,35],[3510,50,2372,16,"data"],[3510,54,2372,20],[3511,12,2372,44,"challengeError"],[3511,26,2372,58],[3511,29,2372,58,"_yield$this$_challeng"],[3511,50,2372,58],[3511,51,2372,37,"error"],[3511,56,2372,42],[3512,10,2375,8],[3512,14,2375,12,"challengeError"],[3512,28,2375,26],[3512,30,2375,28],[3513,12,2376,12],[3513,19,2376,19],[3514,14,2376,21,"data"],[3514,18,2376,25],[3514,20,2376,27],[3514,24,2376,31],[3515,14,2376,33,"error"],[3515,19,2376,38],[3515,21,2376,40,"challengeError"],[3516,12,2376,55],[3516,13,2376,56],[3517,10,2377,8],[3518,10,2378,8],[3518,23,2378,21],[3518,27,2378,25],[3518,28,2378,26,"_verify"],[3518,35,2378,33],[3518,36,2378,34],[3519,12,2379,12,"factorId"],[3519,20,2379,20],[3519,22,2379,22,"params"],[3519,28,2379,28],[3519,29,2379,29,"factorId"],[3519,37,2379,37],[3520,12,2380,12,"challengeId"],[3520,23,2380,23],[3520,25,2380,25,"challengeData"],[3520,38,2380,38],[3520,39,2380,39,"id"],[3520,41,2380,41],[3521,12,2381,12,"code"],[3521,16,2381,16],[3521,18,2381,18,"params"],[3521,24,2381,24],[3521,25,2381,25,"code"],[3522,10,2382,8],[3522,11,2382,9],[3522,12,2382,10],[3523,8,2383,4],[3523,9,2383,5],[3524,8,2383,5],[3524,17,2369,10,"_challengeAndVerify"],[3524,36,2369,29,"_challengeAndVerify"],[3524,37,2369,29,"_x69"],[3524,41,2369,29],[3525,10,2369,29],[3525,17,2369,29,"_challengeAndVerify2"],[3525,37,2369,29],[3525,38,2369,29,"apply"],[3525,43,2369,29],[3525,50,2369,29,"arguments"],[3525,59,2369,29],[3526,8,2369,29],[3527,8,2369,29],[3527,15,2369,10,"_challengeAndVerify"],[3527,34,2369,29],[3528,6,2369,29],[3529,6,2384,4],[3530,0,2385,0],[3531,0,2386,0],[3532,6,2384,4],[3533,4,2384,4],[3534,6,2384,4,"key"],[3534,9,2384,4],[3535,6,2384,4,"value"],[3535,11,2384,4],[3536,8,2384,4],[3536,12,2384,4,"_listFactors2"],[3536,25,2384,4],[3536,28,2384,4,"_asyncToGenerator"],[3536,45,2384,4],[3536,46,2387,4],[3536,59,2387,25],[3537,10,2388,8],[3537,14,2388,12,"_a"],[3537,16,2388,14],[3538,10,2389,8],[3539,10,2390,8],[3539,14,2390,8,"_yield$this$getUser2"],[3539,34,2390,8],[3539,43,2390,60],[3539,47,2390,64],[3539,48,2390,65,"getUser"],[3539,55,2390,72],[3539,56,2390,73],[3539,57,2390,74],[3540,12,2390,24,"user"],[3540,16,2390,28],[3540,19,2390,28,"_yield$this$getUser2"],[3540,39,2390,28],[3540,40,2390,16,"data"],[3540,44,2390,20],[3540,45,2390,24,"user"],[3540,49,2390,28],[3541,12,2390,39,"userError"],[3541,21,2390,48],[3541,24,2390,48,"_yield$this$getUser2"],[3541,44,2390,48],[3541,45,2390,32,"error"],[3541,50,2390,37],[3542,10,2391,8],[3542,14,2391,12,"userError"],[3542,23,2391,21],[3542,25,2391,23],[3543,12,2392,12],[3543,19,2392,19],[3544,14,2392,21,"data"],[3544,18,2392,25],[3544,20,2392,27],[3544,24,2392,31],[3545,14,2392,33,"error"],[3545,19,2392,38],[3545,21,2392,40,"userError"],[3546,12,2392,50],[3546,13,2392,51],[3547,10,2393,8],[3548,10,2394,8],[3548,14,2394,14,"data"],[3548,18,2394,18],[3548,21,2394,21],[3549,12,2395,12,"all"],[3549,15,2395,15],[3549,17,2395,17],[3549,19,2395,19],[3550,12,2396,12,"phone"],[3550,17,2396,17],[3550,19,2396,19],[3550,21,2396,21],[3551,12,2397,12,"totp"],[3551,16,2397,16],[3551,18,2397,18],[3551,20,2397,20],[3552,12,2398,12,"webauthn"],[3552,20,2398,20],[3552,22,2398,22],[3553,10,2399,8],[3553,11,2399,9],[3554,10,2400,8],[3555,10,2401,8],[3555,15,2401,13],[3555,19,2401,19,"factor"],[3555,25,2401,25],[3555,29,2401,29],[3555,30,2401,30,"_a"],[3555,32,2401,32],[3555,35,2401,35,"user"],[3555,39,2401,39],[3555,44,2401,44],[3555,48,2401,48],[3555,52,2401,52,"user"],[3555,56,2401,56],[3555,61,2401,61],[3555,66,2401,66],[3555,67,2401,67],[3555,70,2401,70],[3555,75,2401,75],[3555,76,2401,76],[3555,79,2401,79,"user"],[3555,83,2401,83],[3555,84,2401,84,"factors"],[3555,91,2401,91],[3555,97,2401,97],[3555,101,2401,101],[3555,105,2401,105,"_a"],[3555,107,2401,107],[3555,112,2401,112],[3555,117,2401,117],[3555,118,2401,118],[3555,121,2401,121,"_a"],[3555,123,2401,123],[3555,126,2401,126],[3555,128,2401,128],[3555,130,2401,130],[3556,12,2402,12,"data"],[3556,16,2402,16],[3556,17,2402,17,"all"],[3556,20,2402,20],[3556,21,2402,21,"push"],[3556,25,2402,25],[3556,26,2402,26,"factor"],[3556,32,2402,32],[3556,33,2402,33],[3557,12,2403,12],[3557,16,2403,16,"factor"],[3557,22,2403,22],[3557,23,2403,23,"status"],[3557,29,2403,29],[3557,34,2403,34],[3557,44,2403,44],[3557,46,2403,46],[3558,14,2404,16],[3559,14,2405,16,"data"],[3559,18,2405,20],[3559,19,2405,21,"factor"],[3559,25,2405,27],[3559,26,2405,28,"factor_type"],[3559,37,2405,39],[3559,38,2405,40],[3559,39,2405,41,"push"],[3559,43,2405,45],[3559,44,2405,46,"factor"],[3559,50,2405,52],[3559,51,2405,53],[3560,12,2406,12],[3561,10,2407,8],[3562,10,2408,8],[3562,17,2408,15],[3563,12,2409,12,"data"],[3563,16,2409,16],[3564,12,2410,12,"error"],[3564,17,2410,17],[3564,19,2410,19],[3565,10,2411,8],[3565,11,2411,9],[3566,8,2412,4],[3566,9,2412,5],[3567,8,2412,5],[3567,17,2387,10,"_listFactors"],[3567,29,2387,22,"_listFactors"],[3567,30,2387,22],[3568,10,2387,22],[3568,17,2387,22,"_listFactors2"],[3568,30,2387,22],[3568,31,2387,22,"apply"],[3568,36,2387,22],[3568,43,2387,22,"arguments"],[3568,52,2387,22],[3569,8,2387,22],[3570,8,2387,22],[3570,15,2387,10,"_listFactors"],[3570,27,2387,22],[3571,6,2387,22],[3572,6,2413,4],[3573,0,2414,0],[3574,0,2415,0],[3575,6,2413,4],[3576,4,2413,4],[3577,6,2413,4,"key"],[3577,9,2413,4],[3578,6,2413,4,"value"],[3578,11,2413,4],[3579,8,2413,4],[3579,12,2413,4,"_getAuthenticatorAssuranceLevel2"],[3579,44,2413,4],[3579,47,2413,4,"_asyncToGenerator"],[3579,64,2413,4],[3579,65,2416,4],[3579,78,2416,44],[3580,10,2416,44],[3580,14,2416,44,"_this30"],[3580,21,2416,44],[3581,10,2417,8],[3581,17,2417,15],[3581,21,2417,19],[3581,22,2417,20,"_acquireLock"],[3581,34,2417,32],[3581,35,2417,33],[3581,36,2417,34],[3581,37,2417,35],[3581,52,2417,35,"_asyncToGenerator"],[3581,69,2417,35],[3581,70,2417,37],[3581,83,2417,49],[3582,12,2418,12],[3582,25,2418,25,"_this30"],[3582,32,2418,29],[3582,33,2418,30,"_useSession"],[3582,44,2418,41],[3583,14,2418,41],[3583,18,2418,41,"_ref43"],[3583,24,2418,41],[3583,27,2418,41,"_asyncToGenerator"],[3583,44,2418,41],[3583,45,2418,42],[3583,56,2418,49,"result"],[3583,62,2418,55],[3583,64,2418,60],[3584,16,2419,16],[3584,20,2419,20,"_a"],[3584,22,2419,22],[3584,24,2419,24,"_b"],[3584,26,2419,26],[3585,16,2420,16],[3585,20,2420,32,"session"],[3585,27,2420,39],[3585,30,2420,68,"result"],[3585,36,2420,74],[3585,37,2420,24,"data"],[3585,41,2420,28],[3585,42,2420,32,"session"],[3585,49,2420,39],[3586,18,2420,50,"sessionError"],[3586,30,2420,62],[3586,33,2420,68,"result"],[3586,39,2420,74],[3586,40,2420,43,"error"],[3586,45,2420,48],[3587,16,2421,16],[3587,20,2421,20,"sessionError"],[3587,32,2421,32],[3587,34,2421,34],[3588,18,2422,20],[3588,25,2422,27],[3589,20,2422,29,"data"],[3589,24,2422,33],[3589,26,2422,35],[3589,30,2422,39],[3590,20,2422,41,"error"],[3590,25,2422,46],[3590,27,2422,48,"sessionError"],[3591,18,2422,61],[3591,19,2422,62],[3592,16,2423,16],[3593,16,2424,16],[3593,20,2424,20],[3593,21,2424,21,"session"],[3593,28,2424,28],[3593,30,2424,30],[3594,18,2425,20],[3594,25,2425,27],[3595,20,2426,24,"data"],[3595,24,2426,28],[3595,26,2426,30],[3596,22,2426,32,"currentLevel"],[3596,34,2426,44],[3596,36,2426,46],[3596,40,2426,50],[3597,22,2426,52,"nextLevel"],[3597,31,2426,61],[3597,33,2426,63],[3597,37,2426,67],[3598,22,2426,69,"currentAuthenticationMethods"],[3598,50,2426,97],[3598,52,2426,99],[3599,20,2426,102],[3599,21,2426,103],[3600,20,2427,24,"error"],[3600,25,2427,29],[3600,27,2427,31],[3601,18,2428,20],[3601,19,2428,21],[3602,16,2429,16],[3603,16,2430,16],[3603,20,2430,16,"_ref44"],[3603,26,2430,16],[3603,29,2430,36],[3603,30,2430,37],[3603,31,2430,38],[3603,33,2430,40,"helpers_1"],[3603,42,2430,49],[3603,43,2430,50,"decodeJWT"],[3603,52,2430,59],[3603,54,2430,61,"session"],[3603,61,2430,68],[3603,62,2430,69,"access_token"],[3603,74,2430,81],[3603,75,2430,82],[3604,18,2430,24,"payload"],[3604,25,2430,31],[3604,28,2430,31,"_ref44"],[3604,34,2430,31],[3604,35,2430,24,"payload"],[3604,42,2430,31],[3605,16,2431,16],[3605,20,2431,20,"currentLevel"],[3605,32,2431,32],[3605,35,2431,35],[3605,39,2431,39],[3606,16,2432,16],[3606,20,2432,20,"payload"],[3606,27,2432,27],[3606,28,2432,28,"aal"],[3606,31,2432,31],[3606,33,2432,33],[3607,18,2433,20,"currentLevel"],[3607,30,2433,32],[3607,33,2433,35,"payload"],[3607,40,2433,42],[3607,41,2433,43,"aal"],[3607,44,2433,46],[3608,16,2434,16],[3609,16,2435,16],[3609,20,2435,20,"nextLevel"],[3609,29,2435,29],[3609,32,2435,32,"currentLevel"],[3609,44,2435,44],[3610,16,2436,16],[3610,20,2436,22,"verifiedFactors"],[3610,35,2436,37],[3610,38,2436,40],[3610,39,2436,41,"_b"],[3610,41,2436,43],[3610,44,2436,46],[3610,45,2436,47,"_a"],[3610,47,2436,49],[3610,50,2436,52,"session"],[3610,57,2436,59],[3610,58,2436,60,"user"],[3610,62,2436,64],[3610,63,2436,65,"factors"],[3610,70,2436,72],[3610,76,2436,78],[3610,80,2436,82],[3610,84,2436,86,"_a"],[3610,86,2436,88],[3610,91,2436,93],[3610,96,2436,98],[3610,97,2436,99],[3610,100,2436,102],[3610,105,2436,107],[3610,106,2436,108],[3610,109,2436,111,"_a"],[3610,111,2436,113],[3610,112,2436,114,"filter"],[3610,118,2436,120],[3610,119,2436,122,"factor"],[3610,125,2436,128],[3610,129,2436,133,"factor"],[3610,135,2436,139],[3610,136,2436,140,"status"],[3610,142,2436,146],[3610,147,2436,151],[3610,157,2436,161],[3610,158,2436,162],[3610,164,2436,168],[3610,168,2436,172],[3610,172,2436,176,"_b"],[3610,174,2436,178],[3610,179,2436,183],[3610,184,2436,188],[3610,185,2436,189],[3610,188,2436,192,"_b"],[3610,190,2436,194],[3610,193,2436,197],[3610,195,2436,199],[3611,16,2437,16],[3611,20,2437,20,"verifiedFactors"],[3611,35,2437,35],[3611,36,2437,36,"length"],[3611,42,2437,42],[3611,45,2437,45],[3611,46,2437,46],[3611,48,2437,48],[3612,18,2438,20,"nextLevel"],[3612,27,2438,29],[3612,30,2438,32],[3612,36,2438,38],[3613,16,2439,16],[3614,16,2440,16],[3614,20,2440,22,"currentAuthenticationMethods"],[3614,48,2440,50],[3614,51,2440,53,"payload"],[3614,58,2440,60],[3614,59,2440,61,"amr"],[3614,62,2440,64],[3614,66,2440,68],[3614,68,2440,70],[3615,16,2441,16],[3615,23,2441,23],[3616,18,2441,25,"data"],[3616,22,2441,29],[3616,24,2441,31],[3617,20,2441,33,"currentLevel"],[3617,32,2441,45],[3618,20,2441,47,"nextLevel"],[3618,29,2441,56],[3619,20,2441,58,"currentAuthenticationMethods"],[3620,18,2441,87],[3620,19,2441,88],[3621,18,2441,90,"error"],[3621,23,2441,95],[3621,25,2441,97],[3622,16,2441,102],[3622,17,2441,103],[3623,14,2442,12],[3623,15,2442,13],[3624,14,2442,13],[3624,31,2442,13,"_x70"],[3624,35,2442,13],[3625,16,2442,13],[3625,23,2442,13,"_ref43"],[3625,29,2442,13],[3625,30,2442,13,"apply"],[3625,35,2442,13],[3625,42,2442,13,"arguments"],[3625,51,2442,13],[3626,14,2442,13],[3627,12,2442,13],[3627,16,2442,14],[3628,10,2443,8],[3628,11,2443,9],[3628,13,2443,10],[3629,8,2444,4],[3629,9,2444,5],[3630,8,2444,5],[3630,17,2416,10,"_getAuthenticatorAssuranceLevel"],[3630,48,2416,41,"_getAuthenticatorAssuranceLevel"],[3630,49,2416,41],[3631,10,2416,41],[3631,17,2416,41,"_getAuthenticatorAssuranceLevel2"],[3631,49,2416,41],[3631,50,2416,41,"apply"],[3631,55,2416,41],[3631,62,2416,41,"arguments"],[3631,71,2416,41],[3632,8,2416,41],[3633,8,2416,41],[3633,15,2416,10,"_getAuthenticatorAssuranceLevel"],[3633,46,2416,41],[3634,6,2416,41],[3635,4,2416,41],[3636,6,2416,41,"key"],[3636,9,2416,41],[3637,6,2416,41,"value"],[3637,11,2416,41],[3638,8,2416,41],[3638,12,2416,41,"_fetchJwk"],[3638,21,2416,41],[3638,24,2416,41,"_asyncToGenerator"],[3638,41,2416,41],[3638,42,2445,4],[3638,53,2445,19,"kid"],[3638,56,2445,22],[3638,58,2445,45],[3639,10,2445,45],[3639,14,2445,24,"jwks"],[3639,18,2445,28],[3639,21,2445,28,"arguments"],[3639,30,2445,28],[3639,31,2445,28,"length"],[3639,37,2445,28],[3639,45,2445,28,"arguments"],[3639,54,2445,28],[3639,62,2445,28,"undefined"],[3639,71,2445,28],[3639,74,2445,28,"arguments"],[3639,83,2445,28],[3639,89,2445,31],[3640,12,2445,33,"keys"],[3640,16,2445,37],[3640,18,2445,39],[3641,10,2445,42],[3641,11,2445,43],[3642,10,2446,8],[3643,10,2447,8],[3643,14,2447,12,"jwk"],[3643,17,2447,15],[3643,20,2447,18,"jwks"],[3643,24,2447,22],[3643,25,2447,23,"keys"],[3643,29,2447,27],[3643,30,2447,28,"find"],[3643,34,2447,32],[3643,35,2447,34,"key"],[3643,38,2447,37],[3643,42,2447,42,"key"],[3643,45,2447,45],[3643,46,2447,46,"kid"],[3643,49,2447,49],[3643,54,2447,54,"kid"],[3643,57,2447,57],[3643,58,2447,58],[3644,10,2448,8],[3644,14,2448,12,"jwk"],[3644,17,2448,15],[3644,19,2448,17],[3645,12,2449,12],[3645,19,2449,19,"jwk"],[3645,22,2449,22],[3646,10,2450,8],[3647,10,2451,8],[3647,14,2451,14,"now"],[3647,17,2451,17],[3647,20,2451,20,"Date"],[3647,24,2451,24],[3647,25,2451,25,"now"],[3647,28,2451,28],[3647,29,2451,29],[3647,30,2451,30],[3648,10,2452,8],[3649,10,2453,8,"jwk"],[3649,13,2453,11],[3649,16,2453,14],[3649,20,2453,18],[3649,21,2453,19,"jwks"],[3649,25,2453,23],[3649,26,2453,24,"keys"],[3649,30,2453,28],[3649,31,2453,29,"find"],[3649,35,2453,33],[3649,36,2453,35,"key"],[3649,39,2453,38],[3649,43,2453,43,"key"],[3649,46,2453,46],[3649,47,2453,47,"kid"],[3649,50,2453,50],[3649,55,2453,55,"kid"],[3649,58,2453,58],[3649,59,2453,59],[3650,10,2454,8],[3651,10,2455,8],[3651,14,2455,12,"jwk"],[3651,17,2455,15],[3651,21,2455,19],[3651,25,2455,23],[3651,26,2455,24,"jwks_cached_at"],[3651,40,2455,38],[3651,43,2455,41,"constants_1"],[3651,54,2455,52],[3651,55,2455,53,"JWKS_TTL"],[3651,63,2455,61],[3651,66,2455,64,"now"],[3651,69,2455,67],[3651,71,2455,69],[3652,12,2456,12],[3652,19,2456,19,"jwk"],[3652,22,2456,22],[3653,10,2457,8],[3654,10,2458,8],[3655,10,2459,8],[3655,14,2459,8,"_yield23"],[3655,22,2459,8],[3655,31,2459,38],[3655,32,2459,39],[3655,33,2459,40],[3655,35,2459,42,"fetch_1"],[3655,42,2459,49],[3655,43,2459,50,"_request"],[3655,51,2459,58],[3655,53,2459,60],[3655,57,2459,64],[3655,58,2459,65,"fetch"],[3655,63,2459,70],[3655,65,2459,72],[3655,70,2459,77],[3655,72,2459,79],[3655,75,2459,82],[3655,79,2459,86],[3655,80,2459,87,"url"],[3655,83,2459,90],[3655,107,2459,114],[3655,109,2459,116],[3656,14,2460,12,"headers"],[3656,21,2460,19],[3656,23,2460,21],[3656,27,2460,25],[3656,28,2460,26,"headers"],[3657,12,2461,8],[3657,13,2461,9],[3657,14,2461,10],[3658,12,2459,16,"data"],[3658,16,2459,20],[3658,19,2459,20,"_yield23"],[3658,27,2459,20],[3658,28,2459,16,"data"],[3658,32,2459,20],[3659,12,2459,22,"error"],[3659,17,2459,27],[3659,20,2459,27,"_yield23"],[3659,28,2459,27],[3659,29,2459,22,"error"],[3659,34,2459,27],[3660,10,2462,8],[3660,14,2462,12,"error"],[3660,19,2462,17],[3660,21,2462,19],[3661,12,2463,12],[3661,18,2463,18,"error"],[3661,23,2463,23],[3662,10,2464,8],[3663,10,2465,8],[3663,14,2465,12],[3663,15,2465,13,"data"],[3663,19,2465,17],[3663,20,2465,18,"keys"],[3663,24,2465,22],[3663,28,2465,26,"data"],[3663,32,2465,30],[3663,33,2465,31,"keys"],[3663,37,2465,35],[3663,38,2465,36,"length"],[3663,44,2465,42],[3663,49,2465,47],[3663,50,2465,48],[3663,52,2465,50],[3664,12,2466,12],[3664,19,2466,19],[3664,23,2466,23],[3665,10,2467,8],[3666,10,2468,8],[3666,14,2468,12],[3666,15,2468,13,"jwks"],[3666,19,2468,17],[3666,22,2468,20,"data"],[3666,26,2468,24],[3667,10,2469,8],[3667,14,2469,12],[3667,15,2469,13,"jwks_cached_at"],[3667,29,2469,27],[3667,32,2469,30,"now"],[3667,35,2469,33],[3668,10,2470,8],[3669,10,2471,8,"jwk"],[3669,13,2471,11],[3669,16,2471,14,"data"],[3669,20,2471,18],[3669,21,2471,19,"keys"],[3669,25,2471,23],[3669,26,2471,24,"find"],[3669,30,2471,28],[3669,31,2471,30,"key"],[3669,34,2471,33],[3669,38,2471,38,"key"],[3669,41,2471,41],[3669,42,2471,42,"kid"],[3669,45,2471,45],[3669,50,2471,50,"kid"],[3669,53,2471,53],[3669,54,2471,54],[3670,10,2472,8],[3670,14,2472,12],[3670,15,2472,13,"jwk"],[3670,18,2472,16],[3670,20,2472,18],[3671,12,2473,12],[3671,19,2473,19],[3671,23,2473,23],[3672,10,2474,8],[3673,10,2475,8],[3673,17,2475,15,"jwk"],[3673,20,2475,18],[3674,8,2476,4],[3674,9,2476,5],[3675,8,2476,5],[3675,17,2445,10,"fetchJwk"],[3675,25,2445,18,"fetchJwk"],[3675,26,2445,18,"_x71"],[3675,30,2445,18],[3676,10,2445,18],[3676,17,2445,18,"_fetchJwk"],[3676,26,2445,18],[3676,27,2445,18,"apply"],[3676,32,2445,18],[3676,39,2445,18,"arguments"],[3676,48,2445,18],[3677,8,2445,18],[3678,8,2445,18],[3678,15,2445,10,"fetchJwk"],[3678,23,2445,18],[3679,6,2445,18],[3680,6,2477,4],[3681,0,2478,0],[3682,0,2479,0],[3683,0,2480,0],[3684,0,2481,0],[3685,0,2482,0],[3686,0,2483,0],[3687,0,2484,0],[3688,0,2485,0],[3689,0,2486,0],[3690,0,2487,0],[3691,0,2488,0],[3692,0,2489,0],[3693,0,2490,0],[3694,0,2491,0],[3695,0,2492,0],[3696,4,2477,4],[3697,6,2477,4,"key"],[3697,9,2477,4],[3698,6,2477,4,"value"],[3698,11,2477,4],[3699,8,2477,4],[3699,12,2477,4,"_getClaims"],[3699,22,2477,4],[3699,25,2477,4,"_asyncToGenerator"],[3699,42,2477,4],[3699,43,2493,4],[3699,54,2493,20,"jwt"],[3699,57,2493,23],[3699,59,2493,39],[3700,10,2493,39],[3700,14,2493,25,"options"],[3700,21,2493,32],[3700,24,2493,32,"arguments"],[3700,33,2493,32],[3700,34,2493,32,"length"],[3700,40,2493,32],[3700,48,2493,32,"arguments"],[3700,57,2493,32],[3700,65,2493,32,"undefined"],[3700,74,2493,32],[3700,77,2493,32,"arguments"],[3700,86,2493,32],[3700,92,2493,35],[3700,93,2493,36],[3700,94,2493,37],[3701,10,2494,8],[3701,14,2494,12],[3702,12,2495,12],[3702,16,2495,16,"token"],[3702,21,2495,21],[3702,24,2495,24,"jwt"],[3702,27,2495,27],[3703,12,2496,12],[3703,16,2496,16],[3703,17,2496,17,"token"],[3703,22,2496,22],[3703,24,2496,24],[3704,14,2497,16],[3704,18,2497,16,"_yield$this$getSessio"],[3704,39,2497,16],[3704,48,2497,46],[3704,52,2497,50],[3704,53,2497,51,"getSession"],[3704,63,2497,61],[3704,64,2497,62],[3704,65,2497,63],[3705,16,2497,24,"data"],[3705,20,2497,28],[3705,23,2497,28,"_yield$this$getSessio"],[3705,44,2497,28],[3705,45,2497,24,"data"],[3705,49,2497,28],[3706,16,2497,30,"error"],[3706,21,2497,35],[3706,24,2497,35,"_yield$this$getSessio"],[3706,45,2497,35],[3706,46,2497,30,"error"],[3706,51,2497,35],[3707,14,2498,16],[3707,18,2498,20,"error"],[3707,23,2498,25],[3707,27,2498,29],[3707,28,2498,30,"data"],[3707,32,2498,34],[3707,33,2498,35,"session"],[3707,40,2498,42],[3707,42,2498,44],[3708,16,2499,20],[3708,23,2499,27],[3709,18,2499,29,"data"],[3709,22,2499,33],[3709,24,2499,35],[3709,28,2499,39],[3710,18,2499,41,"error"],[3711,16,2499,47],[3711,17,2499,48],[3712,14,2500,16],[3713,14,2501,16,"token"],[3713,19,2501,21],[3713,22,2501,24,"data"],[3713,26,2501,28],[3713,27,2501,29,"session"],[3713,34,2501,36],[3713,35,2501,37,"access_token"],[3713,47,2501,49],[3714,12,2502,12],[3715,12,2503,12],[3715,16,2503,12,"_ref45"],[3715,22,2503,12],[3715,25,2503,101],[3715,26,2503,102],[3715,27,2503,103],[3715,29,2503,105,"helpers_1"],[3715,38,2503,114],[3715,39,2503,115,"decodeJWT"],[3715,48,2503,124],[3715,50,2503,126,"token"],[3715,55,2503,131],[3715,56,2503,132],[3716,14,2503,20,"header"],[3716,20,2503,26],[3716,23,2503,26,"_ref45"],[3716,29,2503,26],[3716,30,2503,20,"header"],[3716,36,2503,26],[3717,14,2503,28,"payload"],[3717,21,2503,35],[3717,24,2503,35,"_ref45"],[3717,30,2503,35],[3717,31,2503,28,"payload"],[3717,38,2503,35],[3718,14,2503,37,"signature"],[3718,23,2503,46],[3718,26,2503,46,"_ref45"],[3718,32,2503,46],[3718,33,2503,37,"signature"],[3718,42,2503,46],[3719,14,2503,46,"_ref45$raw"],[3719,24,2503,46],[3719,27,2503,46,"_ref45"],[3719,33,2503,46],[3719,34,2503,48,"raw"],[3719,37,2503,51],[3720,14,2503,63,"rawHeader"],[3720,23,2503,72],[3720,26,2503,72,"_ref45$raw"],[3720,36,2503,72],[3720,37,2503,55,"header"],[3720,43,2503,61],[3721,14,2503,83,"rawPayload"],[3721,24,2503,93],[3721,27,2503,93,"_ref45$raw"],[3721,37,2503,93],[3721,38,2503,74,"payload"],[3721,45,2503,81],[3722,12,2504,12],[3722,16,2504,16],[3722,18,2504,18,"options"],[3722,25,2504,25],[3722,30,2504,30],[3722,34,2504,34],[3722,38,2504,38,"options"],[3722,45,2504,45],[3722,50,2504,50],[3722,55,2504,55],[3722,56,2504,56],[3722,59,2504,59],[3722,64,2504,64],[3722,65,2504,65],[3722,68,2504,68,"options"],[3722,75,2504,75],[3722,76,2504,76,"allowExpired"],[3722,88,2504,88],[3722,89,2504,89],[3722,91,2504,91],[3723,14,2505,16],[3724,14,2506,16],[3724,15,2506,17],[3724,16,2506,18],[3724,18,2506,20,"helpers_1"],[3724,27,2506,29],[3724,28,2506,30,"validateExp"],[3724,39,2506,41],[3724,41,2506,43,"payload"],[3724,48,2506,50],[3724,49,2506,51,"exp"],[3724,52,2506,54],[3724,53,2506,55],[3725,12,2507,12],[3726,12,2508,12],[3726,16,2508,18,"signingKey"],[3726,26,2508,28],[3726,29,2508,31],[3726,30,2508,32,"header"],[3726,36,2508,38],[3726,37,2508,39,"alg"],[3726,40,2508,42],[3726,44,2509,16,"header"],[3726,50,2509,22],[3726,51,2509,23,"alg"],[3726,54,2509,26],[3726,55,2509,27,"startsWith"],[3726,65,2509,37],[3726,66,2509,38],[3726,70,2509,42],[3726,71,2509,43],[3726,75,2510,16],[3726,76,2510,17,"header"],[3726,82,2510,23],[3726,83,2510,24,"kid"],[3726,86,2510,27],[3726,90,2511,16],[3726,92,2511,18],[3726,100,2511,26],[3726,104,2511,30,"globalThis"],[3726,114,2511,40],[3726,118,2511,44],[3726,126,2511,52],[3726,130,2511,56,"globalThis"],[3726,140,2511,66],[3726,141,2511,67,"crypto"],[3726,147,2511,73],[3726,148,2511,74],[3726,151,2512,18],[3726,155,2512,22],[3726,164,2513,24],[3726,168,2513,28],[3726,169,2513,29,"fetchJwk"],[3726,177,2513,37],[3726,178,2513,38,"header"],[3726,184,2513,44],[3726,185,2513,45,"kid"],[3726,188,2513,48],[3726,190,2513,50],[3726,191,2513,51,"options"],[3726,198,2513,58],[3726,203,2513,63],[3726,207,2513,67],[3726,211,2513,71,"options"],[3726,218,2513,78],[3726,223,2513,83],[3726,228,2513,88],[3726,229,2513,89],[3726,232,2513,92],[3726,237,2513,97],[3726,238,2513,98],[3726,241,2513,101,"options"],[3726,248,2513,108],[3726,249,2513,109,"keys"],[3726,253,2513,113],[3726,257,2513,117],[3727,14,2513,119,"keys"],[3727,18,2513,123],[3727,20,2513,125,"options"],[3727,27,2513,132],[3727,28,2513,133,"keys"],[3728,12,2513,138],[3728,13,2513,139],[3728,16,2513,142,"options"],[3728,23,2513,149],[3728,28,2513,154],[3728,32,2513,158],[3728,36,2513,162,"options"],[3728,43,2513,169],[3728,48,2513,174],[3728,53,2513,179],[3728,54,2513,180],[3728,57,2513,183],[3728,62,2513,188],[3728,63,2513,189],[3728,66,2513,192,"options"],[3728,73,2513,199],[3728,74,2513,200,"jwks"],[3728,78,2513,204],[3728,79,2513,205],[3729,12,2514,12],[3730,12,2515,12],[3730,16,2515,16],[3730,17,2515,17,"signingKey"],[3730,27,2515,27],[3730,29,2515,29],[3731,14,2516,16],[3731,18,2516,16,"_yield$this$getUser3"],[3731,38,2516,16],[3731,47,2516,40],[3731,51,2516,44],[3731,52,2516,45,"getUser"],[3731,59,2516,52],[3731,60,2516,53,"token"],[3731,65,2516,58],[3731,66,2516,59],[3732,16,2516,24,"error"],[3732,23,2516,29],[3732,26,2516,29,"_yield$this$getUser3"],[3732,46,2516,29],[3732,47,2516,24,"error"],[3732,52,2516,29],[3733,14,2517,16],[3733,18,2517,20,"error"],[3733,25,2517,25],[3733,27,2517,27],[3734,16,2518,20],[3734,22,2518,26,"error"],[3734,29,2518,31],[3735,14,2519,16],[3736,14,2520,16],[3737,14,2521,16],[3737,21,2521,23],[3738,16,2522,20,"data"],[3738,20,2522,24],[3738,22,2522,26],[3739,18,2523,24,"claims"],[3739,24,2523,30],[3739,26,2523,32,"payload"],[3739,33,2523,39],[3740,18,2524,24,"header"],[3740,24,2524,30],[3741,18,2525,24,"signature"],[3742,16,2526,20],[3742,17,2526,21],[3743,16,2527,20,"error"],[3743,21,2527,25],[3743,23,2527,27],[3744,14,2528,16],[3744,15,2528,17],[3745,12,2529,12],[3746,12,2530,12],[3746,16,2530,18,"algorithm"],[3746,25,2530,27],[3746,28,2530,30],[3746,29,2530,31],[3746,30,2530,32],[3746,32,2530,34,"helpers_1"],[3746,41,2530,43],[3746,42,2530,44,"getAlgorithm"],[3746,54,2530,56],[3746,56,2530,58,"header"],[3746,62,2530,64],[3746,63,2530,65,"alg"],[3746,66,2530,68],[3746,67,2530,69],[3747,12,2531,12],[3748,12,2532,12],[3748,16,2532,18,"publicKey"],[3748,25,2532,27],[3748,34,2532,36,"crypto"],[3748,40,2532,42],[3748,41,2532,43,"subtle"],[3748,47,2532,49],[3748,48,2532,50,"importKey"],[3748,57,2532,59],[3748,58,2532,60],[3748,63,2532,65],[3748,65,2532,67,"signingKey"],[3748,75,2532,77],[3748,77,2532,79,"algorithm"],[3748,86,2532,88],[3748,88,2532,90],[3748,92,2532,94],[3748,94,2532,96],[3748,95,2533,16],[3748,103,2533,24],[3748,104,2534,13],[3748,105,2534,14],[3749,12,2535,12],[3750,12,2536,12],[3750,16,2536,18,"isValid"],[3750,23,2536,25],[3750,32,2536,34,"crypto"],[3750,38,2536,40],[3750,39,2536,41,"subtle"],[3750,45,2536,47],[3750,46,2536,48,"verify"],[3750,52,2536,54],[3750,53,2536,55,"algorithm"],[3750,62,2536,64],[3750,64,2536,66,"publicKey"],[3750,73,2536,75],[3750,75,2536,77,"signature"],[3750,84,2536,86],[3750,86,2536,88],[3750,87,2536,89],[3750,88,2536,90],[3750,90,2536,92,"base64url_1"],[3750,101,2536,103],[3750,102,2536,104,"stringToUint8Array"],[3750,120,2536,122],[3750,122,2536,124],[3750,125,2536,127,"rawHeader"],[3750,134,2536,136],[3750,138,2536,140,"rawPayload"],[3750,148,2536,150],[3750,150,2536,152],[3750,151,2536,153],[3750,152,2536,154],[3751,12,2537,12],[3751,16,2537,16],[3751,17,2537,17,"isValid"],[3751,24,2537,24],[3751,26,2537,26],[3752,14,2538,16],[3752,20,2538,22],[3752,24,2538,26,"errors_1"],[3752,32,2538,34],[3752,33,2538,35,"AuthInvalidJwtError"],[3752,52,2538,54],[3752,53,2538,55],[3752,76,2538,78],[3752,77,2538,79],[3753,12,2539,12],[3754,12,2540,12],[3755,12,2541,12],[3755,19,2541,19],[3756,14,2542,16,"data"],[3756,18,2542,20],[3756,20,2542,22],[3757,16,2543,20,"claims"],[3757,22,2543,26],[3757,24,2543,28,"payload"],[3757,31,2543,35],[3758,16,2544,20,"header"],[3758,22,2544,26],[3759,16,2545,20,"signature"],[3760,14,2546,16],[3760,15,2546,17],[3761,14,2547,16,"error"],[3761,19,2547,21],[3761,21,2547,23],[3762,12,2548,12],[3762,13,2548,13],[3763,10,2549,8],[3763,11,2549,9],[3763,12,2550,8],[3763,19,2550,15,"error"],[3763,24,2550,20],[3763,26,2550,22],[3764,12,2551,12],[3764,16,2551,16],[3764,17,2551,17],[3764,18,2551,18],[3764,20,2551,20,"errors_1"],[3764,28,2551,28],[3764,29,2551,29,"isAuthError"],[3764,40,2551,40],[3764,42,2551,42,"error"],[3764,47,2551,47],[3764,48,2551,48],[3764,50,2551,50],[3765,14,2552,16],[3765,21,2552,23],[3766,16,2552,25,"data"],[3766,20,2552,29],[3766,22,2552,31],[3766,26,2552,35],[3767,16,2552,37,"error"],[3768,14,2552,43],[3768,15,2552,44],[3769,12,2553,12],[3770,12,2554,12],[3770,18,2554,18,"error"],[3770,23,2554,23],[3771,10,2555,8],[3772,8,2556,4],[3772,9,2556,5],[3773,8,2556,5],[3773,17,2493,10,"getClaims"],[3773,26,2493,19,"getClaims"],[3773,27,2493,19,"_x72"],[3773,31,2493,19],[3774,10,2493,19],[3774,17,2493,19,"_getClaims"],[3774,27,2493,19],[3774,28,2493,19,"apply"],[3774,33,2493,19],[3774,40,2493,19,"arguments"],[3774,49,2493,19],[3775,8,2493,19],[3776,8,2493,19],[3776,15,2493,10,"getClaims"],[3776,24,2493,19],[3777,6,2493,19],[3778,4,2493,19],[3779,2,2493,19],[3780,2,2558,0,"GoTrueClient"],[3780,14,2558,12],[3780,15,2558,13,"nextInstanceID"],[3780,29,2558,27],[3780,32,2558,30],[3780,33,2558,31],[3781,2,2559,0,"exports"],[3781,9,2559,7],[3781,10,2559,8,"default"],[3781,17,2559,15],[3781,20,2559,18,"GoTrueClient"],[3781,32,2559,30],[3782,0,2559,31],[3782,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","constructor","_b.addEventListener$argument_1","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","linkIdentityOAuth","linkIdentityIdToken","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AE0B;CFE;AGU;ICI;KDG;IEC;KFE;IGC;KHG;IIC;KJE;IKI;6GCwG;aDG;KLG;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBQ;KjBU;IkBC;sBCsC,cD;uBEC;aFE;KlB+D;IqBC;sECmG,6BD;KrBwC;IuBC;KvBkC;IwBK;KxBoC;IyBkB;KzB+C;I0BI;K1BmC;I2Be;K3BuB;I4BK;2CnBE;SmBE;K5BC;I6BC;0CCE;aDW;K7BQ;I+BI;K/BoC;IgCY;mDvBE;oCqBC;arBE;SuBC;KhCE;IiCI;gCnCO;iBmCG;yCnCC;iBmCO;8ECG;6CpCK;qBoCO;aDc;KjCK;ImCO;KnCU;IoCM;6BC2C;yBDQ;KpCe;IsCQ;mD7BK;S6BE;KtCE;IuCC;0CTS;aSe;KvCc;IwCI;2C/BE;S+BE;KxCC;IyCC;0CXE;aW4B;KzCQ;I0CM;2CjCE;SiCE;K1CC;I2CC;K3CgD;I4CO;2CnCE;SmCE;K5CC;I6CC;0CfE;aeoB;K7CQ;I8CI;K9CsF;I+CI;K/CE;IgDI;KhDG;IiDS;2CxCE;SwCE;KjDC;IkDC;sCpBC;SoBuB;KlDC;ImDC;yBCK;aDG;SrDI;wCWE;aXE;SqDC;KnDE;IqDC;sCvBC;SuBc;KrDC;IsDQ;KtD0B;IuDI;KvDc;IwDC;KxDK;IyDC;2D3BG;a2Be;KzDc;I0DC;sC5BC;S4B0C;K1DC;I2DI;0C7BE;a6BU;K3DQ;I4DK;kD9DM;a8DU,E9D;a8DM;K5DY;I6DC;K7DO;I8DC;K9DY;I+DK;K/D0F;IgEC;KhEyC;IiEC;+ECQ;aDO;KjEY;ImEK;KnEmC;IoEC;KpES;IqEO;KrEY;IsEK;mCCG,kCD;mB3DqB;S2DG;KtEC;IwEK;KxEO;IyEuB;KzEG;I0ES;K1EG;I2EI;uClEG;sDqBI;yBrBY;akES;K3EU;I4EM;6CCU,kDD;K5ES;I8EI;4CrEe;iBqEQ;K9EQ;I+EO;K/EwB;IgFC;0ClDE;akDU;KhFQ;IiFC;0CnDE;amDuB;KjFQ;IkFC;qCzEC;8CqBE;iBrBwB;SyEQ;KlFC;ImFC;qC1EC;8CqBE;iBrB8B;S0EQ;KnFC;IoFI;KpFc;IqFI;KrFyB;IsFI;qC7EC;0CqBC;yHyDkB,wCzD;arBM;S6EC;KtFC;IwFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KxFK;I2FiB;K3F+D;CHC"},"hasCjsExports":true},"type":"js/module"}]}