{"dependencies":[{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"],"imports":1}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":533},"end":{"line":12,"column":38,"index":555}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"],"imports":1}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":577},"end":{"line":13,"column":46,"index":603}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"],"imports":1}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18,"index":623},"end":{"line":14,"column":42,"index":647}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"],"imports":1}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"],"imports":1}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":19,"index":716},"end":{"line":16,"column":49,"index":746}}],"key":"7NCa1l0WsdounoYDseQIolyeoT4=","exportNames":["*"],"imports":1}},{"name":"./lib/webauthn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":19,"index":767},"end":{"line":17,"column":44,"index":792}}],"key":"OCQwc7y6/FfrfsXu7zeL/LXC+4c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[0], \"./GoTrueAdminApi\"));\n  const constants_1 = require(_dependencyMap[1], \"./lib/constants\");\n  const errors_1 = require(_dependencyMap[2], \"./lib/errors\");\n  const fetch_1 = require(_dependencyMap[3], \"./lib/fetch\");\n  const helpers_1 = require(_dependencyMap[4], \"./lib/helpers\");\n  const local_storage_1 = require(_dependencyMap[5], \"./lib/local-storage\");\n  const locks_1 = require(_dependencyMap[6], \"./lib/locks\");\n  const polyfills_1 = require(_dependencyMap[7], \"./lib/polyfills\");\n  const version_1 = require(_dependencyMap[8], \"./lib/version\");\n  const base64url_1 = require(_dependencyMap[9], \"./lib/base64url\");\n  const ethereum_1 = require(_dependencyMap[10], \"./lib/web3/ethereum\");\n  const webauthn_1 = require(_dependencyMap[11], \"./lib/webauthn\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  const DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  async function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  const GLOBAL_JWKS = {};\n  class GoTrueClient {\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n        keys: []\n      };\n    }\n    set jwks(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        jwks: value\n      });\n    }\n    get jwks_cached_at() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        cachedAt: value\n      });\n    }\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        webauthn: new webauthn_1.WebAuthnApi(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async event => {\n          this._debug('received broadcast notification from other tab or client', event);\n          await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n        });\n      }\n      this.initialize();\n    }\n    _debug(...args) {\n      if (this.logDebugMessages) {\n        this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n      }\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n      if (this.initializePromise) {\n        return await this.initializePromise;\n      }\n      this.initializePromise = (async () => {\n        return await this._acquireLock(-1, async () => {\n          return await this._initialize();\n        });\n      })();\n      return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n      var _a;\n      try {\n        const params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n        let callbackUrlType = 'none';\n        if (this._isImplicitGrantCallback(params)) {\n          callbackUrlType = 'implicit';\n        } else if (await this._isPKCECallback(params)) {\n          callbackUrlType = 'pkce';\n        }\n        /**\n         * Attempt to get the session from the URL only if these conditions are fulfilled\n         *\n         * Note: If the URL isn't one of the callback url types (implicit or pkce),\n         * then there could be an existing session so we don't want to prematurely remove it\n         */\n        if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n          const {\n            data,\n            error\n          } = await this._getSessionFromURL(params, callbackUrlType);\n          if (error) {\n            this._debug('#_initialize()', 'error detecting session from URL', error);\n            if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n              const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n              if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                return {\n                  error\n                };\n              }\n            }\n            // failed login attempt via url,\n            // remove old session as in verifyOtp, signUp and signInWith*\n            await this._removeSession();\n            return {\n              error\n            };\n          }\n          const {\n            session,\n            redirectType\n          } = data;\n          this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n          await this._saveSession(session);\n          setTimeout(async () => {\n            if (redirectType === 'recovery') {\n              await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n            } else {\n              await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n          }, 0);\n          return {\n            error: null\n          };\n        }\n        // no login attempt via callback url try to recover session from storage\n        await this._recoverAndRefresh();\n        return {\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            error\n          };\n        }\n        return {\n          error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n        };\n      } finally {\n        await this._handleVisibilityChange();\n        this._debug('#_initialize()', 'end');\n      }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n      var _a, _b, _c;\n      try {\n        const res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n            gotrue_meta_security: {\n              captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n            }\n          },\n          xform: fetch_1._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n      var _a, _b, _c;\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: {\n              email,\n              password,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            xform: fetch_1._sessionResponse\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n              channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponse\n          });\n        } else {\n          throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              email,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponsePassword\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponsePassword\n          });\n        } else {\n          throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({\n            user: data.user,\n            session: data.session\n          }, data.weak_password ? {\n            weakPassword: data.weak_password\n          } : null),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n      var _a, _b, _c, _d;\n      return await this._handleProviderSignIn(credentials.provider, {\n        redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n        scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n        queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n        skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n      });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n      await this.initializePromise;\n      return this._acquireLock(-1, async () => {\n        return this._exchangeCodeForSession(authCode);\n      });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n     * both of which derive from the EIP-4361 standard\n     * With slight variation on Solana's side.\n     * @reference https://eips.ethereum.org/EIPS/eip-4361\n     */\n    async signInWithWeb3(credentials) {\n      const {\n        chain\n      } = credentials;\n      switch (chain) {\n        case 'ethereum':\n          return await this.signInWithEthereum(credentials);\n        case 'solana':\n          return await this.signInWithSolana(credentials);\n        default:\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n      }\n    }\n    async signInWithEthereum(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n      // TODO: flatten type\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, helpers_1.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n            resolvedWallet = windowAny.ethereum;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        const accounts = await resolvedWallet.request({\n          method: 'eth_requestAccounts'\n        }).then(accs => accs).catch(() => {\n          throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n        });\n        if (!accounts || accounts.length === 0) {\n          throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n        }\n        const address = (0, ethereum_1.getAddress)(accounts[0]);\n        let chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n        if (!chainId) {\n          const chainIdHex = await resolvedWallet.request({\n            method: 'eth_chainId'\n          });\n          chainId = (0, ethereum_1.fromHex)(chainIdHex);\n        }\n        const siweMessage = {\n          domain: url.host,\n          address: address,\n          statement: statement,\n          uri: url.href,\n          version: '1',\n          chainId: chainId,\n          nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n          issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n          expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n          notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n          requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n          resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n        };\n        message = (0, ethereum_1.createSiweMessage)(siweMessage);\n        // Sign message\n        signature = await resolvedWallet.request({\n          method: 'personal_sign',\n          params: [(0, ethereum_1.toHex)(message), address]\n        });\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'ethereum',\n            message,\n            signature\n          }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n            }\n          } : null),\n          xform: fetch_1._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async signInWithSolana(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, helpers_1.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n            resolvedWallet = windowAny.solana;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n          const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n            issuedAt: new Date().toISOString()\n          }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n            // non-overridable properties\n            version: '1',\n            domain: url.host,\n            uri: url.href\n          }), statement ? {\n            statement\n          } : null));\n          let outputToProcess;\n          if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n            outputToProcess = output[0];\n          } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n            outputToProcess = output;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n          }\n          if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n            message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n            signature = outputToProcess.signature;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n          }\n        } else {\n          if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n            throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n          }\n          message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n          const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n          if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n            throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n          }\n          signature = maybeSignature;\n        }\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'solana',\n            message,\n            signature: (0, base64url_1.bytesToBase64URL)(signature)\n          }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n            }\n          } : null),\n          xform: fetch_1._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _exchangeCodeForSession(authCode) {\n      const storageItem = await (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n          headers: this.headers,\n          body: {\n            auth_code: authCode,\n            code_verifier: codeVerifier\n          },\n          xform: fetch_1._sessionResponse\n        });\n        await (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign(Object.assign({}, data), {\n            redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n          }),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n      try {\n        const {\n          options,\n          provider,\n          token,\n          access_token,\n          nonce\n        } = credentials;\n        const res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n          headers: this.headers,\n          body: {\n            provider,\n            id_token: token,\n            access_token,\n            nonce,\n            gotrue_meta_security: {\n              captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n            }\n          },\n          xform: fetch_1._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n      var _a, _b, _c, _d, _e;\n      try {\n        if ('email' in credentials) {\n          const {\n            email,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              email,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        if ('phone' in credentials) {\n          const {\n            phone,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              phone,\n              data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n              create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms'\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n      var _a, _b;\n      try {\n        let redirectTo = undefined;\n        let captchaToken = undefined;\n        if ('options' in params) {\n          redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n          captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n        }\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n          headers: this.headers,\n          body: Object.assign(Object.assign({}, params), {\n            gotrue_meta_security: {\n              captcha_token: captchaToken\n            }\n          }),\n          redirectTo,\n          xform: fetch_1._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data) {\n          throw new Error('An error occurred on token verification.');\n        }\n        const session = data.session;\n        const user = data.user;\n        if (session === null || session === void 0 ? void 0 : session.access_token) {\n          await this._saveSession(session);\n          await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n      var _a, _b, _c;\n      try {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n          ;\n          [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        }\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n          body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n            provider_id: params.providerId\n          } : null), 'domain' in params ? {\n            domain: params.domain\n          } : null), {\n            redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n          }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: params.options.captchaToken\n            }\n          } : null), {\n            skip_http_redirect: true,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod\n          }),\n          headers: this.headers,\n          xform: fetch_1._ssoResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._reauthenticate();\n      });\n    }\n    async _reauthenticate() {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) throw sessionError;\n          if (!session) throw new errors_1.AuthSessionMissingError();\n          const {\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n            headers: this.headers,\n            jwt: session.access_token\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n      try {\n        const endpoint = `${this.url}/resend`;\n        if ('email' in credentials) {\n          const {\n            email,\n            type,\n            options\n          } = credentials;\n          const {\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              email,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            type,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              phone,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return this._useSession(async result => {\n          return result;\n        });\n      });\n      return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n      this._debug('#_acquireLock', 'begin', acquireTimeout);\n      try {\n        if (this.lockAcquired) {\n          const last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n          const result = (async () => {\n            await last;\n            return await fn();\n          })();\n          this.pendingInLock.push((async () => {\n            try {\n              await result;\n            } catch (e) {\n              // we just care if it finished\n            }\n          })());\n          return result;\n        }\n        return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n          this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n          try {\n            this.lockAcquired = true;\n            const result = fn();\n            this.pendingInLock.push((async () => {\n              try {\n                await result;\n              } catch (e) {\n                // we just care if it finished\n              }\n            })());\n            await result;\n            // keep draining the queue until there's nothing to wait on\n            while (this.pendingInLock.length) {\n              const waitOn = [...this.pendingInLock];\n              await Promise.all(waitOn);\n              this.pendingInLock.splice(0, waitOn.length);\n            }\n            return await result;\n          } finally {\n            this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n            this.lockAcquired = false;\n          }\n        });\n      } finally {\n        this._debug('#_acquireLock', 'end');\n      }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n      this._debug('#_useSession', 'begin');\n      try {\n        // the use of __loadSession here is the only correct use of the function!\n        const result = await this.__loadSession();\n        return await fn(result);\n      } finally {\n        this._debug('#_useSession', 'end');\n      }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n      this._debug('#__loadSession()', 'begin');\n      if (!this.lockAcquired) {\n        this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n      }\n      try {\n        let currentSession = null;\n        const maybeSession = await (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n        this._debug('#getSession()', 'session from storage', maybeSession);\n        if (maybeSession !== null) {\n          if (this._isValidSession(maybeSession)) {\n            currentSession = maybeSession;\n          } else {\n            this._debug('#getSession()', 'session from storage is not valid');\n            await this._removeSession();\n          }\n        }\n        if (!currentSession) {\n          return {\n            data: {\n              session: null\n            },\n            error: null\n          };\n        }\n        // A session is considered expired before the access token _actually_\n        // expires. When the autoRefreshToken option is off (or when the tab is\n        // in the background), very eager users of getSession() -- like\n        // realtime-js -- might send a valid JWT which will expire by the time it\n        // reaches the server.\n        const hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n        this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n        if (!hasExpired) {\n          if (this.userStorage) {\n            const maybeUser = await (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n            if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n              currentSession.user = maybeUser.user;\n            } else {\n              currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n            }\n          }\n          if (this.storage.isServer && currentSession.user) {\n            let suppressWarning = this.suppressGetSessionWarning;\n            const proxySession = new Proxy(currentSession, {\n              get: (target, prop, receiver) => {\n                if (!suppressWarning && prop === 'user') {\n                  // only show warning when the user object is being accessed from the server\n                  console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                  suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                  this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                }\n                return Reflect.get(target, prop, receiver);\n              }\n            });\n            currentSession = proxySession;\n          }\n          return {\n            data: {\n              session: currentSession\n            },\n            error: null\n          };\n        }\n        const {\n          data: session,\n          error\n        } = await this._callRefreshToken(currentSession.refresh_token);\n        if (error) {\n          return {\n            data: {\n              session: null\n            },\n            error\n          };\n        }\n        return {\n          data: {\n            session\n          },\n          error: null\n        };\n      } finally {\n        this._debug('#__loadSession()', 'end');\n      }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n      if (jwt) {\n        return await this._getUser(jwt);\n      }\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return await this._getUser();\n      });\n      return result;\n    }\n    async _getUser(jwt) {\n      try {\n        if (jwt) {\n          return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: jwt,\n            xform: fetch_1._userResponse\n          });\n        }\n        return await this._useSession(async result => {\n          var _a, _b, _c;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          // returns an error if there is no access_token or custom authorization header\n          if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n            return {\n              data: {\n                user: null\n              },\n              error: new errors_1.AuthSessionMissingError()\n            };\n          }\n          return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n            xform: fetch_1._userResponse\n          });\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          if ((0, errors_1.isAuthSessionMissingError)(error)) {\n            // JWT contains a `session_id` which does not correspond to an active\n            // session in the database, indicating the user is signed out.\n            await this._removeSession();\n            await (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          }\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._updateUser(attributes, options);\n      });\n    }\n    async _updateUser(attributes, options = {}) {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            throw sessionError;\n          }\n          if (!sessionData.session) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          const session = sessionData.session;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce' && attributes.email != null) {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            data,\n            error: userError\n          } = await (0, fetch_1._request)(this.fetch, 'PUT', `${this.url}/user`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: Object.assign(Object.assign({}, attributes), {\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            }),\n            jwt: session.access_token,\n            xform: fetch_1._userResponse\n          });\n          if (userError) throw userError;\n          session.user = data.user;\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('USER_UPDATED', session);\n          return {\n            data: {\n              user: session.user\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._setSession(currentSession);\n      });\n    }\n    async _setSession(currentSession) {\n      try {\n        if (!currentSession.access_token || !currentSession.refresh_token) {\n          throw new errors_1.AuthSessionMissingError();\n        }\n        const timeNow = Date.now() / 1000;\n        let expiresAt = timeNow;\n        let hasExpired = true;\n        let session = null;\n        const {\n          payload\n        } = (0, helpers_1.decodeJWT)(currentSession.access_token);\n        if (payload.exp) {\n          expiresAt = payload.exp;\n          hasExpired = expiresAt <= timeNow;\n        }\n        if (hasExpired) {\n          const {\n            data: refreshedSession,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!refreshedSession) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          session = refreshedSession;\n        } else {\n          const {\n            data,\n            error\n          } = await this._getUser(currentSession.access_token);\n          if (error) {\n            throw error;\n          }\n          session = {\n            access_token: currentSession.access_token,\n            refresh_token: currentSession.refresh_token,\n            user: data.user,\n            token_type: 'bearer',\n            expires_in: expiresAt - timeNow,\n            expires_at: expiresAt\n          };\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user: session.user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._refreshSession(currentSession);\n      });\n    }\n    async _refreshSession(currentSession) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          if (!currentSession) {\n            const {\n              data,\n              error\n            } = result;\n            if (error) {\n              throw error;\n            }\n            currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n          }\n          if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          const {\n            data: session,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          return {\n            data: {\n              user: session.user,\n              session\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n      try {\n        if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n        // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n        if (params.error || params.error_description || params.error_code) {\n          // The error class returned implies that the redirect is from an implicit grant flow\n          // but it could also be from a redirect error from a PKCE flow.\n          throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code'\n          });\n        }\n        // Checks for mismatches between the flowType initialised in the client and the URL parameters\n        switch (callbackUrlType) {\n          case 'implicit':\n            if (this.flowType === 'pkce') {\n              throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n            }\n            break;\n          case 'pkce':\n            if (this.flowType === 'implicit') {\n              throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n            }\n            break;\n          default:\n          // there's no mismatch so we continue\n        }\n        // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n        if (callbackUrlType === 'pkce') {\n          this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n          if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n          const {\n            data,\n            error\n          } = await this._exchangeCodeForSession(params.code);\n          if (error) throw error;\n          const url = new URL(window.location.href);\n          url.searchParams.delete('code');\n          window.history.replaceState(window.history.state, '', url.toString());\n          return {\n            data: {\n              session: data.session,\n              redirectType: null\n            },\n            error: null\n          };\n        }\n        const {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          refresh_token,\n          expires_in,\n          expires_at,\n          token_type\n        } = params;\n        if (!access_token || !expires_in || !refresh_token || !token_type) {\n          throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n        }\n        const timeNow = Math.round(Date.now() / 1000);\n        const expiresIn = parseInt(expires_in);\n        let expiresAt = timeNow + expiresIn;\n        if (expires_at) {\n          expiresAt = parseInt(expires_at);\n        }\n        const actuallyExpiresIn = expiresAt - timeNow;\n        if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n          console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n        }\n        const issuedAt = expiresAt - expiresIn;\n        if (timeNow - issuedAt >= 120) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n        } else if (timeNow - issuedAt < 0) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n        }\n        const {\n          data,\n          error\n        } = await this._getUser(access_token);\n        if (error) throw error;\n        const session = {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          expires_in: expiresIn,\n          expires_at: expiresAt,\n          refresh_token,\n          token_type: token_type,\n          user: data.user\n        };\n        // Remove tokens from URL\n        window.location.hash = '';\n        this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n        return {\n          data: {\n            session,\n            redirectType: params.type\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n      return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n      const currentStorageContent = await (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = {\n      scope: 'global'\n    }) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._signOut(options);\n      });\n    }\n    async _signOut({\n      scope\n    } = {\n      scope: 'global'\n    }) {\n      return await this._useSession(async result => {\n        var _a;\n        const {\n          data,\n          error: sessionError\n        } = result;\n        if (sessionError) {\n          return {\n            error: sessionError\n          };\n        }\n        const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n        if (accessToken) {\n          const {\n            error\n          } = await this.admin.signOut(accessToken, scope);\n          if (error) {\n            // ignore 404s since user might not exist anymore\n            // ignore 401s since an invalid or expired JWT should sign out the current session\n            if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n              return {\n                error\n              };\n            }\n          }\n        }\n        if (scope !== 'others') {\n          await this._removeSession();\n          await (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        }\n        return {\n          error: null\n        };\n      });\n    }\n    onAuthStateChange(callback) {\n      const id = (0, helpers_1.uuid)();\n      const subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this._debug('#unsubscribe()', 'state change callback with id removed', id);\n          this.stateChangeEmitters.delete(id);\n        }\n      };\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n      this.stateChangeEmitters.set(id, subscription);\n      (async () => {\n        await this.initializePromise;\n        await this._acquireLock(-1, async () => {\n          this._emitInitialSession(id);\n        });\n      })();\n      return {\n        data: {\n          subscription\n        }\n      };\n    }\n    async _emitInitialSession(id) {\n      return await this._useSession(async result => {\n        var _a, _b;\n        try {\n          const {\n            data: {\n              session\n            },\n            error\n          } = result;\n          if (error) throw error;\n          await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n        } catch (err) {\n          await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n          console.error(err);\n        }\n      });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n      let codeChallenge = null;\n      let codeChallengeMethod = null;\n      if (this.flowType === 'pkce') {\n        ;\n        [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n        );\n      }\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n          body: {\n            email,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n            gotrue_meta_security: {\n              captcha_token: options.captchaToken\n            }\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this.getUser();\n        if (error) throw error;\n        return {\n          data: {\n            identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async linkIdentity(credentials) {\n      if ('token' in credentials) {\n        return this.linkIdentityIdToken(credentials);\n      }\n      return this.linkIdentityOAuth(credentials);\n    }\n    async linkIdentityOAuth(credentials) {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this._useSession(async result => {\n          var _a, _b, _c, _d, _e;\n          const {\n            data,\n            error\n          } = result;\n          if (error) throw error;\n          const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: true\n          });\n          return await (0, fetch_1._request)(this.fetch, 'GET', url, {\n            headers: this.headers,\n            jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n          });\n        });\n        if (error) throw error;\n        if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n          window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n        }\n        return {\n          data: {\n            provider: credentials.provider,\n            url: data === null || data === void 0 ? void 0 : data.url\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              provider: credentials.provider,\n              url: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async linkIdentityIdToken(credentials) {\n      return await this._useSession(async result => {\n        var _a;\n        try {\n          const {\n            error: sessionError,\n            data: {\n              session\n            }\n          } = result;\n          if (sessionError) throw sessionError;\n          const {\n            options,\n            provider,\n            token,\n            access_token,\n            nonce\n          } = credentials;\n          const res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n            headers: this.headers,\n            jwt: (_a = session === null || session === void 0 ? void 0 : session.access_token) !== null && _a !== void 0 ? _a : undefined,\n            body: {\n              provider,\n              id_token: token,\n              access_token,\n              nonce,\n              link_identity: true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponse\n          });\n          const {\n            data,\n            error\n          } = res;\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error\n            };\n          } else if (!data || !data.session || !data.user) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: new errors_1.AuthInvalidTokenResponseError()\n            };\n          }\n          if (data.session) {\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('USER_UPDATED', data.session);\n          }\n          return {\n            data,\n            error\n          };\n        } catch (error) {\n          if ((0, errors_1.isAuthError)(error)) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n            headers: this.headers,\n            jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n          });\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n      const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        const startedAt = Date.now();\n        // will attempt to refresh the token with exponential backoff\n        return await (0, helpers_1.retryable)(async attempt => {\n          if (attempt > 0) {\n            await (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n          }\n          this._debug(debugName, 'refreshing attempt', attempt);\n          return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: {\n              refresh_token: refreshToken\n            },\n            headers: this.headers,\n            xform: fetch_1._sessionResponse\n          });\n        }, (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt);\n          return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n        });\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    _isValidSession(maybeSession) {\n      const isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n      const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n        redirectTo: options.redirectTo,\n        scopes: options.scopes,\n        queryParams: options.queryParams\n      });\n      this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n      // try to open on the browser\n      if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n        window.location.assign(url);\n      }\n      return {\n        data: {\n          provider,\n          url\n        },\n        error: null\n      };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n      var _a, _b;\n      const debugName = '#_recoverAndRefresh()';\n      this._debug(debugName, 'begin');\n      try {\n        const currentSession = await (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n        if (currentSession && this.userStorage) {\n          let maybeUser = await (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n          if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n            // storage and userStorage are the same storage medium, for example\n            // window.localStorage if userStorage does not have the user from\n            // storage stored, store it first thereby migrating the user object\n            // from storage -> userStorage\n            maybeUser = {\n              user: currentSession.user\n            };\n            await (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n          }\n          currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n        } else if (currentSession && !currentSession.user) {\n          // user storage is not set, let's check if it was previously enabled so\n          // we bring back the storage as it should be\n          if (!currentSession.user) {\n            // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n            const separateUser = await (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n            if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n              currentSession.user = separateUser.user;\n              await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n              await (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n            } else {\n              currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n            }\n          }\n        }\n        this._debug(debugName, 'session from storage', currentSession);\n        if (!this._isValidSession(currentSession)) {\n          this._debug(debugName, 'session is not valid');\n          if (currentSession !== null) {\n            await this._removeSession();\n          }\n          return;\n        }\n        const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n        this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n        if (expiresWithMargin) {\n          if (this.autoRefreshToken && currentSession.refresh_token) {\n            const {\n              error\n            } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n              console.error(error);\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                await this._removeSession();\n              }\n            }\n          }\n        } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n          // If we have a proxy user, try to get the real user data\n          try {\n            const {\n              data,\n              error: userError\n            } = await this._getUser(currentSession.access_token);\n            if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n              currentSession.user = data.user;\n              await this._saveSession(currentSession);\n              await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            } else {\n              this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n            }\n          } catch (getUserError) {\n            console.error('Error getting user data:', getUserError);\n            this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n          }\n        } else {\n          // no need to persist currentSession again, as we just loaded it from\n          // local storage; persisting it again may overwrite a value saved by\n          // another client with access to the same local storage\n          await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n        }\n      } catch (err) {\n        this._debug(debugName, 'error', err);\n        console.error(err);\n        return;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    async _callRefreshToken(refreshToken) {\n      var _a, _b;\n      if (!refreshToken) {\n        throw new errors_1.AuthSessionMissingError();\n      }\n      // refreshing is already in progress\n      if (this.refreshingDeferred) {\n        return this.refreshingDeferred.promise;\n      }\n      const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        this.refreshingDeferred = new helpers_1.Deferred();\n        const {\n          data,\n          error\n        } = await this._refreshAccessToken(refreshToken);\n        if (error) throw error;\n        if (!data.session) throw new errors_1.AuthSessionMissingError();\n        await this._saveSession(data.session);\n        await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n        const result = {\n          data: data.session,\n          error: null\n        };\n        this.refreshingDeferred.resolve(result);\n        return result;\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, errors_1.isAuthError)(error)) {\n          const result = {\n            data: null,\n            error\n          };\n          if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n            await this._removeSession();\n          }\n          (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n          return result;\n        }\n        (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n        throw error;\n      } finally {\n        this.refreshingDeferred = null;\n        this._debug(debugName, 'end');\n      }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n      const debugName = `#_notifyAllSubscribers(${event})`;\n      this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n      try {\n        if (this.broadcastChannel && broadcast) {\n          this.broadcastChannel.postMessage({\n            event,\n            session\n          });\n        }\n        const errors = [];\n        const promises = Array.from(this.stateChangeEmitters.values()).map(async x => {\n          try {\n            await x.callback(event, session);\n          } catch (e) {\n            errors.push(e);\n          }\n        });\n        await Promise.all(promises);\n        if (errors.length > 0) {\n          for (let i = 0; i < errors.length; i += 1) {\n            console.error(errors[i]);\n          }\n          throw errors[0];\n        }\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n      this._debug('#_saveSession()', session);\n      // _saveSession is always called whenever a new session has been acquired\n      // so we can safely suppress the warning returned by future getSession calls\n      this.suppressGetSessionWarning = true;\n      // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n      const sessionToProcess = Object.assign({}, session);\n      const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n      if (this.userStorage) {\n        if (!userIsProxy && sessionToProcess.user) {\n          // If it's a real user object, save it to userStorage.\n          await (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n            user: sessionToProcess.user\n          });\n        } else if (userIsProxy) {\n          // If it's the proxy, it means user was not found in userStorage.\n          // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n          // or simply not save the proxy. For now, we don't save the proxy here.\n          // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n        }\n        // Prepare the main session data for primary storage: remove the user property before cloning\n        // This is important because the original session.user might be the proxy\n        const mainSessionData = Object.assign({}, sessionToProcess);\n        delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n        const clonedMainSessionData = (0, helpers_1.deepClone)(mainSessionData);\n        await (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n      } else {\n        // No userStorage is configured.\n        // In this case, session.user should ideally not be a proxy.\n        // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n        const clonedSession = (0, helpers_1.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n        await (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n      }\n    }\n    async _removeSession() {\n      this._debug('#_removeSession()');\n      await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n      await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n      await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n      if (this.userStorage) {\n        await (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n      }\n      await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n      const callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n      try {\n        if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n      await this._stopAutoRefresh();\n      this._debug('#_startAutoRefresh()');\n      const ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n      this.autoRefreshTicker = ticker;\n      if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n        // ticker is a NodeJS Timeout object that has an `unref` method\n        // https://nodejs.org/api/timers.html#timeoutunref\n        // When auto refresh is used in NodeJS (like for testing) the\n        // `setInterval` is preventing the process from being marked as\n        // finished and tests run endlessly. This can be prevented by calling\n        // `unref()` on the returned object.\n        ticker.unref();\n        // @ts-expect-error TS has no context of Deno\n      } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n        // similar like for NodeJS, but with the Deno API\n        // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n        // @ts-expect-error TS has no context of Deno\n        Deno.unrefTimer(ticker);\n      }\n      // run the tick immediately, but in the next pass of the event loop so that\n      // #_initialize can be allowed to complete without recursively waiting on\n      // itself\n      setTimeout(async () => {\n        await this.initializePromise;\n        await this._autoRefreshTokenTick();\n      }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n      this._debug('#_stopAutoRefresh()');\n      const ticker = this.autoRefreshTicker;\n      this.autoRefreshTicker = null;\n      if (ticker) {\n        clearInterval(ticker);\n      }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n      this._debug('#_autoRefreshTokenTick()', 'begin');\n      try {\n        await this._acquireLock(0, async () => {\n          try {\n            const now = Date.now();\n            try {\n              return await this._useSession(async result => {\n                const {\n                  data: {\n                    session\n                  }\n                } = result;\n                if (!session || !session.refresh_token || !session.expires_at) {\n                  this._debug('#_autoRefreshTokenTick()', 'no session');\n                  return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                  await this._callRefreshToken(session.refresh_token);\n                }\n              });\n            } catch (e) {\n              console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n          } finally {\n            this._debug('#_autoRefreshTokenTick()', 'end');\n          }\n        });\n      } catch (e) {\n        if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n          this._debug('auto refresh token tick lock not available');\n        } else {\n          throw e;\n        }\n      }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n      this._debug('#_handleVisibilityChange()');\n      if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n        if (this.autoRefreshToken) {\n          // in non-browser environments the refresh token ticker runs always\n          this.startAutoRefresh();\n        }\n        return false;\n      }\n      try {\n        this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n        window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n        // now immediately call the visbility changed callback to setup with the\n        // current visbility state\n        await this._onVisibilityChanged(true); // initial call\n      } catch (error) {\n        console.error('_handleVisibilityChange', error);\n      }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n      const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n      this._debug(methodName, 'visibilityState', document.visibilityState);\n      if (document.visibilityState === 'visible') {\n        if (this.autoRefreshToken) {\n          // in browser environments the refresh token ticker runs only on focused tabs\n          // which prevents race conditions\n          this._startAutoRefresh();\n        }\n        if (!calledFromInitialize) {\n          // called when the visibility has changed, i.e. the browser\n          // transitioned from hidden -> visible so we need to see if the session\n          // should be recovered immediately... but to do that we need to acquire\n          // the lock first asynchronously\n          await this.initializePromise;\n          await this._acquireLock(-1, async () => {\n            if (document.visibilityState !== 'visible') {\n              this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n              // visibility has changed while waiting for the lock, abort\n              return;\n            }\n            // recover the session\n            await this._recoverAndRefresh();\n          });\n        }\n      } else if (document.visibilityState === 'hidden') {\n        if (this.autoRefreshToken) {\n          this._stopAutoRefresh();\n        }\n      }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n      const urlParams = [`provider=${encodeURIComponent(provider)}`];\n      if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n      }\n      if (options === null || options === void 0 ? void 0 : options.scopes) {\n        urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n      }\n      if (this.flowType === 'pkce') {\n        const [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        const flowParams = new URLSearchParams({\n          code_challenge: `${encodeURIComponent(codeChallenge)}`,\n          code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n        });\n        urlParams.push(flowParams.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.queryParams) {\n        const query = new URLSearchParams(options.queryParams);\n        urlParams.push(query.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n        urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n      }\n      return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _enroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          const body = Object.assign({\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType\n          }, params.factorType === 'phone' ? {\n            phone: params.phone\n          } : params.factorType === 'totp' ? {\n            issuer: params.issuer\n          } : {});\n          const {\n            data,\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors`, {\n            body,\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n          if (error) {\n            return {\n              data: null,\n              error\n            };\n          }\n          if (params.factorType === 'totp' && data.type === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n            data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n          }\n          return {\n            data,\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _verify(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const body = Object.assign({\n              challenge_id: params.challengeId\n            }, 'webauthn' in params ? {\n              webauthn: Object.assign(Object.assign({}, params.webauthn), {\n                credential_response: params.webauthn.type === 'create' ? (0, webauthn_1.serializeCredentialCreationResponse)(params.webauthn.credential_response) : (0, webauthn_1.serializeCredentialRequestResponse)(params.webauthn.credential_response)\n              })\n            } : {\n              code: params.code\n            });\n            const {\n              data,\n              error\n            } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n              body,\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (error) {\n              return {\n                data: null,\n                error\n              };\n            }\n            await this._saveSession(Object.assign({\n              expires_at: Math.round(Date.now() / 1000) + data.expires_in\n            }, data));\n            await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n            return {\n              data,\n              error\n            };\n          });\n        } catch (error) {\n          if ((0, errors_1.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    async _challenge(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const response = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n              body: params,\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (response.error) {\n              return response;\n            }\n            const {\n              data\n            } = response;\n            if (data.type !== 'webauthn') {\n              return {\n                data,\n                error: null\n              };\n            }\n            switch (data.webauthn.type) {\n              case 'create':\n                return {\n                  data: Object.assign(Object.assign({}, data), {\n                    webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                      credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                        publicKey: (0, webauthn_1.deserializeCredentialCreationOptions)(data.webauthn.credential_options.publicKey)\n                      })\n                    })\n                  }),\n                  error: null\n                };\n              case 'request':\n                return {\n                  data: Object.assign(Object.assign({}, data), {\n                    webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                      credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                        publicKey: (0, webauthn_1.deserializeCredentialRequestOptions)(data.webauthn.credential_options.publicKey)\n                      })\n                    })\n                  }),\n                  error: null\n                };\n            }\n          });\n        } catch (error) {\n          if ((0, errors_1.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n      // both _challenge and _verify independently acquire the lock, so no need\n      // to acquire it here\n      const {\n        data: challengeData,\n        error: challengeError\n      } = await this._challenge({\n        factorId: params.factorId\n      });\n      if (challengeError) {\n        return {\n          data: null,\n          error: challengeError\n        };\n      }\n      return await this._verify({\n        factorId: params.factorId,\n        challengeId: challengeData.id,\n        code: params.code\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n      var _a;\n      // use #getUser instead of #_getUser as the former acquires a lock\n      const {\n        data: {\n          user\n        },\n        error: userError\n      } = await this.getUser();\n      if (userError) {\n        return {\n          data: null,\n          error: userError\n        };\n      }\n      const data = {\n        all: [],\n        phone: [],\n        totp: [],\n        webauthn: []\n      };\n      // loop over the factors ONCE\n      for (const factor of (_a = user === null || user === void 0 ? void 0 : user.factors) !== null && _a !== void 0 ? _a : []) {\n        data.all.push(factor);\n        if (factor.status === 'verified') {\n          ;\n          data[factor.factor_type].push(factor);\n        }\n      }\n      return {\n        data,\n        error: null\n      };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n      return this._acquireLock(-1, async () => {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                currentLevel: null,\n                nextLevel: null,\n                currentAuthenticationMethods: []\n              },\n              error: null\n            };\n          }\n          const {\n            payload\n          } = (0, helpers_1.decodeJWT)(session.access_token);\n          let currentLevel = null;\n          if (payload.aal) {\n            currentLevel = payload.aal;\n          }\n          let nextLevel = currentLevel;\n          const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n          if (verifiedFactors.length > 0) {\n            nextLevel = 'aal2';\n          }\n          const currentAuthenticationMethods = payload.amr || [];\n          return {\n            data: {\n              currentLevel,\n              nextLevel,\n              currentAuthenticationMethods\n            },\n            error: null\n          };\n        });\n      });\n    }\n    async fetchJwk(kid, jwks = {\n      keys: []\n    }) {\n      // try fetching from the supplied jwks\n      let jwk = jwks.keys.find(key => key.kid === kid);\n      if (jwk) {\n        return jwk;\n      }\n      const now = Date.now();\n      // try fetching from cache\n      jwk = this.jwks.keys.find(key => key.kid === kid);\n      // jwk exists and jwks isn't stale\n      if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n        return jwk;\n      }\n      // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n      const {\n        data,\n        error\n      } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n        headers: this.headers\n      });\n      if (error) {\n        throw error;\n      }\n      if (!data.keys || data.keys.length === 0) {\n        return null;\n      }\n      this.jwks = data;\n      this.jwks_cached_at = now;\n      // Find the signing key\n      jwk = data.keys.find(key => key.kid === kid);\n      if (!jwk) {\n        return null;\n      }\n      return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n      try {\n        let token = jwt;\n        if (!token) {\n          const {\n            data,\n            error\n          } = await this.getSession();\n          if (error || !data.session) {\n            return {\n              data: null,\n              error\n            };\n          }\n          token = data.session.access_token;\n        }\n        const {\n          header,\n          payload,\n          signature,\n          raw: {\n            header: rawHeader,\n            payload: rawPayload\n          }\n        } = (0, helpers_1.decodeJWT)(token);\n        if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n          // Reject expired JWTs should only happen if jwt argument was passed\n          (0, helpers_1.validateExp)(payload.exp);\n        }\n        const signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n          keys: options.keys\n        } : options === null || options === void 0 ? void 0 : options.jwks);\n        // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n        if (!signingKey) {\n          const {\n            error\n          } = await this.getUser(token);\n          if (error) {\n            throw error;\n          }\n          // getUser succeeds so the claims in the JWT can be trusted\n          return {\n            data: {\n              claims: payload,\n              header,\n              signature\n            },\n            error: null\n          };\n        }\n        const algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n        // Convert JWK to CryptoKey\n        const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n        // Verify the signature\n        const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n        if (!isValid) {\n          throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n        }\n        // If verification succeeds, decode and return claims\n        return {\n          data: {\n            claims: payload,\n            header,\n            signature\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  GoTrueClient.nextInstanceID = 0;\n  exports.default = GoTrueClient;\n});","lineCount":3162,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0],[12,8,6,6,"GoTrueAdminApi_1"],[12,24,6,22],[12,27,6,25,"__importDefault"],[12,42,6,40],[12,43,6,41,"require"],[12,50,6,48],[12,51,6,48,"_dependencyMap"],[12,65,6,48],[12,88,6,67],[12,89,6,68],[12,90,6,69],[13,2,7,0],[13,8,7,6,"constants_1"],[13,19,7,17],[13,22,7,20,"require"],[13,29,7,27],[13,30,7,27,"_dependencyMap"],[13,44,7,27],[13,66,7,45],[13,67,7,46],[14,2,8,0],[14,8,8,6,"errors_1"],[14,16,8,14],[14,19,8,17,"require"],[14,26,8,24],[14,27,8,24,"_dependencyMap"],[14,41,8,24],[14,60,8,39],[14,61,8,40],[15,2,9,0],[15,8,9,6,"fetch_1"],[15,15,9,13],[15,18,9,16,"require"],[15,25,9,23],[15,26,9,23,"_dependencyMap"],[15,40,9,23],[15,58,9,37],[15,59,9,38],[16,2,10,0],[16,8,10,6,"helpers_1"],[16,17,10,15],[16,20,10,18,"require"],[16,27,10,25],[16,28,10,25,"_dependencyMap"],[16,42,10,25],[16,62,10,41],[16,63,10,42],[17,2,11,0],[17,8,11,6,"local_storage_1"],[17,23,11,21],[17,26,11,24,"require"],[17,33,11,31],[17,34,11,31,"_dependencyMap"],[17,48,11,31],[17,74,11,53],[17,75,11,54],[18,2,12,0],[18,8,12,6,"locks_1"],[18,15,12,13],[18,18,12,16,"require"],[18,25,12,23],[18,26,12,23,"_dependencyMap"],[18,40,12,23],[18,58,12,37],[18,59,12,38],[19,2,13,0],[19,8,13,6,"polyfills_1"],[19,19,13,17],[19,22,13,20,"require"],[19,29,13,27],[19,30,13,27,"_dependencyMap"],[19,44,13,27],[19,66,13,45],[19,67,13,46],[20,2,14,0],[20,8,14,6,"version_1"],[20,17,14,15],[20,20,14,18,"require"],[20,27,14,25],[20,28,14,25,"_dependencyMap"],[20,42,14,25],[20,62,14,41],[20,63,14,42],[21,2,15,0],[21,8,15,6,"base64url_1"],[21,19,15,17],[21,22,15,20,"require"],[21,29,15,27],[21,30,15,27,"_dependencyMap"],[21,44,15,27],[21,66,15,45],[21,67,15,46],[22,2,16,0],[22,8,16,6,"ethereum_1"],[22,18,16,16],[22,21,16,19,"require"],[22,28,16,26],[22,29,16,26,"_dependencyMap"],[22,43,16,26],[22,70,16,48],[22,71,16,49],[23,2,17,0],[23,8,17,6,"webauthn_1"],[23,18,17,16],[23,21,17,19,"require"],[23,28,17,26],[23,29,17,26,"_dependencyMap"],[23,43,17,26],[23,65,17,43],[23,66,17,44],[24,2,18,0],[24,3,18,1],[24,4,18,2],[24,6,18,4,"polyfills_1"],[24,17,18,15],[24,18,18,16,"polyfillGlobalThis"],[24,36,18,34],[24,38,18,36],[24,39,18,37],[24,40,18,38],[24,41,18,39],[25,2,19,0],[25,8,19,6,"DEFAULT_OPTIONS"],[25,23,19,21],[25,26,19,24],[26,4,20,4,"url"],[26,7,20,7],[26,9,20,9,"constants_1"],[26,20,20,20],[26,21,20,21,"GOTRUE_URL"],[26,31,20,31],[27,4,21,4,"storageKey"],[27,14,21,14],[27,16,21,16,"constants_1"],[27,27,21,27],[27,28,21,28,"STORAGE_KEY"],[27,39,21,39],[28,4,22,4,"autoRefreshToken"],[28,20,22,20],[28,22,22,22],[28,26,22,26],[29,4,23,4,"persistSession"],[29,18,23,18],[29,20,23,20],[29,24,23,24],[30,4,24,4,"detectSessionInUrl"],[30,22,24,22],[30,24,24,24],[30,28,24,28],[31,4,25,4,"headers"],[31,11,25,11],[31,13,25,13,"constants_1"],[31,24,25,24],[31,25,25,25,"DEFAULT_HEADERS"],[31,40,25,40],[32,4,26,4,"flowType"],[32,12,26,12],[32,14,26,14],[32,24,26,24],[33,4,27,4,"debug"],[33,9,27,9],[33,11,27,11],[33,16,27,16],[34,4,28,4,"hasCustomAuthorizationHeader"],[34,32,28,32],[34,34,28,34],[35,2,29,0],[35,3,29,1],[36,2,30,0],[36,17,30,15,"lockNoOp"],[36,25,30,23,"lockNoOp"],[36,26,30,24,"name"],[36,30,30,28],[36,32,30,30,"acquireTimeout"],[36,46,30,44],[36,48,30,46,"fn"],[36,50,30,48],[36,52,30,50],[37,4,31,4],[37,11,31,11],[37,17,31,17,"fn"],[37,19,31,19],[37,20,31,20],[37,21,31,21],[38,2,32,0],[39,2,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,0,39,0],[46,0,40,0],[47,2,41,0],[47,8,41,6,"GLOBAL_JWKS"],[47,19,41,17],[47,22,41,20],[47,23,41,21],[47,24,41,22],[48,2,42,0],[48,8,42,6,"GoTrueClient"],[48,20,42,18],[48,21,42,19],[49,4,43,4],[50,0,44,0],[51,0,45,0],[52,4,46,4],[52,8,46,8,"jwks"],[52,12,46,12,"jwks"],[52,13,46,12],[52,15,46,15],[53,6,47,8],[53,10,47,12,"_a"],[53,12,47,14],[53,14,47,16,"_b"],[53,16,47,18],[54,6,48,8],[54,13,48,15],[54,14,48,16,"_b"],[54,16,48,18],[54,19,48,21],[54,20,48,22,"_a"],[54,22,48,24],[54,25,48,27,"GLOBAL_JWKS"],[54,36,48,38],[54,37,48,39],[54,41,48,43],[54,42,48,44,"storageKey"],[54,52,48,54],[54,53,48,55],[54,59,48,61],[54,63,48,65],[54,67,48,69,"_a"],[54,69,48,71],[54,74,48,76],[54,79,48,81],[54,80,48,82],[54,83,48,85],[54,88,48,90],[54,89,48,91],[54,92,48,94,"_a"],[54,94,48,96],[54,95,48,97,"jwks"],[54,99,48,101],[54,105,48,107],[54,109,48,111],[54,113,48,115,"_b"],[54,115,48,117],[54,120,48,122],[54,125,48,127],[54,126,48,128],[54,129,48,131,"_b"],[54,131,48,133],[54,134,48,136],[55,8,48,138,"keys"],[55,12,48,142],[55,14,48,144],[56,6,48,147],[56,7,48,148],[57,4,49,4],[58,4,50,4],[58,8,50,8,"jwks"],[58,12,50,12,"jwks"],[58,13,50,13,"value"],[58,18,50,18],[58,20,50,20],[59,6,51,8,"GLOBAL_JWKS"],[59,17,51,19],[59,18,51,20],[59,22,51,24],[59,23,51,25,"storageKey"],[59,33,51,35],[59,34,51,36],[59,37,51,39,"Object"],[59,43,51,45],[59,44,51,46,"assign"],[59,50,51,52],[59,51,51,53,"Object"],[59,57,51,59],[59,58,51,60,"assign"],[59,64,51,66],[59,65,51,67],[59,66,51,68],[59,67,51,69],[59,69,51,71,"GLOBAL_JWKS"],[59,80,51,82],[59,81,51,83],[59,85,51,87],[59,86,51,88,"storageKey"],[59,96,51,98],[59,97,51,99],[59,98,51,100],[59,100,51,102],[60,8,51,104,"jwks"],[60,12,51,108],[60,14,51,110,"value"],[61,6,51,116],[61,7,51,117],[61,8,51,118],[62,4,52,4],[63,4,53,4],[63,8,53,8,"jwks_cached_at"],[63,22,53,22,"jwks_cached_at"],[63,23,53,22],[63,25,53,25],[64,6,54,8],[64,10,54,12,"_a"],[64,12,54,14],[64,14,54,16,"_b"],[64,16,54,18],[65,6,55,8],[65,13,55,15],[65,14,55,16,"_b"],[65,16,55,18],[65,19,55,21],[65,20,55,22,"_a"],[65,22,55,24],[65,25,55,27,"GLOBAL_JWKS"],[65,36,55,38],[65,37,55,39],[65,41,55,43],[65,42,55,44,"storageKey"],[65,52,55,54],[65,53,55,55],[65,59,55,61],[65,63,55,65],[65,67,55,69,"_a"],[65,69,55,71],[65,74,55,76],[65,79,55,81],[65,80,55,82],[65,83,55,85],[65,88,55,90],[65,89,55,91],[65,92,55,94,"_a"],[65,94,55,96],[65,95,55,97,"cachedAt"],[65,103,55,105],[65,109,55,111],[65,113,55,115],[65,117,55,119,"_b"],[65,119,55,121],[65,124,55,126],[65,129,55,131],[65,130,55,132],[65,133,55,135,"_b"],[65,135,55,137],[65,138,55,140,"Number"],[65,144,55,146],[65,145,55,147,"MIN_SAFE_INTEGER"],[65,161,55,163],[66,4,56,4],[67,4,57,4],[67,8,57,8,"jwks_cached_at"],[67,22,57,22,"jwks_cached_at"],[67,23,57,23,"value"],[67,28,57,28],[67,30,57,30],[68,6,58,8,"GLOBAL_JWKS"],[68,17,58,19],[68,18,58,20],[68,22,58,24],[68,23,58,25,"storageKey"],[68,33,58,35],[68,34,58,36],[68,37,58,39,"Object"],[68,43,58,45],[68,44,58,46,"assign"],[68,50,58,52],[68,51,58,53,"Object"],[68,57,58,59],[68,58,58,60,"assign"],[68,64,58,66],[68,65,58,67],[68,66,58,68],[68,67,58,69],[68,69,58,71,"GLOBAL_JWKS"],[68,80,58,82],[68,81,58,83],[68,85,58,87],[68,86,58,88,"storageKey"],[68,96,58,98],[68,97,58,99],[68,98,58,100],[68,100,58,102],[69,8,58,104,"cachedAt"],[69,16,58,112],[69,18,58,114,"value"],[70,6,58,120],[70,7,58,121],[70,8,58,122],[71,4,59,4],[72,4,60,4],[73,0,61,0],[74,0,62,0],[75,4,63,4,"constructor"],[75,15,63,15,"constructor"],[75,16,63,16,"options"],[75,23,63,23],[75,25,63,25],[76,6,64,8],[76,10,64,12,"_a"],[76,12,64,14],[76,14,64,16,"_b"],[76,16,64,18],[77,6,65,8],[78,0,66,0],[79,0,67,0],[80,6,68,8],[80,10,68,12],[80,11,68,13,"userStorage"],[80,22,68,24],[80,25,68,27],[80,29,68,31],[81,6,69,8],[81,10,69,12],[81,11,69,13,"memoryStorage"],[81,24,69,26],[81,27,69,29],[81,31,69,33],[82,6,70,8],[82,10,70,12],[82,11,70,13,"stateChangeEmitters"],[82,30,70,32],[82,33,70,35],[82,37,70,39,"Map"],[82,40,70,42],[82,41,70,43],[82,42,70,44],[83,6,71,8],[83,10,71,12],[83,11,71,13,"autoRefreshTicker"],[83,28,71,30],[83,31,71,33],[83,35,71,37],[84,6,72,8],[84,10,72,12],[84,11,72,13,"visibilityChangedCallback"],[84,36,72,38],[84,39,72,41],[84,43,72,45],[85,6,73,8],[85,10,73,12],[85,11,73,13,"refreshingDeferred"],[85,29,73,31],[85,32,73,34],[85,36,73,38],[86,6,74,8],[87,0,75,0],[88,0,76,0],[89,0,77,0],[90,0,78,0],[91,0,79,0],[92,6,80,8],[92,10,80,12],[92,11,80,13,"initializePromise"],[92,28,80,30],[92,31,80,33],[92,35,80,37],[93,6,81,8],[93,10,81,12],[93,11,81,13,"detectSessionInUrl"],[93,29,81,31],[93,32,81,34],[93,36,81,38],[94,6,82,8],[94,10,82,12],[94,11,82,13,"hasCustomAuthorizationHeader"],[94,39,82,41],[94,42,82,44],[94,47,82,49],[95,6,83,8],[95,10,83,12],[95,11,83,13,"suppressGetSessionWarning"],[95,36,83,38],[95,39,83,41],[95,44,83,46],[96,6,84,8],[96,10,84,12],[96,11,84,13,"lockAcquired"],[96,23,84,25],[96,26,84,28],[96,31,84,33],[97,6,85,8],[97,10,85,12],[97,11,85,13,"pendingInLock"],[97,24,85,26],[97,27,85,29],[97,29,85,31],[98,6,86,8],[99,0,87,0],[100,0,88,0],[101,6,89,8],[101,10,89,12],[101,11,89,13,"broadcastChannel"],[101,27,89,29],[101,30,89,32],[101,34,89,36],[102,6,90,8],[102,10,90,12],[102,11,90,13,"logger"],[102,17,90,19],[102,20,90,22,"console"],[102,27,90,29],[102,28,90,30,"log"],[102,31,90,33],[103,6,91,8],[103,10,91,12],[103,11,91,13,"instanceID"],[103,21,91,23],[103,24,91,26,"GoTrueClient"],[103,36,91,38],[103,37,91,39,"nextInstanceID"],[103,51,91,53],[104,6,92,8,"GoTrueClient"],[104,18,92,20],[104,19,92,21,"nextInstanceID"],[104,33,92,35],[104,37,92,39],[104,38,92,40],[105,6,93,8],[105,10,93,12],[105,14,93,16],[105,15,93,17,"instanceID"],[105,25,93,27],[105,28,93,30],[105,29,93,31],[105,33,93,35],[105,34,93,36],[105,35,93,37],[105,37,93,39,"helpers_1"],[105,46,93,48],[105,47,93,49,"isBrowser"],[105,56,93,58],[105,58,93,60],[105,59,93,61],[105,61,93,63],[106,8,94,12,"console"],[106,15,94,19],[106,16,94,20,"warn"],[106,20,94,24],[106,21,94,25],[106,227,94,231],[106,228,94,232],[107,6,95,8],[108,6,96,8],[108,12,96,14,"settings"],[108,20,96,22],[108,23,96,25,"Object"],[108,29,96,31],[108,30,96,32,"assign"],[108,36,96,38],[108,37,96,39,"Object"],[108,43,96,45],[108,44,96,46,"assign"],[108,50,96,52],[108,51,96,53],[108,52,96,54],[108,53,96,55],[108,55,96,57,"DEFAULT_OPTIONS"],[108,70,96,72],[108,71,96,73],[108,73,96,75,"options"],[108,80,96,82],[108,81,96,83],[109,6,97,8],[109,10,97,12],[109,11,97,13,"logDebugMessages"],[109,27,97,29],[109,30,97,32],[109,31,97,33],[109,32,97,34,"settings"],[109,40,97,42],[109,41,97,43,"debug"],[109,46,97,48],[110,6,98,8],[110,10,98,12],[110,17,98,19,"settings"],[110,25,98,27],[110,26,98,28,"debug"],[110,31,98,33],[110,36,98,38],[110,46,98,48],[110,48,98,50],[111,8,99,12],[111,12,99,16],[111,13,99,17,"logger"],[111,19,99,23],[111,22,99,26,"settings"],[111,30,99,34],[111,31,99,35,"debug"],[111,36,99,40],[112,6,100,8],[113,6,101,8],[113,10,101,12],[113,11,101,13,"persistSession"],[113,25,101,27],[113,28,101,30,"settings"],[113,36,101,38],[113,37,101,39,"persistSession"],[113,51,101,53],[114,6,102,8],[114,10,102,12],[114,11,102,13,"storageKey"],[114,21,102,23],[114,24,102,26,"settings"],[114,32,102,34],[114,33,102,35,"storageKey"],[114,43,102,45],[115,6,103,8],[115,10,103,12],[115,11,103,13,"autoRefreshToken"],[115,27,103,29],[115,30,103,32,"settings"],[115,38,103,40],[115,39,103,41,"autoRefreshToken"],[115,55,103,57],[116,6,104,8],[116,10,104,12],[116,11,104,13,"admin"],[116,16,104,18],[116,19,104,21],[116,23,104,25,"GoTrueAdminApi_1"],[116,39,104,41],[116,40,104,42,"default"],[116,47,104,49],[116,48,104,50],[117,8,105,12,"url"],[117,11,105,15],[117,13,105,17,"settings"],[117,21,105,25],[117,22,105,26,"url"],[117,25,105,29],[118,8,106,12,"headers"],[118,15,106,19],[118,17,106,21,"settings"],[118,25,106,29],[118,26,106,30,"headers"],[118,33,106,37],[119,8,107,12,"fetch"],[119,13,107,17],[119,15,107,19,"settings"],[119,23,107,27],[119,24,107,28,"fetch"],[120,6,108,8],[120,7,108,9],[120,8,108,10],[121,6,109,8],[121,10,109,12],[121,11,109,13,"url"],[121,14,109,16],[121,17,109,19,"settings"],[121,25,109,27],[121,26,109,28,"url"],[121,29,109,31],[122,6,110,8],[122,10,110,12],[122,11,110,13,"headers"],[122,18,110,20],[122,21,110,23,"settings"],[122,29,110,31],[122,30,110,32,"headers"],[122,37,110,39],[123,6,111,8],[123,10,111,12],[123,11,111,13,"fetch"],[123,16,111,18],[123,19,111,21],[123,20,111,22],[123,21,111,23],[123,23,111,25,"helpers_1"],[123,32,111,34],[123,33,111,35,"resolveFetch"],[123,45,111,47],[123,47,111,49,"settings"],[123,55,111,57],[123,56,111,58,"fetch"],[123,61,111,63],[123,62,111,64],[124,6,112,8],[124,10,112,12],[124,11,112,13,"lock"],[124,15,112,17],[124,18,112,20,"settings"],[124,26,112,28],[124,27,112,29,"lock"],[124,31,112,33],[124,35,112,37,"lockNoOp"],[124,43,112,45],[125,6,113,8],[125,10,113,12],[125,11,113,13,"detectSessionInUrl"],[125,29,113,31],[125,32,113,34,"settings"],[125,40,113,42],[125,41,113,43,"detectSessionInUrl"],[125,59,113,61],[126,6,114,8],[126,10,114,12],[126,11,114,13,"flowType"],[126,19,114,21],[126,22,114,24,"settings"],[126,30,114,32],[126,31,114,33,"flowType"],[126,39,114,41],[127,6,115,8],[127,10,115,12],[127,11,115,13,"hasCustomAuthorizationHeader"],[127,39,115,41],[127,42,115,44,"settings"],[127,50,115,52],[127,51,115,53,"hasCustomAuthorizationHeader"],[127,79,115,81],[128,6,116,8],[128,10,116,12,"settings"],[128,18,116,20],[128,19,116,21,"lock"],[128,23,116,25],[128,25,116,27],[129,8,117,12],[129,12,117,16],[129,13,117,17,"lock"],[129,17,117,21],[129,20,117,24,"settings"],[129,28,117,32],[129,29,117,33,"lock"],[129,33,117,37],[130,6,118,8],[130,7,118,9],[130,13,119,13],[130,17,119,17],[130,18,119,18],[130,19,119,19],[130,21,119,21,"helpers_1"],[130,30,119,30],[130,31,119,31,"isBrowser"],[130,40,119,40],[130,42,119,42],[130,43,119,43],[130,48,119,48],[130,49,119,49,"_a"],[130,51,119,51],[130,54,119,54,"globalThis"],[130,64,119,64],[130,69,119,69],[130,73,119,73],[130,77,119,77,"globalThis"],[130,87,119,87],[130,92,119,92],[130,97,119,97],[130,98,119,98],[130,101,119,101],[130,106,119,106],[130,107,119,107],[130,110,119,110,"globalThis"],[130,120,119,120],[130,121,119,121,"navigator"],[130,130,119,130],[130,136,119,136],[130,140,119,140],[130,144,119,144,"_a"],[130,146,119,146],[130,151,119,151],[130,156,119,156],[130,157,119,157],[130,160,119,160],[130,165,119,165],[130,166,119,166],[130,169,119,169,"_a"],[130,171,119,171],[130,172,119,172,"locks"],[130,177,119,177],[130,178,119,178],[130,180,119,180],[131,8,120,12],[131,12,120,16],[131,13,120,17,"lock"],[131,17,120,21],[131,20,120,24,"locks_1"],[131,27,120,31],[131,28,120,32,"navigatorLock"],[131,41,120,45],[132,6,121,8],[132,7,121,9],[132,13,122,13],[133,8,123,12],[133,12,123,16],[133,13,123,17,"lock"],[133,17,123,21],[133,20,123,24,"lockNoOp"],[133,28,123,32],[134,6,124,8],[135,6,125,8],[135,10,125,12],[135,11,125,13],[135,15,125,17],[135,16,125,18,"jwks"],[135,20,125,22],[135,22,125,24],[136,8,126,12],[136,12,126,16],[136,13,126,17,"jwks"],[136,17,126,21],[136,20,126,24],[137,10,126,26,"keys"],[137,14,126,30],[137,16,126,32],[138,8,126,35],[138,9,126,36],[139,8,127,12],[139,12,127,16],[139,13,127,17,"jwks_cached_at"],[139,27,127,31],[139,30,127,34,"Number"],[139,36,127,40],[139,37,127,41,"MIN_SAFE_INTEGER"],[139,53,127,57],[140,6,128,8],[141,6,129,8],[141,10,129,12],[141,11,129,13,"mfa"],[141,14,129,16],[141,17,129,19],[142,8,130,12,"verify"],[142,14,130,18],[142,16,130,20],[142,20,130,24],[142,21,130,25,"_verify"],[142,28,130,32],[142,29,130,33,"bind"],[142,33,130,37],[142,34,130,38],[142,38,130,42],[142,39,130,43],[143,8,131,12,"enroll"],[143,14,131,18],[143,16,131,20],[143,20,131,24],[143,21,131,25,"_enroll"],[143,28,131,32],[143,29,131,33,"bind"],[143,33,131,37],[143,34,131,38],[143,38,131,42],[143,39,131,43],[144,8,132,12,"unenroll"],[144,16,132,20],[144,18,132,22],[144,22,132,26],[144,23,132,27,"_unenroll"],[144,32,132,36],[144,33,132,37,"bind"],[144,37,132,41],[144,38,132,42],[144,42,132,46],[144,43,132,47],[145,8,133,12,"challenge"],[145,17,133,21],[145,19,133,23],[145,23,133,27],[145,24,133,28,"_challenge"],[145,34,133,38],[145,35,133,39,"bind"],[145,39,133,43],[145,40,133,44],[145,44,133,48],[145,45,133,49],[146,8,134,12,"listFactors"],[146,19,134,23],[146,21,134,25],[146,25,134,29],[146,26,134,30,"_listFactors"],[146,38,134,42],[146,39,134,43,"bind"],[146,43,134,47],[146,44,134,48],[146,48,134,52],[146,49,134,53],[147,8,135,12,"challengeAndVerify"],[147,26,135,30],[147,28,135,32],[147,32,135,36],[147,33,135,37,"_challengeAndVerify"],[147,52,135,56],[147,53,135,57,"bind"],[147,57,135,61],[147,58,135,62],[147,62,135,66],[147,63,135,67],[148,8,136,12,"getAuthenticatorAssuranceLevel"],[148,38,136,42],[148,40,136,44],[148,44,136,48],[148,45,136,49,"_getAuthenticatorAssuranceLevel"],[148,76,136,80],[148,77,136,81,"bind"],[148,81,136,85],[148,82,136,86],[148,86,136,90],[148,87,136,91],[149,8,137,12,"webauthn"],[149,16,137,20],[149,18,137,22],[149,22,137,26,"webauthn_1"],[149,32,137,36],[149,33,137,37,"WebAuthnApi"],[149,44,137,48],[149,45,137,49],[149,49,137,53],[150,6,138,8],[150,7,138,9],[151,6,139,8],[151,10,139,12],[151,14,139,16],[151,15,139,17,"persistSession"],[151,29,139,31],[151,31,139,33],[152,8,140,12],[152,12,140,16,"settings"],[152,20,140,24],[152,21,140,25,"storage"],[152,28,140,32],[152,30,140,34],[153,10,141,16],[153,14,141,20],[153,15,141,21,"storage"],[153,22,141,28],[153,25,141,31,"settings"],[153,33,141,39],[153,34,141,40,"storage"],[153,41,141,47],[154,8,142,12],[154,9,142,13],[154,15,143,17],[155,10,144,16],[155,14,144,20],[155,15,144,21],[155,16,144,22],[155,18,144,24,"helpers_1"],[155,27,144,33],[155,28,144,34,"supportsLocalStorage"],[155,48,144,54],[155,50,144,56],[155,51,144,57],[155,53,144,59],[156,12,145,20],[156,16,145,24],[156,17,145,25,"storage"],[156,24,145,32],[156,27,145,35,"globalThis"],[156,37,145,45],[156,38,145,46,"localStorage"],[156,50,145,58],[157,10,146,16],[157,11,146,17],[157,17,147,21],[158,12,148,20],[158,16,148,24],[158,17,148,25,"memoryStorage"],[158,30,148,38],[158,33,148,41],[158,34,148,42],[158,35,148,43],[159,12,149,20],[159,16,149,24],[159,17,149,25,"storage"],[159,24,149,32],[159,27,149,35],[159,28,149,36],[159,29,149,37],[159,31,149,39,"local_storage_1"],[159,46,149,54],[159,47,149,55,"memoryLocalStorageAdapter"],[159,72,149,80],[159,74,149,82],[159,78,149,86],[159,79,149,87,"memoryStorage"],[159,92,149,100],[159,93,149,101],[160,10,150,16],[161,8,151,12],[162,8,152,12],[162,12,152,16,"settings"],[162,20,152,24],[162,21,152,25,"userStorage"],[162,32,152,36],[162,34,152,38],[163,10,153,16],[163,14,153,20],[163,15,153,21,"userStorage"],[163,26,153,32],[163,29,153,35,"settings"],[163,37,153,43],[163,38,153,44,"userStorage"],[163,49,153,55],[164,8,154,12],[165,6,155,8],[165,7,155,9],[165,13,156,13],[166,8,157,12],[166,12,157,16],[166,13,157,17,"memoryStorage"],[166,26,157,30],[166,29,157,33],[166,30,157,34],[166,31,157,35],[167,8,158,12],[167,12,158,16],[167,13,158,17,"storage"],[167,20,158,24],[167,23,158,27],[167,24,158,28],[167,25,158,29],[167,27,158,31,"local_storage_1"],[167,42,158,46],[167,43,158,47,"memoryLocalStorageAdapter"],[167,68,158,72],[167,70,158,74],[167,74,158,78],[167,75,158,79,"memoryStorage"],[167,88,158,92],[167,89,158,93],[168,6,159,8],[169,6,160,8],[169,10,160,12],[169,11,160,13],[169,12,160,14],[169,14,160,16,"helpers_1"],[169,23,160,25],[169,24,160,26,"isBrowser"],[169,33,160,35],[169,35,160,37],[169,36,160,38],[169,40,160,42,"globalThis"],[169,50,160,52],[169,51,160,53,"BroadcastChannel"],[169,67,160,69],[169,71,160,73],[169,75,160,77],[169,76,160,78,"persistSession"],[169,90,160,92],[169,94,160,96],[169,98,160,100],[169,99,160,101,"storageKey"],[169,109,160,111],[169,111,160,113],[170,8,161,12],[170,12,161,16],[171,10,162,16],[171,14,162,20],[171,15,162,21,"broadcastChannel"],[171,31,162,37],[171,34,162,40],[171,38,162,44,"globalThis"],[171,48,162,54],[171,49,162,55,"BroadcastChannel"],[171,65,162,71],[171,66,162,72],[171,70,162,76],[171,71,162,77,"storageKey"],[171,81,162,87],[171,82,162,88],[172,8,163,12],[172,9,163,13],[172,10,164,12],[172,17,164,19,"e"],[172,18,164,20],[172,20,164,22],[173,10,165,16,"console"],[173,17,165,23],[173,18,165,24,"error"],[173,23,165,29],[173,24,165,30],[173,112,165,118],[173,114,165,120,"e"],[173,115,165,121],[173,116,165,122],[174,8,166,12],[175,8,167,12],[175,9,167,13,"_b"],[175,11,167,15],[175,14,167,18],[175,18,167,22],[175,19,167,23,"broadcastChannel"],[175,35,167,39],[175,41,167,45],[175,45,167,49],[175,49,167,53,"_b"],[175,51,167,55],[175,56,167,60],[175,61,167,65],[175,62,167,66],[175,65,167,69],[175,70,167,74],[175,71,167,75],[175,74,167,78,"_b"],[175,76,167,80],[175,77,167,81,"addEventListener"],[175,93,167,97],[175,94,167,98],[175,103,167,107],[175,105,167,109],[175,111,167,116,"event"],[175,116,167,121],[175,120,167,126],[176,10,168,16],[176,14,168,20],[176,15,168,21,"_debug"],[176,21,168,27],[176,22,168,28],[176,80,168,86],[176,82,168,88,"event"],[176,87,168,93],[176,88,168,94],[177,10,169,16],[177,16,169,22],[177,20,169,26],[177,21,169,27,"_notifyAllSubscribers"],[177,42,169,48],[177,43,169,49,"event"],[177,48,169,54],[177,49,169,55,"data"],[177,53,169,59],[177,54,169,60,"event"],[177,59,169,65],[177,61,169,67,"event"],[177,66,169,72],[177,67,169,73,"data"],[177,71,169,77],[177,72,169,78,"session"],[177,79,169,85],[177,81,169,87],[177,86,169,92],[177,87,169,93],[177,88,169,94],[177,89,169,95],[178,8,170,12],[178,9,170,13],[178,10,170,14],[179,6,171,8],[180,6,172,8],[180,10,172,12],[180,11,172,13,"initialize"],[180,21,172,23],[180,22,172,24],[180,23,172,25],[181,4,173,4],[182,4,174,4,"_debug"],[182,10,174,10,"_debug"],[182,11,174,11],[182,14,174,14,"args"],[182,18,174,18],[182,20,174,20],[183,6,175,8],[183,10,175,12],[183,14,175,16],[183,15,175,17,"logDebugMessages"],[183,31,175,33],[183,33,175,35],[184,8,176,12],[184,12,176,16],[184,13,176,17,"logger"],[184,19,176,23],[184,20,176,24],[184,36,176,40],[184,40,176,44],[184,41,176,45,"instanceID"],[184,51,176,55],[184,56,176,60,"version_1"],[184,65,176,69],[184,66,176,70,"version"],[184,73,176,77],[184,78,176,82],[184,82,176,86,"Date"],[184,86,176,90],[184,87,176,91],[184,88,176,92],[184,89,176,93,"toISOString"],[184,100,176,104],[184,101,176,105],[184,102,176,106],[184,104,176,108],[184,106,176,110],[184,109,176,113,"args"],[184,113,176,117],[184,114,176,118],[185,6,177,8],[186,6,178,8],[186,13,178,15],[186,17,178,19],[187,4,179,4],[188,4,180,4],[189,0,181,0],[190,0,182,0],[191,0,183,0],[192,0,184,0],[193,4,185,4],[193,10,185,10,"initialize"],[193,20,185,20,"initialize"],[193,21,185,20],[193,23,185,23],[194,6,186,8],[194,10,186,12],[194,14,186,16],[194,15,186,17,"initializePromise"],[194,32,186,34],[194,34,186,36],[195,8,187,12],[195,15,187,19],[195,21,187,25],[195,25,187,29],[195,26,187,30,"initializePromise"],[195,43,187,47],[196,6,188,8],[197,6,189,8],[197,10,189,12],[197,11,189,13,"initializePromise"],[197,28,189,30],[197,31,189,33],[197,32,189,34],[197,44,189,46],[198,8,190,12],[198,15,190,19],[198,21,190,25],[198,25,190,29],[198,26,190,30,"_acquireLock"],[198,38,190,42],[198,39,190,43],[198,40,190,44],[198,41,190,45],[198,43,190,47],[198,55,190,59],[199,10,191,16],[199,17,191,23],[199,23,191,29],[199,27,191,33],[199,28,191,34,"_initialize"],[199,39,191,45],[199,40,191,46],[199,41,191,47],[200,8,192,12],[200,9,192,13],[200,10,192,14],[201,6,193,8],[201,7,193,9],[201,9,193,11],[201,10,193,12],[202,6,194,8],[202,13,194,15],[202,19,194,21],[202,23,194,25],[202,24,194,26,"initializePromise"],[202,41,194,43],[203,4,195,4],[204,4,196,4],[205,0,197,0],[206,0,198,0],[207,0,199,0],[208,0,200,0],[209,0,201,0],[210,4,202,4],[210,10,202,10,"_initialize"],[210,21,202,21,"_initialize"],[210,22,202,21],[210,24,202,24],[211,6,203,8],[211,10,203,12,"_a"],[211,12,203,14],[212,6,204,8],[212,10,204,12],[213,8,205,12],[213,14,205,18,"params"],[213,20,205,24],[213,23,205,27],[213,24,205,28],[213,25,205,29],[213,27,205,31,"helpers_1"],[213,36,205,40],[213,37,205,41,"parseParametersFromURL"],[213,59,205,63],[213,61,205,65,"window"],[213,67,205,71],[213,68,205,72,"location"],[213,76,205,80],[213,77,205,81,"href"],[213,81,205,85],[213,82,205,86],[214,8,206,12],[214,12,206,16,"callbackUrlType"],[214,27,206,31],[214,30,206,34],[214,36,206,40],[215,8,207,12],[215,12,207,16],[215,16,207,20],[215,17,207,21,"_isImplicitGrantCallback"],[215,41,207,45],[215,42,207,46,"params"],[215,48,207,52],[215,49,207,53],[215,51,207,55],[216,10,208,16,"callbackUrlType"],[216,25,208,31],[216,28,208,34],[216,38,208,44],[217,8,209,12],[217,9,209,13],[217,15,210,17],[217,19,210,21],[217,25,210,27],[217,29,210,31],[217,30,210,32,"_isPKCECallback"],[217,45,210,47],[217,46,210,48,"params"],[217,52,210,54],[217,53,210,55],[217,55,210,57],[218,10,211,16,"callbackUrlType"],[218,25,211,31],[218,28,211,34],[218,34,211,40],[219,8,212,12],[220,8,213,12],[221,0,214,0],[222,0,215,0],[223,0,216,0],[224,0,217,0],[225,0,218,0],[226,8,219,12],[226,12,219,16],[226,13,219,17],[226,14,219,18],[226,16,219,20,"helpers_1"],[226,25,219,29],[226,26,219,30,"isBrowser"],[226,35,219,39],[226,37,219,41],[226,38,219,42],[226,42,219,46],[226,46,219,50],[226,47,219,51,"detectSessionInUrl"],[226,65,219,69],[226,69,219,73,"callbackUrlType"],[226,84,219,88],[226,89,219,93],[226,95,219,99],[226,97,219,101],[227,10,220,16],[227,16,220,22],[228,12,220,24,"data"],[228,16,220,28],[229,12,220,30,"error"],[230,10,220,36],[230,11,220,37],[230,14,220,40],[230,20,220,46],[230,24,220,50],[230,25,220,51,"_getSessionFromURL"],[230,43,220,69],[230,44,220,70,"params"],[230,50,220,76],[230,52,220,78,"callbackUrlType"],[230,67,220,93],[230,68,220,94],[231,10,221,16],[231,14,221,20,"error"],[231,19,221,25],[231,21,221,27],[232,12,222,20],[232,16,222,24],[232,17,222,25,"_debug"],[232,23,222,31],[232,24,222,32],[232,40,222,48],[232,42,222,50],[232,76,222,84],[232,78,222,86,"error"],[232,83,222,91],[232,84,222,92],[233,12,223,20],[233,16,223,24],[233,17,223,25],[233,18,223,26],[233,20,223,28,"errors_1"],[233,28,223,36],[233,29,223,37,"isAuthImplicitGrantRedirectError"],[233,61,223,69],[233,63,223,71,"error"],[233,68,223,76],[233,69,223,77],[233,71,223,79],[234,14,224,24],[234,20,224,30,"errorCode"],[234,29,224,39],[234,32,224,42],[234,33,224,43,"_a"],[234,35,224,45],[234,38,224,48,"error"],[234,43,224,53],[234,44,224,54,"details"],[234,51,224,61],[234,57,224,67],[234,61,224,71],[234,65,224,75,"_a"],[234,67,224,77],[234,72,224,82],[234,77,224,87],[234,78,224,88],[234,81,224,91],[234,86,224,96],[234,87,224,97],[234,90,224,100,"_a"],[234,92,224,102],[234,93,224,103,"code"],[234,97,224,107],[235,14,225,24],[235,18,225,28,"errorCode"],[235,27,225,37],[235,32,225,42],[235,57,225,67],[235,61,226,28,"errorCode"],[235,70,226,37],[235,75,226,42],[235,95,226,62],[235,99,227,28,"errorCode"],[235,108,227,37],[235,113,227,42],[235,144,227,73],[235,146,227,75],[236,16,228,28],[236,23,228,35],[237,18,228,37,"error"],[238,16,228,43],[238,17,228,44],[239,14,229,24],[240,12,230,20],[241,12,231,20],[242,12,232,20],[243,12,233,20],[243,18,233,26],[243,22,233,30],[243,23,233,31,"_removeSession"],[243,37,233,45],[243,38,233,46],[243,39,233,47],[244,12,234,20],[244,19,234,27],[245,14,234,29,"error"],[246,12,234,35],[246,13,234,36],[247,10,235,16],[248,10,236,16],[248,16,236,22],[249,12,236,24,"session"],[249,19,236,31],[250,12,236,33,"redirectType"],[251,10,236,46],[251,11,236,47],[251,14,236,50,"data"],[251,18,236,54],[252,10,237,16],[252,14,237,20],[252,15,237,21,"_debug"],[252,21,237,27],[252,22,237,28],[252,38,237,44],[252,40,237,46],[252,65,237,71],[252,67,237,73,"session"],[252,74,237,80],[252,76,237,82],[252,91,237,97],[252,93,237,99,"redirectType"],[252,105,237,111],[252,106,237,112],[253,10,238,16],[253,16,238,22],[253,20,238,26],[253,21,238,27,"_saveSession"],[253,33,238,39],[253,34,238,40,"session"],[253,41,238,47],[253,42,238,48],[254,10,239,16,"setTimeout"],[254,20,239,26],[254,21,239,27],[254,33,239,39],[255,12,240,20],[255,16,240,24,"redirectType"],[255,28,240,36],[255,33,240,41],[255,43,240,51],[255,45,240,53],[256,14,241,24],[256,20,241,30],[256,24,241,34],[256,25,241,35,"_notifyAllSubscribers"],[256,46,241,56],[256,47,241,57],[256,66,241,76],[256,68,241,78,"session"],[256,75,241,85],[256,76,241,86],[257,12,242,20],[257,13,242,21],[257,19,243,25],[258,14,244,24],[258,20,244,30],[258,24,244,34],[258,25,244,35,"_notifyAllSubscribers"],[258,46,244,56],[258,47,244,57],[258,58,244,68],[258,60,244,70,"session"],[258,67,244,77],[258,68,244,78],[259,12,245,20],[260,10,246,16],[260,11,246,17],[260,13,246,19],[260,14,246,20],[260,15,246,21],[261,10,247,16],[261,17,247,23],[262,12,247,25,"error"],[262,17,247,30],[262,19,247,32],[263,10,247,37],[263,11,247,38],[264,8,248,12],[265,8,249,12],[266,8,250,12],[266,14,250,18],[266,18,250,22],[266,19,250,23,"_recoverAndRefresh"],[266,37,250,41],[266,38,250,42],[266,39,250,43],[267,8,251,12],[267,15,251,19],[268,10,251,21,"error"],[268,15,251,26],[268,17,251,28],[269,8,251,33],[269,9,251,34],[270,6,252,8],[270,7,252,9],[270,8,253,8],[270,15,253,15,"error"],[270,20,253,20],[270,22,253,22],[271,8,254,12],[271,12,254,16],[271,13,254,17],[271,14,254,18],[271,16,254,20,"errors_1"],[271,24,254,28],[271,25,254,29,"isAuthError"],[271,36,254,40],[271,38,254,42,"error"],[271,43,254,47],[271,44,254,48],[271,46,254,50],[272,10,255,16],[272,17,255,23],[273,12,255,25,"error"],[274,10,255,31],[274,11,255,32],[275,8,256,12],[276,8,257,12],[276,15,257,19],[277,10,258,16,"error"],[277,15,258,21],[277,17,258,23],[277,21,258,27,"errors_1"],[277,29,258,35],[277,30,258,36,"AuthUnknownError"],[277,46,258,52],[277,47,258,53],[277,87,258,93],[277,89,258,95,"error"],[277,94,258,100],[278,8,259,12],[278,9,259,13],[279,6,260,8],[279,7,260,9],[279,16,261,16],[280,8,262,12],[280,14,262,18],[280,18,262,22],[280,19,262,23,"_handleVisibilityChange"],[280,42,262,46],[280,43,262,47],[280,44,262,48],[281,8,263,12],[281,12,263,16],[281,13,263,17,"_debug"],[281,19,263,23],[281,20,263,24],[281,36,263,40],[281,38,263,42],[281,43,263,47],[281,44,263,48],[282,6,264,8],[283,4,265,4],[284,4,266,4],[285,0,267,0],[286,0,268,0],[287,0,269,0],[288,0,270,0],[289,4,271,4],[289,10,271,10,"signInAnonymously"],[289,27,271,27,"signInAnonymously"],[289,28,271,28,"credentials"],[289,39,271,39],[289,41,271,41],[290,6,272,8],[290,10,272,12,"_a"],[290,12,272,14],[290,14,272,16,"_b"],[290,16,272,18],[290,18,272,20,"_c"],[290,20,272,22],[291,6,273,8],[291,10,273,12],[292,8,274,12],[292,14,274,18,"res"],[292,17,274,21],[292,20,274,24],[292,26,274,30],[292,27,274,31],[292,28,274,32],[292,30,274,34,"fetch_1"],[292,37,274,41],[292,38,274,42,"_request"],[292,46,274,50],[292,48,274,52],[292,52,274,56],[292,53,274,57,"fetch"],[292,58,274,62],[292,60,274,64],[292,66,274,70],[292,68,274,72],[292,71,274,75],[292,75,274,79],[292,76,274,80,"url"],[292,79,274,83],[292,88,274,92],[292,90,274,94],[293,10,275,16,"headers"],[293,17,275,23],[293,19,275,25],[293,23,275,29],[293,24,275,30,"headers"],[293,31,275,37],[294,10,276,16,"body"],[294,14,276,20],[294,16,276,22],[295,12,277,20,"data"],[295,16,277,24],[295,18,277,26],[295,19,277,27,"_b"],[295,21,277,29],[295,24,277,32],[295,25,277,33,"_a"],[295,27,277,35],[295,30,277,38,"credentials"],[295,41,277,49],[295,46,277,54],[295,50,277,58],[295,54,277,62,"credentials"],[295,65,277,73],[295,70,277,78],[295,75,277,83],[295,76,277,84],[295,79,277,87],[295,84,277,92],[295,85,277,93],[295,88,277,96,"credentials"],[295,99,277,107],[295,100,277,108,"options"],[295,107,277,115],[295,113,277,121],[295,117,277,125],[295,121,277,129,"_a"],[295,123,277,131],[295,128,277,136],[295,133,277,141],[295,134,277,142],[295,137,277,145],[295,142,277,150],[295,143,277,151],[295,146,277,154,"_a"],[295,148,277,156],[295,149,277,157,"data"],[295,153,277,161],[295,159,277,167],[295,163,277,171],[295,167,277,175,"_b"],[295,169,277,177],[295,174,277,182],[295,179,277,187],[295,180,277,188],[295,183,277,191,"_b"],[295,185,277,193],[295,188,277,196],[295,189,277,197],[295,190,277,198],[296,12,278,20,"gotrue_meta_security"],[296,32,278,40],[296,34,278,42],[297,14,278,44,"captcha_token"],[297,27,278,57],[297,29,278,59],[297,30,278,60,"_c"],[297,32,278,62],[297,35,278,65,"credentials"],[297,46,278,76],[297,51,278,81],[297,55,278,85],[297,59,278,89,"credentials"],[297,70,278,100],[297,75,278,105],[297,80,278,110],[297,81,278,111],[297,84,278,114],[297,89,278,119],[297,90,278,120],[297,93,278,123,"credentials"],[297,104,278,134],[297,105,278,135,"options"],[297,112,278,142],[297,118,278,148],[297,122,278,152],[297,126,278,156,"_c"],[297,128,278,158],[297,133,278,163],[297,138,278,168],[297,139,278,169],[297,142,278,172],[297,147,278,177],[297,148,278,178],[297,151,278,181,"_c"],[297,153,278,183],[297,154,278,184,"captchaToken"],[298,12,278,197],[299,10,279,16],[299,11,279,17],[300,10,280,16,"xform"],[300,15,280,21],[300,17,280,23,"fetch_1"],[300,24,280,30],[300,25,280,31,"_sessionResponse"],[301,8,281,12],[301,9,281,13],[301,10,281,14],[302,8,282,12],[302,14,282,18],[303,10,282,20,"data"],[303,14,282,24],[304,10,282,26,"error"],[305,8,282,32],[305,9,282,33],[305,12,282,36,"res"],[305,15,282,39],[306,8,283,12],[306,12,283,16,"error"],[306,17,283,21],[306,21,283,25],[306,22,283,26,"data"],[306,26,283,30],[306,28,283,32],[307,10,284,16],[307,17,284,23],[308,12,284,25,"data"],[308,16,284,29],[308,18,284,31],[309,14,284,33,"user"],[309,18,284,37],[309,20,284,39],[309,24,284,43],[310,14,284,45,"session"],[310,21,284,52],[310,23,284,54],[311,12,284,59],[311,13,284,60],[312,12,284,62,"error"],[312,17,284,67],[312,19,284,69,"error"],[313,10,284,75],[313,11,284,76],[314,8,285,12],[315,8,286,12],[315,14,286,18,"session"],[315,21,286,25],[315,24,286,28,"data"],[315,28,286,32],[315,29,286,33,"session"],[315,36,286,40],[316,8,287,12],[316,14,287,18,"user"],[316,18,287,22],[316,21,287,25,"data"],[316,25,287,29],[316,26,287,30,"user"],[316,30,287,34],[317,8,288,12],[317,12,288,16,"data"],[317,16,288,20],[317,17,288,21,"session"],[317,24,288,28],[317,26,288,30],[318,10,289,16],[318,16,289,22],[318,20,289,26],[318,21,289,27,"_saveSession"],[318,33,289,39],[318,34,289,40,"data"],[318,38,289,44],[318,39,289,45,"session"],[318,46,289,52],[318,47,289,53],[319,10,290,16],[319,16,290,22],[319,20,290,26],[319,21,290,27,"_notifyAllSubscribers"],[319,42,290,48],[319,43,290,49],[319,54,290,60],[319,56,290,62,"session"],[319,63,290,69],[319,64,290,70],[320,8,291,12],[321,8,292,12],[321,15,292,19],[322,10,292,21,"data"],[322,14,292,25],[322,16,292,27],[323,12,292,29,"user"],[323,16,292,33],[324,12,292,35,"session"],[325,10,292,43],[325,11,292,44],[326,10,292,46,"error"],[326,15,292,51],[326,17,292,53],[327,8,292,58],[327,9,292,59],[328,6,293,8],[328,7,293,9],[328,8,294,8],[328,15,294,15,"error"],[328,20,294,20],[328,22,294,22],[329,8,295,12],[329,12,295,16],[329,13,295,17],[329,14,295,18],[329,16,295,20,"errors_1"],[329,24,295,28],[329,25,295,29,"isAuthError"],[329,36,295,40],[329,38,295,42,"error"],[329,43,295,47],[329,44,295,48],[329,46,295,50],[330,10,296,16],[330,17,296,23],[331,12,296,25,"data"],[331,16,296,29],[331,18,296,31],[332,14,296,33,"user"],[332,18,296,37],[332,20,296,39],[332,24,296,43],[333,14,296,45,"session"],[333,21,296,52],[333,23,296,54],[334,12,296,59],[334,13,296,60],[335,12,296,62,"error"],[336,10,296,68],[336,11,296,69],[337,8,297,12],[338,8,298,12],[338,14,298,18,"error"],[338,19,298,23],[339,6,299,8],[340,4,300,4],[341,4,301,4],[342,0,302,0],[343,0,303,0],[344,0,304,0],[345,0,305,0],[346,0,306,0],[347,0,307,0],[348,0,308,0],[349,0,309,0],[350,0,310,0],[351,4,311,4],[351,10,311,10,"signUp"],[351,16,311,16,"signUp"],[351,17,311,17,"credentials"],[351,28,311,28],[351,30,311,30],[352,6,312,8],[352,10,312,12,"_a"],[352,12,312,14],[352,14,312,16,"_b"],[352,16,312,18],[352,18,312,20,"_c"],[352,20,312,22],[353,6,313,8],[353,10,313,12],[354,8,314,12],[354,12,314,16,"res"],[354,15,314,19],[355,8,315,12],[355,12,315,16],[355,19,315,23],[355,23,315,27,"credentials"],[355,34,315,38],[355,36,315,40],[356,10,316,16],[356,16,316,22],[357,12,316,24,"email"],[357,17,316,29],[358,12,316,31,"password"],[358,20,316,39],[359,12,316,41,"options"],[360,10,316,49],[360,11,316,50],[360,14,316,53,"credentials"],[360,25,316,64],[361,10,317,16],[361,14,317,20,"codeChallenge"],[361,27,317,33],[361,30,317,36],[361,34,317,40],[362,10,318,16],[362,14,318,20,"codeChallengeMethod"],[362,33,318,39],[362,36,318,42],[362,40,318,46],[363,10,319,16],[363,14,319,20],[363,18,319,24],[363,19,319,25,"flowType"],[363,27,319,33],[363,32,319,38],[363,38,319,44],[363,40,319,46],[364,12,320,20],[365,12,321,20],[365,13,321,21,"codeChallenge"],[365,26,321,34],[365,28,321,36,"codeChallengeMethod"],[365,47,321,55],[365,48,321,56],[365,51,321,59],[365,57,321,65],[365,58,321,66],[365,59,321,67],[365,61,321,69,"helpers_1"],[365,70,321,78],[365,71,321,79,"getCodeChallengeAndMethod"],[365,96,321,104],[365,98,321,106],[365,102,321,110],[365,103,321,111,"storage"],[365,110,321,118],[365,112,321,120],[365,116,321,124],[365,117,321,125,"storageKey"],[365,127,321,135],[365,128,321,136],[366,10,322,16],[367,10,323,16,"res"],[367,13,323,19],[367,16,323,22],[367,22,323,28],[367,23,323,29],[367,24,323,30],[367,26,323,32,"fetch_1"],[367,33,323,39],[367,34,323,40,"_request"],[367,42,323,48],[367,44,323,50],[367,48,323,54],[367,49,323,55,"fetch"],[367,54,323,60],[367,56,323,62],[367,62,323,68],[367,64,323,70],[367,67,323,73],[367,71,323,77],[367,72,323,78,"url"],[367,75,323,81],[367,84,323,90],[367,86,323,92],[368,12,324,20,"headers"],[368,19,324,27],[368,21,324,29],[368,25,324,33],[368,26,324,34,"headers"],[368,33,324,41],[369,12,325,20,"redirectTo"],[369,22,325,30],[369,24,325,32,"options"],[369,31,325,39],[369,36,325,44],[369,40,325,48],[369,44,325,52,"options"],[369,51,325,59],[369,56,325,64],[369,61,325,69],[369,62,325,70],[369,65,325,73],[369,70,325,78],[369,71,325,79],[369,74,325,82,"options"],[369,81,325,89],[369,82,325,90,"emailRedirectTo"],[369,97,325,105],[370,12,326,20,"body"],[370,16,326,24],[370,18,326,26],[371,14,327,24,"email"],[371,19,327,29],[372,14,328,24,"password"],[372,22,328,32],[373,14,329,24,"data"],[373,18,329,28],[373,20,329,30],[373,21,329,31,"_a"],[373,23,329,33],[373,26,329,36,"options"],[373,33,329,43],[373,38,329,48],[373,42,329,52],[373,46,329,56,"options"],[373,53,329,63],[373,58,329,68],[373,63,329,73],[373,64,329,74],[373,67,329,77],[373,72,329,82],[373,73,329,83],[373,76,329,86,"options"],[373,83,329,93],[373,84,329,94,"data"],[373,88,329,98],[373,94,329,104],[373,98,329,108],[373,102,329,112,"_a"],[373,104,329,114],[373,109,329,119],[373,114,329,124],[373,115,329,125],[373,118,329,128,"_a"],[373,120,329,130],[373,123,329,133],[373,124,329,134],[373,125,329,135],[374,14,330,24,"gotrue_meta_security"],[374,34,330,44],[374,36,330,46],[375,16,330,48,"captcha_token"],[375,29,330,61],[375,31,330,63,"options"],[375,38,330,70],[375,43,330,75],[375,47,330,79],[375,51,330,83,"options"],[375,58,330,90],[375,63,330,95],[375,68,330,100],[375,69,330,101],[375,72,330,104],[375,77,330,109],[375,78,330,110],[375,81,330,113,"options"],[375,88,330,120],[375,89,330,121,"captchaToken"],[376,14,330,134],[376,15,330,135],[377,14,331,24,"code_challenge"],[377,28,331,38],[377,30,331,40,"codeChallenge"],[377,43,331,53],[378,14,332,24,"code_challenge_method"],[378,35,332,45],[378,37,332,47,"codeChallengeMethod"],[379,12,333,20],[379,13,333,21],[380,12,334,20,"xform"],[380,17,334,25],[380,19,334,27,"fetch_1"],[380,26,334,34],[380,27,334,35,"_sessionResponse"],[381,10,335,16],[381,11,335,17],[381,12,335,18],[382,8,336,12],[382,9,336,13],[382,15,337,17],[382,19,337,21],[382,26,337,28],[382,30,337,32,"credentials"],[382,41,337,43],[382,43,337,45],[383,10,338,16],[383,16,338,22],[384,12,338,24,"phone"],[384,17,338,29],[385,12,338,31,"password"],[385,20,338,39],[386,12,338,41,"options"],[387,10,338,49],[387,11,338,50],[387,14,338,53,"credentials"],[387,25,338,64],[388,10,339,16,"res"],[388,13,339,19],[388,16,339,22],[388,22,339,28],[388,23,339,29],[388,24,339,30],[388,26,339,32,"fetch_1"],[388,33,339,39],[388,34,339,40,"_request"],[388,42,339,48],[388,44,339,50],[388,48,339,54],[388,49,339,55,"fetch"],[388,54,339,60],[388,56,339,62],[388,62,339,68],[388,64,339,70],[388,67,339,73],[388,71,339,77],[388,72,339,78,"url"],[388,75,339,81],[388,84,339,90],[388,86,339,92],[389,12,340,20,"headers"],[389,19,340,27],[389,21,340,29],[389,25,340,33],[389,26,340,34,"headers"],[389,33,340,41],[390,12,341,20,"body"],[390,16,341,24],[390,18,341,26],[391,14,342,24,"phone"],[391,19,342,29],[392,14,343,24,"password"],[392,22,343,32],[393,14,344,24,"data"],[393,18,344,28],[393,20,344,30],[393,21,344,31,"_b"],[393,23,344,33],[393,26,344,36,"options"],[393,33,344,43],[393,38,344,48],[393,42,344,52],[393,46,344,56,"options"],[393,53,344,63],[393,58,344,68],[393,63,344,73],[393,64,344,74],[393,67,344,77],[393,72,344,82],[393,73,344,83],[393,76,344,86,"options"],[393,83,344,93],[393,84,344,94,"data"],[393,88,344,98],[393,94,344,104],[393,98,344,108],[393,102,344,112,"_b"],[393,104,344,114],[393,109,344,119],[393,114,344,124],[393,115,344,125],[393,118,344,128,"_b"],[393,120,344,130],[393,123,344,133],[393,124,344,134],[393,125,344,135],[394,14,345,24,"channel"],[394,21,345,31],[394,23,345,33],[394,24,345,34,"_c"],[394,26,345,36],[394,29,345,39,"options"],[394,36,345,46],[394,41,345,51],[394,45,345,55],[394,49,345,59,"options"],[394,56,345,66],[394,61,345,71],[394,66,345,76],[394,67,345,77],[394,70,345,80],[394,75,345,85],[394,76,345,86],[394,79,345,89,"options"],[394,86,345,96],[394,87,345,97,"channel"],[394,94,345,104],[394,100,345,110],[394,104,345,114],[394,108,345,118,"_c"],[394,110,345,120],[394,115,345,125],[394,120,345,130],[394,121,345,131],[394,124,345,134,"_c"],[394,126,345,136],[394,129,345,139],[394,134,345,144],[395,14,346,24,"gotrue_meta_security"],[395,34,346,44],[395,36,346,46],[396,16,346,48,"captcha_token"],[396,29,346,61],[396,31,346,63,"options"],[396,38,346,70],[396,43,346,75],[396,47,346,79],[396,51,346,83,"options"],[396,58,346,90],[396,63,346,95],[396,68,346,100],[396,69,346,101],[396,72,346,104],[396,77,346,109],[396,78,346,110],[396,81,346,113,"options"],[396,88,346,120],[396,89,346,121,"captchaToken"],[397,14,346,134],[398,12,347,20],[398,13,347,21],[399,12,348,20,"xform"],[399,17,348,25],[399,19,348,27,"fetch_1"],[399,26,348,34],[399,27,348,35,"_sessionResponse"],[400,10,349,16],[400,11,349,17],[400,12,349,18],[401,8,350,12],[401,9,350,13],[401,15,351,17],[402,10,352,16],[402,16,352,22],[402,20,352,26,"errors_1"],[402,28,352,34],[402,29,352,35,"AuthInvalidCredentialsError"],[402,56,352,62],[402,57,352,63],[402,122,352,128],[402,123,352,129],[403,8,353,12],[404,8,354,12],[404,14,354,18],[405,10,354,20,"data"],[405,14,354,24],[406,10,354,26,"error"],[407,8,354,32],[407,9,354,33],[407,12,354,36,"res"],[407,15,354,39],[408,8,355,12],[408,12,355,16,"error"],[408,17,355,21],[408,21,355,25],[408,22,355,26,"data"],[408,26,355,30],[408,28,355,32],[409,10,356,16],[409,17,356,23],[410,12,356,25,"data"],[410,16,356,29],[410,18,356,31],[411,14,356,33,"user"],[411,18,356,37],[411,20,356,39],[411,24,356,43],[412,14,356,45,"session"],[412,21,356,52],[412,23,356,54],[413,12,356,59],[413,13,356,60],[414,12,356,62,"error"],[414,17,356,67],[414,19,356,69,"error"],[415,10,356,75],[415,11,356,76],[416,8,357,12],[417,8,358,12],[417,14,358,18,"session"],[417,21,358,25],[417,24,358,28,"data"],[417,28,358,32],[417,29,358,33,"session"],[417,36,358,40],[418,8,359,12],[418,14,359,18,"user"],[418,18,359,22],[418,21,359,25,"data"],[418,25,359,29],[418,26,359,30,"user"],[418,30,359,34],[419,8,360,12],[419,12,360,16,"data"],[419,16,360,20],[419,17,360,21,"session"],[419,24,360,28],[419,26,360,30],[420,10,361,16],[420,16,361,22],[420,20,361,26],[420,21,361,27,"_saveSession"],[420,33,361,39],[420,34,361,40,"data"],[420,38,361,44],[420,39,361,45,"session"],[420,46,361,52],[420,47,361,53],[421,10,362,16],[421,16,362,22],[421,20,362,26],[421,21,362,27,"_notifyAllSubscribers"],[421,42,362,48],[421,43,362,49],[421,54,362,60],[421,56,362,62,"session"],[421,63,362,69],[421,64,362,70],[422,8,363,12],[423,8,364,12],[423,15,364,19],[424,10,364,21,"data"],[424,14,364,25],[424,16,364,27],[425,12,364,29,"user"],[425,16,364,33],[426,12,364,35,"session"],[427,10,364,43],[427,11,364,44],[428,10,364,46,"error"],[428,15,364,51],[428,17,364,53],[429,8,364,58],[429,9,364,59],[430,6,365,8],[430,7,365,9],[430,8,366,8],[430,15,366,15,"error"],[430,20,366,20],[430,22,366,22],[431,8,367,12],[431,12,367,16],[431,13,367,17],[431,14,367,18],[431,16,367,20,"errors_1"],[431,24,367,28],[431,25,367,29,"isAuthError"],[431,36,367,40],[431,38,367,42,"error"],[431,43,367,47],[431,44,367,48],[431,46,367,50],[432,10,368,16],[432,17,368,23],[433,12,368,25,"data"],[433,16,368,29],[433,18,368,31],[434,14,368,33,"user"],[434,18,368,37],[434,20,368,39],[434,24,368,43],[435,14,368,45,"session"],[435,21,368,52],[435,23,368,54],[436,12,368,59],[436,13,368,60],[437,12,368,62,"error"],[438,10,368,68],[438,11,368,69],[439,8,369,12],[440,8,370,12],[440,14,370,18,"error"],[440,19,370,23],[441,6,371,8],[442,4,372,4],[443,4,373,4],[444,0,374,0],[445,0,375,0],[446,0,376,0],[447,0,377,0],[448,0,378,0],[449,0,379,0],[450,0,380,0],[451,4,381,4],[451,10,381,10,"signInWithPassword"],[451,28,381,28,"signInWithPassword"],[451,29,381,29,"credentials"],[451,40,381,40],[451,42,381,42],[452,6,382,8],[452,10,382,12],[453,8,383,12],[453,12,383,16,"res"],[453,15,383,19],[454,8,384,12],[454,12,384,16],[454,19,384,23],[454,23,384,27,"credentials"],[454,34,384,38],[454,36,384,40],[455,10,385,16],[455,16,385,22],[456,12,385,24,"email"],[456,17,385,29],[457,12,385,31,"password"],[457,20,385,39],[458,12,385,41,"options"],[459,10,385,49],[459,11,385,50],[459,14,385,53,"credentials"],[459,25,385,64],[460,10,386,16,"res"],[460,13,386,19],[460,16,386,22],[460,22,386,28],[460,23,386,29],[460,24,386,30],[460,26,386,32,"fetch_1"],[460,33,386,39],[460,34,386,40,"_request"],[460,42,386,48],[460,44,386,50],[460,48,386,54],[460,49,386,55,"fetch"],[460,54,386,60],[460,56,386,62],[460,62,386,68],[460,64,386,70],[460,67,386,73],[460,71,386,77],[460,72,386,78,"url"],[460,75,386,81],[460,103,386,109],[460,105,386,111],[461,12,387,20,"headers"],[461,19,387,27],[461,21,387,29],[461,25,387,33],[461,26,387,34,"headers"],[461,33,387,41],[462,12,388,20,"body"],[462,16,388,24],[462,18,388,26],[463,14,389,24,"email"],[463,19,389,29],[464,14,390,24,"password"],[464,22,390,32],[465,14,391,24,"gotrue_meta_security"],[465,34,391,44],[465,36,391,46],[466,16,391,48,"captcha_token"],[466,29,391,61],[466,31,391,63,"options"],[466,38,391,70],[466,43,391,75],[466,47,391,79],[466,51,391,83,"options"],[466,58,391,90],[466,63,391,95],[466,68,391,100],[466,69,391,101],[466,72,391,104],[466,77,391,109],[466,78,391,110],[466,81,391,113,"options"],[466,88,391,120],[466,89,391,121,"captchaToken"],[467,14,391,134],[468,12,392,20],[468,13,392,21],[469,12,393,20,"xform"],[469,17,393,25],[469,19,393,27,"fetch_1"],[469,26,393,34],[469,27,393,35,"_sessionResponsePassword"],[470,10,394,16],[470,11,394,17],[470,12,394,18],[471,8,395,12],[471,9,395,13],[471,15,396,17],[471,19,396,21],[471,26,396,28],[471,30,396,32,"credentials"],[471,41,396,43],[471,43,396,45],[472,10,397,16],[472,16,397,22],[473,12,397,24,"phone"],[473,17,397,29],[474,12,397,31,"password"],[474,20,397,39],[475,12,397,41,"options"],[476,10,397,49],[476,11,397,50],[476,14,397,53,"credentials"],[476,25,397,64],[477,10,398,16,"res"],[477,13,398,19],[477,16,398,22],[477,22,398,28],[477,23,398,29],[477,24,398,30],[477,26,398,32,"fetch_1"],[477,33,398,39],[477,34,398,40,"_request"],[477,42,398,48],[477,44,398,50],[477,48,398,54],[477,49,398,55,"fetch"],[477,54,398,60],[477,56,398,62],[477,62,398,68],[477,64,398,70],[477,67,398,73],[477,71,398,77],[477,72,398,78,"url"],[477,75,398,81],[477,103,398,109],[477,105,398,111],[478,12,399,20,"headers"],[478,19,399,27],[478,21,399,29],[478,25,399,33],[478,26,399,34,"headers"],[478,33,399,41],[479,12,400,20,"body"],[479,16,400,24],[479,18,400,26],[480,14,401,24,"phone"],[480,19,401,29],[481,14,402,24,"password"],[481,22,402,32],[482,14,403,24,"gotrue_meta_security"],[482,34,403,44],[482,36,403,46],[483,16,403,48,"captcha_token"],[483,29,403,61],[483,31,403,63,"options"],[483,38,403,70],[483,43,403,75],[483,47,403,79],[483,51,403,83,"options"],[483,58,403,90],[483,63,403,95],[483,68,403,100],[483,69,403,101],[483,72,403,104],[483,77,403,109],[483,78,403,110],[483,81,403,113,"options"],[483,88,403,120],[483,89,403,121,"captchaToken"],[484,14,403,134],[485,12,404,20],[485,13,404,21],[486,12,405,20,"xform"],[486,17,405,25],[486,19,405,27,"fetch_1"],[486,26,405,34],[486,27,405,35,"_sessionResponsePassword"],[487,10,406,16],[487,11,406,17],[487,12,406,18],[488,8,407,12],[488,9,407,13],[488,15,408,17],[489,10,409,16],[489,16,409,22],[489,20,409,26,"errors_1"],[489,28,409,34],[489,29,409,35,"AuthInvalidCredentialsError"],[489,56,409,62],[489,57,409,63],[489,122,409,128],[489,123,409,129],[490,8,410,12],[491,8,411,12],[491,14,411,18],[492,10,411,20,"data"],[492,14,411,24],[493,10,411,26,"error"],[494,8,411,32],[494,9,411,33],[494,12,411,36,"res"],[494,15,411,39],[495,8,412,12],[495,12,412,16,"error"],[495,17,412,21],[495,19,412,23],[496,10,413,16],[496,17,413,23],[497,12,413,25,"data"],[497,16,413,29],[497,18,413,31],[498,14,413,33,"user"],[498,18,413,37],[498,20,413,39],[498,24,413,43],[499,14,413,45,"session"],[499,21,413,52],[499,23,413,54],[500,12,413,59],[500,13,413,60],[501,12,413,62,"error"],[502,10,413,68],[502,11,413,69],[503,8,414,12],[503,9,414,13],[503,15,415,17],[503,19,415,21],[503,20,415,22,"data"],[503,24,415,26],[503,28,415,30],[503,29,415,31,"data"],[503,33,415,35],[503,34,415,36,"session"],[503,41,415,43],[503,45,415,47],[503,46,415,48,"data"],[503,50,415,52],[503,51,415,53,"user"],[503,55,415,57],[503,57,415,59],[504,10,416,16],[504,17,416,23],[505,12,416,25,"data"],[505,16,416,29],[505,18,416,31],[506,14,416,33,"user"],[506,18,416,37],[506,20,416,39],[506,24,416,43],[507,14,416,45,"session"],[507,21,416,52],[507,23,416,54],[508,12,416,59],[508,13,416,60],[509,12,416,62,"error"],[509,17,416,67],[509,19,416,69],[509,23,416,73,"errors_1"],[509,31,416,81],[509,32,416,82,"AuthInvalidTokenResponseError"],[509,61,416,111],[509,62,416,112],[510,10,416,114],[510,11,416,115],[511,8,417,12],[512,8,418,12],[512,12,418,16,"data"],[512,16,418,20],[512,17,418,21,"session"],[512,24,418,28],[512,26,418,30],[513,10,419,16],[513,16,419,22],[513,20,419,26],[513,21,419,27,"_saveSession"],[513,33,419,39],[513,34,419,40,"data"],[513,38,419,44],[513,39,419,45,"session"],[513,46,419,52],[513,47,419,53],[514,10,420,16],[514,16,420,22],[514,20,420,26],[514,21,420,27,"_notifyAllSubscribers"],[514,42,420,48],[514,43,420,49],[514,54,420,60],[514,56,420,62,"data"],[514,60,420,66],[514,61,420,67,"session"],[514,68,420,74],[514,69,420,75],[515,8,421,12],[516,8,422,12],[516,15,422,19],[517,10,423,16,"data"],[517,14,423,20],[517,16,423,22,"Object"],[517,22,423,28],[517,23,423,29,"assign"],[517,29,423,35],[517,30,423,36],[518,12,423,38,"user"],[518,16,423,42],[518,18,423,44,"data"],[518,22,423,48],[518,23,423,49,"user"],[518,27,423,53],[519,12,423,55,"session"],[519,19,423,62],[519,21,423,64,"data"],[519,25,423,68],[519,26,423,69,"session"],[520,10,423,77],[520,11,423,78],[520,13,423,81,"data"],[520,17,423,85],[520,18,423,86,"weak_password"],[520,31,423,99],[520,34,423,102],[521,12,423,104,"weakPassword"],[521,24,423,116],[521,26,423,118,"data"],[521,30,423,122],[521,31,423,123,"weak_password"],[522,10,423,137],[522,11,423,138],[522,14,423,141],[522,18,423,146],[522,19,423,147],[523,10,424,16,"error"],[524,8,425,12],[524,9,425,13],[525,6,426,8],[525,7,426,9],[525,8,427,8],[525,15,427,15,"error"],[525,20,427,20],[525,22,427,22],[526,8,428,12],[526,12,428,16],[526,13,428,17],[526,14,428,18],[526,16,428,20,"errors_1"],[526,24,428,28],[526,25,428,29,"isAuthError"],[526,36,428,40],[526,38,428,42,"error"],[526,43,428,47],[526,44,428,48],[526,46,428,50],[527,10,429,16],[527,17,429,23],[528,12,429,25,"data"],[528,16,429,29],[528,18,429,31],[529,14,429,33,"user"],[529,18,429,37],[529,20,429,39],[529,24,429,43],[530,14,429,45,"session"],[530,21,429,52],[530,23,429,54],[531,12,429,59],[531,13,429,60],[532,12,429,62,"error"],[533,10,429,68],[533,11,429,69],[534,8,430,12],[535,8,431,12],[535,14,431,18,"error"],[535,19,431,23],[536,6,432,8],[537,4,433,4],[538,4,434,4],[539,0,435,0],[540,0,436,0],[541,0,437,0],[542,4,438,4],[542,10,438,10,"signInWithOAuth"],[542,25,438,25,"signInWithOAuth"],[542,26,438,26,"credentials"],[542,37,438,37],[542,39,438,39],[543,6,439,8],[543,10,439,12,"_a"],[543,12,439,14],[543,14,439,16,"_b"],[543,16,439,18],[543,18,439,20,"_c"],[543,20,439,22],[543,22,439,24,"_d"],[543,24,439,26],[544,6,440,8],[544,13,440,15],[544,19,440,21],[544,23,440,25],[544,24,440,26,"_handleProviderSignIn"],[544,45,440,47],[544,46,440,48,"credentials"],[544,57,440,59],[544,58,440,60,"provider"],[544,66,440,68],[544,68,440,70],[545,8,441,12,"redirectTo"],[545,18,441,22],[545,20,441,24],[545,21,441,25,"_a"],[545,23,441,27],[545,26,441,30,"credentials"],[545,37,441,41],[545,38,441,42,"options"],[545,45,441,49],[545,51,441,55],[545,55,441,59],[545,59,441,63,"_a"],[545,61,441,65],[545,66,441,70],[545,71,441,75],[545,72,441,76],[545,75,441,79],[545,80,441,84],[545,81,441,85],[545,84,441,88,"_a"],[545,86,441,90],[545,87,441,91,"redirectTo"],[545,97,441,101],[546,8,442,12,"scopes"],[546,14,442,18],[546,16,442,20],[546,17,442,21,"_b"],[546,19,442,23],[546,22,442,26,"credentials"],[546,33,442,37],[546,34,442,38,"options"],[546,41,442,45],[546,47,442,51],[546,51,442,55],[546,55,442,59,"_b"],[546,57,442,61],[546,62,442,66],[546,67,442,71],[546,68,442,72],[546,71,442,75],[546,76,442,80],[546,77,442,81],[546,80,442,84,"_b"],[546,82,442,86],[546,83,442,87,"scopes"],[546,89,442,93],[547,8,443,12,"queryParams"],[547,19,443,23],[547,21,443,25],[547,22,443,26,"_c"],[547,24,443,28],[547,27,443,31,"credentials"],[547,38,443,42],[547,39,443,43,"options"],[547,46,443,50],[547,52,443,56],[547,56,443,60],[547,60,443,64,"_c"],[547,62,443,66],[547,67,443,71],[547,72,443,76],[547,73,443,77],[547,76,443,80],[547,81,443,85],[547,82,443,86],[547,85,443,89,"_c"],[547,87,443,91],[547,88,443,92,"queryParams"],[547,99,443,103],[548,8,444,12,"skipBrowserRedirect"],[548,27,444,31],[548,29,444,33],[548,30,444,34,"_d"],[548,32,444,36],[548,35,444,39,"credentials"],[548,46,444,50],[548,47,444,51,"options"],[548,54,444,58],[548,60,444,64],[548,64,444,68],[548,68,444,72,"_d"],[548,70,444,74],[548,75,444,79],[548,80,444,84],[548,81,444,85],[548,84,444,88],[548,89,444,93],[548,90,444,94],[548,93,444,97,"_d"],[548,95,444,99],[548,96,444,100,"skipBrowserRedirect"],[549,6,445,8],[549,7,445,9],[549,8,445,10],[550,4,446,4],[551,4,447,4],[552,0,448,0],[553,0,449,0],[554,4,450,4],[554,10,450,10,"exchangeCodeForSession"],[554,32,450,32,"exchangeCodeForSession"],[554,33,450,33,"authCode"],[554,41,450,41],[554,43,450,43],[555,6,451,8],[555,12,451,14],[555,16,451,18],[555,17,451,19,"initializePromise"],[555,34,451,36],[556,6,452,8],[556,13,452,15],[556,17,452,19],[556,18,452,20,"_acquireLock"],[556,30,452,32],[556,31,452,33],[556,32,452,34],[556,33,452,35],[556,35,452,37],[556,47,452,49],[557,8,453,12],[557,15,453,19],[557,19,453,23],[557,20,453,24,"_exchangeCodeForSession"],[557,43,453,47],[557,44,453,48,"authCode"],[557,52,453,56],[557,53,453,57],[558,6,454,8],[558,7,454,9],[558,8,454,10],[559,4,455,4],[560,4,456,4],[561,0,457,0],[562,0,458,0],[563,0,459,0],[564,0,460,0],[565,0,461,0],[566,0,462,0],[567,4,463,4],[567,10,463,10,"signInWithWeb3"],[567,24,463,24,"signInWithWeb3"],[567,25,463,25,"credentials"],[567,36,463,36],[567,38,463,38],[568,6,464,8],[568,12,464,14],[569,8,464,16,"chain"],[570,6,464,22],[570,7,464,23],[570,10,464,26,"credentials"],[570,21,464,37],[571,6,465,8],[571,14,465,16,"chain"],[571,19,465,21],[572,8,466,12],[572,13,466,17],[572,23,466,27],[573,10,467,16],[573,17,467,23],[573,23,467,29],[573,27,467,33],[573,28,467,34,"signInWithEthereum"],[573,46,467,52],[573,47,467,53,"credentials"],[573,58,467,64],[573,59,467,65],[574,8,468,12],[574,13,468,17],[574,21,468,25],[575,10,469,16],[575,17,469,23],[575,23,469,29],[575,27,469,33],[575,28,469,34,"signInWithSolana"],[575,44,469,50],[575,45,469,51,"credentials"],[575,56,469,62],[575,57,469,63],[576,8,470,12],[577,10,471,16],[577,16,471,22],[577,20,471,26,"Error"],[577,25,471,31],[577,26,471,32],[577,67,471,73,"chain"],[577,72,471,78],[577,75,471,81],[577,76,471,82],[578,6,472,8],[579,4,473,4],[580,4,474,4],[580,10,474,10,"signInWithEthereum"],[580,28,474,28,"signInWithEthereum"],[580,29,474,29,"credentials"],[580,40,474,40],[580,42,474,42],[581,6,475,8],[581,10,475,12,"_a"],[581,12,475,14],[581,14,475,16,"_b"],[581,16,475,18],[581,18,475,20,"_c"],[581,20,475,22],[581,22,475,24,"_d"],[581,24,475,26],[581,26,475,28,"_e"],[581,28,475,30],[581,30,475,32,"_f"],[581,32,475,34],[581,34,475,36,"_g"],[581,36,475,38],[581,38,475,40,"_h"],[581,40,475,42],[581,42,475,44,"_j"],[581,44,475,46],[581,46,475,48,"_k"],[581,48,475,50],[581,50,475,52,"_l"],[581,52,475,54],[582,6,476,8],[583,6,477,8],[583,10,477,12,"message"],[583,17,477,19],[584,6,478,8],[584,10,478,12,"signature"],[584,19,478,21],[585,6,479,8],[585,10,479,12],[585,19,479,21],[585,23,479,25,"credentials"],[585,34,479,36],[585,36,479,38],[586,8,480,12,"message"],[586,15,480,19],[586,18,480,22,"credentials"],[586,29,480,33],[586,30,480,34,"message"],[586,37,480,41],[587,8,481,12,"signature"],[587,17,481,21],[587,20,481,24,"credentials"],[587,31,481,35],[587,32,481,36,"signature"],[587,41,481,45],[588,6,482,8],[588,7,482,9],[588,13,483,13],[589,8,484,12],[589,14,484,18],[590,10,484,20,"chain"],[590,15,484,25],[591,10,484,27,"wallet"],[591,16,484,33],[592,10,484,35,"statement"],[592,19,484,44],[593,10,484,46,"options"],[594,8,484,54],[594,9,484,55],[594,12,484,58,"credentials"],[594,23,484,69],[595,8,485,12],[595,12,485,16,"resolvedWallet"],[595,26,485,30],[596,8,486,12],[596,12,486,16],[596,13,486,17],[596,14,486,18],[596,15,486,19],[596,17,486,21,"helpers_1"],[596,26,486,30],[596,27,486,31,"isBrowser"],[596,36,486,40],[596,38,486,42],[596,39,486,43],[596,41,486,45],[597,10,487,16],[597,14,487,20],[597,21,487,27,"wallet"],[597,27,487,33],[597,32,487,38],[597,40,487,46],[597,44,487,50],[597,46,487,52,"options"],[597,53,487,59],[597,58,487,64],[597,62,487,68],[597,66,487,72,"options"],[597,73,487,79],[597,78,487,84],[597,83,487,89],[597,84,487,90],[597,87,487,93],[597,92,487,98],[597,93,487,99],[597,96,487,102,"options"],[597,103,487,109],[597,104,487,110,"url"],[597,107,487,113],[597,108,487,114],[597,110,487,116],[598,12,488,20],[598,18,488,26],[598,22,488,30,"Error"],[598,27,488,35],[598,28,488,36],[598,115,488,123],[598,116,488,124],[599,10,489,16],[600,10,490,16,"resolvedWallet"],[600,24,490,30],[600,27,490,33,"wallet"],[600,33,490,39],[601,8,491,12],[601,9,491,13],[601,15,492,17],[601,19,492,21],[601,26,492,28,"wallet"],[601,32,492,34],[601,37,492,39],[601,45,492,47],[601,47,492,49],[602,10,493,16,"resolvedWallet"],[602,24,493,30],[602,27,493,33,"wallet"],[602,33,493,39],[603,8,494,12],[603,9,494,13],[603,15,495,17],[604,10,496,16],[604,16,496,22,"windowAny"],[604,25,496,31],[604,28,496,34,"window"],[604,34,496,40],[605,10,497,16],[605,14,497,20],[605,24,497,30],[605,28,497,34,"windowAny"],[605,37,497,43],[605,41,498,20],[605,48,498,27,"windowAny"],[605,57,498,36],[605,58,498,37,"ethereum"],[605,66,498,45],[605,71,498,50],[605,79,498,58],[605,83,499,20],[605,92,499,29],[605,96,499,33,"windowAny"],[605,105,499,42],[605,106,499,43,"ethereum"],[605,114,499,51],[605,118,500,20],[605,125,500,27,"windowAny"],[605,134,500,36],[605,135,500,37,"ethereum"],[605,143,500,45],[605,144,500,46,"request"],[605,151,500,53],[605,156,500,58],[605,166,500,68],[605,168,500,70],[606,12,501,20,"resolvedWallet"],[606,26,501,34],[606,29,501,37,"windowAny"],[606,38,501,46],[606,39,501,47,"ethereum"],[606,47,501,55],[607,10,502,16],[607,11,502,17],[607,17,503,21],[608,12,504,20],[608,18,504,26],[608,22,504,30,"Error"],[608,27,504,35],[608,28,504,36],[608,345,504,353],[608,346,504,354],[609,10,505,16],[610,8,506,12],[611,8,507,12],[611,14,507,18,"url"],[611,17,507,21],[611,20,507,24],[611,24,507,28,"URL"],[611,27,507,31],[611,28,507,32],[611,29,507,33,"_a"],[611,31,507,35],[611,34,507,38,"options"],[611,41,507,45],[611,46,507,50],[611,50,507,54],[611,54,507,58,"options"],[611,61,507,65],[611,66,507,70],[611,71,507,75],[611,72,507,76],[611,75,507,79],[611,80,507,84],[611,81,507,85],[611,84,507,88,"options"],[611,91,507,95],[611,92,507,96,"url"],[611,95,507,99],[611,101,507,105],[611,105,507,109],[611,109,507,113,"_a"],[611,111,507,115],[611,116,507,120],[611,121,507,125],[611,122,507,126],[611,125,507,129,"_a"],[611,127,507,131],[611,130,507,134,"window"],[611,136,507,140],[611,137,507,141,"location"],[611,145,507,149],[611,146,507,150,"href"],[611,150,507,154],[611,151,507,155],[612,8,508,12],[612,14,508,18,"accounts"],[612,22,508,26],[612,25,508,29],[612,31,508,35,"resolvedWallet"],[612,45,508,49],[612,46,509,17,"request"],[612,53,509,24],[612,54,509,25],[613,10,510,16,"method"],[613,16,510,22],[613,18,510,24],[614,8,511,12],[614,9,511,13],[614,10,511,14],[614,11,512,17,"then"],[614,15,512,21],[614,16,512,23,"accs"],[614,20,512,27],[614,24,512,32,"accs"],[614,28,512,36],[614,29,512,37],[614,30,513,17,"catch"],[614,35,513,22],[614,36,513,23],[614,42,513,29],[615,10,514,16],[615,16,514,22],[615,20,514,26,"Error"],[615,25,514,31],[615,26,514,32],[615,102,514,108],[615,103,514,109],[616,8,515,12],[616,9,515,13],[616,10,515,14],[617,8,516,12],[617,12,516,16],[617,13,516,17,"accounts"],[617,21,516,25],[617,25,516,29,"accounts"],[617,33,516,37],[617,34,516,38,"length"],[617,40,516,44],[617,45,516,49],[617,46,516,50],[617,48,516,52],[618,10,517,16],[618,16,517,22],[618,20,517,26,"Error"],[618,25,517,31],[618,26,517,32],[618,108,517,114],[618,109,517,115],[619,8,518,12],[620,8,519,12],[620,14,519,18,"address"],[620,21,519,25],[620,24,519,28],[620,25,519,29],[620,26,519,30],[620,28,519,32,"ethereum_1"],[620,38,519,42],[620,39,519,43,"getAddress"],[620,49,519,53],[620,51,519,55,"accounts"],[620,59,519,63],[620,60,519,64],[620,61,519,65],[620,62,519,66],[620,63,519,67],[621,8,520,12],[621,12,520,16,"chainId"],[621,19,520,23],[621,22,520,26],[621,23,520,27,"_b"],[621,25,520,29],[621,28,520,32,"options"],[621,35,520,39],[621,40,520,44],[621,44,520,48],[621,48,520,52,"options"],[621,55,520,59],[621,60,520,64],[621,65,520,69],[621,66,520,70],[621,69,520,73],[621,74,520,78],[621,75,520,79],[621,78,520,82,"options"],[621,85,520,89],[621,86,520,90,"signInWithEthereum"],[621,104,520,108],[621,110,520,114],[621,114,520,118],[621,118,520,122,"_b"],[621,120,520,124],[621,125,520,129],[621,130,520,134],[621,131,520,135],[621,134,520,138],[621,139,520,143],[621,140,520,144],[621,143,520,147,"_b"],[621,145,520,149],[621,146,520,150,"chainId"],[621,153,520,157],[622,8,521,12],[622,12,521,16],[622,13,521,17,"chainId"],[622,20,521,24],[622,22,521,26],[623,10,522,16],[623,16,522,22,"chainIdHex"],[623,26,522,32],[623,29,522,35],[623,35,522,41,"resolvedWallet"],[623,49,522,55],[623,50,522,56,"request"],[623,57,522,63],[623,58,522,64],[624,12,523,20,"method"],[624,18,523,26],[624,20,523,28],[625,10,524,16],[625,11,524,17],[625,12,524,18],[626,10,525,16,"chainId"],[626,17,525,23],[626,20,525,26],[626,21,525,27],[626,22,525,28],[626,24,525,30,"ethereum_1"],[626,34,525,40],[626,35,525,41,"fromHex"],[626,42,525,48],[626,44,525,50,"chainIdHex"],[626,54,525,60],[626,55,525,61],[627,8,526,12],[628,8,527,12],[628,14,527,18,"siweMessage"],[628,25,527,29],[628,28,527,32],[629,10,528,16,"domain"],[629,16,528,22],[629,18,528,24,"url"],[629,21,528,27],[629,22,528,28,"host"],[629,26,528,32],[630,10,529,16,"address"],[630,17,529,23],[630,19,529,25,"address"],[630,26,529,32],[631,10,530,16,"statement"],[631,19,530,25],[631,21,530,27,"statement"],[631,30,530,36],[632,10,531,16,"uri"],[632,13,531,19],[632,15,531,21,"url"],[632,18,531,24],[632,19,531,25,"href"],[632,23,531,29],[633,10,532,16,"version"],[633,17,532,23],[633,19,532,25],[633,22,532,28],[634,10,533,16,"chainId"],[634,17,533,23],[634,19,533,25,"chainId"],[634,26,533,32],[635,10,534,16,"nonce"],[635,15,534,21],[635,17,534,23],[635,18,534,24,"_c"],[635,20,534,26],[635,23,534,29,"options"],[635,30,534,36],[635,35,534,41],[635,39,534,45],[635,43,534,49,"options"],[635,50,534,56],[635,55,534,61],[635,60,534,66],[635,61,534,67],[635,64,534,70],[635,69,534,75],[635,70,534,76],[635,73,534,79,"options"],[635,80,534,86],[635,81,534,87,"signInWithEthereum"],[635,99,534,105],[635,105,534,111],[635,109,534,115],[635,113,534,119,"_c"],[635,115,534,121],[635,120,534,126],[635,125,534,131],[635,126,534,132],[635,129,534,135],[635,134,534,140],[635,135,534,141],[635,138,534,144,"_c"],[635,140,534,146],[635,141,534,147,"nonce"],[635,146,534,152],[636,10,535,16,"issuedAt"],[636,18,535,24],[636,20,535,26],[636,21,535,27,"_e"],[636,23,535,29],[636,26,535,32],[636,27,535,33,"_d"],[636,29,535,35],[636,32,535,38,"options"],[636,39,535,45],[636,44,535,50],[636,48,535,54],[636,52,535,58,"options"],[636,59,535,65],[636,64,535,70],[636,69,535,75],[636,70,535,76],[636,73,535,79],[636,78,535,84],[636,79,535,85],[636,82,535,88,"options"],[636,89,535,95],[636,90,535,96,"signInWithEthereum"],[636,108,535,114],[636,114,535,120],[636,118,535,124],[636,122,535,128,"_d"],[636,124,535,130],[636,129,535,135],[636,134,535,140],[636,135,535,141],[636,138,535,144],[636,143,535,149],[636,144,535,150],[636,147,535,153,"_d"],[636,149,535,155],[636,150,535,156,"issuedAt"],[636,158,535,164],[636,164,535,170],[636,168,535,174],[636,172,535,178,"_e"],[636,174,535,180],[636,179,535,185],[636,184,535,190],[636,185,535,191],[636,188,535,194,"_e"],[636,190,535,196],[636,193,535,199],[636,197,535,203,"Date"],[636,201,535,207],[636,202,535,208],[636,203,535,209],[637,10,536,16,"expirationTime"],[637,24,536,30],[637,26,536,32],[637,27,536,33,"_f"],[637,29,536,35],[637,32,536,38,"options"],[637,39,536,45],[637,44,536,50],[637,48,536,54],[637,52,536,58,"options"],[637,59,536,65],[637,64,536,70],[637,69,536,75],[637,70,536,76],[637,73,536,79],[637,78,536,84],[637,79,536,85],[637,82,536,88,"options"],[637,89,536,95],[637,90,536,96,"signInWithEthereum"],[637,108,536,114],[637,114,536,120],[637,118,536,124],[637,122,536,128,"_f"],[637,124,536,130],[637,129,536,135],[637,134,536,140],[637,135,536,141],[637,138,536,144],[637,143,536,149],[637,144,536,150],[637,147,536,153,"_f"],[637,149,536,155],[637,150,536,156,"expirationTime"],[637,164,536,170],[638,10,537,16,"notBefore"],[638,19,537,25],[638,21,537,27],[638,22,537,28,"_g"],[638,24,537,30],[638,27,537,33,"options"],[638,34,537,40],[638,39,537,45],[638,43,537,49],[638,47,537,53,"options"],[638,54,537,60],[638,59,537,65],[638,64,537,70],[638,65,537,71],[638,68,537,74],[638,73,537,79],[638,74,537,80],[638,77,537,83,"options"],[638,84,537,90],[638,85,537,91,"signInWithEthereum"],[638,103,537,109],[638,109,537,115],[638,113,537,119],[638,117,537,123,"_g"],[638,119,537,125],[638,124,537,130],[638,129,537,135],[638,130,537,136],[638,133,537,139],[638,138,537,144],[638,139,537,145],[638,142,537,148,"_g"],[638,144,537,150],[638,145,537,151,"notBefore"],[638,154,537,160],[639,10,538,16,"requestId"],[639,19,538,25],[639,21,538,27],[639,22,538,28,"_h"],[639,24,538,30],[639,27,538,33,"options"],[639,34,538,40],[639,39,538,45],[639,43,538,49],[639,47,538,53,"options"],[639,54,538,60],[639,59,538,65],[639,64,538,70],[639,65,538,71],[639,68,538,74],[639,73,538,79],[639,74,538,80],[639,77,538,83,"options"],[639,84,538,90],[639,85,538,91,"signInWithEthereum"],[639,103,538,109],[639,109,538,115],[639,113,538,119],[639,117,538,123,"_h"],[639,119,538,125],[639,124,538,130],[639,129,538,135],[639,130,538,136],[639,133,538,139],[639,138,538,144],[639,139,538,145],[639,142,538,148,"_h"],[639,144,538,150],[639,145,538,151,"requestId"],[639,154,538,160],[640,10,539,16,"resources"],[640,19,539,25],[640,21,539,27],[640,22,539,28,"_j"],[640,24,539,30],[640,27,539,33,"options"],[640,34,539,40],[640,39,539,45],[640,43,539,49],[640,47,539,53,"options"],[640,54,539,60],[640,59,539,65],[640,64,539,70],[640,65,539,71],[640,68,539,74],[640,73,539,79],[640,74,539,80],[640,77,539,83,"options"],[640,84,539,90],[640,85,539,91,"signInWithEthereum"],[640,103,539,109],[640,109,539,115],[640,113,539,119],[640,117,539,123,"_j"],[640,119,539,125],[640,124,539,130],[640,129,539,135],[640,130,539,136],[640,133,539,139],[640,138,539,144],[640,139,539,145],[640,142,539,148,"_j"],[640,144,539,150],[640,145,539,151,"resources"],[641,8,540,12],[641,9,540,13],[642,8,541,12,"message"],[642,15,541,19],[642,18,541,22],[642,19,541,23],[642,20,541,24],[642,22,541,26,"ethereum_1"],[642,32,541,36],[642,33,541,37,"createSiweMessage"],[642,50,541,54],[642,52,541,56,"siweMessage"],[642,63,541,67],[642,64,541,68],[643,8,542,12],[644,8,543,12,"signature"],[644,17,543,21],[644,20,543,25],[644,26,543,31,"resolvedWallet"],[644,40,543,45],[644,41,543,46,"request"],[644,48,543,53],[644,49,543,54],[645,10,544,16,"method"],[645,16,544,22],[645,18,544,24],[645,33,544,39],[646,10,545,16,"params"],[646,16,545,22],[646,18,545,24],[646,19,545,25],[646,20,545,26],[646,21,545,27],[646,23,545,29,"ethereum_1"],[646,33,545,39],[646,34,545,40,"toHex"],[646,39,545,45],[646,41,545,47,"message"],[646,48,545,54],[646,49,545,55],[646,51,545,57,"address"],[646,58,545,64],[647,8,546,12],[647,9,546,13],[647,10,546,15],[648,6,547,8],[649,6,548,8],[649,10,548,12],[650,8,549,12],[650,14,549,18],[651,10,549,20,"data"],[651,14,549,24],[652,10,549,26,"error"],[653,8,549,32],[653,9,549,33],[653,12,549,36],[653,18,549,42],[653,19,549,43],[653,20,549,44],[653,22,549,46,"fetch_1"],[653,29,549,53],[653,30,549,54,"_request"],[653,38,549,62],[653,40,549,64],[653,44,549,68],[653,45,549,69,"fetch"],[653,50,549,74],[653,52,549,76],[653,58,549,82],[653,60,549,84],[653,63,549,87],[653,67,549,91],[653,68,549,92,"url"],[653,71,549,95],[653,95,549,119],[653,97,549,121],[654,10,550,16,"headers"],[654,17,550,23],[654,19,550,25],[654,23,550,29],[654,24,550,30,"headers"],[654,31,550,37],[655,10,551,16,"body"],[655,14,551,20],[655,16,551,22,"Object"],[655,22,551,28],[655,23,551,29,"assign"],[655,29,551,35],[655,30,551,36],[656,12,551,38,"chain"],[656,17,551,43],[656,19,551,45],[656,29,551,55],[657,12,551,57,"message"],[657,19,551,64],[658,12,552,20,"signature"],[659,10,552,30],[659,11,552,31],[659,13,552,34],[659,14,552,35],[659,15,552,36,"_k"],[659,17,552,38],[659,20,552,41,"credentials"],[659,31,552,52],[659,32,552,53,"options"],[659,39,552,60],[659,45,552,66],[659,49,552,70],[659,53,552,74,"_k"],[659,55,552,76],[659,60,552,81],[659,65,552,86],[659,66,552,87],[659,69,552,90],[659,74,552,95],[659,75,552,96],[659,78,552,99,"_k"],[659,80,552,101],[659,81,552,102,"captchaToken"],[659,93,552,114],[659,97,553,22],[660,12,553,24,"gotrue_meta_security"],[660,32,553,44],[660,34,553,46],[661,14,553,48,"captcha_token"],[661,27,553,61],[661,29,553,63],[661,30,553,64,"_l"],[661,32,553,66],[661,35,553,69,"credentials"],[661,46,553,80],[661,47,553,81,"options"],[661,54,553,88],[661,60,553,94],[661,64,553,98],[661,68,553,102,"_l"],[661,70,553,104],[661,75,553,109],[661,80,553,114],[661,81,553,115],[661,84,553,118],[661,89,553,123],[661,90,553,124],[661,93,553,127,"_l"],[661,95,553,129],[661,96,553,130,"captchaToken"],[662,12,553,143],[663,10,553,145],[663,11,553,146],[663,14,554,22],[663,18,554,27],[663,19,554,28],[664,10,555,16,"xform"],[664,15,555,21],[664,17,555,23,"fetch_1"],[664,24,555,30],[664,25,555,31,"_sessionResponse"],[665,8,556,12],[665,9,556,13],[665,10,556,14],[666,8,557,12],[666,12,557,16,"error"],[666,17,557,21],[666,19,557,23],[667,10,558,16],[667,16,558,22,"error"],[667,21,558,27],[668,8,559,12],[669,8,560,12],[669,12,560,16],[669,13,560,17,"data"],[669,17,560,21],[669,21,560,25],[669,22,560,26,"data"],[669,26,560,30],[669,27,560,31,"session"],[669,34,560,38],[669,38,560,42],[669,39,560,43,"data"],[669,43,560,47],[669,44,560,48,"user"],[669,48,560,52],[669,50,560,54],[670,10,561,16],[670,17,561,23],[671,12,562,20,"data"],[671,16,562,24],[671,18,562,26],[672,14,562,28,"user"],[672,18,562,32],[672,20,562,34],[672,24,562,38],[673,14,562,40,"session"],[673,21,562,47],[673,23,562,49],[674,12,562,54],[674,13,562,55],[675,12,563,20,"error"],[675,17,563,25],[675,19,563,27],[675,23,563,31,"errors_1"],[675,31,563,39],[675,32,563,40,"AuthInvalidTokenResponseError"],[675,61,563,69],[675,62,563,70],[676,10,564,16],[676,11,564,17],[677,8,565,12],[678,8,566,12],[678,12,566,16,"data"],[678,16,566,20],[678,17,566,21,"session"],[678,24,566,28],[678,26,566,30],[679,10,567,16],[679,16,567,22],[679,20,567,26],[679,21,567,27,"_saveSession"],[679,33,567,39],[679,34,567,40,"data"],[679,38,567,44],[679,39,567,45,"session"],[679,46,567,52],[679,47,567,53],[680,10,568,16],[680,16,568,22],[680,20,568,26],[680,21,568,27,"_notifyAllSubscribers"],[680,42,568,48],[680,43,568,49],[680,54,568,60],[680,56,568,62,"data"],[680,60,568,66],[680,61,568,67,"session"],[680,68,568,74],[680,69,568,75],[681,8,569,12],[682,8,570,12],[682,15,570,19],[683,10,570,21,"data"],[683,14,570,25],[683,16,570,27,"Object"],[683,22,570,33],[683,23,570,34,"assign"],[683,29,570,40],[683,30,570,41],[683,31,570,42],[683,32,570,43],[683,34,570,45,"data"],[683,38,570,49],[683,39,570,50],[684,10,570,52,"error"],[685,8,570,58],[685,9,570,59],[686,6,571,8],[686,7,571,9],[686,8,572,8],[686,15,572,15,"error"],[686,20,572,20],[686,22,572,22],[687,8,573,12],[687,12,573,16],[687,13,573,17],[687,14,573,18],[687,16,573,20,"errors_1"],[687,24,573,28],[687,25,573,29,"isAuthError"],[687,36,573,40],[687,38,573,42,"error"],[687,43,573,47],[687,44,573,48],[687,46,573,50],[688,10,574,16],[688,17,574,23],[689,12,574,25,"data"],[689,16,574,29],[689,18,574,31],[690,14,574,33,"user"],[690,18,574,37],[690,20,574,39],[690,24,574,43],[691,14,574,45,"session"],[691,21,574,52],[691,23,574,54],[692,12,574,59],[692,13,574,60],[693,12,574,62,"error"],[694,10,574,68],[694,11,574,69],[695,8,575,12],[696,8,576,12],[696,14,576,18,"error"],[696,19,576,23],[697,6,577,8],[698,4,578,4],[699,4,579,4],[699,10,579,10,"signInWithSolana"],[699,26,579,26,"signInWithSolana"],[699,27,579,27,"credentials"],[699,38,579,38],[699,40,579,40],[700,6,580,8],[700,10,580,12,"_a"],[700,12,580,14],[700,14,580,16,"_b"],[700,16,580,18],[700,18,580,20,"_c"],[700,20,580,22],[700,22,580,24,"_d"],[700,24,580,26],[700,26,580,28,"_e"],[700,28,580,30],[700,30,580,32,"_f"],[700,32,580,34],[700,34,580,36,"_g"],[700,36,580,38],[700,38,580,40,"_h"],[700,40,580,42],[700,42,580,44,"_j"],[700,44,580,46],[700,46,580,48,"_k"],[700,48,580,50],[700,50,580,52,"_l"],[700,52,580,54],[700,54,580,56,"_m"],[700,56,580,58],[701,6,581,8],[701,10,581,12,"message"],[701,17,581,19],[702,6,582,8],[702,10,582,12,"signature"],[702,19,582,21],[703,6,583,8],[703,10,583,12],[703,19,583,21],[703,23,583,25,"credentials"],[703,34,583,36],[703,36,583,38],[704,8,584,12,"message"],[704,15,584,19],[704,18,584,22,"credentials"],[704,29,584,33],[704,30,584,34,"message"],[704,37,584,41],[705,8,585,12,"signature"],[705,17,585,21],[705,20,585,24,"credentials"],[705,31,585,35],[705,32,585,36,"signature"],[705,41,585,45],[706,6,586,8],[706,7,586,9],[706,13,587,13],[707,8,588,12],[707,14,588,18],[708,10,588,20,"chain"],[708,15,588,25],[709,10,588,27,"wallet"],[709,16,588,33],[710,10,588,35,"statement"],[710,19,588,44],[711,10,588,46,"options"],[712,8,588,54],[712,9,588,55],[712,12,588,58,"credentials"],[712,23,588,69],[713,8,589,12],[713,12,589,16,"resolvedWallet"],[713,26,589,30],[714,8,590,12],[714,12,590,16],[714,13,590,17],[714,14,590,18],[714,15,590,19],[714,17,590,21,"helpers_1"],[714,26,590,30],[714,27,590,31,"isBrowser"],[714,36,590,40],[714,38,590,42],[714,39,590,43],[714,41,590,45],[715,10,591,16],[715,14,591,20],[715,21,591,27,"wallet"],[715,27,591,33],[715,32,591,38],[715,40,591,46],[715,44,591,50],[715,46,591,52,"options"],[715,53,591,59],[715,58,591,64],[715,62,591,68],[715,66,591,72,"options"],[715,73,591,79],[715,78,591,84],[715,83,591,89],[715,84,591,90],[715,87,591,93],[715,92,591,98],[715,93,591,99],[715,96,591,102,"options"],[715,103,591,109],[715,104,591,110,"url"],[715,107,591,113],[715,108,591,114],[715,110,591,116],[716,12,592,20],[716,18,592,26],[716,22,592,30,"Error"],[716,27,592,35],[716,28,592,36],[716,115,592,123],[716,116,592,124],[717,10,593,16],[718,10,594,16,"resolvedWallet"],[718,24,594,30],[718,27,594,33,"wallet"],[718,33,594,39],[719,8,595,12],[719,9,595,13],[719,15,596,17],[719,19,596,21],[719,26,596,28,"wallet"],[719,32,596,34],[719,37,596,39],[719,45,596,47],[719,47,596,49],[720,10,597,16,"resolvedWallet"],[720,24,597,30],[720,27,597,33,"wallet"],[720,33,597,39],[721,8,598,12],[721,9,598,13],[721,15,599,17],[722,10,600,16],[722,16,600,22,"windowAny"],[722,25,600,31],[722,28,600,34,"window"],[722,34,600,40],[723,10,601,16],[723,14,601,20],[723,22,601,28],[723,26,601,32,"windowAny"],[723,35,601,41],[723,39,602,20],[723,46,602,27,"windowAny"],[723,55,602,36],[723,56,602,37,"solana"],[723,62,602,43],[723,67,602,48],[723,75,602,56],[723,80,603,22],[723,88,603,30],[723,92,603,34,"windowAny"],[723,101,603,43],[723,102,603,44,"solana"],[723,108,603,50],[723,112,603,54],[723,119,603,61,"windowAny"],[723,128,603,70],[723,129,603,71,"solana"],[723,135,603,77],[723,136,603,78,"signIn"],[723,142,603,84],[723,147,603,89],[723,157,603,99],[723,161,604,25],[723,174,604,38],[723,178,604,42,"windowAny"],[723,187,604,51],[723,188,604,52,"solana"],[723,194,604,58],[723,198,605,28],[723,205,605,35,"windowAny"],[723,214,605,44],[723,215,605,45,"solana"],[723,221,605,51],[723,222,605,52,"signMessage"],[723,233,605,63],[723,238,605,68],[723,248,605,79],[723,249,605,80],[723,251,605,82],[724,12,606,20,"resolvedWallet"],[724,26,606,34],[724,29,606,37,"windowAny"],[724,38,606,46],[724,39,606,47,"solana"],[724,45,606,53],[725,10,607,16],[725,11,607,17],[725,17,608,21],[726,12,609,20],[726,18,609,26],[726,22,609,30,"Error"],[726,27,609,35],[726,28,609,36],[726,339,609,347],[726,340,609,348],[727,10,610,16],[728,8,611,12],[729,8,612,12],[729,14,612,18,"url"],[729,17,612,21],[729,20,612,24],[729,24,612,28,"URL"],[729,27,612,31],[729,28,612,32],[729,29,612,33,"_a"],[729,31,612,35],[729,34,612,38,"options"],[729,41,612,45],[729,46,612,50],[729,50,612,54],[729,54,612,58,"options"],[729,61,612,65],[729,66,612,70],[729,71,612,75],[729,72,612,76],[729,75,612,79],[729,80,612,84],[729,81,612,85],[729,84,612,88,"options"],[729,91,612,95],[729,92,612,96,"url"],[729,95,612,99],[729,101,612,105],[729,105,612,109],[729,109,612,113,"_a"],[729,111,612,115],[729,116,612,120],[729,121,612,125],[729,122,612,126],[729,125,612,129,"_a"],[729,127,612,131],[729,130,612,134,"window"],[729,136,612,140],[729,137,612,141,"location"],[729,145,612,149],[729,146,612,150,"href"],[729,150,612,154],[729,151,612,155],[730,8,613,12],[730,12,613,16],[730,20,613,24],[730,24,613,28,"resolvedWallet"],[730,38,613,42],[730,42,613,46,"resolvedWallet"],[730,56,613,60],[730,57,613,61,"signIn"],[730,63,613,67],[730,65,613,69],[731,10,614,16],[731,16,614,22,"output"],[731,22,614,28],[731,25,614,31],[731,31,614,37,"resolvedWallet"],[731,45,614,51],[731,46,614,52,"signIn"],[731,52,614,58],[731,53,614,59,"Object"],[731,59,614,65],[731,60,614,66,"assign"],[731,66,614,72],[731,67,614,73,"Object"],[731,73,614,79],[731,74,614,80,"assign"],[731,80,614,86],[731,81,614,87,"Object"],[731,87,614,93],[731,88,614,94,"assign"],[731,94,614,100],[731,95,614,101],[732,12,614,103,"issuedAt"],[732,20,614,111],[732,22,614,113],[732,26,614,117,"Date"],[732,30,614,121],[732,31,614,122],[732,32,614,123],[732,33,614,124,"toISOString"],[732,44,614,135],[732,45,614,136],[733,10,614,138],[733,11,614,139],[733,13,614,141,"options"],[733,20,614,148],[733,25,614,153],[733,29,614,157],[733,33,614,161,"options"],[733,40,614,168],[733,45,614,173],[733,50,614,178],[733,51,614,179],[733,54,614,182],[733,59,614,187],[733,60,614,188],[733,63,614,191,"options"],[733,70,614,198],[733,71,614,199,"signInWithSolana"],[733,87,614,215],[733,88,614,216],[733,90,614,218],[734,12,615,20],[735,12,616,20,"version"],[735,19,616,27],[735,21,616,29],[735,24,616,32],[736,12,616,34,"domain"],[736,18,616,40],[736,20,616,42,"url"],[736,23,616,45],[736,24,616,46,"host"],[736,28,616,50],[737,12,616,52,"uri"],[737,15,616,55],[737,17,616,57,"url"],[737,20,616,60],[737,21,616,61,"href"],[738,10,616,66],[738,11,616,67],[738,12,616,68],[738,14,616,71,"statement"],[738,23,616,80],[738,26,616,83],[739,12,616,85,"statement"],[740,10,616,95],[740,11,616,96],[740,14,616,99],[740,18,616,104],[740,19,616,105],[740,20,616,106],[741,10,617,16],[741,14,617,20,"outputToProcess"],[741,29,617,35],[742,10,618,16],[742,14,618,20,"Array"],[742,19,618,25],[742,20,618,26,"isArray"],[742,27,618,33],[742,28,618,34,"output"],[742,34,618,40],[742,35,618,41],[742,39,618,45,"output"],[742,45,618,51],[742,46,618,52],[742,47,618,53],[742,48,618,54],[742,52,618,58],[742,59,618,65,"output"],[742,65,618,71],[742,66,618,72],[742,67,618,73],[742,68,618,74],[742,73,618,79],[742,81,618,87],[742,83,618,89],[743,12,619,20,"outputToProcess"],[743,27,619,35],[743,30,619,38,"output"],[743,36,619,44],[743,37,619,45],[743,38,619,46],[743,39,619,47],[744,10,620,16],[744,11,620,17],[744,17,621,21],[744,21,621,25,"output"],[744,27,621,31],[744,31,622,20],[744,38,622,27,"output"],[744,44,622,33],[744,49,622,38],[744,57,622,46],[744,61,623,20],[744,76,623,35],[744,80,623,39,"output"],[744,86,623,45],[744,90,624,20],[744,101,624,31],[744,105,624,35,"output"],[744,111,624,41],[744,113,624,43],[745,12,625,20,"outputToProcess"],[745,27,625,35],[745,30,625,38,"output"],[745,36,625,44],[746,10,626,16],[746,11,626,17],[746,17,627,21],[747,12,628,20],[747,18,628,26],[747,22,628,30,"Error"],[747,27,628,35],[747,28,628,36],[747,99,628,107],[747,100,628,108],[748,10,629,16],[749,10,630,16],[749,14,630,20],[749,29,630,35],[749,33,630,39,"outputToProcess"],[749,48,630,54],[749,52,631,20],[749,63,631,31],[749,67,631,35,"outputToProcess"],[749,82,631,50],[749,87,632,21],[749,94,632,28,"outputToProcess"],[749,109,632,43],[749,110,632,44,"signedMessage"],[749,123,632,57],[749,128,632,62],[749,136,632,70],[749,140,633,24,"outputToProcess"],[749,155,633,39],[749,156,633,40,"signedMessage"],[749,169,633,53],[749,181,633,65,"Uint8Array"],[749,191,633,75],[749,192,633,76],[749,196,634,20,"outputToProcess"],[749,211,634,35],[749,212,634,36,"signature"],[749,221,634,45],[749,233,634,57,"Uint8Array"],[749,243,634,67],[749,245,634,69],[750,12,635,20,"message"],[750,19,635,27],[750,22,636,24],[750,29,636,31,"outputToProcess"],[750,44,636,46],[750,45,636,47,"signedMessage"],[750,58,636,60],[750,63,636,65],[750,71,636,73],[750,74,637,30,"outputToProcess"],[750,89,637,45],[750,90,637,46,"signedMessage"],[750,103,637,59],[750,106,638,30],[750,110,638,34,"TextDecoder"],[750,121,638,45],[750,122,638,46],[750,123,638,47],[750,124,638,48,"decode"],[750,130,638,54],[750,131,638,55,"outputToProcess"],[750,146,638,70],[750,147,638,71,"signedMessage"],[750,160,638,84],[750,161,638,85],[751,12,639,20,"signature"],[751,21,639,29],[751,24,639,32,"outputToProcess"],[751,39,639,47],[751,40,639,48,"signature"],[751,49,639,57],[752,10,640,16],[752,11,640,17],[752,17,641,21],[753,12,642,20],[753,18,642,26],[753,22,642,30,"Error"],[753,27,642,35],[753,28,642,36],[753,134,642,142],[753,135,642,143],[754,10,643,16],[755,8,644,12],[755,9,644,13],[755,15,645,17],[756,10,646,16],[756,14,646,20],[756,16,646,22],[756,29,646,35],[756,33,646,39,"resolvedWallet"],[756,47,646,53],[756,48,646,54],[756,52,647,20],[756,59,647,27,"resolvedWallet"],[756,73,647,41],[756,74,647,42,"signMessage"],[756,85,647,53],[756,90,647,58],[756,100,647,68],[756,104,648,20],[756,106,648,22],[756,117,648,33],[756,121,648,37,"resolvedWallet"],[756,135,648,51],[756,136,648,52],[756,140,649,20],[756,147,649,27,"resolvedWallet"],[756,161,649,41],[756,166,649,46],[756,174,649,54],[756,178,650,20],[756,179,650,21,"resolvedWallet"],[756,193,650,35],[756,194,650,36,"publicKey"],[756,203,650,45],[756,207,651,20],[756,209,651,22],[756,219,651,32],[756,223,651,36,"resolvedWallet"],[756,237,651,50],[756,238,651,51,"publicKey"],[756,247,651,60],[756,248,651,61],[756,252,652,20],[756,259,652,27,"resolvedWallet"],[756,273,652,41],[756,274,652,42,"publicKey"],[756,283,652,51],[756,284,652,52,"toBase58"],[756,292,652,60],[756,297,652,65],[756,307,652,75],[756,309,652,77],[757,12,653,20],[757,18,653,26],[757,22,653,30,"Error"],[757,27,653,35],[757,28,653,36],[757,125,653,133],[757,126,653,134],[758,10,654,16],[759,10,655,16,"message"],[759,17,655,23],[759,20,655,26],[759,21,656,20],[759,24,656,23,"url"],[759,27,656,26],[759,28,656,27,"host"],[759,32,656,31],[759,81,656,80],[759,83,657,20,"resolvedWallet"],[759,97,657,34],[759,98,657,35,"publicKey"],[759,107,657,44],[759,108,657,45,"toBase58"],[759,116,657,53],[759,117,657,54],[759,118,657,55],[759,120,658,20],[759,124,658,24,"statement"],[759,133,658,33],[759,136,658,36],[759,137,658,37],[759,139,658,39],[759,141,658,41,"statement"],[759,150,658,50],[759,152,658,52],[759,154,658,54],[759,155,658,55],[759,158,658,58],[759,159,658,59],[759,161,658,61],[759,162,658,62],[759,163,658,63],[759,165,659,20],[759,177,659,32],[759,179,660,20],[759,187,660,28,"url"],[759,190,660,31],[759,191,660,32,"href"],[759,195,660,36],[759,197,660,38],[759,199,661,20],[759,213,661,34],[759,214,661,35,"_c"],[759,216,661,37],[759,219,661,40],[759,220,661,41,"_b"],[759,222,661,43],[759,225,661,46,"options"],[759,232,661,53],[759,237,661,58],[759,241,661,62],[759,245,661,66,"options"],[759,252,661,73],[759,257,661,78],[759,262,661,83],[759,263,661,84],[759,266,661,87],[759,271,661,92],[759,272,661,93],[759,275,661,96,"options"],[759,282,661,103],[759,283,661,104,"signInWithSolana"],[759,299,661,120],[759,305,661,126],[759,309,661,130],[759,313,661,134,"_b"],[759,315,661,136],[759,320,661,141],[759,325,661,146],[759,326,661,147],[759,329,661,150],[759,334,661,155],[759,335,661,156],[759,338,661,159,"_b"],[759,340,661,161],[759,341,661,162,"issuedAt"],[759,349,661,170],[759,355,661,176],[759,359,661,180],[759,363,661,184,"_c"],[759,365,661,186],[759,370,661,191],[759,375,661,196],[759,376,661,197],[759,379,661,200,"_c"],[759,381,661,202],[759,384,661,205],[759,388,661,209,"Date"],[759,392,661,213],[759,393,661,214],[759,394,661,215],[759,395,661,216,"toISOString"],[759,406,661,227],[759,407,661,228],[759,408,661,229],[759,410,661,231],[759,412,662,20],[759,416,662,24],[759,417,662,25],[759,418,662,26,"_d"],[759,420,662,28],[759,423,662,31,"options"],[759,430,662,38],[759,435,662,43],[759,439,662,47],[759,443,662,51,"options"],[759,450,662,58],[759,455,662,63],[759,460,662,68],[759,461,662,69],[759,464,662,72],[759,469,662,77],[759,470,662,78],[759,473,662,81,"options"],[759,480,662,88],[759,481,662,89,"signInWithSolana"],[759,497,662,105],[759,503,662,111],[759,507,662,115],[759,511,662,119,"_d"],[759,513,662,121],[759,518,662,126],[759,523,662,131],[759,524,662,132],[759,527,662,135],[759,532,662,140],[759,533,662,141],[759,536,662,144,"_d"],[759,538,662,146],[759,539,662,147,"notBefore"],[759,548,662,156],[759,552,663,26],[759,553,663,27],[759,568,663,42,"options"],[759,575,663,49],[759,576,663,50,"signInWithSolana"],[759,592,663,66],[759,593,663,67,"notBefore"],[759,602,663,76],[759,604,663,78],[759,605,663,79],[759,608,664,26],[759,610,664,28],[759,611,664,29],[759,613,665,20],[759,617,665,24],[759,618,665,25],[759,619,665,26,"_e"],[759,621,665,28],[759,624,665,31,"options"],[759,631,665,38],[759,636,665,43],[759,640,665,47],[759,644,665,51,"options"],[759,651,665,58],[759,656,665,63],[759,661,665,68],[759,662,665,69],[759,665,665,72],[759,670,665,77],[759,671,665,78],[759,674,665,81,"options"],[759,681,665,88],[759,682,665,89,"signInWithSolana"],[759,698,665,105],[759,704,665,111],[759,708,665,115],[759,712,665,119,"_e"],[759,714,665,121],[759,719,665,126],[759,724,665,131],[759,725,665,132],[759,728,665,135],[759,733,665,140],[759,734,665,141],[759,737,665,144,"_e"],[759,739,665,146],[759,740,665,147,"expirationTime"],[759,754,665,161],[759,758,666,26],[759,759,666,27],[759,779,666,47,"options"],[759,786,666,54],[759,787,666,55,"signInWithSolana"],[759,803,666,71],[759,804,666,72,"expirationTime"],[759,818,666,86],[759,820,666,88],[759,821,666,89],[759,824,667,26],[759,826,667,28],[759,827,667,29],[759,829,668,20],[759,833,668,24],[759,834,668,25],[759,835,668,26,"_f"],[759,837,668,28],[759,840,668,31,"options"],[759,847,668,38],[759,852,668,43],[759,856,668,47],[759,860,668,51,"options"],[759,867,668,58],[759,872,668,63],[759,877,668,68],[759,878,668,69],[759,881,668,72],[759,886,668,77],[759,887,668,78],[759,890,668,81,"options"],[759,897,668,88],[759,898,668,89,"signInWithSolana"],[759,914,668,105],[759,920,668,111],[759,924,668,115],[759,928,668,119,"_f"],[759,930,668,121],[759,935,668,126],[759,940,668,131],[759,941,668,132],[759,944,668,135],[759,949,668,140],[759,950,668,141],[759,953,668,144,"_f"],[759,955,668,146],[759,956,668,147,"chainId"],[759,963,668,154],[759,967,669,26],[759,968,669,27],[759,981,669,40,"options"],[759,988,669,47],[759,989,669,48,"signInWithSolana"],[759,1005,669,64],[759,1006,669,65,"chainId"],[759,1013,669,72],[759,1015,669,74],[759,1016,669,75],[759,1019,670,26],[759,1021,670,28],[759,1022,670,29],[759,1024,671,20],[759,1028,671,24],[759,1029,671,25],[759,1030,671,26,"_g"],[759,1032,671,28],[759,1035,671,31,"options"],[759,1042,671,38],[759,1047,671,43],[759,1051,671,47],[759,1055,671,51,"options"],[759,1062,671,58],[759,1067,671,63],[759,1072,671,68],[759,1073,671,69],[759,1076,671,72],[759,1081,671,77],[759,1082,671,78],[759,1085,671,81,"options"],[759,1092,671,88],[759,1093,671,89,"signInWithSolana"],[759,1109,671,105],[759,1115,671,111],[759,1119,671,115],[759,1123,671,119,"_g"],[759,1125,671,121],[759,1130,671,126],[759,1135,671,131],[759,1136,671,132],[759,1139,671,135],[759,1144,671,140],[759,1145,671,141],[759,1148,671,144,"_g"],[759,1150,671,146],[759,1151,671,147,"nonce"],[759,1156,671,152],[759,1160,671,156],[759,1161,671,157],[759,1171,671,167,"options"],[759,1178,671,174],[759,1179,671,175,"signInWithSolana"],[759,1195,671,191],[759,1196,671,192,"nonce"],[759,1201,671,197],[759,1203,671,199],[759,1204,671,200],[759,1207,671,203],[759,1209,671,205],[759,1210,671,206],[759,1212,672,20],[759,1216,672,24],[759,1217,672,25],[759,1218,672,26,"_h"],[759,1220,672,28],[759,1223,672,31,"options"],[759,1230,672,38],[759,1235,672,43],[759,1239,672,47],[759,1243,672,51,"options"],[759,1250,672,58],[759,1255,672,63],[759,1260,672,68],[759,1261,672,69],[759,1264,672,72],[759,1269,672,77],[759,1270,672,78],[759,1273,672,81,"options"],[759,1280,672,88],[759,1281,672,89,"signInWithSolana"],[759,1297,672,105],[759,1303,672,111],[759,1307,672,115],[759,1311,672,119,"_h"],[759,1313,672,121],[759,1318,672,126],[759,1323,672,131],[759,1324,672,132],[759,1327,672,135],[759,1332,672,140],[759,1333,672,141],[759,1336,672,144,"_h"],[759,1338,672,146],[759,1339,672,147,"requestId"],[759,1348,672,156],[759,1352,673,26],[759,1353,673,27],[759,1368,673,42,"options"],[759,1375,673,49],[759,1376,673,50,"signInWithSolana"],[759,1392,673,66],[759,1393,673,67,"requestId"],[759,1402,673,76],[759,1404,673,78],[759,1405,673,79],[759,1408,674,26],[759,1410,674,28],[759,1411,674,29],[759,1413,675,20],[759,1417,675,24],[759,1418,675,25],[759,1419,675,26,"_k"],[759,1421,675,28],[759,1424,675,31],[759,1425,675,32,"_j"],[759,1427,675,34],[759,1430,675,37,"options"],[759,1437,675,44],[759,1442,675,49],[759,1446,675,53],[759,1450,675,57,"options"],[759,1457,675,64],[759,1462,675,69],[759,1467,675,74],[759,1468,675,75],[759,1471,675,78],[759,1476,675,83],[759,1477,675,84],[759,1480,675,87,"options"],[759,1487,675,94],[759,1488,675,95,"signInWithSolana"],[759,1504,675,111],[759,1510,675,117],[759,1514,675,121],[759,1518,675,125,"_j"],[759,1520,675,127],[759,1525,675,132],[759,1530,675,137],[759,1531,675,138],[759,1534,675,141],[759,1539,675,146],[759,1540,675,147],[759,1543,675,150,"_j"],[759,1545,675,152],[759,1546,675,153,"resources"],[759,1555,675,162],[759,1561,675,168],[759,1565,675,172],[759,1569,675,176,"_k"],[759,1571,675,178],[759,1576,675,183],[759,1581,675,188],[759,1582,675,189],[759,1585,675,192],[759,1590,675,197],[759,1591,675,198],[759,1594,675,201,"_k"],[759,1596,675,203],[759,1597,675,204,"length"],[759,1603,675,210],[759,1607,676,26],[759,1608,677,28],[759,1619,677,39],[759,1621,678,28],[759,1624,678,31,"options"],[759,1631,678,38],[759,1632,678,39,"signInWithSolana"],[759,1648,678,55],[759,1649,678,56,"resources"],[759,1658,678,65],[759,1659,678,66,"map"],[759,1662,678,69],[759,1663,678,71,"resource"],[759,1671,678,79],[759,1675,678,84],[759,1680,678,89,"resource"],[759,1688,678,97],[759,1690,678,99],[759,1691,678,100],[759,1692,679,25],[759,1695,680,26],[759,1697,680,28],[759,1698,680,29],[759,1699,681,17],[759,1700,681,18,"join"],[759,1704,681,22],[759,1705,681,23],[759,1709,681,27],[759,1710,681,28],[760,10,682,16],[760,16,682,22,"maybeSignature"],[760,30,682,36],[760,33,682,39],[760,39,682,45,"resolvedWallet"],[760,53,682,59],[760,54,682,60,"signMessage"],[760,65,682,71],[760,66,682,72],[760,70,682,76,"TextEncoder"],[760,81,682,87],[760,82,682,88],[760,83,682,89],[760,84,682,90,"encode"],[760,90,682,96],[760,91,682,97,"message"],[760,98,682,104],[760,99,682,105],[760,101,682,107],[760,107,682,113],[760,108,682,114],[761,10,683,16],[761,14,683,20],[761,15,683,21,"maybeSignature"],[761,29,683,35],[761,33,683,39],[761,35,683,41,"maybeSignature"],[761,49,683,55],[761,61,683,67,"Uint8Array"],[761,71,683,77],[761,72,683,78],[761,74,683,80],[762,12,684,20],[762,18,684,26],[762,22,684,30,"Error"],[762,27,684,35],[762,28,684,36],[762,102,684,110],[762,103,684,111],[763,10,685,16],[764,10,686,16,"signature"],[764,19,686,25],[764,22,686,28,"maybeSignature"],[764,36,686,42],[765,8,687,12],[766,6,688,8],[767,6,689,8],[767,10,689,12],[768,8,690,12],[768,14,690,18],[769,10,690,20,"data"],[769,14,690,24],[770,10,690,26,"error"],[771,8,690,32],[771,9,690,33],[771,12,690,36],[771,18,690,42],[771,19,690,43],[771,20,690,44],[771,22,690,46,"fetch_1"],[771,29,690,53],[771,30,690,54,"_request"],[771,38,690,62],[771,40,690,64],[771,44,690,68],[771,45,690,69,"fetch"],[771,50,690,74],[771,52,690,76],[771,58,690,82],[771,60,690,84],[771,63,690,87],[771,67,690,91],[771,68,690,92,"url"],[771,71,690,95],[771,95,690,119],[771,97,690,121],[772,10,691,16,"headers"],[772,17,691,23],[772,19,691,25],[772,23,691,29],[772,24,691,30,"headers"],[772,31,691,37],[773,10,692,16,"body"],[773,14,692,20],[773,16,692,22,"Object"],[773,22,692,28],[773,23,692,29,"assign"],[773,29,692,35],[773,30,692,36],[774,12,692,38,"chain"],[774,17,692,43],[774,19,692,45],[774,27,692,53],[775,12,692,55,"message"],[775,19,692,62],[776,12,692,64,"signature"],[776,21,692,73],[776,23,692,75],[776,24,692,76],[776,25,692,77],[776,27,692,79,"base64url_1"],[776,38,692,90],[776,39,692,91,"bytesToBase64URL"],[776,55,692,107],[776,57,692,109,"signature"],[776,66,692,118],[777,10,692,120],[777,11,692,121],[777,13,692,124],[777,14,692,125],[777,15,692,126,"_l"],[777,17,692,128],[777,20,692,131,"credentials"],[777,31,692,142],[777,32,692,143,"options"],[777,39,692,150],[777,45,692,156],[777,49,692,160],[777,53,692,164,"_l"],[777,55,692,166],[777,60,692,171],[777,65,692,176],[777,66,692,177],[777,69,692,180],[777,74,692,185],[777,75,692,186],[777,78,692,189,"_l"],[777,80,692,191],[777,81,692,192,"captchaToken"],[777,93,692,204],[777,97,693,22],[778,12,693,24,"gotrue_meta_security"],[778,32,693,44],[778,34,693,46],[779,14,693,48,"captcha_token"],[779,27,693,61],[779,29,693,63],[779,30,693,64,"_m"],[779,32,693,66],[779,35,693,69,"credentials"],[779,46,693,80],[779,47,693,81,"options"],[779,54,693,88],[779,60,693,94],[779,64,693,98],[779,68,693,102,"_m"],[779,70,693,104],[779,75,693,109],[779,80,693,114],[779,81,693,115],[779,84,693,118],[779,89,693,123],[779,90,693,124],[779,93,693,127,"_m"],[779,95,693,129],[779,96,693,130,"captchaToken"],[780,12,693,143],[781,10,693,145],[781,11,693,146],[781,14,694,22],[781,18,694,27],[781,19,694,28],[782,10,695,16,"xform"],[782,15,695,21],[782,17,695,23,"fetch_1"],[782,24,695,30],[782,25,695,31,"_sessionResponse"],[783,8,696,12],[783,9,696,13],[783,10,696,14],[784,8,697,12],[784,12,697,16,"error"],[784,17,697,21],[784,19,697,23],[785,10,698,16],[785,16,698,22,"error"],[785,21,698,27],[786,8,699,12],[787,8,700,12],[787,12,700,16],[787,13,700,17,"data"],[787,17,700,21],[787,21,700,25],[787,22,700,26,"data"],[787,26,700,30],[787,27,700,31,"session"],[787,34,700,38],[787,38,700,42],[787,39,700,43,"data"],[787,43,700,47],[787,44,700,48,"user"],[787,48,700,52],[787,50,700,54],[788,10,701,16],[788,17,701,23],[789,12,702,20,"data"],[789,16,702,24],[789,18,702,26],[790,14,702,28,"user"],[790,18,702,32],[790,20,702,34],[790,24,702,38],[791,14,702,40,"session"],[791,21,702,47],[791,23,702,49],[792,12,702,54],[792,13,702,55],[793,12,703,20,"error"],[793,17,703,25],[793,19,703,27],[793,23,703,31,"errors_1"],[793,31,703,39],[793,32,703,40,"AuthInvalidTokenResponseError"],[793,61,703,69],[793,62,703,70],[794,10,704,16],[794,11,704,17],[795,8,705,12],[796,8,706,12],[796,12,706,16,"data"],[796,16,706,20],[796,17,706,21,"session"],[796,24,706,28],[796,26,706,30],[797,10,707,16],[797,16,707,22],[797,20,707,26],[797,21,707,27,"_saveSession"],[797,33,707,39],[797,34,707,40,"data"],[797,38,707,44],[797,39,707,45,"session"],[797,46,707,52],[797,47,707,53],[798,10,708,16],[798,16,708,22],[798,20,708,26],[798,21,708,27,"_notifyAllSubscribers"],[798,42,708,48],[798,43,708,49],[798,54,708,60],[798,56,708,62,"data"],[798,60,708,66],[798,61,708,67,"session"],[798,68,708,74],[798,69,708,75],[799,8,709,12],[800,8,710,12],[800,15,710,19],[801,10,710,21,"data"],[801,14,710,25],[801,16,710,27,"Object"],[801,22,710,33],[801,23,710,34,"assign"],[801,29,710,40],[801,30,710,41],[801,31,710,42],[801,32,710,43],[801,34,710,45,"data"],[801,38,710,49],[801,39,710,50],[802,10,710,52,"error"],[803,8,710,58],[803,9,710,59],[804,6,711,8],[804,7,711,9],[804,8,712,8],[804,15,712,15,"error"],[804,20,712,20],[804,22,712,22],[805,8,713,12],[805,12,713,16],[805,13,713,17],[805,14,713,18],[805,16,713,20,"errors_1"],[805,24,713,28],[805,25,713,29,"isAuthError"],[805,36,713,40],[805,38,713,42,"error"],[805,43,713,47],[805,44,713,48],[805,46,713,50],[806,10,714,16],[806,17,714,23],[807,12,714,25,"data"],[807,16,714,29],[807,18,714,31],[808,14,714,33,"user"],[808,18,714,37],[808,20,714,39],[808,24,714,43],[809,14,714,45,"session"],[809,21,714,52],[809,23,714,54],[810,12,714,59],[810,13,714,60],[811,12,714,62,"error"],[812,10,714,68],[812,11,714,69],[813,8,715,12],[814,8,716,12],[814,14,716,18,"error"],[814,19,716,23],[815,6,717,8],[816,4,718,4],[817,4,719,4],[817,10,719,10,"_exchangeCodeForSession"],[817,33,719,33,"_exchangeCodeForSession"],[817,34,719,34,"authCode"],[817,42,719,42],[817,44,719,44],[818,6,720,8],[818,12,720,14,"storageItem"],[818,23,720,25],[818,26,720,28],[818,32,720,34],[818,33,720,35],[818,34,720,36],[818,36,720,38,"helpers_1"],[818,45,720,47],[818,46,720,48,"getItemAsync"],[818,58,720,60],[818,60,720,62],[818,64,720,66],[818,65,720,67,"storage"],[818,72,720,74],[818,74,720,76],[818,77,720,79],[818,81,720,83],[818,82,720,84,"storageKey"],[818,92,720,94],[818,108,720,110],[818,109,720,111],[819,6,721,8],[819,12,721,14],[819,13,721,15,"codeVerifier"],[819,25,721,27],[819,27,721,29,"redirectType"],[819,39,721,41],[819,40,721,42],[819,43,721,45],[819,44,721,46,"storageItem"],[819,55,721,57],[819,60,721,62],[819,64,721,66],[819,68,721,70,"storageItem"],[819,79,721,81],[819,84,721,86],[819,89,721,91],[819,90,721,92],[819,93,721,95,"storageItem"],[819,104,721,106],[819,107,721,109],[819,109,721,111],[819,111,721,113,"split"],[819,116,721,118],[819,117,721,119],[819,120,721,122],[819,121,721,123],[820,6,722,8],[820,10,722,12],[821,8,723,12],[821,14,723,18],[822,10,723,20,"data"],[822,14,723,24],[823,10,723,26,"error"],[824,8,723,32],[824,9,723,33],[824,12,723,36],[824,18,723,42],[824,19,723,43],[824,20,723,44],[824,22,723,46,"fetch_1"],[824,29,723,53],[824,30,723,54,"_request"],[824,38,723,62],[824,40,723,64],[824,44,723,68],[824,45,723,69,"fetch"],[824,50,723,74],[824,52,723,76],[824,58,723,82],[824,60,723,84],[824,63,723,87],[824,67,723,91],[824,68,723,92,"url"],[824,71,723,95],[824,95,723,119],[824,97,723,121],[825,10,724,16,"headers"],[825,17,724,23],[825,19,724,25],[825,23,724,29],[825,24,724,30,"headers"],[825,31,724,37],[826,10,725,16,"body"],[826,14,725,20],[826,16,725,22],[827,12,726,20,"auth_code"],[827,21,726,29],[827,23,726,31,"authCode"],[827,31,726,39],[828,12,727,20,"code_verifier"],[828,25,727,33],[828,27,727,35,"codeVerifier"],[829,10,728,16],[829,11,728,17],[830,10,729,16,"xform"],[830,15,729,21],[830,17,729,23,"fetch_1"],[830,24,729,30],[830,25,729,31,"_sessionResponse"],[831,8,730,12],[831,9,730,13],[831,10,730,14],[832,8,731,12],[832,14,731,18],[832,15,731,19],[832,16,731,20],[832,18,731,22,"helpers_1"],[832,27,731,31],[832,28,731,32,"removeItemAsync"],[832,43,731,47],[832,45,731,49],[832,49,731,53],[832,50,731,54,"storage"],[832,57,731,61],[832,59,731,63],[832,62,731,66],[832,66,731,70],[832,67,731,71,"storageKey"],[832,77,731,81],[832,93,731,97],[832,94,731,98],[833,8,732,12],[833,12,732,16,"error"],[833,17,732,21],[833,19,732,23],[834,10,733,16],[834,16,733,22,"error"],[834,21,733,27],[835,8,734,12],[836,8,735,12],[836,12,735,16],[836,13,735,17,"data"],[836,17,735,21],[836,21,735,25],[836,22,735,26,"data"],[836,26,735,30],[836,27,735,31,"session"],[836,34,735,38],[836,38,735,42],[836,39,735,43,"data"],[836,43,735,47],[836,44,735,48,"user"],[836,48,735,52],[836,50,735,54],[837,10,736,16],[837,17,736,23],[838,12,737,20,"data"],[838,16,737,24],[838,18,737,26],[839,14,737,28,"user"],[839,18,737,32],[839,20,737,34],[839,24,737,38],[840,14,737,40,"session"],[840,21,737,47],[840,23,737,49],[840,27,737,53],[841,14,737,55,"redirectType"],[841,26,737,67],[841,28,737,69],[842,12,737,74],[842,13,737,75],[843,12,738,20,"error"],[843,17,738,25],[843,19,738,27],[843,23,738,31,"errors_1"],[843,31,738,39],[843,32,738,40,"AuthInvalidTokenResponseError"],[843,61,738,69],[843,62,738,70],[844,10,739,16],[844,11,739,17],[845,8,740,12],[846,8,741,12],[846,12,741,16,"data"],[846,16,741,20],[846,17,741,21,"session"],[846,24,741,28],[846,26,741,30],[847,10,742,16],[847,16,742,22],[847,20,742,26],[847,21,742,27,"_saveSession"],[847,33,742,39],[847,34,742,40,"data"],[847,38,742,44],[847,39,742,45,"session"],[847,46,742,52],[847,47,742,53],[848,10,743,16],[848,16,743,22],[848,20,743,26],[848,21,743,27,"_notifyAllSubscribers"],[848,42,743,48],[848,43,743,49],[848,54,743,60],[848,56,743,62,"data"],[848,60,743,66],[848,61,743,67,"session"],[848,68,743,74],[848,69,743,75],[849,8,744,12],[850,8,745,12],[850,15,745,19],[851,10,745,21,"data"],[851,14,745,25],[851,16,745,27,"Object"],[851,22,745,33],[851,23,745,34,"assign"],[851,29,745,40],[851,30,745,41,"Object"],[851,36,745,47],[851,37,745,48,"assign"],[851,43,745,54],[851,44,745,55],[851,45,745,56],[851,46,745,57],[851,48,745,59,"data"],[851,52,745,63],[851,53,745,64],[851,55,745,66],[852,12,745,68,"redirectType"],[852,24,745,80],[852,26,745,82,"redirectType"],[852,38,745,94],[852,43,745,99],[852,47,745,103],[852,51,745,107,"redirectType"],[852,63,745,119],[852,68,745,124],[852,73,745,129],[852,74,745,130],[852,77,745,133,"redirectType"],[852,89,745,145],[852,92,745,148],[853,10,745,153],[853,11,745,154],[853,12,745,155],[854,10,745,157,"error"],[855,8,745,163],[855,9,745,164],[856,6,746,8],[856,7,746,9],[856,8,747,8],[856,15,747,15,"error"],[856,20,747,20],[856,22,747,22],[857,8,748,12],[857,12,748,16],[857,13,748,17],[857,14,748,18],[857,16,748,20,"errors_1"],[857,24,748,28],[857,25,748,29,"isAuthError"],[857,36,748,40],[857,38,748,42,"error"],[857,43,748,47],[857,44,748,48],[857,46,748,50],[858,10,749,16],[858,17,749,23],[859,12,749,25,"data"],[859,16,749,29],[859,18,749,31],[860,14,749,33,"user"],[860,18,749,37],[860,20,749,39],[860,24,749,43],[861,14,749,45,"session"],[861,21,749,52],[861,23,749,54],[861,27,749,58],[862,14,749,60,"redirectType"],[862,26,749,72],[862,28,749,74],[863,12,749,79],[863,13,749,80],[864,12,749,82,"error"],[865,10,749,88],[865,11,749,89],[866,8,750,12],[867,8,751,12],[867,14,751,18,"error"],[867,19,751,23],[868,6,752,8],[869,4,753,4],[870,4,754,4],[871,0,755,0],[872,0,756,0],[873,0,757,0],[874,4,758,4],[874,10,758,10,"signInWithIdToken"],[874,27,758,27,"signInWithIdToken"],[874,28,758,28,"credentials"],[874,39,758,39],[874,41,758,41],[875,6,759,8],[875,10,759,12],[876,8,760,12],[876,14,760,18],[877,10,760,20,"options"],[877,17,760,27],[878,10,760,29,"provider"],[878,18,760,37],[879,10,760,39,"token"],[879,15,760,44],[880,10,760,46,"access_token"],[880,22,760,58],[881,10,760,60,"nonce"],[882,8,760,66],[882,9,760,67],[882,12,760,70,"credentials"],[882,23,760,81],[883,8,761,12],[883,14,761,18,"res"],[883,17,761,21],[883,20,761,24],[883,26,761,30],[883,27,761,31],[883,28,761,32],[883,30,761,34,"fetch_1"],[883,37,761,41],[883,38,761,42,"_request"],[883,46,761,50],[883,48,761,52],[883,52,761,56],[883,53,761,57,"fetch"],[883,58,761,62],[883,60,761,64],[883,66,761,70],[883,68,761,72],[883,71,761,75],[883,75,761,79],[883,76,761,80,"url"],[883,79,761,83],[883,107,761,111],[883,109,761,113],[884,10,762,16,"headers"],[884,17,762,23],[884,19,762,25],[884,23,762,29],[884,24,762,30,"headers"],[884,31,762,37],[885,10,763,16,"body"],[885,14,763,20],[885,16,763,22],[886,12,764,20,"provider"],[886,20,764,28],[887,12,765,20,"id_token"],[887,20,765,28],[887,22,765,30,"token"],[887,27,765,35],[888,12,766,20,"access_token"],[888,24,766,32],[889,12,767,20,"nonce"],[889,17,767,25],[890,12,768,20,"gotrue_meta_security"],[890,32,768,40],[890,34,768,42],[891,14,768,44,"captcha_token"],[891,27,768,57],[891,29,768,59,"options"],[891,36,768,66],[891,41,768,71],[891,45,768,75],[891,49,768,79,"options"],[891,56,768,86],[891,61,768,91],[891,66,768,96],[891,67,768,97],[891,70,768,100],[891,75,768,105],[891,76,768,106],[891,79,768,109,"options"],[891,86,768,116],[891,87,768,117,"captchaToken"],[892,12,768,130],[893,10,769,16],[893,11,769,17],[894,10,770,16,"xform"],[894,15,770,21],[894,17,770,23,"fetch_1"],[894,24,770,30],[894,25,770,31,"_sessionResponse"],[895,8,771,12],[895,9,771,13],[895,10,771,14],[896,8,772,12],[896,14,772,18],[897,10,772,20,"data"],[897,14,772,24],[898,10,772,26,"error"],[899,8,772,32],[899,9,772,33],[899,12,772,36,"res"],[899,15,772,39],[900,8,773,12],[900,12,773,16,"error"],[900,17,773,21],[900,19,773,23],[901,10,774,16],[901,17,774,23],[902,12,774,25,"data"],[902,16,774,29],[902,18,774,31],[903,14,774,33,"user"],[903,18,774,37],[903,20,774,39],[903,24,774,43],[904,14,774,45,"session"],[904,21,774,52],[904,23,774,54],[905,12,774,59],[905,13,774,60],[906,12,774,62,"error"],[907,10,774,68],[907,11,774,69],[908,8,775,12],[908,9,775,13],[908,15,776,17],[908,19,776,21],[908,20,776,22,"data"],[908,24,776,26],[908,28,776,30],[908,29,776,31,"data"],[908,33,776,35],[908,34,776,36,"session"],[908,41,776,43],[908,45,776,47],[908,46,776,48,"data"],[908,50,776,52],[908,51,776,53,"user"],[908,55,776,57],[908,57,776,59],[909,10,777,16],[909,17,777,23],[910,12,778,20,"data"],[910,16,778,24],[910,18,778,26],[911,14,778,28,"user"],[911,18,778,32],[911,20,778,34],[911,24,778,38],[912,14,778,40,"session"],[912,21,778,47],[912,23,778,49],[913,12,778,54],[913,13,778,55],[914,12,779,20,"error"],[914,17,779,25],[914,19,779,27],[914,23,779,31,"errors_1"],[914,31,779,39],[914,32,779,40,"AuthInvalidTokenResponseError"],[914,61,779,69],[914,62,779,70],[915,10,780,16],[915,11,780,17],[916,8,781,12],[917,8,782,12],[917,12,782,16,"data"],[917,16,782,20],[917,17,782,21,"session"],[917,24,782,28],[917,26,782,30],[918,10,783,16],[918,16,783,22],[918,20,783,26],[918,21,783,27,"_saveSession"],[918,33,783,39],[918,34,783,40,"data"],[918,38,783,44],[918,39,783,45,"session"],[918,46,783,52],[918,47,783,53],[919,10,784,16],[919,16,784,22],[919,20,784,26],[919,21,784,27,"_notifyAllSubscribers"],[919,42,784,48],[919,43,784,49],[919,54,784,60],[919,56,784,62,"data"],[919,60,784,66],[919,61,784,67,"session"],[919,68,784,74],[919,69,784,75],[920,8,785,12],[921,8,786,12],[921,15,786,19],[922,10,786,21,"data"],[922,14,786,25],[923,10,786,27,"error"],[924,8,786,33],[924,9,786,34],[925,6,787,8],[925,7,787,9],[925,8,788,8],[925,15,788,15,"error"],[925,20,788,20],[925,22,788,22],[926,8,789,12],[926,12,789,16],[926,13,789,17],[926,14,789,18],[926,16,789,20,"errors_1"],[926,24,789,28],[926,25,789,29,"isAuthError"],[926,36,789,40],[926,38,789,42,"error"],[926,43,789,47],[926,44,789,48],[926,46,789,50],[927,10,790,16],[927,17,790,23],[928,12,790,25,"data"],[928,16,790,29],[928,18,790,31],[929,14,790,33,"user"],[929,18,790,37],[929,20,790,39],[929,24,790,43],[930,14,790,45,"session"],[930,21,790,52],[930,23,790,54],[931,12,790,59],[931,13,790,60],[932,12,790,62,"error"],[933,10,790,68],[933,11,790,69],[934,8,791,12],[935,8,792,12],[935,14,792,18,"error"],[935,19,792,23],[936,6,793,8],[937,4,794,4],[938,4,795,4],[939,0,796,0],[940,0,797,0],[941,0,798,0],[942,0,799,0],[943,0,800,0],[944,0,801,0],[945,0,802,0],[946,0,803,0],[947,0,804,0],[948,0,805,0],[949,0,806,0],[950,0,807,0],[951,0,808,0],[952,0,809,0],[953,0,810,0],[954,0,811,0],[955,4,812,4],[955,10,812,10,"signInWithOtp"],[955,23,812,23,"signInWithOtp"],[955,24,812,24,"credentials"],[955,35,812,35],[955,37,812,37],[956,6,813,8],[956,10,813,12,"_a"],[956,12,813,14],[956,14,813,16,"_b"],[956,16,813,18],[956,18,813,20,"_c"],[956,20,813,22],[956,22,813,24,"_d"],[956,24,813,26],[956,26,813,28,"_e"],[956,28,813,30],[957,6,814,8],[957,10,814,12],[958,8,815,12],[958,12,815,16],[958,19,815,23],[958,23,815,27,"credentials"],[958,34,815,38],[958,36,815,40],[959,10,816,16],[959,16,816,22],[960,12,816,24,"email"],[960,17,816,29],[961,12,816,31,"options"],[962,10,816,39],[962,11,816,40],[962,14,816,43,"credentials"],[962,25,816,54],[963,10,817,16],[963,14,817,20,"codeChallenge"],[963,27,817,33],[963,30,817,36],[963,34,817,40],[964,10,818,16],[964,14,818,20,"codeChallengeMethod"],[964,33,818,39],[964,36,818,42],[964,40,818,46],[965,10,819,16],[965,14,819,20],[965,18,819,24],[965,19,819,25,"flowType"],[965,27,819,33],[965,32,819,38],[965,38,819,44],[965,40,819,46],[966,12,820,20],[967,12,821,20],[967,13,821,21,"codeChallenge"],[967,26,821,34],[967,28,821,36,"codeChallengeMethod"],[967,47,821,55],[967,48,821,56],[967,51,821,59],[967,57,821,65],[967,58,821,66],[967,59,821,67],[967,61,821,69,"helpers_1"],[967,70,821,78],[967,71,821,79,"getCodeChallengeAndMethod"],[967,96,821,104],[967,98,821,106],[967,102,821,110],[967,103,821,111,"storage"],[967,110,821,118],[967,112,821,120],[967,116,821,124],[967,117,821,125,"storageKey"],[967,127,821,135],[967,128,821,136],[968,10,822,16],[969,10,823,16],[969,16,823,22],[970,12,823,24,"error"],[971,10,823,30],[971,11,823,31],[971,14,823,34],[971,20,823,40],[971,21,823,41],[971,22,823,42],[971,24,823,44,"fetch_1"],[971,31,823,51],[971,32,823,52,"_request"],[971,40,823,60],[971,42,823,62],[971,46,823,66],[971,47,823,67,"fetch"],[971,52,823,72],[971,54,823,74],[971,60,823,80],[971,62,823,82],[971,65,823,85],[971,69,823,89],[971,70,823,90,"url"],[971,73,823,93],[971,79,823,99],[971,81,823,101],[972,12,824,20,"headers"],[972,19,824,27],[972,21,824,29],[972,25,824,33],[972,26,824,34,"headers"],[972,33,824,41],[973,12,825,20,"body"],[973,16,825,24],[973,18,825,26],[974,14,826,24,"email"],[974,19,826,29],[975,14,827,24,"data"],[975,18,827,28],[975,20,827,30],[975,21,827,31,"_a"],[975,23,827,33],[975,26,827,36,"options"],[975,33,827,43],[975,38,827,48],[975,42,827,52],[975,46,827,56,"options"],[975,53,827,63],[975,58,827,68],[975,63,827,73],[975,64,827,74],[975,67,827,77],[975,72,827,82],[975,73,827,83],[975,76,827,86,"options"],[975,83,827,93],[975,84,827,94,"data"],[975,88,827,98],[975,94,827,104],[975,98,827,108],[975,102,827,112,"_a"],[975,104,827,114],[975,109,827,119],[975,114,827,124],[975,115,827,125],[975,118,827,128,"_a"],[975,120,827,130],[975,123,827,133],[975,124,827,134],[975,125,827,135],[976,14,828,24,"create_user"],[976,25,828,35],[976,27,828,37],[976,28,828,38,"_b"],[976,30,828,40],[976,33,828,43,"options"],[976,40,828,50],[976,45,828,55],[976,49,828,59],[976,53,828,63,"options"],[976,60,828,70],[976,65,828,75],[976,70,828,80],[976,71,828,81],[976,74,828,84],[976,79,828,89],[976,80,828,90],[976,83,828,93,"options"],[976,90,828,100],[976,91,828,101,"shouldCreateUser"],[976,107,828,117],[976,113,828,123],[976,117,828,127],[976,121,828,131,"_b"],[976,123,828,133],[976,128,828,138],[976,133,828,143],[976,134,828,144],[976,137,828,147,"_b"],[976,139,828,149],[976,142,828,152],[976,146,828,156],[977,14,829,24,"gotrue_meta_security"],[977,34,829,44],[977,36,829,46],[978,16,829,48,"captcha_token"],[978,29,829,61],[978,31,829,63,"options"],[978,38,829,70],[978,43,829,75],[978,47,829,79],[978,51,829,83,"options"],[978,58,829,90],[978,63,829,95],[978,68,829,100],[978,69,829,101],[978,72,829,104],[978,77,829,109],[978,78,829,110],[978,81,829,113,"options"],[978,88,829,120],[978,89,829,121,"captchaToken"],[979,14,829,134],[979,15,829,135],[980,14,830,24,"code_challenge"],[980,28,830,38],[980,30,830,40,"codeChallenge"],[980,43,830,53],[981,14,831,24,"code_challenge_method"],[981,35,831,45],[981,37,831,47,"codeChallengeMethod"],[982,12,832,20],[982,13,832,21],[983,12,833,20,"redirectTo"],[983,22,833,30],[983,24,833,32,"options"],[983,31,833,39],[983,36,833,44],[983,40,833,48],[983,44,833,52,"options"],[983,51,833,59],[983,56,833,64],[983,61,833,69],[983,62,833,70],[983,65,833,73],[983,70,833,78],[983,71,833,79],[983,74,833,82,"options"],[983,81,833,89],[983,82,833,90,"emailRedirectTo"],[984,10,834,16],[984,11,834,17],[984,12,834,18],[985,10,835,16],[985,17,835,23],[986,12,835,25,"data"],[986,16,835,29],[986,18,835,31],[987,14,835,33,"user"],[987,18,835,37],[987,20,835,39],[987,24,835,43],[988,14,835,45,"session"],[988,21,835,52],[988,23,835,54],[989,12,835,59],[989,13,835,60],[990,12,835,62,"error"],[991,10,835,68],[991,11,835,69],[992,8,836,12],[993,8,837,12],[993,12,837,16],[993,19,837,23],[993,23,837,27,"credentials"],[993,34,837,38],[993,36,837,40],[994,10,838,16],[994,16,838,22],[995,12,838,24,"phone"],[995,17,838,29],[996,12,838,31,"options"],[997,10,838,39],[997,11,838,40],[997,14,838,43,"credentials"],[997,25,838,54],[998,10,839,16],[998,16,839,22],[999,12,839,24,"data"],[999,16,839,28],[1000,12,839,30,"error"],[1001,10,839,36],[1001,11,839,37],[1001,14,839,40],[1001,20,839,46],[1001,21,839,47],[1001,22,839,48],[1001,24,839,50,"fetch_1"],[1001,31,839,57],[1001,32,839,58,"_request"],[1001,40,839,66],[1001,42,839,68],[1001,46,839,72],[1001,47,839,73,"fetch"],[1001,52,839,78],[1001,54,839,80],[1001,60,839,86],[1001,62,839,88],[1001,65,839,91],[1001,69,839,95],[1001,70,839,96,"url"],[1001,73,839,99],[1001,79,839,105],[1001,81,839,107],[1002,12,840,20,"headers"],[1002,19,840,27],[1002,21,840,29],[1002,25,840,33],[1002,26,840,34,"headers"],[1002,33,840,41],[1003,12,841,20,"body"],[1003,16,841,24],[1003,18,841,26],[1004,14,842,24,"phone"],[1004,19,842,29],[1005,14,843,24,"data"],[1005,18,843,28],[1005,20,843,30],[1005,21,843,31,"_c"],[1005,23,843,33],[1005,26,843,36,"options"],[1005,33,843,43],[1005,38,843,48],[1005,42,843,52],[1005,46,843,56,"options"],[1005,53,843,63],[1005,58,843,68],[1005,63,843,73],[1005,64,843,74],[1005,67,843,77],[1005,72,843,82],[1005,73,843,83],[1005,76,843,86,"options"],[1005,83,843,93],[1005,84,843,94,"data"],[1005,88,843,98],[1005,94,843,104],[1005,98,843,108],[1005,102,843,112,"_c"],[1005,104,843,114],[1005,109,843,119],[1005,114,843,124],[1005,115,843,125],[1005,118,843,128,"_c"],[1005,120,843,130],[1005,123,843,133],[1005,124,843,134],[1005,125,843,135],[1006,14,844,24,"create_user"],[1006,25,844,35],[1006,27,844,37],[1006,28,844,38,"_d"],[1006,30,844,40],[1006,33,844,43,"options"],[1006,40,844,50],[1006,45,844,55],[1006,49,844,59],[1006,53,844,63,"options"],[1006,60,844,70],[1006,65,844,75],[1006,70,844,80],[1006,71,844,81],[1006,74,844,84],[1006,79,844,89],[1006,80,844,90],[1006,83,844,93,"options"],[1006,90,844,100],[1006,91,844,101,"shouldCreateUser"],[1006,107,844,117],[1006,113,844,123],[1006,117,844,127],[1006,121,844,131,"_d"],[1006,123,844,133],[1006,128,844,138],[1006,133,844,143],[1006,134,844,144],[1006,137,844,147,"_d"],[1006,139,844,149],[1006,142,844,152],[1006,146,844,156],[1007,14,845,24,"gotrue_meta_security"],[1007,34,845,44],[1007,36,845,46],[1008,16,845,48,"captcha_token"],[1008,29,845,61],[1008,31,845,63,"options"],[1008,38,845,70],[1008,43,845,75],[1008,47,845,79],[1008,51,845,83,"options"],[1008,58,845,90],[1008,63,845,95],[1008,68,845,100],[1008,69,845,101],[1008,72,845,104],[1008,77,845,109],[1008,78,845,110],[1008,81,845,113,"options"],[1008,88,845,120],[1008,89,845,121,"captchaToken"],[1009,14,845,134],[1009,15,845,135],[1010,14,846,24,"channel"],[1010,21,846,31],[1010,23,846,33],[1010,24,846,34,"_e"],[1010,26,846,36],[1010,29,846,39,"options"],[1010,36,846,46],[1010,41,846,51],[1010,45,846,55],[1010,49,846,59,"options"],[1010,56,846,66],[1010,61,846,71],[1010,66,846,76],[1010,67,846,77],[1010,70,846,80],[1010,75,846,85],[1010,76,846,86],[1010,79,846,89,"options"],[1010,86,846,96],[1010,87,846,97,"channel"],[1010,94,846,104],[1010,100,846,110],[1010,104,846,114],[1010,108,846,118,"_e"],[1010,110,846,120],[1010,115,846,125],[1010,120,846,130],[1010,121,846,131],[1010,124,846,134,"_e"],[1010,126,846,136],[1010,129,846,139],[1011,12,847,20],[1012,10,848,16],[1012,11,848,17],[1012,12,848,18],[1013,10,849,16],[1013,17,849,23],[1014,12,849,25,"data"],[1014,16,849,29],[1014,18,849,31],[1015,14,849,33,"user"],[1015,18,849,37],[1015,20,849,39],[1015,24,849,43],[1016,14,849,45,"session"],[1016,21,849,52],[1016,23,849,54],[1016,27,849,58],[1017,14,849,60,"messageId"],[1017,23,849,69],[1017,25,849,71,"data"],[1017,29,849,75],[1017,34,849,80],[1017,38,849,84],[1017,42,849,88,"data"],[1017,46,849,92],[1017,51,849,97],[1017,56,849,102],[1017,57,849,103],[1017,60,849,106],[1017,65,849,111],[1017,66,849,112],[1017,69,849,115,"data"],[1017,73,849,119],[1017,74,849,120,"message_id"],[1018,12,849,131],[1018,13,849,132],[1019,12,849,134,"error"],[1020,10,849,140],[1020,11,849,141],[1021,8,850,12],[1022,8,851,12],[1022,14,851,18],[1022,18,851,22,"errors_1"],[1022,26,851,30],[1022,27,851,31,"AuthInvalidCredentialsError"],[1022,54,851,58],[1022,55,851,59],[1022,106,851,110],[1022,107,851,111],[1023,6,852,8],[1023,7,852,9],[1023,8,853,8],[1023,15,853,15,"error"],[1023,20,853,20],[1023,22,853,22],[1024,8,854,12],[1024,12,854,16],[1024,13,854,17],[1024,14,854,18],[1024,16,854,20,"errors_1"],[1024,24,854,28],[1024,25,854,29,"isAuthError"],[1024,36,854,40],[1024,38,854,42,"error"],[1024,43,854,47],[1024,44,854,48],[1024,46,854,50],[1025,10,855,16],[1025,17,855,23],[1026,12,855,25,"data"],[1026,16,855,29],[1026,18,855,31],[1027,14,855,33,"user"],[1027,18,855,37],[1027,20,855,39],[1027,24,855,43],[1028,14,855,45,"session"],[1028,21,855,52],[1028,23,855,54],[1029,12,855,59],[1029,13,855,60],[1030,12,855,62,"error"],[1031,10,855,68],[1031,11,855,69],[1032,8,856,12],[1033,8,857,12],[1033,14,857,18,"error"],[1033,19,857,23],[1034,6,858,8],[1035,4,859,4],[1036,4,860,4],[1037,0,861,0],[1038,0,862,0],[1039,4,863,4],[1039,10,863,10,"verifyOtp"],[1039,19,863,19,"verifyOtp"],[1039,20,863,20,"params"],[1039,26,863,26],[1039,28,863,28],[1040,6,864,8],[1040,10,864,12,"_a"],[1040,12,864,14],[1040,14,864,16,"_b"],[1040,16,864,18],[1041,6,865,8],[1041,10,865,12],[1042,8,866,12],[1042,12,866,16,"redirectTo"],[1042,22,866,26],[1042,25,866,29,"undefined"],[1042,34,866,38],[1043,8,867,12],[1043,12,867,16,"captchaToken"],[1043,24,867,28],[1043,27,867,31,"undefined"],[1043,36,867,40],[1044,8,868,12],[1044,12,868,16],[1044,21,868,25],[1044,25,868,29,"params"],[1044,31,868,35],[1044,33,868,37],[1045,10,869,16,"redirectTo"],[1045,20,869,26],[1045,23,869,29],[1045,24,869,30,"_a"],[1045,26,869,32],[1045,29,869,35,"params"],[1045,35,869,41],[1045,36,869,42,"options"],[1045,43,869,49],[1045,49,869,55],[1045,53,869,59],[1045,57,869,63,"_a"],[1045,59,869,65],[1045,64,869,70],[1045,69,869,75],[1045,70,869,76],[1045,73,869,79],[1045,78,869,84],[1045,79,869,85],[1045,82,869,88,"_a"],[1045,84,869,90],[1045,85,869,91,"redirectTo"],[1045,95,869,101],[1046,10,870,16,"captchaToken"],[1046,22,870,28],[1046,25,870,31],[1046,26,870,32,"_b"],[1046,28,870,34],[1046,31,870,37,"params"],[1046,37,870,43],[1046,38,870,44,"options"],[1046,45,870,51],[1046,51,870,57],[1046,55,870,61],[1046,59,870,65,"_b"],[1046,61,870,67],[1046,66,870,72],[1046,71,870,77],[1046,72,870,78],[1046,75,870,81],[1046,80,870,86],[1046,81,870,87],[1046,84,870,90,"_b"],[1046,86,870,92],[1046,87,870,93,"captchaToken"],[1046,99,870,105],[1047,8,871,12],[1048,8,872,12],[1048,14,872,18],[1049,10,872,20,"data"],[1049,14,872,24],[1050,10,872,26,"error"],[1051,8,872,32],[1051,9,872,33],[1051,12,872,36],[1051,18,872,42],[1051,19,872,43],[1051,20,872,44],[1051,22,872,46,"fetch_1"],[1051,29,872,53],[1051,30,872,54,"_request"],[1051,38,872,62],[1051,40,872,64],[1051,44,872,68],[1051,45,872,69,"fetch"],[1051,50,872,74],[1051,52,872,76],[1051,58,872,82],[1051,60,872,84],[1051,63,872,87],[1051,67,872,91],[1051,68,872,92,"url"],[1051,71,872,95],[1051,80,872,104],[1051,82,872,106],[1052,10,873,16,"headers"],[1052,17,873,23],[1052,19,873,25],[1052,23,873,29],[1052,24,873,30,"headers"],[1052,31,873,37],[1053,10,874,16,"body"],[1053,14,874,20],[1053,16,874,22,"Object"],[1053,22,874,28],[1053,23,874,29,"assign"],[1053,29,874,35],[1053,30,874,36,"Object"],[1053,36,874,42],[1053,37,874,43,"assign"],[1053,43,874,49],[1053,44,874,50],[1053,45,874,51],[1053,46,874,52],[1053,48,874,54,"params"],[1053,54,874,60],[1053,55,874,61],[1053,57,874,63],[1054,12,874,65,"gotrue_meta_security"],[1054,32,874,85],[1054,34,874,87],[1055,14,874,89,"captcha_token"],[1055,27,874,102],[1055,29,874,104,"captchaToken"],[1056,12,874,117],[1057,10,874,119],[1057,11,874,120],[1057,12,874,121],[1058,10,875,16,"redirectTo"],[1058,20,875,26],[1059,10,876,16,"xform"],[1059,15,876,21],[1059,17,876,23,"fetch_1"],[1059,24,876,30],[1059,25,876,31,"_sessionResponse"],[1060,8,877,12],[1060,9,877,13],[1060,10,877,14],[1061,8,878,12],[1061,12,878,16,"error"],[1061,17,878,21],[1061,19,878,23],[1062,10,879,16],[1062,16,879,22,"error"],[1062,21,879,27],[1063,8,880,12],[1064,8,881,12],[1064,12,881,16],[1064,13,881,17,"data"],[1064,17,881,21],[1064,19,881,23],[1065,10,882,16],[1065,16,882,22],[1065,20,882,26,"Error"],[1065,25,882,31],[1065,26,882,32],[1065,68,882,74],[1065,69,882,75],[1066,8,883,12],[1067,8,884,12],[1067,14,884,18,"session"],[1067,21,884,25],[1067,24,884,28,"data"],[1067,28,884,32],[1067,29,884,33,"session"],[1067,36,884,40],[1068,8,885,12],[1068,14,885,18,"user"],[1068,18,885,22],[1068,21,885,25,"data"],[1068,25,885,29],[1068,26,885,30,"user"],[1068,30,885,34],[1069,8,886,12],[1069,12,886,16,"session"],[1069,19,886,23],[1069,24,886,28],[1069,28,886,32],[1069,32,886,36,"session"],[1069,39,886,43],[1069,44,886,48],[1069,49,886,53],[1069,50,886,54],[1069,53,886,57],[1069,58,886,62],[1069,59,886,63],[1069,62,886,66,"session"],[1069,69,886,73],[1069,70,886,74,"access_token"],[1069,82,886,86],[1069,84,886,88],[1070,10,887,16],[1070,16,887,22],[1070,20,887,26],[1070,21,887,27,"_saveSession"],[1070,33,887,39],[1070,34,887,40,"session"],[1070,41,887,47],[1070,42,887,48],[1071,10,888,16],[1071,16,888,22],[1071,20,888,26],[1071,21,888,27,"_notifyAllSubscribers"],[1071,42,888,48],[1071,43,888,49,"params"],[1071,49,888,55],[1071,50,888,56,"type"],[1071,54,888,60],[1071,58,888,64],[1071,68,888,74],[1071,71,888,77],[1071,90,888,96],[1071,93,888,99],[1071,104,888,110],[1071,106,888,112,"session"],[1071,113,888,119],[1071,114,888,120],[1072,8,889,12],[1073,8,890,12],[1073,15,890,19],[1074,10,890,21,"data"],[1074,14,890,25],[1074,16,890,27],[1075,12,890,29,"user"],[1075,16,890,33],[1076,12,890,35,"session"],[1077,10,890,43],[1077,11,890,44],[1078,10,890,46,"error"],[1078,15,890,51],[1078,17,890,53],[1079,8,890,58],[1079,9,890,59],[1080,6,891,8],[1080,7,891,9],[1080,8,892,8],[1080,15,892,15,"error"],[1080,20,892,20],[1080,22,892,22],[1081,8,893,12],[1081,12,893,16],[1081,13,893,17],[1081,14,893,18],[1081,16,893,20,"errors_1"],[1081,24,893,28],[1081,25,893,29,"isAuthError"],[1081,36,893,40],[1081,38,893,42,"error"],[1081,43,893,47],[1081,44,893,48],[1081,46,893,50],[1082,10,894,16],[1082,17,894,23],[1083,12,894,25,"data"],[1083,16,894,29],[1083,18,894,31],[1084,14,894,33,"user"],[1084,18,894,37],[1084,20,894,39],[1084,24,894,43],[1085,14,894,45,"session"],[1085,21,894,52],[1085,23,894,54],[1086,12,894,59],[1086,13,894,60],[1087,12,894,62,"error"],[1088,10,894,68],[1088,11,894,69],[1089,8,895,12],[1090,8,896,12],[1090,14,896,18,"error"],[1090,19,896,23],[1091,6,897,8],[1092,4,898,4],[1093,4,899,4],[1094,0,900,0],[1095,0,901,0],[1096,0,902,0],[1097,0,903,0],[1098,0,904,0],[1099,0,905,0],[1100,0,906,0],[1101,0,907,0],[1102,0,908,0],[1103,0,909,0],[1104,0,910,0],[1105,0,911,0],[1106,0,912,0],[1107,4,913,4],[1107,10,913,10,"signInWithSSO"],[1107,23,913,23,"signInWithSSO"],[1107,24,913,24,"params"],[1107,30,913,30],[1107,32,913,32],[1108,6,914,8],[1108,10,914,12,"_a"],[1108,12,914,14],[1108,14,914,16,"_b"],[1108,16,914,18],[1108,18,914,20,"_c"],[1108,20,914,22],[1109,6,915,8],[1109,10,915,12],[1110,8,916,12],[1110,12,916,16,"codeChallenge"],[1110,25,916,29],[1110,28,916,32],[1110,32,916,36],[1111,8,917,12],[1111,12,917,16,"codeChallengeMethod"],[1111,31,917,35],[1111,34,917,38],[1111,38,917,42],[1112,8,918,12],[1112,12,918,16],[1112,16,918,20],[1112,17,918,21,"flowType"],[1112,25,918,29],[1112,30,918,34],[1112,36,918,40],[1112,38,918,42],[1113,10,919,16],[1114,10,920,16],[1114,11,920,17,"codeChallenge"],[1114,24,920,30],[1114,26,920,32,"codeChallengeMethod"],[1114,45,920,51],[1114,46,920,52],[1114,49,920,55],[1114,55,920,61],[1114,56,920,62],[1114,57,920,63],[1114,59,920,65,"helpers_1"],[1114,68,920,74],[1114,69,920,75,"getCodeChallengeAndMethod"],[1114,94,920,100],[1114,96,920,102],[1114,100,920,106],[1114,101,920,107,"storage"],[1114,108,920,114],[1114,110,920,116],[1114,114,920,120],[1114,115,920,121,"storageKey"],[1114,125,920,131],[1114,126,920,132],[1115,8,921,12],[1116,8,922,12],[1116,15,922,19],[1116,21,922,25],[1116,22,922,26],[1116,23,922,27],[1116,25,922,29,"fetch_1"],[1116,32,922,36],[1116,33,922,37,"_request"],[1116,41,922,45],[1116,43,922,47],[1116,47,922,51],[1116,48,922,52,"fetch"],[1116,53,922,57],[1116,55,922,59],[1116,61,922,65],[1116,63,922,67],[1116,66,922,70],[1116,70,922,74],[1116,71,922,75,"url"],[1116,74,922,78],[1116,80,922,84],[1116,82,922,86],[1117,10,923,16,"body"],[1117,14,923,20],[1117,16,923,22,"Object"],[1117,22,923,28],[1117,23,923,29,"assign"],[1117,29,923,35],[1117,30,923,36,"Object"],[1117,36,923,42],[1117,37,923,43,"assign"],[1117,43,923,49],[1117,44,923,50,"Object"],[1117,50,923,56],[1117,51,923,57,"assign"],[1117,57,923,63],[1117,58,923,64,"Object"],[1117,64,923,70],[1117,65,923,71,"assign"],[1117,71,923,77],[1117,72,923,78,"Object"],[1117,78,923,84],[1117,79,923,85,"assign"],[1117,85,923,91],[1117,86,923,92],[1117,87,923,93],[1117,88,923,94],[1117,90,923,97],[1117,102,923,109],[1117,106,923,113,"params"],[1117,112,923,119],[1117,115,923,122],[1118,12,923,124,"provider_id"],[1118,23,923,135],[1118,25,923,137,"params"],[1118,31,923,143],[1118,32,923,144,"providerId"],[1119,10,923,155],[1119,11,923,156],[1119,14,923,159],[1119,18,923,164],[1119,19,923,165],[1119,21,923,168],[1119,29,923,176],[1119,33,923,180,"params"],[1119,39,923,186],[1119,42,923,189],[1120,12,923,191,"domain"],[1120,18,923,197],[1120,20,923,199,"params"],[1120,26,923,205],[1120,27,923,206,"domain"],[1121,10,923,213],[1121,11,923,214],[1121,14,923,217],[1121,18,923,222],[1121,19,923,223],[1121,21,923,225],[1122,12,923,227,"redirect_to"],[1122,23,923,238],[1122,25,923,240],[1122,26,923,241,"_b"],[1122,28,923,243],[1122,31,923,246],[1122,32,923,247,"_a"],[1122,34,923,249],[1122,37,923,252,"params"],[1122,43,923,258],[1122,44,923,259,"options"],[1122,51,923,266],[1122,57,923,272],[1122,61,923,276],[1122,65,923,280,"_a"],[1122,67,923,282],[1122,72,923,287],[1122,77,923,292],[1122,78,923,293],[1122,81,923,296],[1122,86,923,301],[1122,87,923,302],[1122,90,923,305,"_a"],[1122,92,923,307],[1122,93,923,308,"redirectTo"],[1122,103,923,318],[1122,109,923,324],[1122,113,923,328],[1122,117,923,332,"_b"],[1122,119,923,334],[1122,124,923,339],[1122,129,923,344],[1122,130,923,345],[1122,133,923,348,"_b"],[1122,135,923,350],[1122,138,923,353,"undefined"],[1123,10,923,363],[1123,11,923,364],[1123,12,923,365],[1123,14,923,368],[1123,15,923,369],[1123,16,923,370,"_c"],[1123,18,923,372],[1123,21,923,375,"params"],[1123,27,923,381],[1123,32,923,386],[1123,36,923,390],[1123,40,923,394,"params"],[1123,46,923,400],[1123,51,923,405],[1123,56,923,410],[1123,57,923,411],[1123,60,923,414],[1123,65,923,419],[1123,66,923,420],[1123,69,923,423,"params"],[1123,75,923,429],[1123,76,923,430,"options"],[1123,83,923,437],[1123,89,923,443],[1123,93,923,447],[1123,97,923,451,"_c"],[1123,99,923,453],[1123,104,923,458],[1123,109,923,463],[1123,110,923,464],[1123,113,923,467],[1123,118,923,472],[1123,119,923,473],[1123,122,923,476,"_c"],[1123,124,923,478],[1123,125,923,479,"captchaToken"],[1123,137,923,491],[1123,141,924,22],[1124,12,924,24,"gotrue_meta_security"],[1124,32,924,44],[1124,34,924,46],[1125,14,924,48,"captcha_token"],[1125,27,924,61],[1125,29,924,63,"params"],[1125,35,924,69],[1125,36,924,70,"options"],[1125,43,924,77],[1125,44,924,78,"captchaToken"],[1126,12,924,91],[1127,10,924,93],[1127,11,924,94],[1127,14,925,22],[1127,18,925,27],[1127,19,925,28],[1127,21,925,30],[1128,12,925,32,"skip_http_redirect"],[1128,30,925,50],[1128,32,925,52],[1128,36,925,56],[1129,12,925,58,"code_challenge"],[1129,26,925,72],[1129,28,925,74,"codeChallenge"],[1129,41,925,87],[1130,12,925,89,"code_challenge_method"],[1130,33,925,110],[1130,35,925,112,"codeChallengeMethod"],[1131,10,925,132],[1131,11,925,133],[1131,12,925,134],[1132,10,926,16,"headers"],[1132,17,926,23],[1132,19,926,25],[1132,23,926,29],[1132,24,926,30,"headers"],[1132,31,926,37],[1133,10,927,16,"xform"],[1133,15,927,21],[1133,17,927,23,"fetch_1"],[1133,24,927,30],[1133,25,927,31,"_ssoResponse"],[1134,8,928,12],[1134,9,928,13],[1134,10,928,14],[1135,6,929,8],[1135,7,929,9],[1135,8,930,8],[1135,15,930,15,"error"],[1135,20,930,20],[1135,22,930,22],[1136,8,931,12],[1136,12,931,16],[1136,13,931,17],[1136,14,931,18],[1136,16,931,20,"errors_1"],[1136,24,931,28],[1136,25,931,29,"isAuthError"],[1136,36,931,40],[1136,38,931,42,"error"],[1136,43,931,47],[1136,44,931,48],[1136,46,931,50],[1137,10,932,16],[1137,17,932,23],[1138,12,932,25,"data"],[1138,16,932,29],[1138,18,932,31],[1138,22,932,35],[1139,12,932,37,"error"],[1140,10,932,43],[1140,11,932,44],[1141,8,933,12],[1142,8,934,12],[1142,14,934,18,"error"],[1142,19,934,23],[1143,6,935,8],[1144,4,936,4],[1145,4,937,4],[1146,0,938,0],[1147,0,939,0],[1148,0,940,0],[1149,4,941,4],[1149,10,941,10,"reauthenticate"],[1149,24,941,24,"reauthenticate"],[1149,25,941,24],[1149,27,941,27],[1150,6,942,8],[1150,12,942,14],[1150,16,942,18],[1150,17,942,19,"initializePromise"],[1150,34,942,36],[1151,6,943,8],[1151,13,943,15],[1151,19,943,21],[1151,23,943,25],[1151,24,943,26,"_acquireLock"],[1151,36,943,38],[1151,37,943,39],[1151,38,943,40],[1151,39,943,41],[1151,41,943,43],[1151,53,943,55],[1152,8,944,12],[1152,15,944,19],[1152,21,944,25],[1152,25,944,29],[1152,26,944,30,"_reauthenticate"],[1152,41,944,45],[1152,42,944,46],[1152,43,944,47],[1153,6,945,8],[1153,7,945,9],[1153,8,945,10],[1154,4,946,4],[1155,4,947,4],[1155,10,947,10,"_reauthenticate"],[1155,25,947,25,"_reauthenticate"],[1155,26,947,25],[1155,28,947,28],[1156,6,948,8],[1156,10,948,12],[1157,8,949,12],[1157,15,949,19],[1157,21,949,25],[1157,25,949,29],[1157,26,949,30,"_useSession"],[1157,37,949,41],[1157,38,949,42],[1157,44,949,49,"result"],[1157,50,949,55],[1157,54,949,60],[1158,10,950,16],[1158,16,950,22],[1159,12,950,24,"data"],[1159,16,950,28],[1159,18,950,30],[1160,14,950,32,"session"],[1161,12,950,40],[1161,13,950,41],[1162,12,950,43,"error"],[1162,17,950,48],[1162,19,950,50,"sessionError"],[1163,10,950,64],[1163,11,950,65],[1163,14,950,68,"result"],[1163,20,950,74],[1164,10,951,16],[1164,14,951,20,"sessionError"],[1164,26,951,32],[1164,28,952,20],[1164,34,952,26,"sessionError"],[1164,46,952,38],[1165,10,953,16],[1165,14,953,20],[1165,15,953,21,"session"],[1165,22,953,28],[1165,24,954,20],[1165,30,954,26],[1165,34,954,30,"errors_1"],[1165,42,954,38],[1165,43,954,39,"AuthSessionMissingError"],[1165,66,954,62],[1165,67,954,63],[1165,68,954,64],[1166,10,955,16],[1166,16,955,22],[1167,12,955,24,"error"],[1168,10,955,30],[1168,11,955,31],[1168,14,955,34],[1168,20,955,40],[1168,21,955,41],[1168,22,955,42],[1168,24,955,44,"fetch_1"],[1168,31,955,51],[1168,32,955,52,"_request"],[1168,40,955,60],[1168,42,955,62],[1168,46,955,66],[1168,47,955,67,"fetch"],[1168,52,955,72],[1168,54,955,74],[1168,59,955,79],[1168,61,955,81],[1168,64,955,84],[1168,68,955,88],[1168,69,955,89,"url"],[1168,72,955,92],[1168,89,955,109],[1168,91,955,111],[1169,12,956,20,"headers"],[1169,19,956,27],[1169,21,956,29],[1169,25,956,33],[1169,26,956,34,"headers"],[1169,33,956,41],[1170,12,957,20,"jwt"],[1170,15,957,23],[1170,17,957,25,"session"],[1170,24,957,32],[1170,25,957,33,"access_token"],[1171,10,958,16],[1171,11,958,17],[1171,12,958,18],[1172,10,959,16],[1172,17,959,23],[1173,12,959,25,"data"],[1173,16,959,29],[1173,18,959,31],[1174,14,959,33,"user"],[1174,18,959,37],[1174,20,959,39],[1174,24,959,43],[1175,14,959,45,"session"],[1175,21,959,52],[1175,23,959,54],[1176,12,959,59],[1176,13,959,60],[1177,12,959,62,"error"],[1178,10,959,68],[1178,11,959,69],[1179,8,960,12],[1179,9,960,13],[1179,10,960,14],[1180,6,961,8],[1180,7,961,9],[1180,8,962,8],[1180,15,962,15,"error"],[1180,20,962,20],[1180,22,962,22],[1181,8,963,12],[1181,12,963,16],[1181,13,963,17],[1181,14,963,18],[1181,16,963,20,"errors_1"],[1181,24,963,28],[1181,25,963,29,"isAuthError"],[1181,36,963,40],[1181,38,963,42,"error"],[1181,43,963,47],[1181,44,963,48],[1181,46,963,50],[1182,10,964,16],[1182,17,964,23],[1183,12,964,25,"data"],[1183,16,964,29],[1183,18,964,31],[1184,14,964,33,"user"],[1184,18,964,37],[1184,20,964,39],[1184,24,964,43],[1185,14,964,45,"session"],[1185,21,964,52],[1185,23,964,54],[1186,12,964,59],[1186,13,964,60],[1187,12,964,62,"error"],[1188,10,964,68],[1188,11,964,69],[1189,8,965,12],[1190,8,966,12],[1190,14,966,18,"error"],[1190,19,966,23],[1191,6,967,8],[1192,4,968,4],[1193,4,969,4],[1194,0,970,0],[1195,0,971,0],[1196,4,972,4],[1196,10,972,10,"resend"],[1196,16,972,16,"resend"],[1196,17,972,17,"credentials"],[1196,28,972,28],[1196,30,972,30],[1197,6,973,8],[1197,10,973,12],[1198,8,974,12],[1198,14,974,18,"endpoint"],[1198,22,974,26],[1198,25,974,29],[1198,28,974,32],[1198,32,974,36],[1198,33,974,37,"url"],[1198,36,974,40],[1198,45,974,49],[1199,8,975,12],[1199,12,975,16],[1199,19,975,23],[1199,23,975,27,"credentials"],[1199,34,975,38],[1199,36,975,40],[1200,10,976,16],[1200,16,976,22],[1201,12,976,24,"email"],[1201,17,976,29],[1202,12,976,31,"type"],[1202,16,976,35],[1203,12,976,37,"options"],[1204,10,976,45],[1204,11,976,46],[1204,14,976,49,"credentials"],[1204,25,976,60],[1205,10,977,16],[1205,16,977,22],[1206,12,977,24,"error"],[1207,10,977,30],[1207,11,977,31],[1207,14,977,34],[1207,20,977,40],[1207,21,977,41],[1207,22,977,42],[1207,24,977,44,"fetch_1"],[1207,31,977,51],[1207,32,977,52,"_request"],[1207,40,977,60],[1207,42,977,62],[1207,46,977,66],[1207,47,977,67,"fetch"],[1207,52,977,72],[1207,54,977,74],[1207,60,977,80],[1207,62,977,82,"endpoint"],[1207,70,977,90],[1207,72,977,92],[1208,12,978,20,"headers"],[1208,19,978,27],[1208,21,978,29],[1208,25,978,33],[1208,26,978,34,"headers"],[1208,33,978,41],[1209,12,979,20,"body"],[1209,16,979,24],[1209,18,979,26],[1210,14,980,24,"email"],[1210,19,980,29],[1211,14,981,24,"type"],[1211,18,981,28],[1212,14,982,24,"gotrue_meta_security"],[1212,34,982,44],[1212,36,982,46],[1213,16,982,48,"captcha_token"],[1213,29,982,61],[1213,31,982,63,"options"],[1213,38,982,70],[1213,43,982,75],[1213,47,982,79],[1213,51,982,83,"options"],[1213,58,982,90],[1213,63,982,95],[1213,68,982,100],[1213,69,982,101],[1213,72,982,104],[1213,77,982,109],[1213,78,982,110],[1213,81,982,113,"options"],[1213,88,982,120],[1213,89,982,121,"captchaToken"],[1214,14,982,134],[1215,12,983,20],[1215,13,983,21],[1216,12,984,20,"redirectTo"],[1216,22,984,30],[1216,24,984,32,"options"],[1216,31,984,39],[1216,36,984,44],[1216,40,984,48],[1216,44,984,52,"options"],[1216,51,984,59],[1216,56,984,64],[1216,61,984,69],[1216,62,984,70],[1216,65,984,73],[1216,70,984,78],[1216,71,984,79],[1216,74,984,82,"options"],[1216,81,984,89],[1216,82,984,90,"emailRedirectTo"],[1217,10,985,16],[1217,11,985,17],[1217,12,985,18],[1218,10,986,16],[1218,17,986,23],[1219,12,986,25,"data"],[1219,16,986,29],[1219,18,986,31],[1220,14,986,33,"user"],[1220,18,986,37],[1220,20,986,39],[1220,24,986,43],[1221,14,986,45,"session"],[1221,21,986,52],[1221,23,986,54],[1222,12,986,59],[1222,13,986,60],[1223,12,986,62,"error"],[1224,10,986,68],[1224,11,986,69],[1225,8,987,12],[1225,9,987,13],[1225,15,988,17],[1225,19,988,21],[1225,26,988,28],[1225,30,988,32,"credentials"],[1225,41,988,43],[1225,43,988,45],[1226,10,989,16],[1226,16,989,22],[1227,12,989,24,"phone"],[1227,17,989,29],[1228,12,989,31,"type"],[1228,16,989,35],[1229,12,989,37,"options"],[1230,10,989,45],[1230,11,989,46],[1230,14,989,49,"credentials"],[1230,25,989,60],[1231,10,990,16],[1231,16,990,22],[1232,12,990,24,"data"],[1232,16,990,28],[1233,12,990,30,"error"],[1234,10,990,36],[1234,11,990,37],[1234,14,990,40],[1234,20,990,46],[1234,21,990,47],[1234,22,990,48],[1234,24,990,50,"fetch_1"],[1234,31,990,57],[1234,32,990,58,"_request"],[1234,40,990,66],[1234,42,990,68],[1234,46,990,72],[1234,47,990,73,"fetch"],[1234,52,990,78],[1234,54,990,80],[1234,60,990,86],[1234,62,990,88,"endpoint"],[1234,70,990,96],[1234,72,990,98],[1235,12,991,20,"headers"],[1235,19,991,27],[1235,21,991,29],[1235,25,991,33],[1235,26,991,34,"headers"],[1235,33,991,41],[1236,12,992,20,"body"],[1236,16,992,24],[1236,18,992,26],[1237,14,993,24,"phone"],[1237,19,993,29],[1238,14,994,24,"type"],[1238,18,994,28],[1239,14,995,24,"gotrue_meta_security"],[1239,34,995,44],[1239,36,995,46],[1240,16,995,48,"captcha_token"],[1240,29,995,61],[1240,31,995,63,"options"],[1240,38,995,70],[1240,43,995,75],[1240,47,995,79],[1240,51,995,83,"options"],[1240,58,995,90],[1240,63,995,95],[1240,68,995,100],[1240,69,995,101],[1240,72,995,104],[1240,77,995,109],[1240,78,995,110],[1240,81,995,113,"options"],[1240,88,995,120],[1240,89,995,121,"captchaToken"],[1241,14,995,134],[1242,12,996,20],[1243,10,997,16],[1243,11,997,17],[1243,12,997,18],[1244,10,998,16],[1244,17,998,23],[1245,12,998,25,"data"],[1245,16,998,29],[1245,18,998,31],[1246,14,998,33,"user"],[1246,18,998,37],[1246,20,998,39],[1246,24,998,43],[1247,14,998,45,"session"],[1247,21,998,52],[1247,23,998,54],[1247,27,998,58],[1248,14,998,60,"messageId"],[1248,23,998,69],[1248,25,998,71,"data"],[1248,29,998,75],[1248,34,998,80],[1248,38,998,84],[1248,42,998,88,"data"],[1248,46,998,92],[1248,51,998,97],[1248,56,998,102],[1248,57,998,103],[1248,60,998,106],[1248,65,998,111],[1248,66,998,112],[1248,69,998,115,"data"],[1248,73,998,119],[1248,74,998,120,"message_id"],[1249,12,998,131],[1249,13,998,132],[1250,12,998,134,"error"],[1251,10,998,140],[1251,11,998,141],[1252,8,999,12],[1253,8,1000,12],[1253,14,1000,18],[1253,18,1000,22,"errors_1"],[1253,26,1000,30],[1253,27,1000,31,"AuthInvalidCredentialsError"],[1253,54,1000,58],[1253,55,1000,59],[1253,116,1000,120],[1253,117,1000,121],[1254,6,1001,8],[1254,7,1001,9],[1254,8,1002,8],[1254,15,1002,15,"error"],[1254,20,1002,20],[1254,22,1002,22],[1255,8,1003,12],[1255,12,1003,16],[1255,13,1003,17],[1255,14,1003,18],[1255,16,1003,20,"errors_1"],[1255,24,1003,28],[1255,25,1003,29,"isAuthError"],[1255,36,1003,40],[1255,38,1003,42,"error"],[1255,43,1003,47],[1255,44,1003,48],[1255,46,1003,50],[1256,10,1004,16],[1256,17,1004,23],[1257,12,1004,25,"data"],[1257,16,1004,29],[1257,18,1004,31],[1258,14,1004,33,"user"],[1258,18,1004,37],[1258,20,1004,39],[1258,24,1004,43],[1259,14,1004,45,"session"],[1259,21,1004,52],[1259,23,1004,54],[1260,12,1004,59],[1260,13,1004,60],[1261,12,1004,62,"error"],[1262,10,1004,68],[1262,11,1004,69],[1263,8,1005,12],[1264,8,1006,12],[1264,14,1006,18,"error"],[1264,19,1006,23],[1265,6,1007,8],[1266,4,1008,4],[1267,4,1009,4],[1268,0,1010,0],[1269,0,1011,0],[1270,0,1012,0],[1271,0,1013,0],[1272,0,1014,0],[1273,0,1015,0],[1274,0,1016,0],[1275,0,1017,0],[1276,0,1018,0],[1277,0,1019,0],[1278,4,1020,4],[1278,10,1020,10,"getSession"],[1278,20,1020,20,"getSession"],[1278,21,1020,20],[1278,23,1020,23],[1279,6,1021,8],[1279,12,1021,14],[1279,16,1021,18],[1279,17,1021,19,"initializePromise"],[1279,34,1021,36],[1280,6,1022,8],[1280,12,1022,14,"result"],[1280,18,1022,20],[1280,21,1022,23],[1280,27,1022,29],[1280,31,1022,33],[1280,32,1022,34,"_acquireLock"],[1280,44,1022,46],[1280,45,1022,47],[1280,46,1022,48],[1280,47,1022,49],[1280,49,1022,51],[1280,61,1022,63],[1281,8,1023,12],[1281,15,1023,19],[1281,19,1023,23],[1281,20,1023,24,"_useSession"],[1281,31,1023,35],[1281,32,1023,36],[1281,38,1023,43,"result"],[1281,44,1023,49],[1281,48,1023,54],[1282,10,1024,16],[1282,17,1024,23,"result"],[1282,23,1024,29],[1283,8,1025,12],[1283,9,1025,13],[1283,10,1025,14],[1284,6,1026,8],[1284,7,1026,9],[1284,8,1026,10],[1285,6,1027,8],[1285,13,1027,15,"result"],[1285,19,1027,21],[1286,4,1028,4],[1287,4,1029,4],[1288,0,1030,0],[1289,0,1031,0],[1290,4,1032,4],[1290,10,1032,10,"_acquireLock"],[1290,22,1032,22,"_acquireLock"],[1290,23,1032,23,"acquireTimeout"],[1290,37,1032,37],[1290,39,1032,39,"fn"],[1290,41,1032,41],[1290,43,1032,43],[1291,6,1033,8],[1291,10,1033,12],[1291,11,1033,13,"_debug"],[1291,17,1033,19],[1291,18,1033,20],[1291,33,1033,35],[1291,35,1033,37],[1291,42,1033,44],[1291,44,1033,46,"acquireTimeout"],[1291,58,1033,60],[1291,59,1033,61],[1292,6,1034,8],[1292,10,1034,12],[1293,8,1035,12],[1293,12,1035,16],[1293,16,1035,20],[1293,17,1035,21,"lockAcquired"],[1293,29,1035,33],[1293,31,1035,35],[1294,10,1036,16],[1294,16,1036,22,"last"],[1294,20,1036,26],[1294,23,1036,29],[1294,27,1036,33],[1294,28,1036,34,"pendingInLock"],[1294,41,1036,47],[1294,42,1036,48,"length"],[1294,48,1036,54],[1294,51,1037,22],[1294,55,1037,26],[1294,56,1037,27,"pendingInLock"],[1294,69,1037,40],[1294,70,1037,41],[1294,74,1037,45],[1294,75,1037,46,"pendingInLock"],[1294,88,1037,59],[1294,89,1037,60,"length"],[1294,95,1037,66],[1294,98,1037,69],[1294,99,1037,70],[1294,100,1037,71],[1294,103,1038,22,"Promise"],[1294,110,1038,29],[1294,111,1038,30,"resolve"],[1294,118,1038,37],[1294,119,1038,38],[1294,120,1038,39],[1295,10,1039,16],[1295,16,1039,22,"result"],[1295,22,1039,28],[1295,25,1039,31],[1295,26,1039,32],[1295,38,1039,44],[1296,12,1040,20],[1296,18,1040,26,"last"],[1296,22,1040,30],[1297,12,1041,20],[1297,19,1041,27],[1297,25,1041,33,"fn"],[1297,27,1041,35],[1297,28,1041,36],[1297,29,1041,37],[1298,10,1042,16],[1298,11,1042,17],[1298,13,1042,19],[1298,14,1042,20],[1299,10,1043,16],[1299,14,1043,20],[1299,15,1043,21,"pendingInLock"],[1299,28,1043,34],[1299,29,1043,35,"push"],[1299,33,1043,39],[1299,34,1043,40],[1299,35,1043,41],[1299,47,1043,53],[1300,12,1044,20],[1300,16,1044,24],[1301,14,1045,24],[1301,20,1045,30,"result"],[1301,26,1045,36],[1302,12,1046,20],[1302,13,1046,21],[1302,14,1047,20],[1302,21,1047,27,"e"],[1302,22,1047,28],[1302,24,1047,30],[1303,14,1048,24],[1304,12,1048,24],[1305,10,1050,16],[1305,11,1050,17],[1305,13,1050,19],[1305,14,1050,20],[1305,15,1050,21],[1306,10,1051,16],[1306,17,1051,23,"result"],[1306,23,1051,29],[1307,8,1052,12],[1308,8,1053,12],[1308,15,1053,19],[1308,21,1053,25],[1308,25,1053,29],[1308,26,1053,30,"lock"],[1308,30,1053,34],[1308,31,1053,35],[1308,39,1053,43],[1308,43,1053,47],[1308,44,1053,48,"storageKey"],[1308,54,1053,58],[1308,56,1053,60],[1308,58,1053,62,"acquireTimeout"],[1308,72,1053,76],[1308,74,1053,78],[1308,86,1053,90],[1309,10,1054,16],[1309,14,1054,20],[1309,15,1054,21,"_debug"],[1309,21,1054,27],[1309,22,1054,28],[1309,37,1054,43],[1309,39,1054,45],[1309,70,1054,76],[1309,72,1054,78],[1309,76,1054,82],[1309,77,1054,83,"storageKey"],[1309,87,1054,93],[1309,88,1054,94],[1310,10,1055,16],[1310,14,1055,20],[1311,12,1056,20],[1311,16,1056,24],[1311,17,1056,25,"lockAcquired"],[1311,29,1056,37],[1311,32,1056,40],[1311,36,1056,44],[1312,12,1057,20],[1312,18,1057,26,"result"],[1312,24,1057,32],[1312,27,1057,35,"fn"],[1312,29,1057,37],[1312,30,1057,38],[1312,31,1057,39],[1313,12,1058,20],[1313,16,1058,24],[1313,17,1058,25,"pendingInLock"],[1313,30,1058,38],[1313,31,1058,39,"push"],[1313,35,1058,43],[1313,36,1058,44],[1313,37,1058,45],[1313,49,1058,57],[1314,14,1059,24],[1314,18,1059,28],[1315,16,1060,28],[1315,22,1060,34,"result"],[1315,28,1060,40],[1316,14,1061,24],[1316,15,1061,25],[1316,16,1062,24],[1316,23,1062,31,"e"],[1316,24,1062,32],[1316,26,1062,34],[1317,16,1063,28],[1318,14,1063,28],[1319,12,1065,20],[1319,13,1065,21],[1319,15,1065,23],[1319,16,1065,24],[1319,17,1065,25],[1320,12,1066,20],[1320,18,1066,26,"result"],[1320,24,1066,32],[1321,12,1067,20],[1322,12,1068,20],[1322,19,1068,27],[1322,23,1068,31],[1322,24,1068,32,"pendingInLock"],[1322,37,1068,45],[1322,38,1068,46,"length"],[1322,44,1068,52],[1322,46,1068,54],[1323,14,1069,24],[1323,20,1069,30,"waitOn"],[1323,26,1069,36],[1323,29,1069,39],[1323,30,1069,40],[1323,33,1069,43],[1323,37,1069,47],[1323,38,1069,48,"pendingInLock"],[1323,51,1069,61],[1323,52,1069,62],[1324,14,1070,24],[1324,20,1070,30,"Promise"],[1324,27,1070,37],[1324,28,1070,38,"all"],[1324,31,1070,41],[1324,32,1070,42,"waitOn"],[1324,38,1070,48],[1324,39,1070,49],[1325,14,1071,24],[1325,18,1071,28],[1325,19,1071,29,"pendingInLock"],[1325,32,1071,42],[1325,33,1071,43,"splice"],[1325,39,1071,49],[1325,40,1071,50],[1325,41,1071,51],[1325,43,1071,53,"waitOn"],[1325,49,1071,59],[1325,50,1071,60,"length"],[1325,56,1071,66],[1325,57,1071,67],[1326,12,1072,20],[1327,12,1073,20],[1327,19,1073,27],[1327,25,1073,33,"result"],[1327,31,1073,39],[1328,10,1074,16],[1328,11,1074,17],[1328,20,1075,24],[1329,12,1076,20],[1329,16,1076,24],[1329,17,1076,25,"_debug"],[1329,23,1076,31],[1329,24,1076,32],[1329,39,1076,47],[1329,41,1076,49],[1329,72,1076,80],[1329,74,1076,82],[1329,78,1076,86],[1329,79,1076,87,"storageKey"],[1329,89,1076,97],[1329,90,1076,98],[1330,12,1077,20],[1330,16,1077,24],[1330,17,1077,25,"lockAcquired"],[1330,29,1077,37],[1330,32,1077,40],[1330,37,1077,45],[1331,10,1078,16],[1332,8,1079,12],[1332,9,1079,13],[1332,10,1079,14],[1333,6,1080,8],[1333,7,1080,9],[1333,16,1081,16],[1334,8,1082,12],[1334,12,1082,16],[1334,13,1082,17,"_debug"],[1334,19,1082,23],[1334,20,1082,24],[1334,35,1082,39],[1334,37,1082,41],[1334,42,1082,46],[1334,43,1082,47],[1335,6,1083,8],[1336,4,1084,4],[1337,4,1085,4],[1338,0,1086,0],[1339,0,1087,0],[1340,0,1088,0],[1341,0,1089,0],[1342,0,1090,0],[1343,4,1091,4],[1343,10,1091,10,"_useSession"],[1343,21,1091,21,"_useSession"],[1343,22,1091,22,"fn"],[1343,24,1091,24],[1343,26,1091,26],[1344,6,1092,8],[1344,10,1092,12],[1344,11,1092,13,"_debug"],[1344,17,1092,19],[1344,18,1092,20],[1344,32,1092,34],[1344,34,1092,36],[1344,41,1092,43],[1344,42,1092,44],[1345,6,1093,8],[1345,10,1093,12],[1346,8,1094,12],[1347,8,1095,12],[1347,14,1095,18,"result"],[1347,20,1095,24],[1347,23,1095,27],[1347,29,1095,33],[1347,33,1095,37],[1347,34,1095,38,"__loadSession"],[1347,47,1095,51],[1347,48,1095,52],[1347,49,1095,53],[1348,8,1096,12],[1348,15,1096,19],[1348,21,1096,25,"fn"],[1348,23,1096,27],[1348,24,1096,28,"result"],[1348,30,1096,34],[1348,31,1096,35],[1349,6,1097,8],[1349,7,1097,9],[1349,16,1098,16],[1350,8,1099,12],[1350,12,1099,16],[1350,13,1099,17,"_debug"],[1350,19,1099,23],[1350,20,1099,24],[1350,34,1099,38],[1350,36,1099,40],[1350,41,1099,45],[1350,42,1099,46],[1351,6,1100,8],[1352,4,1101,4],[1353,4,1102,4],[1354,0,1103,0],[1355,0,1104,0],[1356,0,1105,0],[1357,0,1106,0],[1358,4,1107,4],[1358,10,1107,10,"__loadSession"],[1358,23,1107,23,"__loadSession"],[1358,24,1107,23],[1358,26,1107,26],[1359,6,1108,8],[1359,10,1108,12],[1359,11,1108,13,"_debug"],[1359,17,1108,19],[1359,18,1108,20],[1359,36,1108,38],[1359,38,1108,40],[1359,45,1108,47],[1359,46,1108,48],[1360,6,1109,8],[1360,10,1109,12],[1360,11,1109,13],[1360,15,1109,17],[1360,16,1109,18,"lockAcquired"],[1360,28,1109,30],[1360,30,1109,32],[1361,8,1110,12],[1361,12,1110,16],[1361,13,1110,17,"_debug"],[1361,19,1110,23],[1361,20,1110,24],[1361,38,1110,42],[1361,40,1110,44],[1361,75,1110,79],[1361,77,1110,81],[1361,81,1110,85,"Error"],[1361,86,1110,90],[1361,87,1110,91],[1361,88,1110,92],[1361,89,1110,93,"stack"],[1361,94,1110,98],[1361,95,1110,99],[1362,6,1111,8],[1363,6,1112,8],[1363,10,1112,12],[1364,8,1113,12],[1364,12,1113,16,"currentSession"],[1364,26,1113,30],[1364,29,1113,33],[1364,33,1113,37],[1365,8,1114,12],[1365,14,1114,18,"maybeSession"],[1365,26,1114,30],[1365,29,1114,33],[1365,35,1114,39],[1365,36,1114,40],[1365,37,1114,41],[1365,39,1114,43,"helpers_1"],[1365,48,1114,52],[1365,49,1114,53,"getItemAsync"],[1365,61,1114,65],[1365,63,1114,67],[1365,67,1114,71],[1365,68,1114,72,"storage"],[1365,75,1114,79],[1365,77,1114,81],[1365,81,1114,85],[1365,82,1114,86,"storageKey"],[1365,92,1114,96],[1365,93,1114,97],[1366,8,1115,12],[1366,12,1115,16],[1366,13,1115,17,"_debug"],[1366,19,1115,23],[1366,20,1115,24],[1366,35,1115,39],[1366,37,1115,41],[1366,59,1115,63],[1366,61,1115,65,"maybeSession"],[1366,73,1115,77],[1366,74,1115,78],[1367,8,1116,12],[1367,12,1116,16,"maybeSession"],[1367,24,1116,28],[1367,29,1116,33],[1367,33,1116,37],[1367,35,1116,39],[1368,10,1117,16],[1368,14,1117,20],[1368,18,1117,24],[1368,19,1117,25,"_isValidSession"],[1368,34,1117,40],[1368,35,1117,41,"maybeSession"],[1368,47,1117,53],[1368,48,1117,54],[1368,50,1117,56],[1369,12,1118,20,"currentSession"],[1369,26,1118,34],[1369,29,1118,37,"maybeSession"],[1369,41,1118,49],[1370,10,1119,16],[1370,11,1119,17],[1370,17,1120,21],[1371,12,1121,20],[1371,16,1121,24],[1371,17,1121,25,"_debug"],[1371,23,1121,31],[1371,24,1121,32],[1371,39,1121,47],[1371,41,1121,49],[1371,76,1121,84],[1371,77,1121,85],[1372,12,1122,20],[1372,18,1122,26],[1372,22,1122,30],[1372,23,1122,31,"_removeSession"],[1372,37,1122,45],[1372,38,1122,46],[1372,39,1122,47],[1373,10,1123,16],[1374,8,1124,12],[1375,8,1125,12],[1375,12,1125,16],[1375,13,1125,17,"currentSession"],[1375,27,1125,31],[1375,29,1125,33],[1376,10,1126,16],[1376,17,1126,23],[1377,12,1126,25,"data"],[1377,16,1126,29],[1377,18,1126,31],[1378,14,1126,33,"session"],[1378,21,1126,40],[1378,23,1126,42],[1379,12,1126,47],[1379,13,1126,48],[1380,12,1126,50,"error"],[1380,17,1126,55],[1380,19,1126,57],[1381,10,1126,62],[1381,11,1126,63],[1382,8,1127,12],[1383,8,1128,12],[1384,8,1129,12],[1385,8,1130,12],[1386,8,1131,12],[1387,8,1132,12],[1388,8,1133,12],[1388,14,1133,18,"hasExpired"],[1388,24,1133,28],[1388,27,1133,31,"currentSession"],[1388,41,1133,45],[1388,42,1133,46,"expires_at"],[1388,52,1133,56],[1388,55,1134,18,"currentSession"],[1388,69,1134,32],[1388,70,1134,33,"expires_at"],[1388,80,1134,43],[1388,83,1134,46],[1388,87,1134,50],[1388,90,1134,53,"Date"],[1388,94,1134,57],[1388,95,1134,58,"now"],[1388,98,1134,61],[1388,99,1134,62],[1388,100,1134,63],[1388,103,1134,66,"constants_1"],[1388,114,1134,77],[1388,115,1134,78,"EXPIRY_MARGIN_MS"],[1388,131,1134,94],[1388,134,1135,18],[1388,139,1135,23],[1389,8,1136,12],[1389,12,1136,16],[1389,13,1136,17,"_debug"],[1389,19,1136,23],[1389,20,1136,24],[1389,38,1136,42],[1389,40,1136,44],[1389,54,1136,58,"hasExpired"],[1389,64,1136,68],[1389,67,1136,71],[1389,69,1136,73],[1389,72,1136,76],[1389,78,1136,82],[1389,88,1136,92],[1389,90,1136,94],[1389,102,1136,106],[1389,104,1136,108,"currentSession"],[1389,118,1136,122],[1389,119,1136,123,"expires_at"],[1389,129,1136,133],[1389,130,1136,134],[1390,8,1137,12],[1390,12,1137,16],[1390,13,1137,17,"hasExpired"],[1390,23,1137,27],[1390,25,1137,29],[1391,10,1138,16],[1391,14,1138,20],[1391,18,1138,24],[1391,19,1138,25,"userStorage"],[1391,30,1138,36],[1391,32,1138,38],[1392,12,1139,20],[1392,18,1139,26,"maybeUser"],[1392,27,1139,35],[1392,30,1139,39],[1392,36,1139,45],[1392,37,1139,46],[1392,38,1139,47],[1392,40,1139,49,"helpers_1"],[1392,49,1139,58],[1392,50,1139,59,"getItemAsync"],[1392,62,1139,71],[1392,64,1139,73],[1392,68,1139,77],[1392,69,1139,78,"userStorage"],[1392,80,1139,89],[1392,82,1139,91],[1392,86,1139,95],[1392,87,1139,96,"storageKey"],[1392,97,1139,106],[1392,100,1139,109],[1392,107,1139,116],[1392,108,1139,118],[1393,12,1140,20],[1393,16,1140,24,"maybeUser"],[1393,25,1140,33],[1393,30,1140,38],[1393,34,1140,42],[1393,38,1140,46,"maybeUser"],[1393,47,1140,55],[1393,52,1140,60],[1393,57,1140,65],[1393,58,1140,66],[1393,61,1140,69],[1393,66,1140,74],[1393,67,1140,75],[1393,70,1140,78,"maybeUser"],[1393,79,1140,87],[1393,80,1140,88,"user"],[1393,84,1140,92],[1393,86,1140,94],[1394,14,1141,24,"currentSession"],[1394,28,1141,38],[1394,29,1141,39,"user"],[1394,33,1141,43],[1394,36,1141,46,"maybeUser"],[1394,45,1141,55],[1394,46,1141,56,"user"],[1394,50,1141,60],[1395,12,1142,20],[1395,13,1142,21],[1395,19,1143,25],[1396,14,1144,24,"currentSession"],[1396,28,1144,38],[1396,29,1144,39,"user"],[1396,33,1144,43],[1396,36,1144,46],[1396,37,1144,47],[1396,38,1144,48],[1396,40,1144,50,"helpers_1"],[1396,49,1144,59],[1396,50,1144,60,"userNotAvailableProxy"],[1396,71,1144,81],[1396,73,1144,83],[1396,74,1144,84],[1397,12,1145,20],[1398,10,1146,16],[1399,10,1147,16],[1399,14,1147,20],[1399,18,1147,24],[1399,19,1147,25,"storage"],[1399,26,1147,32],[1399,27,1147,33,"isServer"],[1399,35,1147,41],[1399,39,1147,45,"currentSession"],[1399,53,1147,59],[1399,54,1147,60,"user"],[1399,58,1147,64],[1399,60,1147,66],[1400,12,1148,20],[1400,16,1148,24,"suppressWarning"],[1400,31,1148,39],[1400,34,1148,42],[1400,38,1148,46],[1400,39,1148,47,"suppressGetSessionWarning"],[1400,64,1148,72],[1401,12,1149,20],[1401,18,1149,26,"proxySession"],[1401,30,1149,38],[1401,33,1149,41],[1401,37,1149,45,"Proxy"],[1401,42,1149,50],[1401,43,1149,51,"currentSession"],[1401,57,1149,65],[1401,59,1149,67],[1402,14,1150,24,"get"],[1402,17,1150,27],[1402,19,1150,29,"get"],[1402,20,1150,30,"target"],[1402,26,1150,36],[1402,28,1150,38,"prop"],[1402,32,1150,42],[1402,34,1150,44,"receiver"],[1402,42,1150,52],[1402,47,1150,57],[1403,16,1151,28],[1403,20,1151,32],[1403,21,1151,33,"suppressWarning"],[1403,36,1151,48],[1403,40,1151,52,"prop"],[1403,44,1151,56],[1403,49,1151,61],[1403,55,1151,67],[1403,57,1151,69],[1404,18,1152,32],[1405,18,1153,32,"console"],[1405,25,1153,39],[1405,26,1153,40,"warn"],[1405,30,1153,44],[1405,31,1153,45],[1405,384,1153,398],[1405,385,1153,399],[1406,18,1154,32,"suppressWarning"],[1406,33,1154,47],[1406,36,1154,50],[1406,40,1154,54],[1406,41,1154,55],[1406,42,1154,56],[1407,18,1155,32],[1407,22,1155,36],[1407,23,1155,37,"suppressGetSessionWarning"],[1407,48,1155,62],[1407,51,1155,65],[1407,55,1155,69],[1407,56,1155,70],[1407,57,1155,71],[1408,16,1156,28],[1409,16,1157,28],[1409,23,1157,35,"Reflect"],[1409,30,1157,42],[1409,31,1157,43,"get"],[1409,34,1157,46],[1409,35,1157,47,"target"],[1409,41,1157,53],[1409,43,1157,55,"prop"],[1409,47,1157,59],[1409,49,1157,61,"receiver"],[1409,57,1157,69],[1409,58,1157,70],[1410,14,1158,24],[1411,12,1159,20],[1411,13,1159,21],[1411,14,1159,22],[1412,12,1160,20,"currentSession"],[1412,26,1160,34],[1412,29,1160,37,"proxySession"],[1412,41,1160,49],[1413,10,1161,16],[1414,10,1162,16],[1414,17,1162,23],[1415,12,1162,25,"data"],[1415,16,1162,29],[1415,18,1162,31],[1416,14,1162,33,"session"],[1416,21,1162,40],[1416,23,1162,42,"currentSession"],[1417,12,1162,57],[1417,13,1162,58],[1418,12,1162,60,"error"],[1418,17,1162,65],[1418,19,1162,67],[1419,10,1162,72],[1419,11,1162,73],[1420,8,1163,12],[1421,8,1164,12],[1421,14,1164,18],[1422,10,1164,20,"data"],[1422,14,1164,24],[1422,16,1164,26,"session"],[1422,23,1164,33],[1423,10,1164,35,"error"],[1424,8,1164,41],[1424,9,1164,42],[1424,12,1164,45],[1424,18,1164,51],[1424,22,1164,55],[1424,23,1164,56,"_callRefreshToken"],[1424,40,1164,73],[1424,41,1164,74,"currentSession"],[1424,55,1164,88],[1424,56,1164,89,"refresh_token"],[1424,69,1164,102],[1424,70,1164,103],[1425,8,1165,12],[1425,12,1165,16,"error"],[1425,17,1165,21],[1425,19,1165,23],[1426,10,1166,16],[1426,17,1166,23],[1427,12,1166,25,"data"],[1427,16,1166,29],[1427,18,1166,31],[1428,14,1166,33,"session"],[1428,21,1166,40],[1428,23,1166,42],[1429,12,1166,47],[1429,13,1166,48],[1430,12,1166,50,"error"],[1431,10,1166,56],[1431,11,1166,57],[1432,8,1167,12],[1433,8,1168,12],[1433,15,1168,19],[1434,10,1168,21,"data"],[1434,14,1168,25],[1434,16,1168,27],[1435,12,1168,29,"session"],[1436,10,1168,37],[1436,11,1168,38],[1437,10,1168,40,"error"],[1437,15,1168,45],[1437,17,1168,47],[1438,8,1168,52],[1438,9,1168,53],[1439,6,1169,8],[1439,7,1169,9],[1439,16,1170,16],[1440,8,1171,12],[1440,12,1171,16],[1440,13,1171,17,"_debug"],[1440,19,1171,23],[1440,20,1171,24],[1440,38,1171,42],[1440,40,1171,44],[1440,45,1171,49],[1440,46,1171,50],[1441,6,1172,8],[1442,4,1173,4],[1443,4,1174,4],[1444,0,1175,0],[1445,0,1176,0],[1446,0,1177,0],[1447,0,1178,0],[1448,0,1179,0],[1449,0,1180,0],[1450,4,1181,4],[1450,10,1181,10,"getUser"],[1450,17,1181,17,"getUser"],[1450,18,1181,18,"jwt"],[1450,21,1181,21],[1450,23,1181,23],[1451,6,1182,8],[1451,10,1182,12,"jwt"],[1451,13,1182,15],[1451,15,1182,17],[1452,8,1183,12],[1452,15,1183,19],[1452,21,1183,25],[1452,25,1183,29],[1452,26,1183,30,"_getUser"],[1452,34,1183,38],[1452,35,1183,39,"jwt"],[1452,38,1183,42],[1452,39,1183,43],[1453,6,1184,8],[1454,6,1185,8],[1454,12,1185,14],[1454,16,1185,18],[1454,17,1185,19,"initializePromise"],[1454,34,1185,36],[1455,6,1186,8],[1455,12,1186,14,"result"],[1455,18,1186,20],[1455,21,1186,23],[1455,27,1186,29],[1455,31,1186,33],[1455,32,1186,34,"_acquireLock"],[1455,44,1186,46],[1455,45,1186,47],[1455,46,1186,48],[1455,47,1186,49],[1455,49,1186,51],[1455,61,1186,63],[1456,8,1187,12],[1456,15,1187,19],[1456,21,1187,25],[1456,25,1187,29],[1456,26,1187,30,"_getUser"],[1456,34,1187,38],[1456,35,1187,39],[1456,36,1187,40],[1457,6,1188,8],[1457,7,1188,9],[1457,8,1188,10],[1458,6,1189,8],[1458,13,1189,15,"result"],[1458,19,1189,21],[1459,4,1190,4],[1460,4,1191,4],[1460,10,1191,10,"_getUser"],[1460,18,1191,18,"_getUser"],[1460,19,1191,19,"jwt"],[1460,22,1191,22],[1460,24,1191,24],[1461,6,1192,8],[1461,10,1192,12],[1462,8,1193,12],[1462,12,1193,16,"jwt"],[1462,15,1193,19],[1462,17,1193,21],[1463,10,1194,16],[1463,17,1194,23],[1463,23,1194,29],[1463,24,1194,30],[1463,25,1194,31],[1463,27,1194,33,"fetch_1"],[1463,34,1194,40],[1463,35,1194,41,"_request"],[1463,43,1194,49],[1463,45,1194,51],[1463,49,1194,55],[1463,50,1194,56,"fetch"],[1463,55,1194,61],[1463,57,1194,63],[1463,62,1194,68],[1463,64,1194,70],[1463,67,1194,73],[1463,71,1194,77],[1463,72,1194,78,"url"],[1463,75,1194,81],[1463,82,1194,88],[1463,84,1194,90],[1464,12,1195,20,"headers"],[1464,19,1195,27],[1464,21,1195,29],[1464,25,1195,33],[1464,26,1195,34,"headers"],[1464,33,1195,41],[1465,12,1196,20,"jwt"],[1465,15,1196,23],[1465,17,1196,25,"jwt"],[1465,20,1196,28],[1466,12,1197,20,"xform"],[1466,17,1197,25],[1466,19,1197,27,"fetch_1"],[1466,26,1197,34],[1466,27,1197,35,"_userResponse"],[1467,10,1198,16],[1467,11,1198,17],[1467,12,1198,18],[1468,8,1199,12],[1469,8,1200,12],[1469,15,1200,19],[1469,21,1200,25],[1469,25,1200,29],[1469,26,1200,30,"_useSession"],[1469,37,1200,41],[1469,38,1200,42],[1469,44,1200,49,"result"],[1469,50,1200,55],[1469,54,1200,60],[1470,10,1201,16],[1470,14,1201,20,"_a"],[1470,16,1201,22],[1470,18,1201,24,"_b"],[1470,20,1201,26],[1470,22,1201,28,"_c"],[1470,24,1201,30],[1471,10,1202,16],[1471,16,1202,22],[1472,12,1202,24,"data"],[1472,16,1202,28],[1473,12,1202,30,"error"],[1474,10,1202,36],[1474,11,1202,37],[1474,14,1202,40,"result"],[1474,20,1202,46],[1475,10,1203,16],[1475,14,1203,20,"error"],[1475,19,1203,25],[1475,21,1203,27],[1476,12,1204,20],[1476,18,1204,26,"error"],[1476,23,1204,31],[1477,10,1205,16],[1478,10,1206,16],[1479,10,1207,16],[1479,14,1207,20],[1479,16,1207,22],[1479,17,1207,23,"_a"],[1479,19,1207,25],[1479,22,1207,28,"data"],[1479,26,1207,32],[1479,27,1207,33,"session"],[1479,34,1207,40],[1479,40,1207,46],[1479,44,1207,50],[1479,48,1207,54,"_a"],[1479,50,1207,56],[1479,55,1207,61],[1479,60,1207,66],[1479,61,1207,67],[1479,64,1207,70],[1479,69,1207,75],[1479,70,1207,76],[1479,73,1207,79,"_a"],[1479,75,1207,81],[1479,76,1207,82,"access_token"],[1479,88,1207,94],[1479,89,1207,95],[1479,93,1207,99],[1479,94,1207,100],[1479,98,1207,104],[1479,99,1207,105,"hasCustomAuthorizationHeader"],[1479,127,1207,133],[1479,129,1207,135],[1480,12,1208,20],[1480,19,1208,27],[1481,14,1208,29,"data"],[1481,18,1208,33],[1481,20,1208,35],[1482,16,1208,37,"user"],[1482,20,1208,41],[1482,22,1208,43],[1483,14,1208,48],[1483,15,1208,49],[1484,14,1208,51,"error"],[1484,19,1208,56],[1484,21,1208,58],[1484,25,1208,62,"errors_1"],[1484,33,1208,70],[1484,34,1208,71,"AuthSessionMissingError"],[1484,57,1208,94],[1484,58,1208,95],[1485,12,1208,97],[1485,13,1208,98],[1486,10,1209,16],[1487,10,1210,16],[1487,17,1210,23],[1487,23,1210,29],[1487,24,1210,30],[1487,25,1210,31],[1487,27,1210,33,"fetch_1"],[1487,34,1210,40],[1487,35,1210,41,"_request"],[1487,43,1210,49],[1487,45,1210,51],[1487,49,1210,55],[1487,50,1210,56,"fetch"],[1487,55,1210,61],[1487,57,1210,63],[1487,62,1210,68],[1487,64,1210,70],[1487,67,1210,73],[1487,71,1210,77],[1487,72,1210,78,"url"],[1487,75,1210,81],[1487,82,1210,88],[1487,84,1210,90],[1488,12,1211,20,"headers"],[1488,19,1211,27],[1488,21,1211,29],[1488,25,1211,33],[1488,26,1211,34,"headers"],[1488,33,1211,41],[1489,12,1212,20,"jwt"],[1489,15,1212,23],[1489,17,1212,25],[1489,18,1212,26,"_c"],[1489,20,1212,28],[1489,23,1212,31],[1489,24,1212,32,"_b"],[1489,26,1212,34],[1489,29,1212,37,"data"],[1489,33,1212,41],[1489,34,1212,42,"session"],[1489,41,1212,49],[1489,47,1212,55],[1489,51,1212,59],[1489,55,1212,63,"_b"],[1489,57,1212,65],[1489,62,1212,70],[1489,67,1212,75],[1489,68,1212,76],[1489,71,1212,79],[1489,76,1212,84],[1489,77,1212,85],[1489,80,1212,88,"_b"],[1489,82,1212,90],[1489,83,1212,91,"access_token"],[1489,95,1212,103],[1489,101,1212,109],[1489,105,1212,113],[1489,109,1212,117,"_c"],[1489,111,1212,119],[1489,116,1212,124],[1489,121,1212,129],[1489,122,1212,130],[1489,125,1212,133,"_c"],[1489,127,1212,135],[1489,130,1212,138,"undefined"],[1489,139,1212,147],[1490,12,1213,20,"xform"],[1490,17,1213,25],[1490,19,1213,27,"fetch_1"],[1490,26,1213,34],[1490,27,1213,35,"_userResponse"],[1491,10,1214,16],[1491,11,1214,17],[1491,12,1214,18],[1492,8,1215,12],[1492,9,1215,13],[1492,10,1215,14],[1493,6,1216,8],[1493,7,1216,9],[1493,8,1217,8],[1493,15,1217,15,"error"],[1493,20,1217,20],[1493,22,1217,22],[1494,8,1218,12],[1494,12,1218,16],[1494,13,1218,17],[1494,14,1218,18],[1494,16,1218,20,"errors_1"],[1494,24,1218,28],[1494,25,1218,29,"isAuthError"],[1494,36,1218,40],[1494,38,1218,42,"error"],[1494,43,1218,47],[1494,44,1218,48],[1494,46,1218,50],[1495,10,1219,16],[1495,14,1219,20],[1495,15,1219,21],[1495,16,1219,22],[1495,18,1219,24,"errors_1"],[1495,26,1219,32],[1495,27,1219,33,"isAuthSessionMissingError"],[1495,52,1219,58],[1495,54,1219,60,"error"],[1495,59,1219,65],[1495,60,1219,66],[1495,62,1219,68],[1496,12,1220,20],[1497,12,1221,20],[1498,12,1222,20],[1498,18,1222,26],[1498,22,1222,30],[1498,23,1222,31,"_removeSession"],[1498,37,1222,45],[1498,38,1222,46],[1498,39,1222,47],[1499,12,1223,20],[1499,18,1223,26],[1499,19,1223,27],[1499,20,1223,28],[1499,22,1223,30,"helpers_1"],[1499,31,1223,39],[1499,32,1223,40,"removeItemAsync"],[1499,47,1223,55],[1499,49,1223,57],[1499,53,1223,61],[1499,54,1223,62,"storage"],[1499,61,1223,69],[1499,63,1223,71],[1499,66,1223,74],[1499,70,1223,78],[1499,71,1223,79,"storageKey"],[1499,81,1223,89],[1499,97,1223,105],[1499,98,1223,106],[1500,10,1224,16],[1501,10,1225,16],[1501,17,1225,23],[1502,12,1225,25,"data"],[1502,16,1225,29],[1502,18,1225,31],[1503,14,1225,33,"user"],[1503,18,1225,37],[1503,20,1225,39],[1504,12,1225,44],[1504,13,1225,45],[1505,12,1225,47,"error"],[1506,10,1225,53],[1506,11,1225,54],[1507,8,1226,12],[1508,8,1227,12],[1508,14,1227,18,"error"],[1508,19,1227,23],[1509,6,1228,8],[1510,4,1229,4],[1511,4,1230,4],[1512,0,1231,0],[1513,0,1232,0],[1514,4,1233,4],[1514,10,1233,10,"updateUser"],[1514,20,1233,20,"updateUser"],[1514,21,1233,21,"attributes"],[1514,31,1233,31],[1514,33,1233,33,"options"],[1514,40,1233,40],[1514,43,1233,43],[1514,44,1233,44],[1514,45,1233,45],[1514,47,1233,47],[1515,6,1234,8],[1515,12,1234,14],[1515,16,1234,18],[1515,17,1234,19,"initializePromise"],[1515,34,1234,36],[1516,6,1235,8],[1516,13,1235,15],[1516,19,1235,21],[1516,23,1235,25],[1516,24,1235,26,"_acquireLock"],[1516,36,1235,38],[1516,37,1235,39],[1516,38,1235,40],[1516,39,1235,41],[1516,41,1235,43],[1516,53,1235,55],[1517,8,1236,12],[1517,15,1236,19],[1517,21,1236,25],[1517,25,1236,29],[1517,26,1236,30,"_updateUser"],[1517,37,1236,41],[1517,38,1236,42,"attributes"],[1517,48,1236,52],[1517,50,1236,54,"options"],[1517,57,1236,61],[1517,58,1236,62],[1518,6,1237,8],[1518,7,1237,9],[1518,8,1237,10],[1519,4,1238,4],[1520,4,1239,4],[1520,10,1239,10,"_updateUser"],[1520,21,1239,21,"_updateUser"],[1520,22,1239,22,"attributes"],[1520,32,1239,32],[1520,34,1239,34,"options"],[1520,41,1239,41],[1520,44,1239,44],[1520,45,1239,45],[1520,46,1239,46],[1520,48,1239,48],[1521,6,1240,8],[1521,10,1240,12],[1522,8,1241,12],[1522,15,1241,19],[1522,21,1241,25],[1522,25,1241,29],[1522,26,1241,30,"_useSession"],[1522,37,1241,41],[1522,38,1241,42],[1522,44,1241,49,"result"],[1522,50,1241,55],[1522,54,1241,60],[1523,10,1242,16],[1523,16,1242,22],[1524,12,1242,24,"data"],[1524,16,1242,28],[1524,18,1242,30,"sessionData"],[1524,29,1242,41],[1525,12,1242,43,"error"],[1525,17,1242,48],[1525,19,1242,50,"sessionError"],[1526,10,1242,63],[1526,11,1242,64],[1526,14,1242,67,"result"],[1526,20,1242,73],[1527,10,1243,16],[1527,14,1243,20,"sessionError"],[1527,26,1243,32],[1527,28,1243,34],[1528,12,1244,20],[1528,18,1244,26,"sessionError"],[1528,30,1244,38],[1529,10,1245,16],[1530,10,1246,16],[1530,14,1246,20],[1530,15,1246,21,"sessionData"],[1530,26,1246,32],[1530,27,1246,33,"session"],[1530,34,1246,40],[1530,36,1246,42],[1531,12,1247,20],[1531,18,1247,26],[1531,22,1247,30,"errors_1"],[1531,30,1247,38],[1531,31,1247,39,"AuthSessionMissingError"],[1531,54,1247,62],[1531,55,1247,63],[1531,56,1247,64],[1532,10,1248,16],[1533,10,1249,16],[1533,16,1249,22,"session"],[1533,23,1249,29],[1533,26,1249,32,"sessionData"],[1533,37,1249,43],[1533,38,1249,44,"session"],[1533,45,1249,51],[1534,10,1250,16],[1534,14,1250,20,"codeChallenge"],[1534,27,1250,33],[1534,30,1250,36],[1534,34,1250,40],[1535,10,1251,16],[1535,14,1251,20,"codeChallengeMethod"],[1535,33,1251,39],[1535,36,1251,42],[1535,40,1251,46],[1536,10,1252,16],[1536,14,1252,20],[1536,18,1252,24],[1536,19,1252,25,"flowType"],[1536,27,1252,33],[1536,32,1252,38],[1536,38,1252,44],[1536,42,1252,48,"attributes"],[1536,52,1252,58],[1536,53,1252,59,"email"],[1536,58,1252,64],[1536,62,1252,68],[1536,66,1252,72],[1536,68,1252,74],[1537,12,1253,20],[1538,12,1254,20],[1538,13,1254,21,"codeChallenge"],[1538,26,1254,34],[1538,28,1254,36,"codeChallengeMethod"],[1538,47,1254,55],[1538,48,1254,56],[1538,51,1254,59],[1538,57,1254,65],[1538,58,1254,66],[1538,59,1254,67],[1538,61,1254,69,"helpers_1"],[1538,70,1254,78],[1538,71,1254,79,"getCodeChallengeAndMethod"],[1538,96,1254,104],[1538,98,1254,106],[1538,102,1254,110],[1538,103,1254,111,"storage"],[1538,110,1254,118],[1538,112,1254,120],[1538,116,1254,124],[1538,117,1254,125,"storageKey"],[1538,127,1254,135],[1538,128,1254,136],[1539,10,1255,16],[1540,10,1256,16],[1540,16,1256,22],[1541,12,1256,24,"data"],[1541,16,1256,28],[1542,12,1256,30,"error"],[1542,17,1256,35],[1542,19,1256,37,"userError"],[1543,10,1256,47],[1543,11,1256,48],[1543,14,1256,51],[1543,20,1256,57],[1543,21,1256,58],[1543,22,1256,59],[1543,24,1256,61,"fetch_1"],[1543,31,1256,68],[1543,32,1256,69,"_request"],[1543,40,1256,77],[1543,42,1256,79],[1543,46,1256,83],[1543,47,1256,84,"fetch"],[1543,52,1256,89],[1543,54,1256,91],[1543,59,1256,96],[1543,61,1256,98],[1543,64,1256,101],[1543,68,1256,105],[1543,69,1256,106,"url"],[1543,72,1256,109],[1543,79,1256,116],[1543,81,1256,118],[1544,12,1257,20,"headers"],[1544,19,1257,27],[1544,21,1257,29],[1544,25,1257,33],[1544,26,1257,34,"headers"],[1544,33,1257,41],[1545,12,1258,20,"redirectTo"],[1545,22,1258,30],[1545,24,1258,32,"options"],[1545,31,1258,39],[1545,36,1258,44],[1545,40,1258,48],[1545,44,1258,52,"options"],[1545,51,1258,59],[1545,56,1258,64],[1545,61,1258,69],[1545,62,1258,70],[1545,65,1258,73],[1545,70,1258,78],[1545,71,1258,79],[1545,74,1258,82,"options"],[1545,81,1258,89],[1545,82,1258,90,"emailRedirectTo"],[1545,97,1258,105],[1546,12,1259,20,"body"],[1546,16,1259,24],[1546,18,1259,26,"Object"],[1546,24,1259,32],[1546,25,1259,33,"assign"],[1546,31,1259,39],[1546,32,1259,40,"Object"],[1546,38,1259,46],[1546,39,1259,47,"assign"],[1546,45,1259,53],[1546,46,1259,54],[1546,47,1259,55],[1546,48,1259,56],[1546,50,1259,58,"attributes"],[1546,60,1259,68],[1546,61,1259,69],[1546,63,1259,71],[1547,14,1259,73,"code_challenge"],[1547,28,1259,87],[1547,30,1259,89,"codeChallenge"],[1547,43,1259,102],[1548,14,1259,104,"code_challenge_method"],[1548,35,1259,125],[1548,37,1259,127,"codeChallengeMethod"],[1549,12,1259,147],[1549,13,1259,148],[1549,14,1259,149],[1550,12,1260,20,"jwt"],[1550,15,1260,23],[1550,17,1260,25,"session"],[1550,24,1260,32],[1550,25,1260,33,"access_token"],[1550,37,1260,45],[1551,12,1261,20,"xform"],[1551,17,1261,25],[1551,19,1261,27,"fetch_1"],[1551,26,1261,34],[1551,27,1261,35,"_userResponse"],[1552,10,1262,16],[1552,11,1262,17],[1552,12,1262,18],[1553,10,1263,16],[1553,14,1263,20,"userError"],[1553,23,1263,29],[1553,25,1264,20],[1553,31,1264,26,"userError"],[1553,40,1264,35],[1554,10,1265,16,"session"],[1554,17,1265,23],[1554,18,1265,24,"user"],[1554,22,1265,28],[1554,25,1265,31,"data"],[1554,29,1265,35],[1554,30,1265,36,"user"],[1554,34,1265,40],[1555,10,1266,16],[1555,16,1266,22],[1555,20,1266,26],[1555,21,1266,27,"_saveSession"],[1555,33,1266,39],[1555,34,1266,40,"session"],[1555,41,1266,47],[1555,42,1266,48],[1556,10,1267,16],[1556,16,1267,22],[1556,20,1267,26],[1556,21,1267,27,"_notifyAllSubscribers"],[1556,42,1267,48],[1556,43,1267,49],[1556,57,1267,63],[1556,59,1267,65,"session"],[1556,66,1267,72],[1556,67,1267,73],[1557,10,1268,16],[1557,17,1268,23],[1558,12,1268,25,"data"],[1558,16,1268,29],[1558,18,1268,31],[1559,14,1268,33,"user"],[1559,18,1268,37],[1559,20,1268,39,"session"],[1559,27,1268,46],[1559,28,1268,47,"user"],[1560,12,1268,52],[1560,13,1268,53],[1561,12,1268,55,"error"],[1561,17,1268,60],[1561,19,1268,62],[1562,10,1268,67],[1562,11,1268,68],[1563,8,1269,12],[1563,9,1269,13],[1563,10,1269,14],[1564,6,1270,8],[1564,7,1270,9],[1564,8,1271,8],[1564,15,1271,15,"error"],[1564,20,1271,20],[1564,22,1271,22],[1565,8,1272,12],[1565,12,1272,16],[1565,13,1272,17],[1565,14,1272,18],[1565,16,1272,20,"errors_1"],[1565,24,1272,28],[1565,25,1272,29,"isAuthError"],[1565,36,1272,40],[1565,38,1272,42,"error"],[1565,43,1272,47],[1565,44,1272,48],[1565,46,1272,50],[1566,10,1273,16],[1566,17,1273,23],[1567,12,1273,25,"data"],[1567,16,1273,29],[1567,18,1273,31],[1568,14,1273,33,"user"],[1568,18,1273,37],[1568,20,1273,39],[1569,12,1273,44],[1569,13,1273,45],[1570,12,1273,47,"error"],[1571,10,1273,53],[1571,11,1273,54],[1572,8,1274,12],[1573,8,1275,12],[1573,14,1275,18,"error"],[1573,19,1275,23],[1574,6,1276,8],[1575,4,1277,4],[1576,4,1278,4],[1577,0,1279,0],[1578,0,1280,0],[1579,0,1281,0],[1580,0,1282,0],[1581,4,1283,4],[1581,10,1283,10,"setSession"],[1581,20,1283,20,"setSession"],[1581,21,1283,21,"currentSession"],[1581,35,1283,35],[1581,37,1283,37],[1582,6,1284,8],[1582,12,1284,14],[1582,16,1284,18],[1582,17,1284,19,"initializePromise"],[1582,34,1284,36],[1583,6,1285,8],[1583,13,1285,15],[1583,19,1285,21],[1583,23,1285,25],[1583,24,1285,26,"_acquireLock"],[1583,36,1285,38],[1583,37,1285,39],[1583,38,1285,40],[1583,39,1285,41],[1583,41,1285,43],[1583,53,1285,55],[1584,8,1286,12],[1584,15,1286,19],[1584,21,1286,25],[1584,25,1286,29],[1584,26,1286,30,"_setSession"],[1584,37,1286,41],[1584,38,1286,42,"currentSession"],[1584,52,1286,56],[1584,53,1286,57],[1585,6,1287,8],[1585,7,1287,9],[1585,8,1287,10],[1586,4,1288,4],[1587,4,1289,4],[1587,10,1289,10,"_setSession"],[1587,21,1289,21,"_setSession"],[1587,22,1289,22,"currentSession"],[1587,36,1289,36],[1587,38,1289,38],[1588,6,1290,8],[1588,10,1290,12],[1589,8,1291,12],[1589,12,1291,16],[1589,13,1291,17,"currentSession"],[1589,27,1291,31],[1589,28,1291,32,"access_token"],[1589,40,1291,44],[1589,44,1291,48],[1589,45,1291,49,"currentSession"],[1589,59,1291,63],[1589,60,1291,64,"refresh_token"],[1589,73,1291,77],[1589,75,1291,79],[1590,10,1292,16],[1590,16,1292,22],[1590,20,1292,26,"errors_1"],[1590,28,1292,34],[1590,29,1292,35,"AuthSessionMissingError"],[1590,52,1292,58],[1590,53,1292,59],[1590,54,1292,60],[1591,8,1293,12],[1592,8,1294,12],[1592,14,1294,18,"timeNow"],[1592,21,1294,25],[1592,24,1294,28,"Date"],[1592,28,1294,32],[1592,29,1294,33,"now"],[1592,32,1294,36],[1592,33,1294,37],[1592,34,1294,38],[1592,37,1294,41],[1592,41,1294,45],[1593,8,1295,12],[1593,12,1295,16,"expiresAt"],[1593,21,1295,25],[1593,24,1295,28,"timeNow"],[1593,31,1295,35],[1594,8,1296,12],[1594,12,1296,16,"hasExpired"],[1594,22,1296,26],[1594,25,1296,29],[1594,29,1296,33],[1595,8,1297,12],[1595,12,1297,16,"session"],[1595,19,1297,23],[1595,22,1297,26],[1595,26,1297,30],[1596,8,1298,12],[1596,14,1298,18],[1597,10,1298,20,"payload"],[1598,8,1298,28],[1598,9,1298,29],[1598,12,1298,32],[1598,13,1298,33],[1598,14,1298,34],[1598,16,1298,36,"helpers_1"],[1598,25,1298,45],[1598,26,1298,46,"decodeJWT"],[1598,35,1298,55],[1598,37,1298,57,"currentSession"],[1598,51,1298,71],[1598,52,1298,72,"access_token"],[1598,64,1298,84],[1598,65,1298,85],[1599,8,1299,12],[1599,12,1299,16,"payload"],[1599,19,1299,23],[1599,20,1299,24,"exp"],[1599,23,1299,27],[1599,25,1299,29],[1600,10,1300,16,"expiresAt"],[1600,19,1300,25],[1600,22,1300,28,"payload"],[1600,29,1300,35],[1600,30,1300,36,"exp"],[1600,33,1300,39],[1601,10,1301,16,"hasExpired"],[1601,20,1301,26],[1601,23,1301,29,"expiresAt"],[1601,32,1301,38],[1601,36,1301,42,"timeNow"],[1601,43,1301,49],[1602,8,1302,12],[1603,8,1303,12],[1603,12,1303,16,"hasExpired"],[1603,22,1303,26],[1603,24,1303,28],[1604,10,1304,16],[1604,16,1304,22],[1605,12,1304,24,"data"],[1605,16,1304,28],[1605,18,1304,30,"refreshedSession"],[1605,34,1304,46],[1606,12,1304,48,"error"],[1607,10,1304,54],[1607,11,1304,55],[1607,14,1304,58],[1607,20,1304,64],[1607,24,1304,68],[1607,25,1304,69,"_callRefreshToken"],[1607,42,1304,86],[1607,43,1304,87,"currentSession"],[1607,57,1304,101],[1607,58,1304,102,"refresh_token"],[1607,71,1304,115],[1607,72,1304,116],[1608,10,1305,16],[1608,14,1305,20,"error"],[1608,19,1305,25],[1608,21,1305,27],[1609,12,1306,20],[1609,19,1306,27],[1610,14,1306,29,"data"],[1610,18,1306,33],[1610,20,1306,35],[1611,16,1306,37,"user"],[1611,20,1306,41],[1611,22,1306,43],[1611,26,1306,47],[1612,16,1306,49,"session"],[1612,23,1306,56],[1612,25,1306,58],[1613,14,1306,63],[1613,15,1306,64],[1614,14,1306,66,"error"],[1614,19,1306,71],[1614,21,1306,73,"error"],[1615,12,1306,79],[1615,13,1306,80],[1616,10,1307,16],[1617,10,1308,16],[1617,14,1308,20],[1617,15,1308,21,"refreshedSession"],[1617,31,1308,37],[1617,33,1308,39],[1618,12,1309,20],[1618,19,1309,27],[1619,14,1309,29,"data"],[1619,18,1309,33],[1619,20,1309,35],[1620,16,1309,37,"user"],[1620,20,1309,41],[1620,22,1309,43],[1620,26,1309,47],[1621,16,1309,49,"session"],[1621,23,1309,56],[1621,25,1309,58],[1622,14,1309,63],[1622,15,1309,64],[1623,14,1309,66,"error"],[1623,19,1309,71],[1623,21,1309,73],[1624,12,1309,78],[1624,13,1309,79],[1625,10,1310,16],[1626,10,1311,16,"session"],[1626,17,1311,23],[1626,20,1311,26,"refreshedSession"],[1626,36,1311,42],[1627,8,1312,12],[1627,9,1312,13],[1627,15,1313,17],[1628,10,1314,16],[1628,16,1314,22],[1629,12,1314,24,"data"],[1629,16,1314,28],[1630,12,1314,30,"error"],[1631,10,1314,36],[1631,11,1314,37],[1631,14,1314,40],[1631,20,1314,46],[1631,24,1314,50],[1631,25,1314,51,"_getUser"],[1631,33,1314,59],[1631,34,1314,60,"currentSession"],[1631,48,1314,74],[1631,49,1314,75,"access_token"],[1631,61,1314,87],[1631,62,1314,88],[1632,10,1315,16],[1632,14,1315,20,"error"],[1632,19,1315,25],[1632,21,1315,27],[1633,12,1316,20],[1633,18,1316,26,"error"],[1633,23,1316,31],[1634,10,1317,16],[1635,10,1318,16,"session"],[1635,17,1318,23],[1635,20,1318,26],[1636,12,1319,20,"access_token"],[1636,24,1319,32],[1636,26,1319,34,"currentSession"],[1636,40,1319,48],[1636,41,1319,49,"access_token"],[1636,53,1319,61],[1637,12,1320,20,"refresh_token"],[1637,25,1320,33],[1637,27,1320,35,"currentSession"],[1637,41,1320,49],[1637,42,1320,50,"refresh_token"],[1637,55,1320,63],[1638,12,1321,20,"user"],[1638,16,1321,24],[1638,18,1321,26,"data"],[1638,22,1321,30],[1638,23,1321,31,"user"],[1638,27,1321,35],[1639,12,1322,20,"token_type"],[1639,22,1322,30],[1639,24,1322,32],[1639,32,1322,40],[1640,12,1323,20,"expires_in"],[1640,22,1323,30],[1640,24,1323,32,"expiresAt"],[1640,33,1323,41],[1640,36,1323,44,"timeNow"],[1640,43,1323,51],[1641,12,1324,20,"expires_at"],[1641,22,1324,30],[1641,24,1324,32,"expiresAt"],[1642,10,1325,16],[1642,11,1325,17],[1643,10,1326,16],[1643,16,1326,22],[1643,20,1326,26],[1643,21,1326,27,"_saveSession"],[1643,33,1326,39],[1643,34,1326,40,"session"],[1643,41,1326,47],[1643,42,1326,48],[1644,10,1327,16],[1644,16,1327,22],[1644,20,1327,26],[1644,21,1327,27,"_notifyAllSubscribers"],[1644,42,1327,48],[1644,43,1327,49],[1644,54,1327,60],[1644,56,1327,62,"session"],[1644,63,1327,69],[1644,64,1327,70],[1645,8,1328,12],[1646,8,1329,12],[1646,15,1329,19],[1647,10,1329,21,"data"],[1647,14,1329,25],[1647,16,1329,27],[1648,12,1329,29,"user"],[1648,16,1329,33],[1648,18,1329,35,"session"],[1648,25,1329,42],[1648,26,1329,43,"user"],[1648,30,1329,47],[1649,12,1329,49,"session"],[1650,10,1329,57],[1650,11,1329,58],[1651,10,1329,60,"error"],[1651,15,1329,65],[1651,17,1329,67],[1652,8,1329,72],[1652,9,1329,73],[1653,6,1330,8],[1653,7,1330,9],[1653,8,1331,8],[1653,15,1331,15,"error"],[1653,20,1331,20],[1653,22,1331,22],[1654,8,1332,12],[1654,12,1332,16],[1654,13,1332,17],[1654,14,1332,18],[1654,16,1332,20,"errors_1"],[1654,24,1332,28],[1654,25,1332,29,"isAuthError"],[1654,36,1332,40],[1654,38,1332,42,"error"],[1654,43,1332,47],[1654,44,1332,48],[1654,46,1332,50],[1655,10,1333,16],[1655,17,1333,23],[1656,12,1333,25,"data"],[1656,16,1333,29],[1656,18,1333,31],[1657,14,1333,33,"session"],[1657,21,1333,40],[1657,23,1333,42],[1657,27,1333,46],[1658,14,1333,48,"user"],[1658,18,1333,52],[1658,20,1333,54],[1659,12,1333,59],[1659,13,1333,60],[1660,12,1333,62,"error"],[1661,10,1333,68],[1661,11,1333,69],[1662,8,1334,12],[1663,8,1335,12],[1663,14,1335,18,"error"],[1663,19,1335,23],[1664,6,1336,8],[1665,4,1337,4],[1666,4,1338,4],[1667,0,1339,0],[1668,0,1340,0],[1669,0,1341,0],[1670,0,1342,0],[1671,0,1343,0],[1672,4,1344,4],[1672,10,1344,10,"refreshSession"],[1672,24,1344,24,"refreshSession"],[1672,25,1344,25,"currentSession"],[1672,39,1344,39],[1672,41,1344,41],[1673,6,1345,8],[1673,12,1345,14],[1673,16,1345,18],[1673,17,1345,19,"initializePromise"],[1673,34,1345,36],[1674,6,1346,8],[1674,13,1346,15],[1674,19,1346,21],[1674,23,1346,25],[1674,24,1346,26,"_acquireLock"],[1674,36,1346,38],[1674,37,1346,39],[1674,38,1346,40],[1674,39,1346,41],[1674,41,1346,43],[1674,53,1346,55],[1675,8,1347,12],[1675,15,1347,19],[1675,21,1347,25],[1675,25,1347,29],[1675,26,1347,30,"_refreshSession"],[1675,41,1347,45],[1675,42,1347,46,"currentSession"],[1675,56,1347,60],[1675,57,1347,61],[1676,6,1348,8],[1676,7,1348,9],[1676,8,1348,10],[1677,4,1349,4],[1678,4,1350,4],[1678,10,1350,10,"_refreshSession"],[1678,25,1350,25,"_refreshSession"],[1678,26,1350,26,"currentSession"],[1678,40,1350,40],[1678,42,1350,42],[1679,6,1351,8],[1679,10,1351,12],[1680,8,1352,12],[1680,15,1352,19],[1680,21,1352,25],[1680,25,1352,29],[1680,26,1352,30,"_useSession"],[1680,37,1352,41],[1680,38,1352,42],[1680,44,1352,49,"result"],[1680,50,1352,55],[1680,54,1352,60],[1681,10,1353,16],[1681,14,1353,20,"_a"],[1681,16,1353,22],[1682,10,1354,16],[1682,14,1354,20],[1682,15,1354,21,"currentSession"],[1682,29,1354,35],[1682,31,1354,37],[1683,12,1355,20],[1683,18,1355,26],[1684,14,1355,28,"data"],[1684,18,1355,32],[1685,14,1355,34,"error"],[1686,12,1355,40],[1686,13,1355,41],[1686,16,1355,44,"result"],[1686,22,1355,50],[1687,12,1356,20],[1687,16,1356,24,"error"],[1687,21,1356,29],[1687,23,1356,31],[1688,14,1357,24],[1688,20,1357,30,"error"],[1688,25,1357,35],[1689,12,1358,20],[1690,12,1359,20,"currentSession"],[1690,26,1359,34],[1690,29,1359,37],[1690,30,1359,38,"_a"],[1690,32,1359,40],[1690,35,1359,43,"data"],[1690,39,1359,47],[1690,40,1359,48,"session"],[1690,47,1359,55],[1690,53,1359,61],[1690,57,1359,65],[1690,61,1359,69,"_a"],[1690,63,1359,71],[1690,68,1359,76],[1690,73,1359,81],[1690,74,1359,82],[1690,77,1359,85,"_a"],[1690,79,1359,87],[1690,82,1359,90,"undefined"],[1690,91,1359,99],[1691,10,1360,16],[1692,10,1361,16],[1692,14,1361,20],[1692,16,1361,22,"currentSession"],[1692,30,1361,36],[1692,35,1361,41],[1692,39,1361,45],[1692,43,1361,49,"currentSession"],[1692,57,1361,63],[1692,62,1361,68],[1692,67,1361,73],[1692,68,1361,74],[1692,71,1361,77],[1692,76,1361,82],[1692,77,1361,83],[1692,80,1361,86,"currentSession"],[1692,94,1361,100],[1692,95,1361,101,"refresh_token"],[1692,108,1361,114],[1692,109,1361,115],[1692,111,1361,117],[1693,12,1362,20],[1693,18,1362,26],[1693,22,1362,30,"errors_1"],[1693,30,1362,38],[1693,31,1362,39,"AuthSessionMissingError"],[1693,54,1362,62],[1693,55,1362,63],[1693,56,1362,64],[1694,10,1363,16],[1695,10,1364,16],[1695,16,1364,22],[1696,12,1364,24,"data"],[1696,16,1364,28],[1696,18,1364,30,"session"],[1696,25,1364,37],[1697,12,1364,39,"error"],[1698,10,1364,45],[1698,11,1364,46],[1698,14,1364,49],[1698,20,1364,55],[1698,24,1364,59],[1698,25,1364,60,"_callRefreshToken"],[1698,42,1364,77],[1698,43,1364,78,"currentSession"],[1698,57,1364,92],[1698,58,1364,93,"refresh_token"],[1698,71,1364,106],[1698,72,1364,107],[1699,10,1365,16],[1699,14,1365,20,"error"],[1699,19,1365,25],[1699,21,1365,27],[1700,12,1366,20],[1700,19,1366,27],[1701,14,1366,29,"data"],[1701,18,1366,33],[1701,20,1366,35],[1702,16,1366,37,"user"],[1702,20,1366,41],[1702,22,1366,43],[1702,26,1366,47],[1703,16,1366,49,"session"],[1703,23,1366,56],[1703,25,1366,58],[1704,14,1366,63],[1704,15,1366,64],[1705,14,1366,66,"error"],[1705,19,1366,71],[1705,21,1366,73,"error"],[1706,12,1366,79],[1706,13,1366,80],[1707,10,1367,16],[1708,10,1368,16],[1708,14,1368,20],[1708,15,1368,21,"session"],[1708,22,1368,28],[1708,24,1368,30],[1709,12,1369,20],[1709,19,1369,27],[1710,14,1369,29,"data"],[1710,18,1369,33],[1710,20,1369,35],[1711,16,1369,37,"user"],[1711,20,1369,41],[1711,22,1369,43],[1711,26,1369,47],[1712,16,1369,49,"session"],[1712,23,1369,56],[1712,25,1369,58],[1713,14,1369,63],[1713,15,1369,64],[1714,14,1369,66,"error"],[1714,19,1369,71],[1714,21,1369,73],[1715,12,1369,78],[1715,13,1369,79],[1716,10,1370,16],[1717,10,1371,16],[1717,17,1371,23],[1718,12,1371,25,"data"],[1718,16,1371,29],[1718,18,1371,31],[1719,14,1371,33,"user"],[1719,18,1371,37],[1719,20,1371,39,"session"],[1719,27,1371,46],[1719,28,1371,47,"user"],[1719,32,1371,51],[1720,14,1371,53,"session"],[1721,12,1371,61],[1721,13,1371,62],[1722,12,1371,64,"error"],[1722,17,1371,69],[1722,19,1371,71],[1723,10,1371,76],[1723,11,1371,77],[1724,8,1372,12],[1724,9,1372,13],[1724,10,1372,14],[1725,6,1373,8],[1725,7,1373,9],[1725,8,1374,8],[1725,15,1374,15,"error"],[1725,20,1374,20],[1725,22,1374,22],[1726,8,1375,12],[1726,12,1375,16],[1726,13,1375,17],[1726,14,1375,18],[1726,16,1375,20,"errors_1"],[1726,24,1375,28],[1726,25,1375,29,"isAuthError"],[1726,36,1375,40],[1726,38,1375,42,"error"],[1726,43,1375,47],[1726,44,1375,48],[1726,46,1375,50],[1727,10,1376,16],[1727,17,1376,23],[1728,12,1376,25,"data"],[1728,16,1376,29],[1728,18,1376,31],[1729,14,1376,33,"user"],[1729,18,1376,37],[1729,20,1376,39],[1729,24,1376,43],[1730,14,1376,45,"session"],[1730,21,1376,52],[1730,23,1376,54],[1731,12,1376,59],[1731,13,1376,60],[1732,12,1376,62,"error"],[1733,10,1376,68],[1733,11,1376,69],[1734,8,1377,12],[1735,8,1378,12],[1735,14,1378,18,"error"],[1735,19,1378,23],[1736,6,1379,8],[1737,4,1380,4],[1738,4,1381,4],[1739,0,1382,0],[1740,0,1383,0],[1741,4,1384,4],[1741,10,1384,10,"_getSessionFromURL"],[1741,28,1384,28,"_getSessionFromURL"],[1741,29,1384,29,"params"],[1741,35,1384,35],[1741,37,1384,37,"callbackUrlType"],[1741,52,1384,52],[1741,54,1384,54],[1742,6,1385,8],[1742,10,1385,12],[1743,8,1386,12],[1743,12,1386,16],[1743,13,1386,17],[1743,14,1386,18],[1743,15,1386,19],[1743,17,1386,21,"helpers_1"],[1743,26,1386,30],[1743,27,1386,31,"isBrowser"],[1743,36,1386,40],[1743,38,1386,42],[1743,39,1386,43],[1743,41,1387,16],[1743,47,1387,22],[1743,51,1387,26,"errors_1"],[1743,59,1387,34],[1743,60,1387,35,"AuthImplicitGrantRedirectError"],[1743,90,1387,65],[1743,91,1387,66],[1743,113,1387,88],[1743,114,1387,89],[1744,8,1388,12],[1745,8,1389,12],[1745,12,1389,16,"params"],[1745,18,1389,22],[1745,19,1389,23,"error"],[1745,24,1389,28],[1745,28,1389,32,"params"],[1745,34,1389,38],[1745,35,1389,39,"error_description"],[1745,52,1389,56],[1745,56,1389,60,"params"],[1745,62,1389,66],[1745,63,1389,67,"error_code"],[1745,73,1389,77],[1745,75,1389,79],[1746,10,1390,16],[1747,10,1391,16],[1748,10,1392,16],[1748,16,1392,22],[1748,20,1392,26,"errors_1"],[1748,28,1392,34],[1748,29,1392,35,"AuthImplicitGrantRedirectError"],[1748,59,1392,65],[1748,60,1392,66,"params"],[1748,66,1392,72],[1748,67,1392,73,"error_description"],[1748,84,1392,90],[1748,88,1392,94],[1748,137,1392,143],[1748,139,1392,145],[1749,12,1393,20,"error"],[1749,17,1393,25],[1749,19,1393,27,"params"],[1749,25,1393,33],[1749,26,1393,34,"error"],[1749,31,1393,39],[1749,35,1393,43],[1749,54,1393,62],[1750,12,1394,20,"code"],[1750,16,1394,24],[1750,18,1394,26,"params"],[1750,24,1394,32],[1750,25,1394,33,"error_code"],[1750,35,1394,43],[1750,39,1394,47],[1751,10,1395,16],[1751,11,1395,17],[1751,12,1395,18],[1752,8,1396,12],[1753,8,1397,12],[1754,8,1398,12],[1754,16,1398,20,"callbackUrlType"],[1754,31,1398,35],[1755,10,1399,16],[1755,15,1399,21],[1755,25,1399,31],[1756,12,1400,20],[1756,16,1400,24],[1756,20,1400,28],[1756,21,1400,29,"flowType"],[1756,29,1400,37],[1756,34,1400,42],[1756,40,1400,48],[1756,42,1400,50],[1757,14,1401,24],[1757,20,1401,30],[1757,24,1401,34,"errors_1"],[1757,32,1401,42],[1757,33,1401,43,"AuthPKCEGrantCodeExchangeError"],[1757,63,1401,73],[1757,64,1401,74],[1757,92,1401,102],[1757,93,1401,103],[1758,12,1402,20],[1759,12,1403,20],[1760,10,1404,16],[1760,15,1404,21],[1760,21,1404,27],[1761,12,1405,20],[1761,16,1405,24],[1761,20,1405,28],[1761,21,1405,29,"flowType"],[1761,29,1405,37],[1761,34,1405,42],[1761,44,1405,52],[1761,46,1405,54],[1762,14,1406,24],[1762,20,1406,30],[1762,24,1406,34,"errors_1"],[1762,32,1406,42],[1762,33,1406,43,"AuthImplicitGrantRedirectError"],[1762,63,1406,73],[1762,64,1406,74],[1762,102,1406,112],[1762,103,1406,113],[1763,12,1407,20],[1764,12,1408,20],[1765,10,1409,16],[1766,10,1410,16],[1767,8,1411,12],[1768,8,1412,12],[1769,8,1413,12],[1769,12,1413,16,"callbackUrlType"],[1769,27,1413,31],[1769,32,1413,36],[1769,38,1413,42],[1769,40,1413,44],[1770,10,1414,16],[1770,14,1414,20],[1770,15,1414,21,"_debug"],[1770,21,1414,27],[1770,22,1414,28],[1770,38,1414,44],[1770,40,1414,46],[1770,47,1414,53],[1770,49,1414,55],[1770,63,1414,69],[1770,65,1414,71],[1770,69,1414,75],[1770,70,1414,76],[1771,10,1415,16],[1771,14,1415,20],[1771,15,1415,21,"params"],[1771,21,1415,27],[1771,22,1415,28,"code"],[1771,26,1415,32],[1771,28,1416,20],[1771,34,1416,26],[1771,38,1416,30,"errors_1"],[1771,46,1416,38],[1771,47,1416,39,"AuthPKCEGrantCodeExchangeError"],[1771,77,1416,69],[1771,78,1416,70],[1771,97,1416,89],[1771,98,1416,90],[1772,10,1417,16],[1772,16,1417,22],[1773,12,1417,24,"data"],[1773,16,1417,28],[1774,12,1417,30,"error"],[1775,10,1417,36],[1775,11,1417,37],[1775,14,1417,40],[1775,20,1417,46],[1775,24,1417,50],[1775,25,1417,51,"_exchangeCodeForSession"],[1775,48,1417,74],[1775,49,1417,75,"params"],[1775,55,1417,81],[1775,56,1417,82,"code"],[1775,60,1417,86],[1775,61,1417,87],[1776,10,1418,16],[1776,14,1418,20,"error"],[1776,19,1418,25],[1776,21,1419,20],[1776,27,1419,26,"error"],[1776,32,1419,31],[1777,10,1420,16],[1777,16,1420,22,"url"],[1777,19,1420,25],[1777,22,1420,28],[1777,26,1420,32,"URL"],[1777,29,1420,35],[1777,30,1420,36,"window"],[1777,36,1420,42],[1777,37,1420,43,"location"],[1777,45,1420,51],[1777,46,1420,52,"href"],[1777,50,1420,56],[1777,51,1420,57],[1778,10,1421,16,"url"],[1778,13,1421,19],[1778,14,1421,20,"searchParams"],[1778,26,1421,32],[1778,27,1421,33,"delete"],[1778,33,1421,39],[1778,34,1421,40],[1778,40,1421,46],[1778,41,1421,47],[1779,10,1422,16,"window"],[1779,16,1422,22],[1779,17,1422,23,"history"],[1779,24,1422,30],[1779,25,1422,31,"replaceState"],[1779,37,1422,43],[1779,38,1422,44,"window"],[1779,44,1422,50],[1779,45,1422,51,"history"],[1779,52,1422,58],[1779,53,1422,59,"state"],[1779,58,1422,64],[1779,60,1422,66],[1779,62,1422,68],[1779,64,1422,70,"url"],[1779,67,1422,73],[1779,68,1422,74,"toString"],[1779,76,1422,82],[1779,77,1422,83],[1779,78,1422,84],[1779,79,1422,85],[1780,10,1423,16],[1780,17,1423,23],[1781,12,1423,25,"data"],[1781,16,1423,29],[1781,18,1423,31],[1782,14,1423,33,"session"],[1782,21,1423,40],[1782,23,1423,42,"data"],[1782,27,1423,46],[1782,28,1423,47,"session"],[1782,35,1423,54],[1783,14,1423,56,"redirectType"],[1783,26,1423,68],[1783,28,1423,70],[1784,12,1423,75],[1784,13,1423,76],[1785,12,1423,78,"error"],[1785,17,1423,83],[1785,19,1423,85],[1786,10,1423,90],[1786,11,1423,91],[1787,8,1424,12],[1788,8,1425,12],[1788,14,1425,18],[1789,10,1425,20,"provider_token"],[1789,24,1425,34],[1790,10,1425,36,"provider_refresh_token"],[1790,32,1425,58],[1791,10,1425,60,"access_token"],[1791,22,1425,72],[1792,10,1425,74,"refresh_token"],[1792,23,1425,87],[1793,10,1425,89,"expires_in"],[1793,20,1425,99],[1794,10,1425,101,"expires_at"],[1794,20,1425,111],[1795,10,1425,113,"token_type"],[1796,8,1425,125],[1796,9,1425,126],[1796,12,1425,129,"params"],[1796,18,1425,135],[1797,8,1426,12],[1797,12,1426,16],[1797,13,1426,17,"access_token"],[1797,25,1426,29],[1797,29,1426,33],[1797,30,1426,34,"expires_in"],[1797,40,1426,44],[1797,44,1426,48],[1797,45,1426,49,"refresh_token"],[1797,58,1426,62],[1797,62,1426,66],[1797,63,1426,67,"token_type"],[1797,73,1426,77],[1797,75,1426,79],[1798,10,1427,16],[1798,16,1427,22],[1798,20,1427,26,"errors_1"],[1798,28,1427,34],[1798,29,1427,35,"AuthImplicitGrantRedirectError"],[1798,59,1427,65],[1798,60,1427,66],[1798,87,1427,93],[1798,88,1427,94],[1799,8,1428,12],[1800,8,1429,12],[1800,14,1429,18,"timeNow"],[1800,21,1429,25],[1800,24,1429,28,"Math"],[1800,28,1429,32],[1800,29,1429,33,"round"],[1800,34,1429,38],[1800,35,1429,39,"Date"],[1800,39,1429,43],[1800,40,1429,44,"now"],[1800,43,1429,47],[1800,44,1429,48],[1800,45,1429,49],[1800,48,1429,52],[1800,52,1429,56],[1800,53,1429,57],[1801,8,1430,12],[1801,14,1430,18,"expiresIn"],[1801,23,1430,27],[1801,26,1430,30,"parseInt"],[1801,34,1430,38],[1801,35,1430,39,"expires_in"],[1801,45,1430,49],[1801,46,1430,50],[1802,8,1431,12],[1802,12,1431,16,"expiresAt"],[1802,21,1431,25],[1802,24,1431,28,"timeNow"],[1802,31,1431,35],[1802,34,1431,38,"expiresIn"],[1802,43,1431,47],[1803,8,1432,12],[1803,12,1432,16,"expires_at"],[1803,22,1432,26],[1803,24,1432,28],[1804,10,1433,16,"expiresAt"],[1804,19,1433,25],[1804,22,1433,28,"parseInt"],[1804,30,1433,36],[1804,31,1433,37,"expires_at"],[1804,41,1433,47],[1804,42,1433,48],[1805,8,1434,12],[1806,8,1435,12],[1806,14,1435,18,"actuallyExpiresIn"],[1806,31,1435,35],[1806,34,1435,38,"expiresAt"],[1806,43,1435,47],[1806,46,1435,50,"timeNow"],[1806,53,1435,57],[1807,8,1436,12],[1807,12,1436,16,"actuallyExpiresIn"],[1807,29,1436,33],[1807,32,1436,36],[1807,36,1436,40],[1807,40,1436,44,"constants_1"],[1807,51,1436,55],[1807,52,1436,56,"AUTO_REFRESH_TICK_DURATION_MS"],[1807,81,1436,85],[1807,83,1436,87],[1808,10,1437,16,"console"],[1808,17,1437,23],[1808,18,1437,24,"warn"],[1808,22,1437,28],[1808,23,1437,29],[1808,88,1437,94,"actuallyExpiresIn"],[1808,105,1437,111],[1808,138,1437,144,"expiresIn"],[1808,147,1437,153],[1808,150,1437,156],[1808,151,1437,157],[1809,8,1438,12],[1810,8,1439,12],[1810,14,1439,18,"issuedAt"],[1810,22,1439,26],[1810,25,1439,29,"expiresAt"],[1810,34,1439,38],[1810,37,1439,41,"expiresIn"],[1810,46,1439,50],[1811,8,1440,12],[1811,12,1440,16,"timeNow"],[1811,19,1440,23],[1811,22,1440,26,"issuedAt"],[1811,30,1440,34],[1811,34,1440,38],[1811,37,1440,41],[1811,39,1440,43],[1812,10,1441,16,"console"],[1812,17,1441,23],[1812,18,1441,24,"warn"],[1812,22,1441,28],[1812,23,1441,29],[1812,120,1441,126],[1812,122,1441,128,"issuedAt"],[1812,130,1441,136],[1812,132,1441,138,"expiresAt"],[1812,141,1441,147],[1812,143,1441,149,"timeNow"],[1812,150,1441,156],[1812,151,1441,157],[1813,8,1442,12],[1813,9,1442,13],[1813,15,1443,17],[1813,19,1443,21,"timeNow"],[1813,26,1443,28],[1813,29,1443,31,"issuedAt"],[1813,37,1443,39],[1813,40,1443,42],[1813,41,1443,43],[1813,43,1443,45],[1814,10,1444,16,"console"],[1814,17,1444,23],[1814,18,1444,24,"warn"],[1814,22,1444,28],[1814,23,1444,29],[1814,133,1444,139],[1814,135,1444,141,"issuedAt"],[1814,143,1444,149],[1814,145,1444,151,"expiresAt"],[1814,154,1444,160],[1814,156,1444,162,"timeNow"],[1814,163,1444,169],[1814,164,1444,170],[1815,8,1445,12],[1816,8,1446,12],[1816,14,1446,18],[1817,10,1446,20,"data"],[1817,14,1446,24],[1818,10,1446,26,"error"],[1819,8,1446,32],[1819,9,1446,33],[1819,12,1446,36],[1819,18,1446,42],[1819,22,1446,46],[1819,23,1446,47,"_getUser"],[1819,31,1446,55],[1819,32,1446,56,"access_token"],[1819,44,1446,68],[1819,45,1446,69],[1820,8,1447,12],[1820,12,1447,16,"error"],[1820,17,1447,21],[1820,19,1448,16],[1820,25,1448,22,"error"],[1820,30,1448,27],[1821,8,1449,12],[1821,14,1449,18,"session"],[1821,21,1449,25],[1821,24,1449,28],[1822,10,1450,16,"provider_token"],[1822,24,1450,30],[1823,10,1451,16,"provider_refresh_token"],[1823,32,1451,38],[1824,10,1452,16,"access_token"],[1824,22,1452,28],[1825,10,1453,16,"expires_in"],[1825,20,1453,26],[1825,22,1453,28,"expiresIn"],[1825,31,1453,37],[1826,10,1454,16,"expires_at"],[1826,20,1454,26],[1826,22,1454,28,"expiresAt"],[1826,31,1454,37],[1827,10,1455,16,"refresh_token"],[1827,23,1455,29],[1828,10,1456,16,"token_type"],[1828,20,1456,26],[1828,22,1456,28,"token_type"],[1828,32,1456,38],[1829,10,1457,16,"user"],[1829,14,1457,20],[1829,16,1457,22,"data"],[1829,20,1457,26],[1829,21,1457,27,"user"],[1830,8,1458,12],[1830,9,1458,13],[1831,8,1459,12],[1832,8,1460,12,"window"],[1832,14,1460,18],[1832,15,1460,19,"location"],[1832,23,1460,27],[1832,24,1460,28,"hash"],[1832,28,1460,32],[1832,31,1460,35],[1832,33,1460,37],[1833,8,1461,12],[1833,12,1461,16],[1833,13,1461,17,"_debug"],[1833,19,1461,23],[1833,20,1461,24],[1833,43,1461,47],[1833,45,1461,49],[1833,76,1461,80],[1833,77,1461,81],[1834,8,1462,12],[1834,15,1462,19],[1835,10,1462,21,"data"],[1835,14,1462,25],[1835,16,1462,27],[1836,12,1462,29,"session"],[1836,19,1462,36],[1837,12,1462,38,"redirectType"],[1837,24,1462,50],[1837,26,1462,52,"params"],[1837,32,1462,58],[1837,33,1462,59,"type"],[1838,10,1462,64],[1838,11,1462,65],[1839,10,1462,67,"error"],[1839,15,1462,72],[1839,17,1462,74],[1840,8,1462,79],[1840,9,1462,80],[1841,6,1463,8],[1841,7,1463,9],[1841,8,1464,8],[1841,15,1464,15,"error"],[1841,20,1464,20],[1841,22,1464,22],[1842,8,1465,12],[1842,12,1465,16],[1842,13,1465,17],[1842,14,1465,18],[1842,16,1465,20,"errors_1"],[1842,24,1465,28],[1842,25,1465,29,"isAuthError"],[1842,36,1465,40],[1842,38,1465,42,"error"],[1842,43,1465,47],[1842,44,1465,48],[1842,46,1465,50],[1843,10,1466,16],[1843,17,1466,23],[1844,12,1466,25,"data"],[1844,16,1466,29],[1844,18,1466,31],[1845,14,1466,33,"session"],[1845,21,1466,40],[1845,23,1466,42],[1845,27,1466,46],[1846,14,1466,48,"redirectType"],[1846,26,1466,60],[1846,28,1466,62],[1847,12,1466,67],[1847,13,1466,68],[1848,12,1466,70,"error"],[1849,10,1466,76],[1849,11,1466,77],[1850,8,1467,12],[1851,8,1468,12],[1851,14,1468,18,"error"],[1851,19,1468,23],[1852,6,1469,8],[1853,4,1470,4],[1854,4,1471,4],[1855,0,1472,0],[1856,0,1473,0],[1857,4,1474,4,"_isImplicitGrantCallback"],[1857,28,1474,28,"_isImplicitGrantCallback"],[1857,29,1474,29,"params"],[1857,35,1474,35],[1857,37,1474,37],[1858,6,1475,8],[1858,13,1475,15,"Boolean"],[1858,20,1475,22],[1858,21,1475,23,"params"],[1858,27,1475,29],[1858,28,1475,30,"access_token"],[1858,40,1475,42],[1858,44,1475,46,"params"],[1858,50,1475,52],[1858,51,1475,53,"error_description"],[1858,68,1475,70],[1858,69,1475,71],[1859,4,1476,4],[1860,4,1477,4],[1861,0,1478,0],[1862,0,1479,0],[1863,4,1480,4],[1863,10,1480,10,"_isPKCECallback"],[1863,25,1480,25,"_isPKCECallback"],[1863,26,1480,26,"params"],[1863,32,1480,32],[1863,34,1480,34],[1864,6,1481,8],[1864,12,1481,14,"currentStorageContent"],[1864,33,1481,35],[1864,36,1481,38],[1864,42,1481,44],[1864,43,1481,45],[1864,44,1481,46],[1864,46,1481,48,"helpers_1"],[1864,55,1481,57],[1864,56,1481,58,"getItemAsync"],[1864,68,1481,70],[1864,70,1481,72],[1864,74,1481,76],[1864,75,1481,77,"storage"],[1864,82,1481,84],[1864,84,1481,86],[1864,87,1481,89],[1864,91,1481,93],[1864,92,1481,94,"storageKey"],[1864,102,1481,104],[1864,118,1481,120],[1864,119,1481,121],[1865,6,1482,8],[1865,13,1482,15],[1865,14,1482,16],[1865,16,1482,18,"params"],[1865,22,1482,24],[1865,23,1482,25,"code"],[1865,27,1482,29],[1865,31,1482,33,"currentStorageContent"],[1865,52,1482,54],[1865,53,1482,55],[1866,4,1483,4],[1867,4,1484,4],[1868,0,1485,0],[1869,0,1486,0],[1870,0,1487,0],[1871,0,1488,0],[1872,0,1489,0],[1873,0,1490,0],[1874,0,1491,0],[1875,4,1492,4],[1875,10,1492,10,"signOut"],[1875,17,1492,17,"signOut"],[1875,18,1492,18,"options"],[1875,25,1492,25],[1875,28,1492,28],[1876,6,1492,30,"scope"],[1876,11,1492,35],[1876,13,1492,37],[1877,4,1492,46],[1877,5,1492,47],[1877,7,1492,49],[1878,6,1493,8],[1878,12,1493,14],[1878,16,1493,18],[1878,17,1493,19,"initializePromise"],[1878,34,1493,36],[1879,6,1494,8],[1879,13,1494,15],[1879,19,1494,21],[1879,23,1494,25],[1879,24,1494,26,"_acquireLock"],[1879,36,1494,38],[1879,37,1494,39],[1879,38,1494,40],[1879,39,1494,41],[1879,41,1494,43],[1879,53,1494,55],[1880,8,1495,12],[1880,15,1495,19],[1880,21,1495,25],[1880,25,1495,29],[1880,26,1495,30,"_signOut"],[1880,34,1495,38],[1880,35,1495,39,"options"],[1880,42,1495,46],[1880,43,1495,47],[1881,6,1496,8],[1881,7,1496,9],[1881,8,1496,10],[1882,4,1497,4],[1883,4,1498,4],[1883,10,1498,10,"_signOut"],[1883,18,1498,18,"_signOut"],[1883,19,1498,19],[1884,6,1498,21,"scope"],[1885,4,1498,27],[1885,5,1498,28],[1885,8,1498,31],[1886,6,1498,33,"scope"],[1886,11,1498,38],[1886,13,1498,40],[1887,4,1498,49],[1887,5,1498,50],[1887,7,1498,52],[1888,6,1499,8],[1888,13,1499,15],[1888,19,1499,21],[1888,23,1499,25],[1888,24,1499,26,"_useSession"],[1888,35,1499,37],[1888,36,1499,38],[1888,42,1499,45,"result"],[1888,48,1499,51],[1888,52,1499,56],[1889,8,1500,12],[1889,12,1500,16,"_a"],[1889,14,1500,18],[1890,8,1501,12],[1890,14,1501,18],[1891,10,1501,20,"data"],[1891,14,1501,24],[1892,10,1501,26,"error"],[1892,15,1501,31],[1892,17,1501,33,"sessionError"],[1893,8,1501,46],[1893,9,1501,47],[1893,12,1501,50,"result"],[1893,18,1501,56],[1894,8,1502,12],[1894,12,1502,16,"sessionError"],[1894,24,1502,28],[1894,26,1502,30],[1895,10,1503,16],[1895,17,1503,23],[1896,12,1503,25,"error"],[1896,17,1503,30],[1896,19,1503,32,"sessionError"],[1897,10,1503,45],[1897,11,1503,46],[1898,8,1504,12],[1899,8,1505,12],[1899,14,1505,18,"accessToken"],[1899,25,1505,29],[1899,28,1505,32],[1899,29,1505,33,"_a"],[1899,31,1505,35],[1899,34,1505,38,"data"],[1899,38,1505,42],[1899,39,1505,43,"session"],[1899,46,1505,50],[1899,52,1505,56],[1899,56,1505,60],[1899,60,1505,64,"_a"],[1899,62,1505,66],[1899,67,1505,71],[1899,72,1505,76],[1899,73,1505,77],[1899,76,1505,80],[1899,81,1505,85],[1899,82,1505,86],[1899,85,1505,89,"_a"],[1899,87,1505,91],[1899,88,1505,92,"access_token"],[1899,100,1505,104],[1900,8,1506,12],[1900,12,1506,16,"accessToken"],[1900,23,1506,27],[1900,25,1506,29],[1901,10,1507,16],[1901,16,1507,22],[1902,12,1507,24,"error"],[1903,10,1507,30],[1903,11,1507,31],[1903,14,1507,34],[1903,20,1507,40],[1903,24,1507,44],[1903,25,1507,45,"admin"],[1903,30,1507,50],[1903,31,1507,51,"signOut"],[1903,38,1507,58],[1903,39,1507,59,"accessToken"],[1903,50,1507,70],[1903,52,1507,72,"scope"],[1903,57,1507,77],[1903,58,1507,78],[1904,10,1508,16],[1904,14,1508,20,"error"],[1904,19,1508,25],[1904,21,1508,27],[1905,12,1509,20],[1906,12,1510,20],[1907,12,1511,20],[1907,16,1511,24],[1907,18,1511,26],[1907,19,1511,27],[1907,20,1511,28],[1907,22,1511,30,"errors_1"],[1907,30,1511,38],[1907,31,1511,39,"isAuthApiError"],[1907,45,1511,53],[1907,47,1511,55,"error"],[1907,52,1511,60],[1907,53,1511,61],[1907,58,1512,25,"error"],[1907,63,1512,30],[1907,64,1512,31,"status"],[1907,70,1512,37],[1907,75,1512,42],[1907,78,1512,45],[1907,82,1512,49,"error"],[1907,87,1512,54],[1907,88,1512,55,"status"],[1907,94,1512,61],[1907,99,1512,66],[1907,102,1512,69],[1907,106,1512,73,"error"],[1907,111,1512,78],[1907,112,1512,79,"status"],[1907,118,1512,85],[1907,123,1512,90],[1907,126,1512,93],[1907,127,1512,94],[1907,128,1512,95],[1907,130,1512,97],[1908,14,1513,24],[1908,21,1513,31],[1909,16,1513,33,"error"],[1910,14,1513,39],[1910,15,1513,40],[1911,12,1514,20],[1912,10,1515,16],[1913,8,1516,12],[1914,8,1517,12],[1914,12,1517,16,"scope"],[1914,17,1517,21],[1914,22,1517,26],[1914,30,1517,34],[1914,32,1517,36],[1915,10,1518,16],[1915,16,1518,22],[1915,20,1518,26],[1915,21,1518,27,"_removeSession"],[1915,35,1518,41],[1915,36,1518,42],[1915,37,1518,43],[1916,10,1519,16],[1916,16,1519,22],[1916,17,1519,23],[1916,18,1519,24],[1916,20,1519,26,"helpers_1"],[1916,29,1519,35],[1916,30,1519,36,"removeItemAsync"],[1916,45,1519,51],[1916,47,1519,53],[1916,51,1519,57],[1916,52,1519,58,"storage"],[1916,59,1519,65],[1916,61,1519,67],[1916,64,1519,70],[1916,68,1519,74],[1916,69,1519,75,"storageKey"],[1916,79,1519,85],[1916,95,1519,101],[1916,96,1519,102],[1917,8,1520,12],[1918,8,1521,12],[1918,15,1521,19],[1919,10,1521,21,"error"],[1919,15,1521,26],[1919,17,1521,28],[1920,8,1521,33],[1920,9,1521,34],[1921,6,1522,8],[1921,7,1522,9],[1921,8,1522,10],[1922,4,1523,4],[1923,4,1524,4,"onAuthStateChange"],[1923,21,1524,21,"onAuthStateChange"],[1923,22,1524,22,"callback"],[1923,30,1524,30],[1923,32,1524,32],[1924,6,1525,8],[1924,12,1525,14,"id"],[1924,14,1525,16],[1924,17,1525,19],[1924,18,1525,20],[1924,19,1525,21],[1924,21,1525,23,"helpers_1"],[1924,30,1525,32],[1924,31,1525,33,"uuid"],[1924,35,1525,37],[1924,37,1525,39],[1924,38,1525,40],[1925,6,1526,8],[1925,12,1526,14,"subscription"],[1925,24,1526,26],[1925,27,1526,29],[1926,8,1527,12,"id"],[1926,10,1527,14],[1927,8,1528,12,"callback"],[1927,16,1528,20],[1928,8,1529,12,"unsubscribe"],[1928,19,1529,23],[1928,21,1529,25,"unsubscribe"],[1928,22,1529,25],[1928,27,1529,31],[1929,10,1530,16],[1929,14,1530,20],[1929,15,1530,21,"_debug"],[1929,21,1530,27],[1929,22,1530,28],[1929,38,1530,44],[1929,40,1530,46],[1929,79,1530,85],[1929,81,1530,87,"id"],[1929,83,1530,89],[1929,84,1530,90],[1930,10,1531,16],[1930,14,1531,20],[1930,15,1531,21,"stateChangeEmitters"],[1930,34,1531,40],[1930,35,1531,41,"delete"],[1930,41,1531,47],[1930,42,1531,48,"id"],[1930,44,1531,50],[1930,45,1531,51],[1931,8,1532,12],[1932,6,1533,8],[1932,7,1533,9],[1933,6,1534,8],[1933,10,1534,12],[1933,11,1534,13,"_debug"],[1933,17,1534,19],[1933,18,1534,20],[1933,40,1534,42],[1933,42,1534,44],[1933,71,1534,73],[1933,73,1534,75,"id"],[1933,75,1534,77],[1933,76,1534,78],[1934,6,1535,8],[1934,10,1535,12],[1934,11,1535,13,"stateChangeEmitters"],[1934,30,1535,32],[1934,31,1535,33,"set"],[1934,34,1535,36],[1934,35,1535,37,"id"],[1934,37,1535,39],[1934,39,1535,41,"subscription"],[1934,51,1535,53],[1934,52,1535,54],[1935,6,1536,8],[1935,7,1536,9],[1935,19,1536,21],[1936,8,1537,12],[1936,14,1537,18],[1936,18,1537,22],[1936,19,1537,23,"initializePromise"],[1936,36,1537,40],[1937,8,1538,12],[1937,14,1538,18],[1937,18,1538,22],[1937,19,1538,23,"_acquireLock"],[1937,31,1538,35],[1937,32,1538,36],[1937,33,1538,37],[1937,34,1538,38],[1937,36,1538,40],[1937,48,1538,52],[1938,10,1539,16],[1938,14,1539,20],[1938,15,1539,21,"_emitInitialSession"],[1938,34,1539,40],[1938,35,1539,41,"id"],[1938,37,1539,43],[1938,38,1539,44],[1939,8,1540,12],[1939,9,1540,13],[1939,10,1540,14],[1940,6,1541,8],[1940,7,1541,9],[1940,9,1541,11],[1940,10,1541,12],[1941,6,1542,8],[1941,13,1542,15],[1942,8,1542,17,"data"],[1942,12,1542,21],[1942,14,1542,23],[1943,10,1542,25,"subscription"],[1944,8,1542,38],[1945,6,1542,40],[1945,7,1542,41],[1946,4,1543,4],[1947,4,1544,4],[1947,10,1544,10,"_emitInitialSession"],[1947,29,1544,29,"_emitInitialSession"],[1947,30,1544,30,"id"],[1947,32,1544,32],[1947,34,1544,34],[1948,6,1545,8],[1948,13,1545,15],[1948,19,1545,21],[1948,23,1545,25],[1948,24,1545,26,"_useSession"],[1948,35,1545,37],[1948,36,1545,38],[1948,42,1545,45,"result"],[1948,48,1545,51],[1948,52,1545,56],[1949,8,1546,12],[1949,12,1546,16,"_a"],[1949,14,1546,18],[1949,16,1546,20,"_b"],[1949,18,1546,22],[1950,8,1547,12],[1950,12,1547,16],[1951,10,1548,16],[1951,16,1548,22],[1952,12,1548,24,"data"],[1952,16,1548,28],[1952,18,1548,30],[1953,14,1548,32,"session"],[1954,12,1548,40],[1954,13,1548,41],[1955,12,1548,43,"error"],[1956,10,1548,50],[1956,11,1548,51],[1956,14,1548,54,"result"],[1956,20,1548,60],[1957,10,1549,16],[1957,14,1549,20,"error"],[1957,19,1549,25],[1957,21,1550,20],[1957,27,1550,26,"error"],[1957,32,1550,31],[1958,10,1551,16],[1958,17,1551,23],[1958,18,1551,24,"_a"],[1958,20,1551,26],[1958,23,1551,29],[1958,27,1551,33],[1958,28,1551,34,"stateChangeEmitters"],[1958,47,1551,53],[1958,48,1551,54,"get"],[1958,51,1551,57],[1958,52,1551,58,"id"],[1958,54,1551,60],[1958,55,1551,61],[1958,61,1551,67],[1958,65,1551,71],[1958,69,1551,75,"_a"],[1958,71,1551,77],[1958,76,1551,82],[1958,81,1551,87],[1958,82,1551,88],[1958,85,1551,91],[1958,90,1551,96],[1958,91,1551,97],[1958,94,1551,100,"_a"],[1958,96,1551,102],[1958,97,1551,103,"callback"],[1958,105,1551,111],[1958,106,1551,112],[1958,123,1551,129],[1958,125,1551,131,"session"],[1958,132,1551,138],[1958,133,1551,139],[1958,134,1551,140],[1959,10,1552,16],[1959,14,1552,20],[1959,15,1552,21,"_debug"],[1959,21,1552,27],[1959,22,1552,28],[1959,39,1552,45],[1959,41,1552,47],[1959,54,1552,60],[1959,56,1552,62,"id"],[1959,58,1552,64],[1959,60,1552,66],[1959,69,1552,75],[1959,71,1552,77,"session"],[1959,78,1552,84],[1959,79,1552,85],[1960,8,1553,12],[1960,9,1553,13],[1960,10,1554,12],[1960,17,1554,19,"err"],[1960,20,1554,22],[1960,22,1554,24],[1961,10,1555,16],[1961,17,1555,23],[1961,18,1555,24,"_b"],[1961,20,1555,26],[1961,23,1555,29],[1961,27,1555,33],[1961,28,1555,34,"stateChangeEmitters"],[1961,47,1555,53],[1961,48,1555,54,"get"],[1961,51,1555,57],[1961,52,1555,58,"id"],[1961,54,1555,60],[1961,55,1555,61],[1961,61,1555,67],[1961,65,1555,71],[1961,69,1555,75,"_b"],[1961,71,1555,77],[1961,76,1555,82],[1961,81,1555,87],[1961,82,1555,88],[1961,85,1555,91],[1961,90,1555,96],[1961,91,1555,97],[1961,94,1555,100,"_b"],[1961,96,1555,102],[1961,97,1555,103,"callback"],[1961,105,1555,111],[1961,106,1555,112],[1961,123,1555,129],[1961,125,1555,131],[1961,129,1555,135],[1961,130,1555,136],[1961,131,1555,137],[1962,10,1556,16],[1962,14,1556,20],[1962,15,1556,21,"_debug"],[1962,21,1556,27],[1962,22,1556,28],[1962,39,1556,45],[1962,41,1556,47],[1962,54,1556,60],[1962,56,1556,62,"id"],[1962,58,1556,64],[1962,60,1556,66],[1962,67,1556,73],[1962,69,1556,75,"err"],[1962,72,1556,78],[1962,73,1556,79],[1963,10,1557,16,"console"],[1963,17,1557,23],[1963,18,1557,24,"error"],[1963,23,1557,29],[1963,24,1557,30,"err"],[1963,27,1557,33],[1963,28,1557,34],[1964,8,1558,12],[1965,6,1559,8],[1965,7,1559,9],[1965,8,1559,10],[1966,4,1560,4],[1967,4,1561,4],[1968,0,1562,0],[1969,0,1563,0],[1970,0,1564,0],[1971,0,1565,0],[1972,0,1566,0],[1973,0,1567,0],[1974,4,1568,4],[1974,10,1568,10,"resetPasswordForEmail"],[1974,31,1568,31,"resetPasswordForEmail"],[1974,32,1568,32,"email"],[1974,37,1568,37],[1974,39,1568,39,"options"],[1974,46,1568,46],[1974,49,1568,49],[1974,50,1568,50],[1974,51,1568,51],[1974,53,1568,53],[1975,6,1569,8],[1975,10,1569,12,"codeChallenge"],[1975,23,1569,25],[1975,26,1569,28],[1975,30,1569,32],[1976,6,1570,8],[1976,10,1570,12,"codeChallengeMethod"],[1976,29,1570,31],[1976,32,1570,34],[1976,36,1570,38],[1977,6,1571,8],[1977,10,1571,12],[1977,14,1571,16],[1977,15,1571,17,"flowType"],[1977,23,1571,25],[1977,28,1571,30],[1977,34,1571,36],[1977,36,1571,38],[1978,8,1572,12],[1979,8,1573,12],[1979,9,1573,13,"codeChallenge"],[1979,22,1573,26],[1979,24,1573,28,"codeChallengeMethod"],[1979,43,1573,47],[1979,44,1573,48],[1979,47,1573,51],[1979,53,1573,57],[1979,54,1573,58],[1979,55,1573,59],[1979,57,1573,61,"helpers_1"],[1979,66,1573,70],[1979,67,1573,71,"getCodeChallengeAndMethod"],[1979,92,1573,96],[1979,94,1573,98],[1979,98,1573,102],[1979,99,1573,103,"storage"],[1979,106,1573,110],[1979,108,1573,112],[1979,112,1573,116],[1979,113,1573,117,"storageKey"],[1979,123,1573,127],[1979,125,1573,129],[1979,129,1573,133],[1979,130,1573,134],[1980,8,1574,12],[1980,9,1574,13],[1981,6,1575,8],[1982,6,1576,8],[1982,10,1576,12],[1983,8,1577,12],[1983,15,1577,19],[1983,21,1577,25],[1983,22,1577,26],[1983,23,1577,27],[1983,25,1577,29,"fetch_1"],[1983,32,1577,36],[1983,33,1577,37,"_request"],[1983,41,1577,45],[1983,43,1577,47],[1983,47,1577,51],[1983,48,1577,52,"fetch"],[1983,53,1577,57],[1983,55,1577,59],[1983,61,1577,65],[1983,63,1577,67],[1983,66,1577,70],[1983,70,1577,74],[1983,71,1577,75,"url"],[1983,74,1577,78],[1983,84,1577,88],[1983,86,1577,90],[1984,10,1578,16,"body"],[1984,14,1578,20],[1984,16,1578,22],[1985,12,1579,20,"email"],[1985,17,1579,25],[1986,12,1580,20,"code_challenge"],[1986,26,1580,34],[1986,28,1580,36,"codeChallenge"],[1986,41,1580,49],[1987,12,1581,20,"code_challenge_method"],[1987,33,1581,41],[1987,35,1581,43,"codeChallengeMethod"],[1987,54,1581,62],[1988,12,1582,20,"gotrue_meta_security"],[1988,32,1582,40],[1988,34,1582,42],[1989,14,1582,44,"captcha_token"],[1989,27,1582,57],[1989,29,1582,59,"options"],[1989,36,1582,66],[1989,37,1582,67,"captchaToken"],[1990,12,1582,80],[1991,10,1583,16],[1991,11,1583,17],[1992,10,1584,16,"headers"],[1992,17,1584,23],[1992,19,1584,25],[1992,23,1584,29],[1992,24,1584,30,"headers"],[1992,31,1584,37],[1993,10,1585,16,"redirectTo"],[1993,20,1585,26],[1993,22,1585,28,"options"],[1993,29,1585,35],[1993,30,1585,36,"redirectTo"],[1994,8,1586,12],[1994,9,1586,13],[1994,10,1586,14],[1995,6,1587,8],[1995,7,1587,9],[1995,8,1588,8],[1995,15,1588,15,"error"],[1995,20,1588,20],[1995,22,1588,22],[1996,8,1589,12],[1996,12,1589,16],[1996,13,1589,17],[1996,14,1589,18],[1996,16,1589,20,"errors_1"],[1996,24,1589,28],[1996,25,1589,29,"isAuthError"],[1996,36,1589,40],[1996,38,1589,42,"error"],[1996,43,1589,47],[1996,44,1589,48],[1996,46,1589,50],[1997,10,1590,16],[1997,17,1590,23],[1998,12,1590,25,"data"],[1998,16,1590,29],[1998,18,1590,31],[1998,22,1590,35],[1999,12,1590,37,"error"],[2000,10,1590,43],[2000,11,1590,44],[2001,8,1591,12],[2002,8,1592,12],[2002,14,1592,18,"error"],[2002,19,1592,23],[2003,6,1593,8],[2004,4,1594,4],[2005,4,1595,4],[2006,0,1596,0],[2007,0,1597,0],[2008,4,1598,4],[2008,10,1598,10,"getUserIdentities"],[2008,27,1598,27,"getUserIdentities"],[2008,28,1598,27],[2008,30,1598,30],[2009,6,1599,8],[2009,10,1599,12,"_a"],[2009,12,1599,14],[2010,6,1600,8],[2010,10,1600,12],[2011,8,1601,12],[2011,14,1601,18],[2012,10,1601,20,"data"],[2012,14,1601,24],[2013,10,1601,26,"error"],[2014,8,1601,32],[2014,9,1601,33],[2014,12,1601,36],[2014,18,1601,42],[2014,22,1601,46],[2014,23,1601,47,"getUser"],[2014,30,1601,54],[2014,31,1601,55],[2014,32,1601,56],[2015,8,1602,12],[2015,12,1602,16,"error"],[2015,17,1602,21],[2015,19,1603,16],[2015,25,1603,22,"error"],[2015,30,1603,27],[2016,8,1604,12],[2016,15,1604,19],[2017,10,1604,21,"data"],[2017,14,1604,25],[2017,16,1604,27],[2018,12,1604,29,"identities"],[2018,22,1604,39],[2018,24,1604,41],[2018,25,1604,42,"_a"],[2018,27,1604,44],[2018,30,1604,47,"data"],[2018,34,1604,51],[2018,35,1604,52,"user"],[2018,39,1604,56],[2018,40,1604,57,"identities"],[2018,50,1604,67],[2018,56,1604,73],[2018,60,1604,77],[2018,64,1604,81,"_a"],[2018,66,1604,83],[2018,71,1604,88],[2018,76,1604,93],[2018,77,1604,94],[2018,80,1604,97,"_a"],[2018,82,1604,99],[2018,85,1604,102],[2019,10,1604,105],[2019,11,1604,106],[2020,10,1604,108,"error"],[2020,15,1604,113],[2020,17,1604,115],[2021,8,1604,120],[2021,9,1604,121],[2022,6,1605,8],[2022,7,1605,9],[2022,8,1606,8],[2022,15,1606,15,"error"],[2022,20,1606,20],[2022,22,1606,22],[2023,8,1607,12],[2023,12,1607,16],[2023,13,1607,17],[2023,14,1607,18],[2023,16,1607,20,"errors_1"],[2023,24,1607,28],[2023,25,1607,29,"isAuthError"],[2023,36,1607,40],[2023,38,1607,42,"error"],[2023,43,1607,47],[2023,44,1607,48],[2023,46,1607,50],[2024,10,1608,16],[2024,17,1608,23],[2025,12,1608,25,"data"],[2025,16,1608,29],[2025,18,1608,31],[2025,22,1608,35],[2026,12,1608,37,"error"],[2027,10,1608,43],[2027,11,1608,44],[2028,8,1609,12],[2029,8,1610,12],[2029,14,1610,18,"error"],[2029,19,1610,23],[2030,6,1611,8],[2031,4,1612,4],[2032,4,1613,4],[2032,10,1613,10,"linkIdentity"],[2032,22,1613,22,"linkIdentity"],[2032,23,1613,23,"credentials"],[2032,34,1613,34],[2032,36,1613,36],[2033,6,1614,8],[2033,10,1614,12],[2033,17,1614,19],[2033,21,1614,23,"credentials"],[2033,32,1614,34],[2033,34,1614,36],[2034,8,1615,12],[2034,15,1615,19],[2034,19,1615,23],[2034,20,1615,24,"linkIdentityIdToken"],[2034,39,1615,43],[2034,40,1615,44,"credentials"],[2034,51,1615,55],[2034,52,1615,56],[2035,6,1616,8],[2036,6,1617,8],[2036,13,1617,15],[2036,17,1617,19],[2036,18,1617,20,"linkIdentityOAuth"],[2036,35,1617,37],[2036,36,1617,38,"credentials"],[2036,47,1617,49],[2036,48,1617,50],[2037,4,1618,4],[2038,4,1619,4],[2038,10,1619,10,"linkIdentityOAuth"],[2038,27,1619,27,"linkIdentityOAuth"],[2038,28,1619,28,"credentials"],[2038,39,1619,39],[2038,41,1619,41],[2039,6,1620,8],[2039,10,1620,12,"_a"],[2039,12,1620,14],[2040,6,1621,8],[2040,10,1621,12],[2041,8,1622,12],[2041,14,1622,18],[2042,10,1622,20,"data"],[2042,14,1622,24],[2043,10,1622,26,"error"],[2044,8,1622,32],[2044,9,1622,33],[2044,12,1622,36],[2044,18,1622,42],[2044,22,1622,46],[2044,23,1622,47,"_useSession"],[2044,34,1622,58],[2044,35,1622,59],[2044,41,1622,66,"result"],[2044,47,1622,72],[2044,51,1622,77],[2045,10,1623,16],[2045,14,1623,20,"_a"],[2045,16,1623,22],[2045,18,1623,24,"_b"],[2045,20,1623,26],[2045,22,1623,28,"_c"],[2045,24,1623,30],[2045,26,1623,32,"_d"],[2045,28,1623,34],[2045,30,1623,36,"_e"],[2045,32,1623,38],[2046,10,1624,16],[2046,16,1624,22],[2047,12,1624,24,"data"],[2047,16,1624,28],[2048,12,1624,30,"error"],[2049,10,1624,36],[2049,11,1624,37],[2049,14,1624,40,"result"],[2049,20,1624,46],[2050,10,1625,16],[2050,14,1625,20,"error"],[2050,19,1625,25],[2050,21,1626,20],[2050,27,1626,26,"error"],[2050,32,1626,31],[2051,10,1627,16],[2051,16,1627,22,"url"],[2051,19,1627,25],[2051,22,1627,28],[2051,28,1627,34],[2051,32,1627,38],[2051,33,1627,39,"_getUrlForProvider"],[2051,51,1627,57],[2051,52,1627,58],[2051,55,1627,61],[2051,59,1627,65],[2051,60,1627,66,"url"],[2051,63,1627,69],[2051,91,1627,97],[2051,93,1627,99,"credentials"],[2051,104,1627,110],[2051,105,1627,111,"provider"],[2051,113,1627,119],[2051,115,1627,121],[2052,12,1628,20,"redirectTo"],[2052,22,1628,30],[2052,24,1628,32],[2052,25,1628,33,"_a"],[2052,27,1628,35],[2052,30,1628,38,"credentials"],[2052,41,1628,49],[2052,42,1628,50,"options"],[2052,49,1628,57],[2052,55,1628,63],[2052,59,1628,67],[2052,63,1628,71,"_a"],[2052,65,1628,73],[2052,70,1628,78],[2052,75,1628,83],[2052,76,1628,84],[2052,79,1628,87],[2052,84,1628,92],[2052,85,1628,93],[2052,88,1628,96,"_a"],[2052,90,1628,98],[2052,91,1628,99,"redirectTo"],[2052,101,1628,109],[2053,12,1629,20,"scopes"],[2053,18,1629,26],[2053,20,1629,28],[2053,21,1629,29,"_b"],[2053,23,1629,31],[2053,26,1629,34,"credentials"],[2053,37,1629,45],[2053,38,1629,46,"options"],[2053,45,1629,53],[2053,51,1629,59],[2053,55,1629,63],[2053,59,1629,67,"_b"],[2053,61,1629,69],[2053,66,1629,74],[2053,71,1629,79],[2053,72,1629,80],[2053,75,1629,83],[2053,80,1629,88],[2053,81,1629,89],[2053,84,1629,92,"_b"],[2053,86,1629,94],[2053,87,1629,95,"scopes"],[2053,93,1629,101],[2054,12,1630,20,"queryParams"],[2054,23,1630,31],[2054,25,1630,33],[2054,26,1630,34,"_c"],[2054,28,1630,36],[2054,31,1630,39,"credentials"],[2054,42,1630,50],[2054,43,1630,51,"options"],[2054,50,1630,58],[2054,56,1630,64],[2054,60,1630,68],[2054,64,1630,72,"_c"],[2054,66,1630,74],[2054,71,1630,79],[2054,76,1630,84],[2054,77,1630,85],[2054,80,1630,88],[2054,85,1630,93],[2054,86,1630,94],[2054,89,1630,97,"_c"],[2054,91,1630,99],[2054,92,1630,100,"queryParams"],[2054,103,1630,111],[2055,12,1631,20,"skipBrowserRedirect"],[2055,31,1631,39],[2055,33,1631,41],[2056,10,1632,16],[2056,11,1632,17],[2056,12,1632,18],[2057,10,1633,16],[2057,17,1633,23],[2057,23,1633,29],[2057,24,1633,30],[2057,25,1633,31],[2057,27,1633,33,"fetch_1"],[2057,34,1633,40],[2057,35,1633,41,"_request"],[2057,43,1633,49],[2057,45,1633,51],[2057,49,1633,55],[2057,50,1633,56,"fetch"],[2057,55,1633,61],[2057,57,1633,63],[2057,62,1633,68],[2057,64,1633,70,"url"],[2057,67,1633,73],[2057,69,1633,75],[2058,12,1634,20,"headers"],[2058,19,1634,27],[2058,21,1634,29],[2058,25,1634,33],[2058,26,1634,34,"headers"],[2058,33,1634,41],[2059,12,1635,20,"jwt"],[2059,15,1635,23],[2059,17,1635,25],[2059,18,1635,26,"_e"],[2059,20,1635,28],[2059,23,1635,31],[2059,24,1635,32,"_d"],[2059,26,1635,34],[2059,29,1635,37,"data"],[2059,33,1635,41],[2059,34,1635,42,"session"],[2059,41,1635,49],[2059,47,1635,55],[2059,51,1635,59],[2059,55,1635,63,"_d"],[2059,57,1635,65],[2059,62,1635,70],[2059,67,1635,75],[2059,68,1635,76],[2059,71,1635,79],[2059,76,1635,84],[2059,77,1635,85],[2059,80,1635,88,"_d"],[2059,82,1635,90],[2059,83,1635,91,"access_token"],[2059,95,1635,103],[2059,101,1635,109],[2059,105,1635,113],[2059,109,1635,117,"_e"],[2059,111,1635,119],[2059,116,1635,124],[2059,121,1635,129],[2059,122,1635,130],[2059,125,1635,133,"_e"],[2059,127,1635,135],[2059,130,1635,138,"undefined"],[2060,10,1636,16],[2060,11,1636,17],[2060,12,1636,18],[2061,8,1637,12],[2061,9,1637,13],[2061,10,1637,14],[2062,8,1638,12],[2062,12,1638,16,"error"],[2062,17,1638,21],[2062,19,1639,16],[2062,25,1639,22,"error"],[2062,30,1639,27],[2063,8,1640,12],[2063,12,1640,16],[2063,13,1640,17],[2063,14,1640,18],[2063,16,1640,20,"helpers_1"],[2063,25,1640,29],[2063,26,1640,30,"isBrowser"],[2063,35,1640,39],[2063,37,1640,41],[2063,38,1640,42],[2063,42,1640,46],[2063,44,1640,48],[2063,45,1640,49,"_a"],[2063,47,1640,51],[2063,50,1640,54,"credentials"],[2063,61,1640,65],[2063,62,1640,66,"options"],[2063,69,1640,73],[2063,75,1640,79],[2063,79,1640,83],[2063,83,1640,87,"_a"],[2063,85,1640,89],[2063,90,1640,94],[2063,95,1640,99],[2063,96,1640,100],[2063,99,1640,103],[2063,104,1640,108],[2063,105,1640,109],[2063,108,1640,112,"_a"],[2063,110,1640,114],[2063,111,1640,115,"skipBrowserRedirect"],[2063,130,1640,134],[2063,131,1640,135],[2063,133,1640,137],[2064,10,1641,16,"window"],[2064,16,1641,22],[2064,17,1641,23,"location"],[2064,25,1641,31],[2064,26,1641,32,"assign"],[2064,32,1641,38],[2064,33,1641,39,"data"],[2064,37,1641,43],[2064,42,1641,48],[2064,46,1641,52],[2064,50,1641,56,"data"],[2064,54,1641,60],[2064,59,1641,65],[2064,64,1641,70],[2064,65,1641,71],[2064,68,1641,74],[2064,73,1641,79],[2064,74,1641,80],[2064,77,1641,83,"data"],[2064,81,1641,87],[2064,82,1641,88,"url"],[2064,85,1641,91],[2064,86,1641,92],[2065,8,1642,12],[2066,8,1643,12],[2066,15,1643,19],[2067,10,1643,21,"data"],[2067,14,1643,25],[2067,16,1643,27],[2068,12,1643,29,"provider"],[2068,20,1643,37],[2068,22,1643,39,"credentials"],[2068,33,1643,50],[2068,34,1643,51,"provider"],[2068,42,1643,59],[2069,12,1643,61,"url"],[2069,15,1643,64],[2069,17,1643,66,"data"],[2069,21,1643,70],[2069,26,1643,75],[2069,30,1643,79],[2069,34,1643,83,"data"],[2069,38,1643,87],[2069,43,1643,92],[2069,48,1643,97],[2069,49,1643,98],[2069,52,1643,101],[2069,57,1643,106],[2069,58,1643,107],[2069,61,1643,110,"data"],[2069,65,1643,114],[2069,66,1643,115,"url"],[2070,10,1643,119],[2070,11,1643,120],[2071,10,1643,122,"error"],[2071,15,1643,127],[2071,17,1643,129],[2072,8,1643,134],[2072,9,1643,135],[2073,6,1644,8],[2073,7,1644,9],[2073,8,1645,8],[2073,15,1645,15,"error"],[2073,20,1645,20],[2073,22,1645,22],[2074,8,1646,12],[2074,12,1646,16],[2074,13,1646,17],[2074,14,1646,18],[2074,16,1646,20,"errors_1"],[2074,24,1646,28],[2074,25,1646,29,"isAuthError"],[2074,36,1646,40],[2074,38,1646,42,"error"],[2074,43,1646,47],[2074,44,1646,48],[2074,46,1646,50],[2075,10,1647,16],[2075,17,1647,23],[2076,12,1647,25,"data"],[2076,16,1647,29],[2076,18,1647,31],[2077,14,1647,33,"provider"],[2077,22,1647,41],[2077,24,1647,43,"credentials"],[2077,35,1647,54],[2077,36,1647,55,"provider"],[2077,44,1647,63],[2078,14,1647,65,"url"],[2078,17,1647,68],[2078,19,1647,70],[2079,12,1647,75],[2079,13,1647,76],[2080,12,1647,78,"error"],[2081,10,1647,84],[2081,11,1647,85],[2082,8,1648,12],[2083,8,1649,12],[2083,14,1649,18,"error"],[2083,19,1649,23],[2084,6,1650,8],[2085,4,1651,4],[2086,4,1652,4],[2086,10,1652,10,"linkIdentityIdToken"],[2086,29,1652,29,"linkIdentityIdToken"],[2086,30,1652,30,"credentials"],[2086,41,1652,41],[2086,43,1652,43],[2087,6,1653,8],[2087,13,1653,15],[2087,19,1653,21],[2087,23,1653,25],[2087,24,1653,26,"_useSession"],[2087,35,1653,37],[2087,36,1653,38],[2087,42,1653,45,"result"],[2087,48,1653,51],[2087,52,1653,56],[2088,8,1654,12],[2088,12,1654,16,"_a"],[2088,14,1654,18],[2089,8,1655,12],[2089,12,1655,16],[2090,10,1656,16],[2090,16,1656,22],[2091,12,1656,24,"error"],[2091,17,1656,29],[2091,19,1656,31,"sessionError"],[2091,31,1656,43],[2092,12,1656,45,"data"],[2092,16,1656,49],[2092,18,1656,51],[2093,14,1656,53,"session"],[2094,12,1656,61],[2095,10,1656,64],[2095,11,1656,65],[2095,14,1656,68,"result"],[2095,20,1656,74],[2096,10,1657,16],[2096,14,1657,20,"sessionError"],[2096,26,1657,32],[2096,28,1658,20],[2096,34,1658,26,"sessionError"],[2096,46,1658,38],[2097,10,1659,16],[2097,16,1659,22],[2098,12,1659,24,"options"],[2098,19,1659,31],[2099,12,1659,33,"provider"],[2099,20,1659,41],[2100,12,1659,43,"token"],[2100,17,1659,48],[2101,12,1659,50,"access_token"],[2101,24,1659,62],[2102,12,1659,64,"nonce"],[2103,10,1659,70],[2103,11,1659,71],[2103,14,1659,74,"credentials"],[2103,25,1659,85],[2104,10,1660,16],[2104,16,1660,22,"res"],[2104,19,1660,25],[2104,22,1660,28],[2104,28,1660,34],[2104,29,1660,35],[2104,30,1660,36],[2104,32,1660,38,"fetch_1"],[2104,39,1660,45],[2104,40,1660,46,"_request"],[2104,48,1660,54],[2104,50,1660,56],[2104,54,1660,60],[2104,55,1660,61,"fetch"],[2104,60,1660,66],[2104,62,1660,68],[2104,68,1660,74],[2104,70,1660,76],[2104,73,1660,79],[2104,77,1660,83],[2104,78,1660,84,"url"],[2104,81,1660,87],[2104,109,1660,115],[2104,111,1660,117],[2105,12,1661,20,"headers"],[2105,19,1661,27],[2105,21,1661,29],[2105,25,1661,33],[2105,26,1661,34,"headers"],[2105,33,1661,41],[2106,12,1662,20,"jwt"],[2106,15,1662,23],[2106,17,1662,25],[2106,18,1662,26,"_a"],[2106,20,1662,28],[2106,23,1662,31,"session"],[2106,30,1662,38],[2106,35,1662,43],[2106,39,1662,47],[2106,43,1662,51,"session"],[2106,50,1662,58],[2106,55,1662,63],[2106,60,1662,68],[2106,61,1662,69],[2106,64,1662,72],[2106,69,1662,77],[2106,70,1662,78],[2106,73,1662,81,"session"],[2106,80,1662,88],[2106,81,1662,89,"access_token"],[2106,93,1662,101],[2106,99,1662,107],[2106,103,1662,111],[2106,107,1662,115,"_a"],[2106,109,1662,117],[2106,114,1662,122],[2106,119,1662,127],[2106,120,1662,128],[2106,123,1662,131,"_a"],[2106,125,1662,133],[2106,128,1662,136,"undefined"],[2106,137,1662,145],[2107,12,1663,20,"body"],[2107,16,1663,24],[2107,18,1663,26],[2108,14,1664,24,"provider"],[2108,22,1664,32],[2109,14,1665,24,"id_token"],[2109,22,1665,32],[2109,24,1665,34,"token"],[2109,29,1665,39],[2110,14,1666,24,"access_token"],[2110,26,1666,36],[2111,14,1667,24,"nonce"],[2111,19,1667,29],[2112,14,1668,24,"link_identity"],[2112,27,1668,37],[2112,29,1668,39],[2112,33,1668,43],[2113,14,1669,24,"gotrue_meta_security"],[2113,34,1669,44],[2113,36,1669,46],[2114,16,1669,48,"captcha_token"],[2114,29,1669,61],[2114,31,1669,63,"options"],[2114,38,1669,70],[2114,43,1669,75],[2114,47,1669,79],[2114,51,1669,83,"options"],[2114,58,1669,90],[2114,63,1669,95],[2114,68,1669,100],[2114,69,1669,101],[2114,72,1669,104],[2114,77,1669,109],[2114,78,1669,110],[2114,81,1669,113,"options"],[2114,88,1669,120],[2114,89,1669,121,"captchaToken"],[2115,14,1669,134],[2116,12,1670,20],[2116,13,1670,21],[2117,12,1671,20,"xform"],[2117,17,1671,25],[2117,19,1671,27,"fetch_1"],[2117,26,1671,34],[2117,27,1671,35,"_sessionResponse"],[2118,10,1672,16],[2118,11,1672,17],[2118,12,1672,18],[2119,10,1673,16],[2119,16,1673,22],[2120,12,1673,24,"data"],[2120,16,1673,28],[2121,12,1673,30,"error"],[2122,10,1673,36],[2122,11,1673,37],[2122,14,1673,40,"res"],[2122,17,1673,43],[2123,10,1674,16],[2123,14,1674,20,"error"],[2123,19,1674,25],[2123,21,1674,27],[2124,12,1675,20],[2124,19,1675,27],[2125,14,1675,29,"data"],[2125,18,1675,33],[2125,20,1675,35],[2126,16,1675,37,"user"],[2126,20,1675,41],[2126,22,1675,43],[2126,26,1675,47],[2127,16,1675,49,"session"],[2127,23,1675,56],[2127,25,1675,58],[2128,14,1675,63],[2128,15,1675,64],[2129,14,1675,66,"error"],[2130,12,1675,72],[2130,13,1675,73],[2131,10,1676,16],[2131,11,1676,17],[2131,17,1677,21],[2131,21,1677,25],[2131,22,1677,26,"data"],[2131,26,1677,30],[2131,30,1677,34],[2131,31,1677,35,"data"],[2131,35,1677,39],[2131,36,1677,40,"session"],[2131,43,1677,47],[2131,47,1677,51],[2131,48,1677,52,"data"],[2131,52,1677,56],[2131,53,1677,57,"user"],[2131,57,1677,61],[2131,59,1677,63],[2132,12,1678,20],[2132,19,1678,27],[2133,14,1679,24,"data"],[2133,18,1679,28],[2133,20,1679,30],[2134,16,1679,32,"user"],[2134,20,1679,36],[2134,22,1679,38],[2134,26,1679,42],[2135,16,1679,44,"session"],[2135,23,1679,51],[2135,25,1679,53],[2136,14,1679,58],[2136,15,1679,59],[2137,14,1680,24,"error"],[2137,19,1680,29],[2137,21,1680,31],[2137,25,1680,35,"errors_1"],[2137,33,1680,43],[2137,34,1680,44,"AuthInvalidTokenResponseError"],[2137,63,1680,73],[2137,64,1680,74],[2138,12,1681,20],[2138,13,1681,21],[2139,10,1682,16],[2140,10,1683,16],[2140,14,1683,20,"data"],[2140,18,1683,24],[2140,19,1683,25,"session"],[2140,26,1683,32],[2140,28,1683,34],[2141,12,1684,20],[2141,18,1684,26],[2141,22,1684,30],[2141,23,1684,31,"_saveSession"],[2141,35,1684,43],[2141,36,1684,44,"data"],[2141,40,1684,48],[2141,41,1684,49,"session"],[2141,48,1684,56],[2141,49,1684,57],[2142,12,1685,20],[2142,18,1685,26],[2142,22,1685,30],[2142,23,1685,31,"_notifyAllSubscribers"],[2142,44,1685,52],[2142,45,1685,53],[2142,59,1685,67],[2142,61,1685,69,"data"],[2142,65,1685,73],[2142,66,1685,74,"session"],[2142,73,1685,81],[2142,74,1685,82],[2143,10,1686,16],[2144,10,1687,16],[2144,17,1687,23],[2145,12,1687,25,"data"],[2145,16,1687,29],[2146,12,1687,31,"error"],[2147,10,1687,37],[2147,11,1687,38],[2148,8,1688,12],[2148,9,1688,13],[2148,10,1689,12],[2148,17,1689,19,"error"],[2148,22,1689,24],[2148,24,1689,26],[2149,10,1690,16],[2149,14,1690,20],[2149,15,1690,21],[2149,16,1690,22],[2149,18,1690,24,"errors_1"],[2149,26,1690,32],[2149,27,1690,33,"isAuthError"],[2149,38,1690,44],[2149,40,1690,46,"error"],[2149,45,1690,51],[2149,46,1690,52],[2149,48,1690,54],[2150,12,1691,20],[2150,19,1691,27],[2151,14,1691,29,"data"],[2151,18,1691,33],[2151,20,1691,35],[2152,16,1691,37,"user"],[2152,20,1691,41],[2152,22,1691,43],[2152,26,1691,47],[2153,16,1691,49,"session"],[2153,23,1691,56],[2153,25,1691,58],[2154,14,1691,63],[2154,15,1691,64],[2155,14,1691,66,"error"],[2156,12,1691,72],[2156,13,1691,73],[2157,10,1692,16],[2158,10,1693,16],[2158,16,1693,22,"error"],[2158,21,1693,27],[2159,8,1694,12],[2160,6,1695,8],[2160,7,1695,9],[2160,8,1695,10],[2161,4,1696,4],[2162,4,1697,4],[2163,0,1698,0],[2164,0,1699,0],[2165,4,1700,4],[2165,10,1700,10,"unlinkIdentity"],[2165,24,1700,24,"unlinkIdentity"],[2165,25,1700,25,"identity"],[2165,33,1700,33],[2165,35,1700,35],[2166,6,1701,8],[2166,10,1701,12],[2167,8,1702,12],[2167,15,1702,19],[2167,21,1702,25],[2167,25,1702,29],[2167,26,1702,30,"_useSession"],[2167,37,1702,41],[2167,38,1702,42],[2167,44,1702,49,"result"],[2167,50,1702,55],[2167,54,1702,60],[2168,10,1703,16],[2168,14,1703,20,"_a"],[2168,16,1703,22],[2168,18,1703,24,"_b"],[2168,20,1703,26],[2169,10,1704,16],[2169,16,1704,22],[2170,12,1704,24,"data"],[2170,16,1704,28],[2171,12,1704,30,"error"],[2172,10,1704,36],[2172,11,1704,37],[2172,14,1704,40,"result"],[2172,20,1704,46],[2173,10,1705,16],[2173,14,1705,20,"error"],[2173,19,1705,25],[2173,21,1705,27],[2174,12,1706,20],[2174,18,1706,26,"error"],[2174,23,1706,31],[2175,10,1707,16],[2176,10,1708,16],[2176,17,1708,23],[2176,23,1708,29],[2176,24,1708,30],[2176,25,1708,31],[2176,27,1708,33,"fetch_1"],[2176,34,1708,40],[2176,35,1708,41,"_request"],[2176,43,1708,49],[2176,45,1708,51],[2176,49,1708,55],[2176,50,1708,56,"fetch"],[2176,55,1708,61],[2176,57,1708,63],[2176,65,1708,71],[2176,67,1708,73],[2176,70,1708,76],[2176,74,1708,80],[2176,75,1708,81,"url"],[2176,78,1708,84],[2176,98,1708,104,"identity"],[2176,106,1708,112],[2176,107,1708,113,"identity_id"],[2176,118,1708,124],[2176,120,1708,126],[2176,122,1708,128],[2177,12,1709,20,"headers"],[2177,19,1709,27],[2177,21,1709,29],[2177,25,1709,33],[2177,26,1709,34,"headers"],[2177,33,1709,41],[2178,12,1710,20,"jwt"],[2178,15,1710,23],[2178,17,1710,25],[2178,18,1710,26,"_b"],[2178,20,1710,28],[2178,23,1710,31],[2178,24,1710,32,"_a"],[2178,26,1710,34],[2178,29,1710,37,"data"],[2178,33,1710,41],[2178,34,1710,42,"session"],[2178,41,1710,49],[2178,47,1710,55],[2178,51,1710,59],[2178,55,1710,63,"_a"],[2178,57,1710,65],[2178,62,1710,70],[2178,67,1710,75],[2178,68,1710,76],[2178,71,1710,79],[2178,76,1710,84],[2178,77,1710,85],[2178,80,1710,88,"_a"],[2178,82,1710,90],[2178,83,1710,91,"access_token"],[2178,95,1710,103],[2178,101,1710,109],[2178,105,1710,113],[2178,109,1710,117,"_b"],[2178,111,1710,119],[2178,116,1710,124],[2178,121,1710,129],[2178,122,1710,130],[2178,125,1710,133,"_b"],[2178,127,1710,135],[2178,130,1710,138,"undefined"],[2179,10,1711,16],[2179,11,1711,17],[2179,12,1711,18],[2180,8,1712,12],[2180,9,1712,13],[2180,10,1712,14],[2181,6,1713,8],[2181,7,1713,9],[2181,8,1714,8],[2181,15,1714,15,"error"],[2181,20,1714,20],[2181,22,1714,22],[2182,8,1715,12],[2182,12,1715,16],[2182,13,1715,17],[2182,14,1715,18],[2182,16,1715,20,"errors_1"],[2182,24,1715,28],[2182,25,1715,29,"isAuthError"],[2182,36,1715,40],[2182,38,1715,42,"error"],[2182,43,1715,47],[2182,44,1715,48],[2182,46,1715,50],[2183,10,1716,16],[2183,17,1716,23],[2184,12,1716,25,"data"],[2184,16,1716,29],[2184,18,1716,31],[2184,22,1716,35],[2185,12,1716,37,"error"],[2186,10,1716,43],[2186,11,1716,44],[2187,8,1717,12],[2188,8,1718,12],[2188,14,1718,18,"error"],[2188,19,1718,23],[2189,6,1719,8],[2190,4,1720,4],[2191,4,1721,4],[2192,0,1722,0],[2193,0,1723,0],[2194,0,1724,0],[2195,4,1725,4],[2195,10,1725,10,"_refreshAccessToken"],[2195,29,1725,29,"_refreshAccessToken"],[2195,30,1725,30,"refreshToken"],[2195,42,1725,42],[2195,44,1725,44],[2196,6,1726,8],[2196,12,1726,14,"debugName"],[2196,21,1726,23],[2196,24,1726,26],[2196,48,1726,50,"refreshToken"],[2196,60,1726,62],[2196,61,1726,63,"substring"],[2196,70,1726,72],[2196,71,1726,73],[2196,72,1726,74],[2196,74,1726,76],[2196,75,1726,77],[2196,76,1726,78],[2196,82,1726,84],[2197,6,1727,8],[2197,10,1727,12],[2197,11,1727,13,"_debug"],[2197,17,1727,19],[2197,18,1727,20,"debugName"],[2197,27,1727,29],[2197,29,1727,31],[2197,36,1727,38],[2197,37,1727,39],[2198,6,1728,8],[2198,10,1728,12],[2199,8,1729,12],[2199,14,1729,18,"startedAt"],[2199,23,1729,27],[2199,26,1729,30,"Date"],[2199,30,1729,34],[2199,31,1729,35,"now"],[2199,34,1729,38],[2199,35,1729,39],[2199,36,1729,40],[2200,8,1730,12],[2201,8,1731,12],[2201,15,1731,19],[2201,21,1731,25],[2201,22,1731,26],[2201,23,1731,27],[2201,25,1731,29,"helpers_1"],[2201,34,1731,38],[2201,35,1731,39,"retryable"],[2201,44,1731,48],[2201,46,1731,50],[2201,52,1731,57,"attempt"],[2201,59,1731,64],[2201,63,1731,69],[2202,10,1732,16],[2202,14,1732,20,"attempt"],[2202,21,1732,27],[2202,24,1732,30],[2202,25,1732,31],[2202,27,1732,33],[2203,12,1733,20],[2203,18,1733,26],[2203,19,1733,27],[2203,20,1733,28],[2203,22,1733,30,"helpers_1"],[2203,31,1733,39],[2203,32,1733,40,"sleep"],[2203,37,1733,45],[2203,39,1733,47],[2203,42,1733,50],[2203,45,1733,53,"Math"],[2203,49,1733,57],[2203,50,1733,58,"pow"],[2203,53,1733,61],[2203,54,1733,62],[2203,55,1733,63],[2203,57,1733,65,"attempt"],[2203,64,1733,72],[2203,67,1733,75],[2203,68,1733,76],[2203,69,1733,77],[2203,70,1733,78],[2203,71,1733,79],[2203,72,1733,80],[2204,10,1734,16],[2205,10,1735,16],[2205,14,1735,20],[2205,15,1735,21,"_debug"],[2205,21,1735,27],[2205,22,1735,28,"debugName"],[2205,31,1735,37],[2205,33,1735,39],[2205,53,1735,59],[2205,55,1735,61,"attempt"],[2205,62,1735,68],[2205,63,1735,69],[2206,10,1736,16],[2206,17,1736,23],[2206,23,1736,29],[2206,24,1736,30],[2206,25,1736,31],[2206,27,1736,33,"fetch_1"],[2206,34,1736,40],[2206,35,1736,41,"_request"],[2206,43,1736,49],[2206,45,1736,51],[2206,49,1736,55],[2206,50,1736,56,"fetch"],[2206,55,1736,61],[2206,57,1736,63],[2206,63,1736,69],[2206,65,1736,71],[2206,68,1736,74],[2206,72,1736,78],[2206,73,1736,79,"url"],[2206,76,1736,82],[2206,109,1736,115],[2206,111,1736,117],[2207,12,1737,20,"body"],[2207,16,1737,24],[2207,18,1737,26],[2208,14,1737,28,"refresh_token"],[2208,27,1737,41],[2208,29,1737,43,"refreshToken"],[2209,12,1737,56],[2209,13,1737,57],[2210,12,1738,20,"headers"],[2210,19,1738,27],[2210,21,1738,29],[2210,25,1738,33],[2210,26,1738,34,"headers"],[2210,33,1738,41],[2211,12,1739,20,"xform"],[2211,17,1739,25],[2211,19,1739,27,"fetch_1"],[2211,26,1739,34],[2211,27,1739,35,"_sessionResponse"],[2212,10,1740,16],[2212,11,1740,17],[2212,12,1740,18],[2213,8,1741,12],[2213,9,1741,13],[2213,11,1741,15],[2213,12,1741,16,"attempt"],[2213,19,1741,23],[2213,21,1741,25,"error"],[2213,26,1741,30],[2213,31,1741,35],[2214,10,1742,16],[2214,16,1742,22,"nextBackOffInterval"],[2214,35,1742,41],[2214,38,1742,44],[2214,41,1742,47],[2214,44,1742,50,"Math"],[2214,48,1742,54],[2214,49,1742,55,"pow"],[2214,52,1742,58],[2214,53,1742,59],[2214,54,1742,60],[2214,56,1742,62,"attempt"],[2214,63,1742,69],[2214,64,1742,70],[2215,10,1743,16],[2215,17,1743,24,"error"],[2215,22,1743,29],[2215,26,1744,20],[2215,27,1744,21],[2215,28,1744,22],[2215,30,1744,24,"errors_1"],[2215,38,1744,32],[2215,39,1744,33,"isAuthRetryableFetchError"],[2215,64,1744,58],[2215,66,1744,60,"error"],[2215,71,1744,65],[2215,72,1744,66],[2216,10,1745,20],[2217,10,1746,20,"Date"],[2217,14,1746,24],[2217,15,1746,25,"now"],[2217,18,1746,28],[2217,19,1746,29],[2217,20,1746,30],[2217,23,1746,33,"nextBackOffInterval"],[2217,42,1746,52],[2217,45,1746,55,"startedAt"],[2217,54,1746,64],[2217,57,1746,67,"constants_1"],[2217,68,1746,78],[2217,69,1746,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2217,98,1746,108],[2218,8,1747,12],[2218,9,1747,13],[2218,10,1747,14],[2219,6,1748,8],[2219,7,1748,9],[2219,8,1749,8],[2219,15,1749,15,"error"],[2219,20,1749,20],[2219,22,1749,22],[2220,8,1750,12],[2220,12,1750,16],[2220,13,1750,17,"_debug"],[2220,19,1750,23],[2220,20,1750,24,"debugName"],[2220,29,1750,33],[2220,31,1750,35],[2220,38,1750,42],[2220,40,1750,44,"error"],[2220,45,1750,49],[2220,46,1750,50],[2221,8,1751,12],[2221,12,1751,16],[2221,13,1751,17],[2221,14,1751,18],[2221,16,1751,20,"errors_1"],[2221,24,1751,28],[2221,25,1751,29,"isAuthError"],[2221,36,1751,40],[2221,38,1751,42,"error"],[2221,43,1751,47],[2221,44,1751,48],[2221,46,1751,50],[2222,10,1752,16],[2222,17,1752,23],[2223,12,1752,25,"data"],[2223,16,1752,29],[2223,18,1752,31],[2224,14,1752,33,"session"],[2224,21,1752,40],[2224,23,1752,42],[2224,27,1752,46],[2225,14,1752,48,"user"],[2225,18,1752,52],[2225,20,1752,54],[2226,12,1752,59],[2226,13,1752,60],[2227,12,1752,62,"error"],[2228,10,1752,68],[2228,11,1752,69],[2229,8,1753,12],[2230,8,1754,12],[2230,14,1754,18,"error"],[2230,19,1754,23],[2231,6,1755,8],[2231,7,1755,9],[2231,16,1756,16],[2232,8,1757,12],[2232,12,1757,16],[2232,13,1757,17,"_debug"],[2232,19,1757,23],[2232,20,1757,24,"debugName"],[2232,29,1757,33],[2232,31,1757,35],[2232,36,1757,40],[2232,37,1757,41],[2233,6,1758,8],[2234,4,1759,4],[2235,4,1760,4,"_isValidSession"],[2235,19,1760,19,"_isValidSession"],[2235,20,1760,20,"maybeSession"],[2235,32,1760,32],[2235,34,1760,34],[2236,6,1761,8],[2236,12,1761,14,"isValidSession"],[2236,26,1761,28],[2236,29,1761,31],[2236,36,1761,38,"maybeSession"],[2236,48,1761,50],[2236,53,1761,55],[2236,61,1761,63],[2236,65,1762,12,"maybeSession"],[2236,77,1762,24],[2236,82,1762,29],[2236,86,1762,33],[2236,90,1763,12],[2236,104,1763,26],[2236,108,1763,30,"maybeSession"],[2236,120,1763,42],[2236,124,1764,12],[2236,139,1764,27],[2236,143,1764,31,"maybeSession"],[2236,155,1764,43],[2236,159,1765,12],[2236,171,1765,24],[2236,175,1765,28,"maybeSession"],[2236,187,1765,40],[2237,6,1766,8],[2237,13,1766,15,"isValidSession"],[2237,27,1766,29],[2238,4,1767,4],[2239,4,1768,4],[2239,10,1768,10,"_handleProviderSignIn"],[2239,31,1768,31,"_handleProviderSignIn"],[2239,32,1768,32,"provider"],[2239,40,1768,40],[2239,42,1768,42,"options"],[2239,49,1768,49],[2239,51,1768,51],[2240,6,1769,8],[2240,12,1769,14,"url"],[2240,15,1769,17],[2240,18,1769,20],[2240,24,1769,26],[2240,28,1769,30],[2240,29,1769,31,"_getUrlForProvider"],[2240,47,1769,49],[2240,48,1769,50],[2240,51,1769,53],[2240,55,1769,57],[2240,56,1769,58,"url"],[2240,59,1769,61],[2240,71,1769,73],[2240,73,1769,75,"provider"],[2240,81,1769,83],[2240,83,1769,85],[2241,8,1770,12,"redirectTo"],[2241,18,1770,22],[2241,20,1770,24,"options"],[2241,27,1770,31],[2241,28,1770,32,"redirectTo"],[2241,38,1770,42],[2242,8,1771,12,"scopes"],[2242,14,1771,18],[2242,16,1771,20,"options"],[2242,23,1771,27],[2242,24,1771,28,"scopes"],[2242,30,1771,34],[2243,8,1772,12,"queryParams"],[2243,19,1772,23],[2243,21,1772,25,"options"],[2243,28,1772,32],[2243,29,1772,33,"queryParams"],[2244,6,1773,8],[2244,7,1773,9],[2244,8,1773,10],[2245,6,1774,8],[2245,10,1774,12],[2245,11,1774,13,"_debug"],[2245,17,1774,19],[2245,18,1774,20],[2245,44,1774,46],[2245,46,1774,48],[2245,56,1774,58],[2245,58,1774,60,"provider"],[2245,66,1774,68],[2245,68,1774,70],[2245,77,1774,79],[2245,79,1774,81,"options"],[2245,86,1774,88],[2245,88,1774,90],[2245,93,1774,95],[2245,95,1774,97,"url"],[2245,98,1774,100],[2245,99,1774,101],[2246,6,1775,8],[2247,6,1776,8],[2247,10,1776,12],[2247,11,1776,13],[2247,12,1776,14],[2247,14,1776,16,"helpers_1"],[2247,23,1776,25],[2247,24,1776,26,"isBrowser"],[2247,33,1776,35],[2247,35,1776,37],[2247,36,1776,38],[2247,40,1776,42],[2247,41,1776,43,"options"],[2247,48,1776,50],[2247,49,1776,51,"skipBrowserRedirect"],[2247,68,1776,70],[2247,70,1776,72],[2248,8,1777,12,"window"],[2248,14,1777,18],[2248,15,1777,19,"location"],[2248,23,1777,27],[2248,24,1777,28,"assign"],[2248,30,1777,34],[2248,31,1777,35,"url"],[2248,34,1777,38],[2248,35,1777,39],[2249,6,1778,8],[2250,6,1779,8],[2250,13,1779,15],[2251,8,1779,17,"data"],[2251,12,1779,21],[2251,14,1779,23],[2252,10,1779,25,"provider"],[2252,18,1779,33],[2253,10,1779,35,"url"],[2254,8,1779,39],[2254,9,1779,40],[2255,8,1779,42,"error"],[2255,13,1779,47],[2255,15,1779,49],[2256,6,1779,54],[2256,7,1779,55],[2257,4,1780,4],[2258,4,1781,4],[2259,0,1782,0],[2260,0,1783,0],[2261,0,1784,0],[2262,4,1785,4],[2262,10,1785,10,"_recoverAndRefresh"],[2262,28,1785,28,"_recoverAndRefresh"],[2262,29,1785,28],[2262,31,1785,31],[2263,6,1786,8],[2263,10,1786,12,"_a"],[2263,12,1786,14],[2263,14,1786,16,"_b"],[2263,16,1786,18],[2264,6,1787,8],[2264,12,1787,14,"debugName"],[2264,21,1787,23],[2264,24,1787,26],[2264,47,1787,49],[2265,6,1788,8],[2265,10,1788,12],[2265,11,1788,13,"_debug"],[2265,17,1788,19],[2265,18,1788,20,"debugName"],[2265,27,1788,29],[2265,29,1788,31],[2265,36,1788,38],[2265,37,1788,39],[2266,6,1789,8],[2266,10,1789,12],[2267,8,1790,12],[2267,14,1790,18,"currentSession"],[2267,28,1790,32],[2267,31,1790,36],[2267,37,1790,42],[2267,38,1790,43],[2267,39,1790,44],[2267,41,1790,46,"helpers_1"],[2267,50,1790,55],[2267,51,1790,56,"getItemAsync"],[2267,63,1790,68],[2267,65,1790,70],[2267,69,1790,74],[2267,70,1790,75,"storage"],[2267,77,1790,82],[2267,79,1790,84],[2267,83,1790,88],[2267,84,1790,89,"storageKey"],[2267,94,1790,99],[2267,95,1790,101],[2268,8,1791,12],[2268,12,1791,16,"currentSession"],[2268,26,1791,30],[2268,30,1791,34],[2268,34,1791,38],[2268,35,1791,39,"userStorage"],[2268,46,1791,50],[2268,48,1791,52],[2269,10,1792,16],[2269,14,1792,20,"maybeUser"],[2269,23,1792,29],[2269,26,1792,33],[2269,32,1792,39],[2269,33,1792,40],[2269,34,1792,41],[2269,36,1792,43,"helpers_1"],[2269,45,1792,52],[2269,46,1792,53,"getItemAsync"],[2269,58,1792,65],[2269,60,1792,67],[2269,64,1792,71],[2269,65,1792,72,"userStorage"],[2269,76,1792,83],[2269,78,1792,85],[2269,82,1792,89],[2269,83,1792,90,"storageKey"],[2269,93,1792,100],[2269,96,1792,103],[2269,103,1792,110],[2269,104,1792,112],[2270,10,1793,16],[2270,14,1793,20],[2270,15,1793,21],[2270,19,1793,25],[2270,20,1793,26,"storage"],[2270,27,1793,33],[2270,28,1793,34,"isServer"],[2270,36,1793,42],[2270,40,1793,46,"Object"],[2270,46,1793,52],[2270,47,1793,53,"is"],[2270,49,1793,55],[2270,50,1793,56],[2270,54,1793,60],[2270,55,1793,61,"storage"],[2270,62,1793,68],[2270,64,1793,70],[2270,68,1793,74],[2270,69,1793,75,"userStorage"],[2270,80,1793,86],[2270,81,1793,87],[2270,85,1793,91],[2270,86,1793,92,"maybeUser"],[2270,95,1793,101],[2270,97,1793,103],[2271,12,1794,20],[2272,12,1795,20],[2273,12,1796,20],[2274,12,1797,20],[2275,12,1798,20,"maybeUser"],[2275,21,1798,29],[2275,24,1798,32],[2276,14,1798,34,"user"],[2276,18,1798,38],[2276,20,1798,40,"currentSession"],[2276,34,1798,54],[2276,35,1798,55,"user"],[2277,12,1798,60],[2277,13,1798,61],[2278,12,1799,20],[2278,18,1799,26],[2278,19,1799,27],[2278,20,1799,28],[2278,22,1799,30,"helpers_1"],[2278,31,1799,39],[2278,32,1799,40,"setItemAsync"],[2278,44,1799,52],[2278,46,1799,54],[2278,50,1799,58],[2278,51,1799,59,"userStorage"],[2278,62,1799,70],[2278,64,1799,72],[2278,68,1799,76],[2278,69,1799,77,"storageKey"],[2278,79,1799,87],[2278,82,1799,90],[2278,89,1799,97],[2278,91,1799,99,"maybeUser"],[2278,100,1799,108],[2278,101,1799,109],[2279,10,1800,16],[2280,10,1801,16,"currentSession"],[2280,24,1801,30],[2280,25,1801,31,"user"],[2280,29,1801,35],[2280,32,1801,38],[2280,33,1801,39,"_a"],[2280,35,1801,41],[2280,38,1801,44,"maybeUser"],[2280,47,1801,53],[2280,52,1801,58],[2280,56,1801,62],[2280,60,1801,66,"maybeUser"],[2280,69,1801,75],[2280,74,1801,80],[2280,79,1801,85],[2280,80,1801,86],[2280,83,1801,89],[2280,88,1801,94],[2280,89,1801,95],[2280,92,1801,98,"maybeUser"],[2280,101,1801,107],[2280,102,1801,108,"user"],[2280,106,1801,112],[2280,112,1801,118],[2280,116,1801,122],[2280,120,1801,126,"_a"],[2280,122,1801,128],[2280,127,1801,133],[2280,132,1801,138],[2280,133,1801,139],[2280,136,1801,142,"_a"],[2280,138,1801,144],[2280,141,1801,147],[2280,142,1801,148],[2280,143,1801,149],[2280,145,1801,151,"helpers_1"],[2280,154,1801,160],[2280,155,1801,161,"userNotAvailableProxy"],[2280,176,1801,182],[2280,178,1801,184],[2280,179,1801,185],[2281,8,1802,12],[2281,9,1802,13],[2281,15,1803,17],[2281,19,1803,21,"currentSession"],[2281,33,1803,35],[2281,37,1803,39],[2281,38,1803,40,"currentSession"],[2281,52,1803,54],[2281,53,1803,55,"user"],[2281,57,1803,59],[2281,59,1803,61],[2282,10,1804,16],[2283,10,1805,16],[2284,10,1806,16],[2284,14,1806,20],[2284,15,1806,21,"currentSession"],[2284,29,1806,35],[2284,30,1806,36,"user"],[2284,34,1806,40],[2284,36,1806,42],[2285,12,1807,20],[2286,12,1808,20],[2286,18,1808,26,"separateUser"],[2286,30,1808,38],[2286,33,1808,42],[2286,39,1808,48],[2286,40,1808,49],[2286,41,1808,50],[2286,43,1808,52,"helpers_1"],[2286,52,1808,61],[2286,53,1808,62,"getItemAsync"],[2286,65,1808,74],[2286,67,1808,76],[2286,71,1808,80],[2286,72,1808,81,"storage"],[2286,79,1808,88],[2286,81,1808,90],[2286,85,1808,94],[2286,86,1808,95,"storageKey"],[2286,96,1808,105],[2286,99,1808,108],[2286,106,1808,115],[2286,107,1808,117],[2287,12,1809,20],[2287,16,1809,24,"separateUser"],[2287,28,1809,36],[2287,33,1809,41,"separateUser"],[2287,45,1809,53],[2287,50,1809,58],[2287,54,1809,62],[2287,58,1809,66,"separateUser"],[2287,70,1809,78],[2287,75,1809,83],[2287,80,1809,88],[2287,81,1809,89],[2287,84,1809,92],[2287,89,1809,97],[2287,90,1809,98],[2287,93,1809,101,"separateUser"],[2287,105,1809,113],[2287,106,1809,114,"user"],[2287,110,1809,118],[2287,111,1809,119],[2287,113,1809,121],[2288,14,1810,24,"currentSession"],[2288,28,1810,38],[2288,29,1810,39,"user"],[2288,33,1810,43],[2288,36,1810,46,"separateUser"],[2288,48,1810,58],[2288,49,1810,59,"user"],[2288,53,1810,63],[2289,14,1811,24],[2289,20,1811,30],[2289,21,1811,31],[2289,22,1811,32],[2289,24,1811,34,"helpers_1"],[2289,33,1811,43],[2289,34,1811,44,"removeItemAsync"],[2289,49,1811,59],[2289,51,1811,61],[2289,55,1811,65],[2289,56,1811,66,"storage"],[2289,63,1811,73],[2289,65,1811,75],[2289,69,1811,79],[2289,70,1811,80,"storageKey"],[2289,80,1811,90],[2289,83,1811,93],[2289,90,1811,100],[2289,91,1811,101],[2290,14,1812,24],[2290,20,1812,30],[2290,21,1812,31],[2290,22,1812,32],[2290,24,1812,34,"helpers_1"],[2290,33,1812,43],[2290,34,1812,44,"setItemAsync"],[2290,46,1812,56],[2290,48,1812,58],[2290,52,1812,62],[2290,53,1812,63,"storage"],[2290,60,1812,70],[2290,62,1812,72],[2290,66,1812,76],[2290,67,1812,77,"storageKey"],[2290,77,1812,87],[2290,79,1812,89,"currentSession"],[2290,93,1812,103],[2290,94,1812,104],[2291,12,1813,20],[2291,13,1813,21],[2291,19,1814,25],[2292,14,1815,24,"currentSession"],[2292,28,1815,38],[2292,29,1815,39,"user"],[2292,33,1815,43],[2292,36,1815,46],[2292,37,1815,47],[2292,38,1815,48],[2292,40,1815,50,"helpers_1"],[2292,49,1815,59],[2292,50,1815,60,"userNotAvailableProxy"],[2292,71,1815,81],[2292,73,1815,83],[2292,74,1815,84],[2293,12,1816,20],[2294,10,1817,16],[2295,8,1818,12],[2296,8,1819,12],[2296,12,1819,16],[2296,13,1819,17,"_debug"],[2296,19,1819,23],[2296,20,1819,24,"debugName"],[2296,29,1819,33],[2296,31,1819,35],[2296,53,1819,57],[2296,55,1819,59,"currentSession"],[2296,69,1819,73],[2296,70,1819,74],[2297,8,1820,12],[2297,12,1820,16],[2297,13,1820,17],[2297,17,1820,21],[2297,18,1820,22,"_isValidSession"],[2297,33,1820,37],[2297,34,1820,38,"currentSession"],[2297,48,1820,52],[2297,49,1820,53],[2297,51,1820,55],[2298,10,1821,16],[2298,14,1821,20],[2298,15,1821,21,"_debug"],[2298,21,1821,27],[2298,22,1821,28,"debugName"],[2298,31,1821,37],[2298,33,1821,39],[2298,55,1821,61],[2298,56,1821,62],[2299,10,1822,16],[2299,14,1822,20,"currentSession"],[2299,28,1822,34],[2299,33,1822,39],[2299,37,1822,43],[2299,39,1822,45],[2300,12,1823,20],[2300,18,1823,26],[2300,22,1823,30],[2300,23,1823,31,"_removeSession"],[2300,37,1823,45],[2300,38,1823,46],[2300,39,1823,47],[2301,10,1824,16],[2302,10,1825,16],[2303,8,1826,12],[2304,8,1827,12],[2304,14,1827,18,"expiresWithMargin"],[2304,31,1827,35],[2304,34,1827,38],[2304,35,1827,39],[2304,36,1827,40,"_b"],[2304,38,1827,42],[2304,41,1827,45,"currentSession"],[2304,55,1827,59],[2304,56,1827,60,"expires_at"],[2304,66,1827,70],[2304,72,1827,76],[2304,76,1827,80],[2304,80,1827,84,"_b"],[2304,82,1827,86],[2304,87,1827,91],[2304,92,1827,96],[2304,93,1827,97],[2304,96,1827,100,"_b"],[2304,98,1827,102],[2304,101,1827,105,"Infinity"],[2304,109,1827,113],[2304,113,1827,117],[2304,117,1827,121],[2304,120,1827,124,"Date"],[2304,124,1827,128],[2304,125,1827,129,"now"],[2304,128,1827,132],[2304,129,1827,133],[2304,130,1827,134],[2304,133,1827,137,"constants_1"],[2304,144,1827,148],[2304,145,1827,149,"EXPIRY_MARGIN_MS"],[2304,161,1827,165],[2305,8,1828,12],[2305,12,1828,16],[2305,13,1828,17,"_debug"],[2305,19,1828,23],[2305,20,1828,24,"debugName"],[2305,29,1828,33],[2305,31,1828,35],[2305,45,1828,49,"expiresWithMargin"],[2305,62,1828,66],[2305,65,1828,69],[2305,67,1828,71],[2305,70,1828,74],[2305,76,1828,80],[2305,103,1828,107,"constants_1"],[2305,114,1828,118],[2305,115,1828,119,"EXPIRY_MARGIN_MS"],[2305,131,1828,135],[2305,134,1828,138],[2305,135,1828,139],[2306,8,1829,12],[2306,12,1829,16,"expiresWithMargin"],[2306,29,1829,33],[2306,31,1829,35],[2307,10,1830,16],[2307,14,1830,20],[2307,18,1830,24],[2307,19,1830,25,"autoRefreshToken"],[2307,35,1830,41],[2307,39,1830,45,"currentSession"],[2307,53,1830,59],[2307,54,1830,60,"refresh_token"],[2307,67,1830,73],[2307,69,1830,75],[2308,12,1831,20],[2308,18,1831,26],[2309,14,1831,28,"error"],[2310,12,1831,34],[2310,13,1831,35],[2310,16,1831,38],[2310,22,1831,44],[2310,26,1831,48],[2310,27,1831,49,"_callRefreshToken"],[2310,44,1831,66],[2310,45,1831,67,"currentSession"],[2310,59,1831,81],[2310,60,1831,82,"refresh_token"],[2310,73,1831,95],[2310,74,1831,96],[2311,12,1832,20],[2311,16,1832,24,"error"],[2311,21,1832,29],[2311,23,1832,31],[2312,14,1833,24,"console"],[2312,21,1833,31],[2312,22,1833,32,"error"],[2312,27,1833,37],[2312,28,1833,38,"error"],[2312,33,1833,43],[2312,34,1833,44],[2313,14,1834,24],[2313,18,1834,28],[2313,19,1834,29],[2313,20,1834,30],[2313,21,1834,31],[2313,23,1834,33,"errors_1"],[2313,31,1834,41],[2313,32,1834,42,"isAuthRetryableFetchError"],[2313,57,1834,67],[2313,59,1834,69,"error"],[2313,64,1834,74],[2313,65,1834,75],[2313,67,1834,77],[2314,16,1835,28],[2314,20,1835,32],[2314,21,1835,33,"_debug"],[2314,27,1835,39],[2314,28,1835,40,"debugName"],[2314,37,1835,49],[2314,39,1835,51],[2314,104,1835,116],[2314,106,1835,118,"error"],[2314,111,1835,123],[2314,112,1835,124],[2315,16,1836,28],[2315,22,1836,34],[2315,26,1836,38],[2315,27,1836,39,"_removeSession"],[2315,41,1836,53],[2315,42,1836,54],[2315,43,1836,55],[2316,14,1837,24],[2317,12,1838,20],[2318,10,1839,16],[2319,8,1840,12],[2319,9,1840,13],[2319,15,1841,17],[2319,19,1841,21,"currentSession"],[2319,33,1841,35],[2319,34,1841,36,"user"],[2319,38,1841,40],[2319,42,1842,16,"currentSession"],[2319,56,1842,30],[2319,57,1842,31,"user"],[2319,61,1842,35],[2319,62,1842,36,"__isUserNotAvailableProxy"],[2319,87,1842,61],[2319,92,1842,66],[2319,96,1842,70],[2319,98,1842,72],[2320,10,1843,16],[2321,10,1844,16],[2321,14,1844,20],[2322,12,1845,20],[2322,18,1845,26],[2323,14,1845,28,"data"],[2323,18,1845,32],[2324,14,1845,34,"error"],[2324,19,1845,39],[2324,21,1845,41,"userError"],[2325,12,1845,51],[2325,13,1845,52],[2325,16,1845,55],[2325,22,1845,61],[2325,26,1845,65],[2325,27,1845,66,"_getUser"],[2325,35,1845,74],[2325,36,1845,75,"currentSession"],[2325,50,1845,89],[2325,51,1845,90,"access_token"],[2325,63,1845,102],[2325,64,1845,103],[2326,12,1846,20],[2326,16,1846,24],[2326,17,1846,25,"userError"],[2326,26,1846,34],[2326,31,1846,39,"data"],[2326,35,1846,43],[2326,40,1846,48],[2326,44,1846,52],[2326,48,1846,56,"data"],[2326,52,1846,60],[2326,57,1846,65],[2326,62,1846,70],[2326,63,1846,71],[2326,66,1846,74],[2326,71,1846,79],[2326,72,1846,80],[2326,75,1846,83,"data"],[2326,79,1846,87],[2326,80,1846,88,"user"],[2326,84,1846,92],[2326,85,1846,93],[2326,87,1846,95],[2327,14,1847,24,"currentSession"],[2327,28,1847,38],[2327,29,1847,39,"user"],[2327,33,1847,43],[2327,36,1847,46,"data"],[2327,40,1847,50],[2327,41,1847,51,"user"],[2327,45,1847,55],[2328,14,1848,24],[2328,20,1848,30],[2328,24,1848,34],[2328,25,1848,35,"_saveSession"],[2328,37,1848,47],[2328,38,1848,48,"currentSession"],[2328,52,1848,62],[2328,53,1848,63],[2329,14,1849,24],[2329,20,1849,30],[2329,24,1849,34],[2329,25,1849,35,"_notifyAllSubscribers"],[2329,46,1849,56],[2329,47,1849,57],[2329,58,1849,68],[2329,60,1849,70,"currentSession"],[2329,74,1849,84],[2329,75,1849,85],[2330,12,1850,20],[2330,13,1850,21],[2330,19,1851,25],[2331,14,1852,24],[2331,18,1852,28],[2331,19,1852,29,"_debug"],[2331,25,1852,35],[2331,26,1852,36,"debugName"],[2331,35,1852,45],[2331,37,1852,47],[2331,95,1852,105],[2331,96,1852,106],[2332,12,1853,20],[2333,10,1854,16],[2333,11,1854,17],[2333,12,1855,16],[2333,19,1855,23,"getUserError"],[2333,31,1855,35],[2333,33,1855,37],[2334,12,1856,20,"console"],[2334,19,1856,27],[2334,20,1856,28,"error"],[2334,25,1856,33],[2334,26,1856,34],[2334,52,1856,60],[2334,54,1856,62,"getUserError"],[2334,66,1856,74],[2334,67,1856,75],[2335,12,1857,20],[2335,16,1857,24],[2335,17,1857,25,"_debug"],[2335,23,1857,31],[2335,24,1857,32,"debugName"],[2335,33,1857,41],[2335,35,1857,43],[2335,93,1857,101],[2335,95,1857,103,"getUserError"],[2335,107,1857,115],[2335,108,1857,116],[2336,10,1858,16],[2337,8,1859,12],[2337,9,1859,13],[2337,15,1860,17],[2338,10,1861,16],[2339,10,1862,16],[2340,10,1863,16],[2341,10,1864,16],[2341,16,1864,22],[2341,20,1864,26],[2341,21,1864,27,"_notifyAllSubscribers"],[2341,42,1864,48],[2341,43,1864,49],[2341,54,1864,60],[2341,56,1864,62,"currentSession"],[2341,70,1864,76],[2341,71,1864,77],[2342,8,1865,12],[2343,6,1866,8],[2343,7,1866,9],[2343,8,1867,8],[2343,15,1867,15,"err"],[2343,18,1867,18],[2343,20,1867,20],[2344,8,1868,12],[2344,12,1868,16],[2344,13,1868,17,"_debug"],[2344,19,1868,23],[2344,20,1868,24,"debugName"],[2344,29,1868,33],[2344,31,1868,35],[2344,38,1868,42],[2344,40,1868,44,"err"],[2344,43,1868,47],[2344,44,1868,48],[2345,8,1869,12,"console"],[2345,15,1869,19],[2345,16,1869,20,"error"],[2345,21,1869,25],[2345,22,1869,26,"err"],[2345,25,1869,29],[2345,26,1869,30],[2346,8,1870,12],[2347,6,1871,8],[2347,7,1871,9],[2347,16,1872,16],[2348,8,1873,12],[2348,12,1873,16],[2348,13,1873,17,"_debug"],[2348,19,1873,23],[2348,20,1873,24,"debugName"],[2348,29,1873,33],[2348,31,1873,35],[2348,36,1873,40],[2348,37,1873,41],[2349,6,1874,8],[2350,4,1875,4],[2351,4,1876,4],[2351,10,1876,10,"_callRefreshToken"],[2351,27,1876,27,"_callRefreshToken"],[2351,28,1876,28,"refreshToken"],[2351,40,1876,40],[2351,42,1876,42],[2352,6,1877,8],[2352,10,1877,12,"_a"],[2352,12,1877,14],[2352,14,1877,16,"_b"],[2352,16,1877,18],[2353,6,1878,8],[2353,10,1878,12],[2353,11,1878,13,"refreshToken"],[2353,23,1878,25],[2353,25,1878,27],[2354,8,1879,12],[2354,14,1879,18],[2354,18,1879,22,"errors_1"],[2354,26,1879,30],[2354,27,1879,31,"AuthSessionMissingError"],[2354,50,1879,54],[2354,51,1879,55],[2354,52,1879,56],[2355,6,1880,8],[2356,6,1881,8],[2357,6,1882,8],[2357,10,1882,12],[2357,14,1882,16],[2357,15,1882,17,"refreshingDeferred"],[2357,33,1882,35],[2357,35,1882,37],[2358,8,1883,12],[2358,15,1883,19],[2358,19,1883,23],[2358,20,1883,24,"refreshingDeferred"],[2358,38,1883,42],[2358,39,1883,43,"promise"],[2358,46,1883,50],[2359,6,1884,8],[2360,6,1885,8],[2360,12,1885,14,"debugName"],[2360,21,1885,23],[2360,24,1885,26],[2360,46,1885,48,"refreshToken"],[2360,58,1885,60],[2360,59,1885,61,"substring"],[2360,68,1885,70],[2360,69,1885,71],[2360,70,1885,72],[2360,72,1885,74],[2360,73,1885,75],[2360,74,1885,76],[2360,80,1885,82],[2361,6,1886,8],[2361,10,1886,12],[2361,11,1886,13,"_debug"],[2361,17,1886,19],[2361,18,1886,20,"debugName"],[2361,27,1886,29],[2361,29,1886,31],[2361,36,1886,38],[2361,37,1886,39],[2362,6,1887,8],[2362,10,1887,12],[2363,8,1888,12],[2363,12,1888,16],[2363,13,1888,17,"refreshingDeferred"],[2363,31,1888,35],[2363,34,1888,38],[2363,38,1888,42,"helpers_1"],[2363,47,1888,51],[2363,48,1888,52,"Deferred"],[2363,56,1888,60],[2363,57,1888,61],[2363,58,1888,62],[2364,8,1889,12],[2364,14,1889,18],[2365,10,1889,20,"data"],[2365,14,1889,24],[2366,10,1889,26,"error"],[2367,8,1889,32],[2367,9,1889,33],[2367,12,1889,36],[2367,18,1889,42],[2367,22,1889,46],[2367,23,1889,47,"_refreshAccessToken"],[2367,42,1889,66],[2367,43,1889,67,"refreshToken"],[2367,55,1889,79],[2367,56,1889,80],[2368,8,1890,12],[2368,12,1890,16,"error"],[2368,17,1890,21],[2368,19,1891,16],[2368,25,1891,22,"error"],[2368,30,1891,27],[2369,8,1892,12],[2369,12,1892,16],[2369,13,1892,17,"data"],[2369,17,1892,21],[2369,18,1892,22,"session"],[2369,25,1892,29],[2369,27,1893,16],[2369,33,1893,22],[2369,37,1893,26,"errors_1"],[2369,45,1893,34],[2369,46,1893,35,"AuthSessionMissingError"],[2369,69,1893,58],[2369,70,1893,59],[2369,71,1893,60],[2370,8,1894,12],[2370,14,1894,18],[2370,18,1894,22],[2370,19,1894,23,"_saveSession"],[2370,31,1894,35],[2370,32,1894,36,"data"],[2370,36,1894,40],[2370,37,1894,41,"session"],[2370,44,1894,48],[2370,45,1894,49],[2371,8,1895,12],[2371,14,1895,18],[2371,18,1895,22],[2371,19,1895,23,"_notifyAllSubscribers"],[2371,40,1895,44],[2371,41,1895,45],[2371,58,1895,62],[2371,60,1895,64,"data"],[2371,64,1895,68],[2371,65,1895,69,"session"],[2371,72,1895,76],[2371,73,1895,77],[2372,8,1896,12],[2372,14,1896,18,"result"],[2372,20,1896,24],[2372,23,1896,27],[2373,10,1896,29,"data"],[2373,14,1896,33],[2373,16,1896,35,"data"],[2373,20,1896,39],[2373,21,1896,40,"session"],[2373,28,1896,47],[2374,10,1896,49,"error"],[2374,15,1896,54],[2374,17,1896,56],[2375,8,1896,61],[2375,9,1896,62],[2376,8,1897,12],[2376,12,1897,16],[2376,13,1897,17,"refreshingDeferred"],[2376,31,1897,35],[2376,32,1897,36,"resolve"],[2376,39,1897,43],[2376,40,1897,44,"result"],[2376,46,1897,50],[2376,47,1897,51],[2377,8,1898,12],[2377,15,1898,19,"result"],[2377,21,1898,25],[2378,6,1899,8],[2378,7,1899,9],[2378,8,1900,8],[2378,15,1900,15,"error"],[2378,20,1900,20],[2378,22,1900,22],[2379,8,1901,12],[2379,12,1901,16],[2379,13,1901,17,"_debug"],[2379,19,1901,23],[2379,20,1901,24,"debugName"],[2379,29,1901,33],[2379,31,1901,35],[2379,38,1901,42],[2379,40,1901,44,"error"],[2379,45,1901,49],[2379,46,1901,50],[2380,8,1902,12],[2380,12,1902,16],[2380,13,1902,17],[2380,14,1902,18],[2380,16,1902,20,"errors_1"],[2380,24,1902,28],[2380,25,1902,29,"isAuthError"],[2380,36,1902,40],[2380,38,1902,42,"error"],[2380,43,1902,47],[2380,44,1902,48],[2380,46,1902,50],[2381,10,1903,16],[2381,16,1903,22,"result"],[2381,22,1903,28],[2381,25,1903,31],[2382,12,1903,33,"data"],[2382,16,1903,37],[2382,18,1903,39],[2382,22,1903,43],[2383,12,1903,45,"error"],[2384,10,1903,51],[2384,11,1903,52],[2385,10,1904,16],[2385,14,1904,20],[2385,15,1904,21],[2385,16,1904,22],[2385,17,1904,23],[2385,19,1904,25,"errors_1"],[2385,27,1904,33],[2385,28,1904,34,"isAuthRetryableFetchError"],[2385,53,1904,59],[2385,55,1904,61,"error"],[2385,60,1904,66],[2385,61,1904,67],[2385,63,1904,69],[2386,12,1905,20],[2386,18,1905,26],[2386,22,1905,30],[2386,23,1905,31,"_removeSession"],[2386,37,1905,45],[2386,38,1905,46],[2386,39,1905,47],[2387,10,1906,16],[2388,10,1907,16],[2388,11,1907,17,"_a"],[2388,13,1907,19],[2388,16,1907,22],[2388,20,1907,26],[2388,21,1907,27,"refreshingDeferred"],[2388,39,1907,45],[2388,45,1907,51],[2388,49,1907,55],[2388,53,1907,59,"_a"],[2388,55,1907,61],[2388,60,1907,66],[2388,65,1907,71],[2388,66,1907,72],[2388,69,1907,75],[2388,74,1907,80],[2388,75,1907,81],[2388,78,1907,84,"_a"],[2388,80,1907,86],[2388,81,1907,87,"resolve"],[2388,88,1907,94],[2388,89,1907,95,"result"],[2388,95,1907,101],[2388,96,1907,102],[2389,10,1908,16],[2389,17,1908,23,"result"],[2389,23,1908,29],[2390,8,1909,12],[2391,8,1910,12],[2391,9,1910,13,"_b"],[2391,11,1910,15],[2391,14,1910,18],[2391,18,1910,22],[2391,19,1910,23,"refreshingDeferred"],[2391,37,1910,41],[2391,43,1910,47],[2391,47,1910,51],[2391,51,1910,55,"_b"],[2391,53,1910,57],[2391,58,1910,62],[2391,63,1910,67],[2391,64,1910,68],[2391,67,1910,71],[2391,72,1910,76],[2391,73,1910,77],[2391,76,1910,80,"_b"],[2391,78,1910,82],[2391,79,1910,83,"reject"],[2391,85,1910,89],[2391,86,1910,90,"error"],[2391,91,1910,95],[2391,92,1910,96],[2392,8,1911,12],[2392,14,1911,18,"error"],[2392,19,1911,23],[2393,6,1912,8],[2393,7,1912,9],[2393,16,1913,16],[2394,8,1914,12],[2394,12,1914,16],[2394,13,1914,17,"refreshingDeferred"],[2394,31,1914,35],[2394,34,1914,38],[2394,38,1914,42],[2395,8,1915,12],[2395,12,1915,16],[2395,13,1915,17,"_debug"],[2395,19,1915,23],[2395,20,1915,24,"debugName"],[2395,29,1915,33],[2395,31,1915,35],[2395,36,1915,40],[2395,37,1915,41],[2396,6,1916,8],[2397,4,1917,4],[2398,4,1918,4],[2398,10,1918,10,"_notifyAllSubscribers"],[2398,31,1918,31,"_notifyAllSubscribers"],[2398,32,1918,32,"event"],[2398,37,1918,37],[2398,39,1918,39,"session"],[2398,46,1918,46],[2398,48,1918,48,"broadcast"],[2398,57,1918,57],[2398,60,1918,60],[2398,64,1918,64],[2398,66,1918,66],[2399,6,1919,8],[2399,12,1919,14,"debugName"],[2399,21,1919,23],[2399,24,1919,26],[2399,50,1919,52,"event"],[2399,55,1919,57],[2399,58,1919,60],[2400,6,1920,8],[2400,10,1920,12],[2400,11,1920,13,"_debug"],[2400,17,1920,19],[2400,18,1920,20,"debugName"],[2400,27,1920,29],[2400,29,1920,31],[2400,36,1920,38],[2400,38,1920,40,"session"],[2400,45,1920,47],[2400,47,1920,49],[2400,62,1920,64,"broadcast"],[2400,71,1920,73],[2400,73,1920,75],[2400,74,1920,76],[2401,6,1921,8],[2401,10,1921,12],[2402,8,1922,12],[2402,12,1922,16],[2402,16,1922,20],[2402,17,1922,21,"broadcastChannel"],[2402,33,1922,37],[2402,37,1922,41,"broadcast"],[2402,46,1922,50],[2402,48,1922,52],[2403,10,1923,16],[2403,14,1923,20],[2403,15,1923,21,"broadcastChannel"],[2403,31,1923,37],[2403,32,1923,38,"postMessage"],[2403,43,1923,49],[2403,44,1923,50],[2404,12,1923,52,"event"],[2404,17,1923,57],[2405,12,1923,59,"session"],[2406,10,1923,67],[2406,11,1923,68],[2406,12,1923,69],[2407,8,1924,12],[2408,8,1925,12],[2408,14,1925,18,"errors"],[2408,20,1925,24],[2408,23,1925,27],[2408,25,1925,29],[2409,8,1926,12],[2409,14,1926,18,"promises"],[2409,22,1926,26],[2409,25,1926,29,"Array"],[2409,30,1926,34],[2409,31,1926,35,"from"],[2409,35,1926,39],[2409,36,1926,40],[2409,40,1926,44],[2409,41,1926,45,"stateChangeEmitters"],[2409,60,1926,64],[2409,61,1926,65,"values"],[2409,67,1926,71],[2409,68,1926,72],[2409,69,1926,73],[2409,70,1926,74],[2409,71,1926,75,"map"],[2409,74,1926,78],[2409,75,1926,79],[2409,81,1926,86,"x"],[2409,82,1926,87],[2409,86,1926,92],[2410,10,1927,16],[2410,14,1927,20],[2411,12,1928,20],[2411,18,1928,26,"x"],[2411,19,1928,27],[2411,20,1928,28,"callback"],[2411,28,1928,36],[2411,29,1928,37,"event"],[2411,34,1928,42],[2411,36,1928,44,"session"],[2411,43,1928,51],[2411,44,1928,52],[2412,10,1929,16],[2412,11,1929,17],[2412,12,1930,16],[2412,19,1930,23,"e"],[2412,20,1930,24],[2412,22,1930,26],[2413,12,1931,20,"errors"],[2413,18,1931,26],[2413,19,1931,27,"push"],[2413,23,1931,31],[2413,24,1931,32,"e"],[2413,25,1931,33],[2413,26,1931,34],[2414,10,1932,16],[2415,8,1933,12],[2415,9,1933,13],[2415,10,1933,14],[2416,8,1934,12],[2416,14,1934,18,"Promise"],[2416,21,1934,25],[2416,22,1934,26,"all"],[2416,25,1934,29],[2416,26,1934,30,"promises"],[2416,34,1934,38],[2416,35,1934,39],[2417,8,1935,12],[2417,12,1935,16,"errors"],[2417,18,1935,22],[2417,19,1935,23,"length"],[2417,25,1935,29],[2417,28,1935,32],[2417,29,1935,33],[2417,31,1935,35],[2418,10,1936,16],[2418,15,1936,21],[2418,19,1936,25,"i"],[2418,20,1936,26],[2418,23,1936,29],[2418,24,1936,30],[2418,26,1936,32,"i"],[2418,27,1936,33],[2418,30,1936,36,"errors"],[2418,36,1936,42],[2418,37,1936,43,"length"],[2418,43,1936,49],[2418,45,1936,51,"i"],[2418,46,1936,52],[2418,50,1936,56],[2418,51,1936,57],[2418,53,1936,59],[2419,12,1937,20,"console"],[2419,19,1937,27],[2419,20,1937,28,"error"],[2419,25,1937,33],[2419,26,1937,34,"errors"],[2419,32,1937,40],[2419,33,1937,41,"i"],[2419,34,1937,42],[2419,35,1937,43],[2419,36,1937,44],[2420,10,1938,16],[2421,10,1939,16],[2421,16,1939,22,"errors"],[2421,22,1939,28],[2421,23,1939,29],[2421,24,1939,30],[2421,25,1939,31],[2422,8,1940,12],[2423,6,1941,8],[2423,7,1941,9],[2423,16,1942,16],[2424,8,1943,12],[2424,12,1943,16],[2424,13,1943,17,"_debug"],[2424,19,1943,23],[2424,20,1943,24,"debugName"],[2424,29,1943,33],[2424,31,1943,35],[2424,36,1943,40],[2424,37,1943,41],[2425,6,1944,8],[2426,4,1945,4],[2427,4,1946,4],[2428,0,1947,0],[2429,0,1948,0],[2430,0,1949,0],[2431,4,1950,4],[2431,10,1950,10,"_saveSession"],[2431,22,1950,22,"_saveSession"],[2431,23,1950,23,"session"],[2431,30,1950,30],[2431,32,1950,32],[2432,6,1951,8],[2432,10,1951,12],[2432,11,1951,13,"_debug"],[2432,17,1951,19],[2432,18,1951,20],[2432,35,1951,37],[2432,37,1951,39,"session"],[2432,44,1951,46],[2432,45,1951,47],[2433,6,1952,8],[2434,6,1953,8],[2435,6,1954,8],[2435,10,1954,12],[2435,11,1954,13,"suppressGetSessionWarning"],[2435,36,1954,38],[2435,39,1954,41],[2435,43,1954,45],[2436,6,1955,8],[2437,6,1956,8],[2437,12,1956,14,"sessionToProcess"],[2437,28,1956,30],[2437,31,1956,33,"Object"],[2437,37,1956,39],[2437,38,1956,40,"assign"],[2437,44,1956,46],[2437,45,1956,47],[2437,46,1956,48],[2437,47,1956,49],[2437,49,1956,51,"session"],[2437,56,1956,58],[2437,57,1956,59],[2438,6,1957,8],[2438,12,1957,14,"userIsProxy"],[2438,23,1957,25],[2438,26,1957,28,"sessionToProcess"],[2438,42,1957,44],[2438,43,1957,45,"user"],[2438,47,1957,49],[2438,51,1957,53,"sessionToProcess"],[2438,67,1957,69],[2438,68,1957,70,"user"],[2438,72,1957,74],[2438,73,1957,75,"__isUserNotAvailableProxy"],[2438,98,1957,100],[2438,103,1957,105],[2438,107,1957,109],[2439,6,1958,8],[2439,10,1958,12],[2439,14,1958,16],[2439,15,1958,17,"userStorage"],[2439,26,1958,28],[2439,28,1958,30],[2440,8,1959,12],[2440,12,1959,16],[2440,13,1959,17,"userIsProxy"],[2440,24,1959,28],[2440,28,1959,32,"sessionToProcess"],[2440,44,1959,48],[2440,45,1959,49,"user"],[2440,49,1959,53],[2440,51,1959,55],[2441,10,1960,16],[2442,10,1961,16],[2442,16,1961,22],[2442,17,1961,23],[2442,18,1961,24],[2442,20,1961,26,"helpers_1"],[2442,29,1961,35],[2442,30,1961,36,"setItemAsync"],[2442,42,1961,48],[2442,44,1961,50],[2442,48,1961,54],[2442,49,1961,55,"userStorage"],[2442,60,1961,66],[2442,62,1961,68],[2442,66,1961,72],[2442,67,1961,73,"storageKey"],[2442,77,1961,83],[2442,80,1961,86],[2442,87,1961,93],[2442,89,1961,95],[2443,12,1962,20,"user"],[2443,16,1962,24],[2443,18,1962,26,"sessionToProcess"],[2443,34,1962,42],[2443,35,1962,43,"user"],[2444,10,1963,16],[2444,11,1963,17],[2444,12,1963,18],[2445,8,1964,12],[2445,9,1964,13],[2445,15,1965,17],[2445,19,1965,21,"userIsProxy"],[2445,30,1965,32],[2445,32,1965,34],[2446,10,1966,16],[2447,10,1967,16],[2448,10,1968,16],[2449,10,1969,16],[2450,8,1969,16],[2451,8,1971,12],[2452,8,1972,12],[2453,8,1973,12],[2453,14,1973,18,"mainSessionData"],[2453,29,1973,33],[2453,32,1973,36,"Object"],[2453,38,1973,42],[2453,39,1973,43,"assign"],[2453,45,1973,49],[2453,46,1973,50],[2453,47,1973,51],[2453,48,1973,52],[2453,50,1973,54,"sessionToProcess"],[2453,66,1973,70],[2453,67,1973,71],[2454,8,1974,12],[2454,15,1974,19,"mainSessionData"],[2454,30,1974,34],[2454,31,1974,35,"user"],[2454,35,1974,39],[2454,36,1974,40],[2454,37,1974,41],[2455,8,1975,12],[2455,14,1975,18,"clonedMainSessionData"],[2455,35,1975,39],[2455,38,1975,42],[2455,39,1975,43],[2455,40,1975,44],[2455,42,1975,46,"helpers_1"],[2455,51,1975,55],[2455,52,1975,56,"deepClone"],[2455,61,1975,65],[2455,63,1975,67,"mainSessionData"],[2455,78,1975,82],[2455,79,1975,83],[2456,8,1976,12],[2456,14,1976,18],[2456,15,1976,19],[2456,16,1976,20],[2456,18,1976,22,"helpers_1"],[2456,27,1976,31],[2456,28,1976,32,"setItemAsync"],[2456,40,1976,44],[2456,42,1976,46],[2456,46,1976,50],[2456,47,1976,51,"storage"],[2456,54,1976,58],[2456,56,1976,60],[2456,60,1976,64],[2456,61,1976,65,"storageKey"],[2456,71,1976,75],[2456,73,1976,77,"clonedMainSessionData"],[2456,94,1976,98],[2456,95,1976,99],[2457,6,1977,8],[2457,7,1977,9],[2457,13,1978,13],[2458,8,1979,12],[2459,8,1980,12],[2460,8,1981,12],[2461,8,1982,12],[2461,14,1982,18,"clonedSession"],[2461,27,1982,31],[2461,30,1982,34],[2461,31,1982,35],[2461,32,1982,36],[2461,34,1982,38,"helpers_1"],[2461,43,1982,47],[2461,44,1982,48,"deepClone"],[2461,53,1982,57],[2461,55,1982,59,"sessionToProcess"],[2461,71,1982,75],[2461,72,1982,76],[2461,73,1982,77],[2461,74,1982,78],[2462,8,1983,12],[2462,14,1983,18],[2462,15,1983,19],[2462,16,1983,20],[2462,18,1983,22,"helpers_1"],[2462,27,1983,31],[2462,28,1983,32,"setItemAsync"],[2462,40,1983,44],[2462,42,1983,46],[2462,46,1983,50],[2462,47,1983,51,"storage"],[2462,54,1983,58],[2462,56,1983,60],[2462,60,1983,64],[2462,61,1983,65,"storageKey"],[2462,71,1983,75],[2462,73,1983,77,"clonedSession"],[2462,86,1983,90],[2462,87,1983,91],[2463,6,1984,8],[2464,4,1985,4],[2465,4,1986,4],[2465,10,1986,10,"_removeSession"],[2465,24,1986,24,"_removeSession"],[2465,25,1986,24],[2465,27,1986,27],[2466,6,1987,8],[2466,10,1987,12],[2466,11,1987,13,"_debug"],[2466,17,1987,19],[2466,18,1987,20],[2466,37,1987,39],[2466,38,1987,40],[2467,6,1988,8],[2467,12,1988,14],[2467,13,1988,15],[2467,14,1988,16],[2467,16,1988,18,"helpers_1"],[2467,25,1988,27],[2467,26,1988,28,"removeItemAsync"],[2467,41,1988,43],[2467,43,1988,45],[2467,47,1988,49],[2467,48,1988,50,"storage"],[2467,55,1988,57],[2467,57,1988,59],[2467,61,1988,63],[2467,62,1988,64,"storageKey"],[2467,72,1988,74],[2467,73,1988,75],[2468,6,1989,8],[2468,12,1989,14],[2468,13,1989,15],[2468,14,1989,16],[2468,16,1989,18,"helpers_1"],[2468,25,1989,27],[2468,26,1989,28,"removeItemAsync"],[2468,41,1989,43],[2468,43,1989,45],[2468,47,1989,49],[2468,48,1989,50,"storage"],[2468,55,1989,57],[2468,57,1989,59],[2468,61,1989,63],[2468,62,1989,64,"storageKey"],[2468,72,1989,74],[2468,75,1989,77],[2468,91,1989,93],[2468,92,1989,94],[2469,6,1990,8],[2469,12,1990,14],[2469,13,1990,15],[2469,14,1990,16],[2469,16,1990,18,"helpers_1"],[2469,25,1990,27],[2469,26,1990,28,"removeItemAsync"],[2469,41,1990,43],[2469,43,1990,45],[2469,47,1990,49],[2469,48,1990,50,"storage"],[2469,55,1990,57],[2469,57,1990,59],[2469,61,1990,63],[2469,62,1990,64,"storageKey"],[2469,72,1990,74],[2469,75,1990,77],[2469,82,1990,84],[2469,83,1990,85],[2470,6,1991,8],[2470,10,1991,12],[2470,14,1991,16],[2470,15,1991,17,"userStorage"],[2470,26,1991,28],[2470,28,1991,30],[2471,8,1992,12],[2471,14,1992,18],[2471,15,1992,19],[2471,16,1992,20],[2471,18,1992,22,"helpers_1"],[2471,27,1992,31],[2471,28,1992,32,"removeItemAsync"],[2471,43,1992,47],[2471,45,1992,49],[2471,49,1992,53],[2471,50,1992,54,"userStorage"],[2471,61,1992,65],[2471,63,1992,67],[2471,67,1992,71],[2471,68,1992,72,"storageKey"],[2471,78,1992,82],[2471,81,1992,85],[2471,88,1992,92],[2471,89,1992,93],[2472,6,1993,8],[2473,6,1994,8],[2473,12,1994,14],[2473,16,1994,18],[2473,17,1994,19,"_notifyAllSubscribers"],[2473,38,1994,40],[2473,39,1994,41],[2473,51,1994,53],[2473,53,1994,55],[2473,57,1994,59],[2473,58,1994,60],[2474,4,1995,4],[2475,4,1996,4],[2476,0,1997,0],[2477,0,1998,0],[2478,0,1999,0],[2479,0,2000,0],[2480,0,2001,0],[2481,4,2002,4,"_removeVisibilityChangedCallback"],[2481,36,2002,36,"_removeVisibilityChangedCallback"],[2481,37,2002,36],[2481,39,2002,39],[2482,6,2003,8],[2482,10,2003,12],[2482,11,2003,13,"_debug"],[2482,17,2003,19],[2482,18,2003,20],[2482,55,2003,57],[2482,56,2003,58],[2483,6,2004,8],[2483,12,2004,14,"callback"],[2483,20,2004,22],[2483,23,2004,25],[2483,27,2004,29],[2483,28,2004,30,"visibilityChangedCallback"],[2483,53,2004,55],[2484,6,2005,8],[2484,10,2005,12],[2484,11,2005,13,"visibilityChangedCallback"],[2484,36,2005,38],[2484,39,2005,41],[2484,43,2005,45],[2485,6,2006,8],[2485,10,2006,12],[2486,8,2007,12],[2486,12,2007,16,"callback"],[2486,20,2007,24],[2486,24,2007,28],[2486,25,2007,29],[2486,26,2007,30],[2486,28,2007,32,"helpers_1"],[2486,37,2007,41],[2486,38,2007,42,"isBrowser"],[2486,47,2007,51],[2486,49,2007,53],[2486,50,2007,54],[2486,55,2007,59,"window"],[2486,61,2007,65],[2486,66,2007,70],[2486,70,2007,74],[2486,74,2007,78,"window"],[2486,80,2007,84],[2486,85,2007,89],[2486,90,2007,94],[2486,91,2007,95],[2486,94,2007,98],[2486,99,2007,103],[2486,100,2007,104],[2486,103,2007,107,"window"],[2486,109,2007,113],[2486,110,2007,114,"removeEventListener"],[2486,129,2007,133],[2486,130,2007,134],[2486,132,2007,136],[2487,10,2008,16,"window"],[2487,16,2008,22],[2487,17,2008,23,"removeEventListener"],[2487,36,2008,42],[2487,37,2008,43],[2487,55,2008,61],[2487,57,2008,63,"callback"],[2487,65,2008,71],[2487,66,2008,72],[2488,8,2009,12],[2489,6,2010,8],[2489,7,2010,9],[2489,8,2011,8],[2489,15,2011,15,"e"],[2489,16,2011,16],[2489,18,2011,18],[2490,8,2012,12,"console"],[2490,15,2012,19],[2490,16,2012,20,"error"],[2490,21,2012,25],[2490,22,2012,26],[2490,65,2012,69],[2490,67,2012,71,"e"],[2490,68,2012,72],[2490,69,2012,73],[2491,6,2013,8],[2492,4,2014,4],[2493,4,2015,4],[2494,0,2016,0],[2495,0,2017,0],[2496,0,2018,0],[2497,4,2019,4],[2497,10,2019,10,"_startAutoRefresh"],[2497,27,2019,27,"_startAutoRefresh"],[2497,28,2019,27],[2497,30,2019,30],[2498,6,2020,8],[2498,12,2020,14],[2498,16,2020,18],[2498,17,2020,19,"_stopAutoRefresh"],[2498,33,2020,35],[2498,34,2020,36],[2498,35,2020,37],[2499,6,2021,8],[2499,10,2021,12],[2499,11,2021,13,"_debug"],[2499,17,2021,19],[2499,18,2021,20],[2499,40,2021,42],[2499,41,2021,43],[2500,6,2022,8],[2500,12,2022,14,"ticker"],[2500,18,2022,20],[2500,21,2022,23,"setInterval"],[2500,32,2022,34],[2500,33,2022,35],[2500,39,2022,41],[2500,43,2022,45],[2500,44,2022,46,"_autoRefreshTokenTick"],[2500,65,2022,67],[2500,66,2022,68],[2500,67,2022,69],[2500,69,2022,71,"constants_1"],[2500,80,2022,82],[2500,81,2022,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2500,110,2022,112],[2500,111,2022,113],[2501,6,2023,8],[2501,10,2023,12],[2501,11,2023,13,"autoRefreshTicker"],[2501,28,2023,30],[2501,31,2023,33,"ticker"],[2501,37,2023,39],[2502,6,2024,8],[2502,10,2024,12,"ticker"],[2502,16,2024,18],[2502,20,2024,22],[2502,27,2024,29,"ticker"],[2502,33,2024,35],[2502,38,2024,40],[2502,46,2024,48],[2502,50,2024,52],[2502,57,2024,59,"ticker"],[2502,63,2024,65],[2502,64,2024,66,"unref"],[2502,69,2024,71],[2502,74,2024,76],[2502,84,2024,86],[2502,86,2024,88],[2503,8,2025,12],[2504,8,2026,12],[2505,8,2027,12],[2506,8,2028,12],[2507,8,2029,12],[2508,8,2030,12],[2509,8,2031,12,"ticker"],[2509,14,2031,18],[2509,15,2031,19,"unref"],[2509,20,2031,24],[2509,21,2031,25],[2509,22,2031,26],[2510,8,2032,12],[2511,6,2033,8],[2511,7,2033,9],[2511,13,2034,13],[2511,17,2034,17],[2511,24,2034,24,"Deno"],[2511,28,2034,28],[2511,33,2034,33],[2511,44,2034,44],[2511,48,2034,48],[2511,55,2034,55,"Deno"],[2511,59,2034,59],[2511,60,2034,60,"unrefTimer"],[2511,70,2034,70],[2511,75,2034,75],[2511,85,2034,85],[2511,87,2034,87],[2512,8,2035,12],[2513,8,2036,12],[2514,8,2037,12],[2515,8,2038,12,"Deno"],[2515,12,2038,16],[2515,13,2038,17,"unrefTimer"],[2515,23,2038,27],[2515,24,2038,28,"ticker"],[2515,30,2038,34],[2515,31,2038,35],[2516,6,2039,8],[2517,6,2040,8],[2518,6,2041,8],[2519,6,2042,8],[2520,6,2043,8,"setTimeout"],[2520,16,2043,18],[2520,17,2043,19],[2520,29,2043,31],[2521,8,2044,12],[2521,14,2044,18],[2521,18,2044,22],[2521,19,2044,23,"initializePromise"],[2521,36,2044,40],[2522,8,2045,12],[2522,14,2045,18],[2522,18,2045,22],[2522,19,2045,23,"_autoRefreshTokenTick"],[2522,40,2045,44],[2522,41,2045,45],[2522,42,2045,46],[2523,6,2046,8],[2523,7,2046,9],[2523,9,2046,11],[2523,10,2046,12],[2523,11,2046,13],[2524,4,2047,4],[2525,4,2048,4],[2526,0,2049,0],[2527,0,2050,0],[2528,0,2051,0],[2529,4,2052,4],[2529,10,2052,10,"_stopAutoRefresh"],[2529,26,2052,26,"_stopAutoRefresh"],[2529,27,2052,26],[2529,29,2052,29],[2530,6,2053,8],[2530,10,2053,12],[2530,11,2053,13,"_debug"],[2530,17,2053,19],[2530,18,2053,20],[2530,39,2053,41],[2530,40,2053,42],[2531,6,2054,8],[2531,12,2054,14,"ticker"],[2531,18,2054,20],[2531,21,2054,23],[2531,25,2054,27],[2531,26,2054,28,"autoRefreshTicker"],[2531,43,2054,45],[2532,6,2055,8],[2532,10,2055,12],[2532,11,2055,13,"autoRefreshTicker"],[2532,28,2055,30],[2532,31,2055,33],[2532,35,2055,37],[2533,6,2056,8],[2533,10,2056,12,"ticker"],[2533,16,2056,18],[2533,18,2056,20],[2534,8,2057,12,"clearInterval"],[2534,21,2057,25],[2534,22,2057,26,"ticker"],[2534,28,2057,32],[2534,29,2057,33],[2535,6,2058,8],[2536,4,2059,4],[2537,4,2060,4],[2538,0,2061,0],[2539,0,2062,0],[2540,0,2063,0],[2541,0,2064,0],[2542,0,2065,0],[2543,0,2066,0],[2544,0,2067,0],[2545,0,2068,0],[2546,0,2069,0],[2547,0,2070,0],[2548,0,2071,0],[2549,0,2072,0],[2550,0,2073,0],[2551,0,2074,0],[2552,0,2075,0],[2553,0,2076,0],[2554,0,2077,0],[2555,0,2078,0],[2556,0,2079,0],[2557,0,2080,0],[2558,0,2081,0],[2559,4,2082,4],[2559,10,2082,10,"startAutoRefresh"],[2559,26,2082,26,"startAutoRefresh"],[2559,27,2082,26],[2559,29,2082,29],[2560,6,2083,8],[2560,10,2083,12],[2560,11,2083,13,"_removeVisibilityChangedCallback"],[2560,43,2083,45],[2560,44,2083,46],[2560,45,2083,47],[2561,6,2084,8],[2561,12,2084,14],[2561,16,2084,18],[2561,17,2084,19,"_startAutoRefresh"],[2561,34,2084,36],[2561,35,2084,37],[2561,36,2084,38],[2562,4,2085,4],[2563,4,2086,4],[2564,0,2087,0],[2565,0,2088,0],[2566,0,2089,0],[2567,0,2090,0],[2568,0,2091,0],[2569,0,2092,0],[2570,0,2093,0],[2571,4,2094,4],[2571,10,2094,10,"stopAutoRefresh"],[2571,25,2094,25,"stopAutoRefresh"],[2571,26,2094,25],[2571,28,2094,28],[2572,6,2095,8],[2572,10,2095,12],[2572,11,2095,13,"_removeVisibilityChangedCallback"],[2572,43,2095,45],[2572,44,2095,46],[2572,45,2095,47],[2573,6,2096,8],[2573,12,2096,14],[2573,16,2096,18],[2573,17,2096,19,"_stopAutoRefresh"],[2573,33,2096,35],[2573,34,2096,36],[2573,35,2096,37],[2574,4,2097,4],[2575,4,2098,4],[2576,0,2099,0],[2577,0,2100,0],[2578,4,2101,4],[2578,10,2101,10,"_autoRefreshTokenTick"],[2578,31,2101,31,"_autoRefreshTokenTick"],[2578,32,2101,31],[2578,34,2101,34],[2579,6,2102,8],[2579,10,2102,12],[2579,11,2102,13,"_debug"],[2579,17,2102,19],[2579,18,2102,20],[2579,44,2102,46],[2579,46,2102,48],[2579,53,2102,55],[2579,54,2102,56],[2580,6,2103,8],[2580,10,2103,12],[2581,8,2104,12],[2581,14,2104,18],[2581,18,2104,22],[2581,19,2104,23,"_acquireLock"],[2581,31,2104,35],[2581,32,2104,36],[2581,33,2104,37],[2581,35,2104,39],[2581,47,2104,51],[2582,10,2105,16],[2582,14,2105,20],[2583,12,2106,20],[2583,18,2106,26,"now"],[2583,21,2106,29],[2583,24,2106,32,"Date"],[2583,28,2106,36],[2583,29,2106,37,"now"],[2583,32,2106,40],[2583,33,2106,41],[2583,34,2106,42],[2584,12,2107,20],[2584,16,2107,24],[2585,14,2108,24],[2585,21,2108,31],[2585,27,2108,37],[2585,31,2108,41],[2585,32,2108,42,"_useSession"],[2585,43,2108,53],[2585,44,2108,54],[2585,50,2108,61,"result"],[2585,56,2108,67],[2585,60,2108,72],[2586,16,2109,28],[2586,22,2109,34],[2587,18,2109,36,"data"],[2587,22,2109,40],[2587,24,2109,42],[2588,20,2109,44,"session"],[2589,18,2109,52],[2590,16,2109,55],[2590,17,2109,56],[2590,20,2109,59,"result"],[2590,26,2109,65],[2591,16,2110,28],[2591,20,2110,32],[2591,21,2110,33,"session"],[2591,28,2110,40],[2591,32,2110,44],[2591,33,2110,45,"session"],[2591,40,2110,52],[2591,41,2110,53,"refresh_token"],[2591,54,2110,66],[2591,58,2110,70],[2591,59,2110,71,"session"],[2591,66,2110,78],[2591,67,2110,79,"expires_at"],[2591,77,2110,89],[2591,79,2110,91],[2592,18,2111,32],[2592,22,2111,36],[2592,23,2111,37,"_debug"],[2592,29,2111,43],[2592,30,2111,44],[2592,56,2111,70],[2592,58,2111,72],[2592,70,2111,84],[2592,71,2111,85],[2593,18,2112,32],[2594,16,2113,28],[2595,16,2114,28],[2596,16,2115,28],[2596,22,2115,34,"expiresInTicks"],[2596,36,2115,48],[2596,39,2115,51,"Math"],[2596,43,2115,55],[2596,44,2115,56,"floor"],[2596,49,2115,61],[2596,50,2115,62],[2596,51,2115,63,"session"],[2596,58,2115,70],[2596,59,2115,71,"expires_at"],[2596,69,2115,81],[2596,72,2115,84],[2596,76,2115,88],[2596,79,2115,91,"now"],[2596,82,2115,94],[2596,86,2115,98,"constants_1"],[2596,97,2115,109],[2596,98,2115,110,"AUTO_REFRESH_TICK_DURATION_MS"],[2596,127,2115,139],[2596,128,2115,140],[2597,16,2116,28],[2597,20,2116,32],[2597,21,2116,33,"_debug"],[2597,27,2116,39],[2597,28,2116,40],[2597,54,2116,66],[2597,56,2116,68],[2597,83,2116,95,"expiresInTicks"],[2597,97,2116,109],[2597,121,2116,133,"constants_1"],[2597,132,2116,144],[2597,133,2116,145,"AUTO_REFRESH_TICK_DURATION_MS"],[2597,162,2116,174],[2597,190,2116,202,"constants_1"],[2597,201,2116,213],[2597,202,2116,214,"AUTO_REFRESH_TICK_THRESHOLD"],[2597,229,2116,241],[2597,237,2116,249],[2597,238,2116,250],[2598,16,2117,28],[2598,20,2117,32,"expiresInTicks"],[2598,34,2117,46],[2598,38,2117,50,"constants_1"],[2598,49,2117,61],[2598,50,2117,62,"AUTO_REFRESH_TICK_THRESHOLD"],[2598,77,2117,89],[2598,79,2117,91],[2599,18,2118,32],[2599,24,2118,38],[2599,28,2118,42],[2599,29,2118,43,"_callRefreshToken"],[2599,46,2118,60],[2599,47,2118,61,"session"],[2599,54,2118,68],[2599,55,2118,69,"refresh_token"],[2599,68,2118,82],[2599,69,2118,83],[2600,16,2119,28],[2601,14,2120,24],[2601,15,2120,25],[2601,16,2120,26],[2602,12,2121,20],[2602,13,2121,21],[2602,14,2122,20],[2602,21,2122,27,"e"],[2602,22,2122,28],[2602,24,2122,30],[2603,14,2123,24,"console"],[2603,21,2123,31],[2603,22,2123,32,"error"],[2603,27,2123,37],[2603,28,2123,38],[2603,100,2123,110],[2603,102,2123,112,"e"],[2603,103,2123,113],[2603,104,2123,114],[2604,12,2124,20],[2605,10,2125,16],[2605,11,2125,17],[2605,20,2126,24],[2606,12,2127,20],[2606,16,2127,24],[2606,17,2127,25,"_debug"],[2606,23,2127,31],[2606,24,2127,32],[2606,50,2127,58],[2606,52,2127,60],[2606,57,2127,65],[2606,58,2127,66],[2607,10,2128,16],[2608,8,2129,12],[2608,9,2129,13],[2608,10,2129,14],[2609,6,2130,8],[2609,7,2130,9],[2609,8,2131,8],[2609,15,2131,15,"e"],[2609,16,2131,16],[2609,18,2131,18],[2610,8,2132,12],[2610,12,2132,16,"e"],[2610,13,2132,17],[2610,14,2132,18,"isAcquireTimeout"],[2610,30,2132,34],[2610,34,2132,38,"e"],[2610,35,2132,39],[2610,47,2132,51,"locks_1"],[2610,54,2132,58],[2610,55,2132,59,"LockAcquireTimeoutError"],[2610,78,2132,82],[2610,80,2132,84],[2611,10,2133,16],[2611,14,2133,20],[2611,15,2133,21,"_debug"],[2611,21,2133,27],[2611,22,2133,28],[2611,66,2133,72],[2611,67,2133,73],[2612,8,2134,12],[2612,9,2134,13],[2612,15,2135,17],[2613,10,2136,16],[2613,16,2136,22,"e"],[2613,17,2136,23],[2614,8,2137,12],[2615,6,2138,8],[2616,4,2139,4],[2617,4,2140,4],[2618,0,2141,0],[2619,0,2142,0],[2620,0,2143,0],[2621,0,2144,0],[2622,4,2145,4],[2622,10,2145,10,"_handleVisibilityChange"],[2622,33,2145,33,"_handleVisibilityChange"],[2622,34,2145,33],[2622,36,2145,36],[2623,6,2146,8],[2623,10,2146,12],[2623,11,2146,13,"_debug"],[2623,17,2146,19],[2623,18,2146,20],[2623,46,2146,48],[2623,47,2146,49],[2624,6,2147,8],[2624,10,2147,12],[2624,11,2147,13],[2624,12,2147,14],[2624,13,2147,15],[2624,15,2147,17,"helpers_1"],[2624,24,2147,26],[2624,25,2147,27,"isBrowser"],[2624,34,2147,36],[2624,36,2147,38],[2624,37,2147,39],[2624,41,2147,43],[2624,43,2147,45,"window"],[2624,49,2147,51],[2624,54,2147,56],[2624,58,2147,60],[2624,62,2147,64,"window"],[2624,68,2147,70],[2624,73,2147,75],[2624,78,2147,80],[2624,79,2147,81],[2624,82,2147,84],[2624,87,2147,89],[2624,88,2147,90],[2624,91,2147,93,"window"],[2624,97,2147,99],[2624,98,2147,100,"addEventListener"],[2624,114,2147,116],[2624,115,2147,117],[2624,117,2147,119],[2625,8,2148,12],[2625,12,2148,16],[2625,16,2148,20],[2625,17,2148,21,"autoRefreshToken"],[2625,33,2148,37],[2625,35,2148,39],[2626,10,2149,16],[2627,10,2150,16],[2627,14,2150,20],[2627,15,2150,21,"startAutoRefresh"],[2627,31,2150,37],[2627,32,2150,38],[2627,33,2150,39],[2628,8,2151,12],[2629,8,2152,12],[2629,15,2152,19],[2629,20,2152,24],[2630,6,2153,8],[2631,6,2154,8],[2631,10,2154,12],[2632,8,2155,12],[2632,12,2155,16],[2632,13,2155,17,"visibilityChangedCallback"],[2632,38,2155,42],[2632,41,2155,45],[2632,53,2155,57],[2632,59,2155,63],[2632,63,2155,67],[2632,64,2155,68,"_onVisibilityChanged"],[2632,84,2155,88],[2632,85,2155,89],[2632,90,2155,94],[2632,91,2155,95],[2633,8,2156,12,"window"],[2633,14,2156,18],[2633,19,2156,23],[2633,23,2156,27],[2633,27,2156,31,"window"],[2633,33,2156,37],[2633,38,2156,42],[2633,43,2156,47],[2633,44,2156,48],[2633,47,2156,51],[2633,52,2156,56],[2633,53,2156,57],[2633,56,2156,60,"window"],[2633,62,2156,66],[2633,63,2156,67,"addEventListener"],[2633,79,2156,83],[2633,80,2156,84],[2633,98,2156,102],[2633,100,2156,104],[2633,104,2156,108],[2633,105,2156,109,"visibilityChangedCallback"],[2633,130,2156,134],[2633,131,2156,135],[2634,8,2157,12],[2635,8,2158,12],[2636,8,2159,12],[2636,14,2159,18],[2636,18,2159,22],[2636,19,2159,23,"_onVisibilityChanged"],[2636,39,2159,43],[2636,40,2159,44],[2636,44,2159,48],[2636,45,2159,49],[2636,46,2159,50],[2636,47,2159,51],[2637,6,2160,8],[2637,7,2160,9],[2637,8,2161,8],[2637,15,2161,15,"error"],[2637,20,2161,20],[2637,22,2161,22],[2638,8,2162,12,"console"],[2638,15,2162,19],[2638,16,2162,20,"error"],[2638,21,2162,25],[2638,22,2162,26],[2638,47,2162,51],[2638,49,2162,53,"error"],[2638,54,2162,58],[2638,55,2162,59],[2639,6,2163,8],[2640,4,2164,4],[2641,4,2165,4],[2642,0,2166,0],[2643,0,2167,0],[2644,4,2168,4],[2644,10,2168,10,"_onVisibilityChanged"],[2644,30,2168,30,"_onVisibilityChanged"],[2644,31,2168,31,"calledFromInitialize"],[2644,51,2168,51],[2644,53,2168,53],[2645,6,2169,8],[2645,12,2169,14,"methodName"],[2645,22,2169,24],[2645,25,2169,27],[2645,50,2169,52,"calledFromInitialize"],[2645,70,2169,72],[2645,73,2169,75],[2646,6,2170,8],[2646,10,2170,12],[2646,11,2170,13,"_debug"],[2646,17,2170,19],[2646,18,2170,20,"methodName"],[2646,28,2170,30],[2646,30,2170,32],[2646,47,2170,49],[2646,49,2170,51,"document"],[2646,57,2170,59],[2646,58,2170,60,"visibilityState"],[2646,73,2170,75],[2646,74,2170,76],[2647,6,2171,8],[2647,10,2171,12,"document"],[2647,18,2171,20],[2647,19,2171,21,"visibilityState"],[2647,34,2171,36],[2647,39,2171,41],[2647,48,2171,50],[2647,50,2171,52],[2648,8,2172,12],[2648,12,2172,16],[2648,16,2172,20],[2648,17,2172,21,"autoRefreshToken"],[2648,33,2172,37],[2648,35,2172,39],[2649,10,2173,16],[2650,10,2174,16],[2651,10,2175,16],[2651,14,2175,20],[2651,15,2175,21,"_startAutoRefresh"],[2651,32,2175,38],[2651,33,2175,39],[2651,34,2175,40],[2652,8,2176,12],[2653,8,2177,12],[2653,12,2177,16],[2653,13,2177,17,"calledFromInitialize"],[2653,33,2177,37],[2653,35,2177,39],[2654,10,2178,16],[2655,10,2179,16],[2656,10,2180,16],[2657,10,2181,16],[2658,10,2182,16],[2658,16,2182,22],[2658,20,2182,26],[2658,21,2182,27,"initializePromise"],[2658,38,2182,44],[2659,10,2183,16],[2659,16,2183,22],[2659,20,2183,26],[2659,21,2183,27,"_acquireLock"],[2659,33,2183,39],[2659,34,2183,40],[2659,35,2183,41],[2659,36,2183,42],[2659,38,2183,44],[2659,50,2183,56],[2660,12,2184,20],[2660,16,2184,24,"document"],[2660,24,2184,32],[2660,25,2184,33,"visibilityState"],[2660,40,2184,48],[2660,45,2184,53],[2660,54,2184,62],[2660,56,2184,64],[2661,14,2185,24],[2661,18,2185,28],[2661,19,2185,29,"_debug"],[2661,25,2185,35],[2661,26,2185,36,"methodName"],[2661,36,2185,46],[2661,38,2185,48],[2661,144,2185,154],[2661,145,2185,155],[2662,14,2186,24],[2663,14,2187,24],[2664,12,2188,20],[2665,12,2189,20],[2666,12,2190,20],[2666,18,2190,26],[2666,22,2190,30],[2666,23,2190,31,"_recoverAndRefresh"],[2666,41,2190,49],[2666,42,2190,50],[2666,43,2190,51],[2667,10,2191,16],[2667,11,2191,17],[2667,12,2191,18],[2668,8,2192,12],[2669,6,2193,8],[2669,7,2193,9],[2669,13,2194,13],[2669,17,2194,17,"document"],[2669,25,2194,25],[2669,26,2194,26,"visibilityState"],[2669,41,2194,41],[2669,46,2194,46],[2669,54,2194,54],[2669,56,2194,56],[2670,8,2195,12],[2670,12,2195,16],[2670,16,2195,20],[2670,17,2195,21,"autoRefreshToken"],[2670,33,2195,37],[2670,35,2195,39],[2671,10,2196,16],[2671,14,2196,20],[2671,15,2196,21,"_stopAutoRefresh"],[2671,31,2196,37],[2671,32,2196,38],[2671,33,2196,39],[2672,8,2197,12],[2673,6,2198,8],[2674,4,2199,4],[2675,4,2200,4],[2676,0,2201,0],[2677,0,2202,0],[2678,0,2203,0],[2679,0,2204,0],[2680,0,2205,0],[2681,4,2206,4],[2681,10,2206,10,"_getUrlForProvider"],[2681,28,2206,28,"_getUrlForProvider"],[2681,29,2206,29,"url"],[2681,32,2206,32],[2681,34,2206,34,"provider"],[2681,42,2206,42],[2681,44,2206,44,"options"],[2681,51,2206,51],[2681,53,2206,53],[2682,6,2207,8],[2682,12,2207,14,"urlParams"],[2682,21,2207,23],[2682,24,2207,26],[2682,25,2207,27],[2682,37,2207,39,"encodeURIComponent"],[2682,55,2207,57],[2682,56,2207,58,"provider"],[2682,64,2207,66],[2682,65,2207,67],[2682,67,2207,69],[2682,68,2207,70],[2683,6,2208,8],[2683,10,2208,12,"options"],[2683,17,2208,19],[2683,22,2208,24],[2683,26,2208,28],[2683,30,2208,32,"options"],[2683,37,2208,39],[2683,42,2208,44],[2683,47,2208,49],[2683,48,2208,50],[2683,51,2208,53],[2683,56,2208,58],[2683,57,2208,59],[2683,60,2208,62,"options"],[2683,67,2208,69],[2683,68,2208,70,"redirectTo"],[2683,78,2208,80],[2683,80,2208,82],[2684,8,2209,12,"urlParams"],[2684,17,2209,21],[2684,18,2209,22,"push"],[2684,22,2209,26],[2684,23,2209,27],[2684,38,2209,42,"encodeURIComponent"],[2684,56,2209,60],[2684,57,2209,61,"options"],[2684,64,2209,68],[2684,65,2209,69,"redirectTo"],[2684,75,2209,79],[2684,76,2209,80],[2684,78,2209,82],[2684,79,2209,83],[2685,6,2210,8],[2686,6,2211,8],[2686,10,2211,12,"options"],[2686,17,2211,19],[2686,22,2211,24],[2686,26,2211,28],[2686,30,2211,32,"options"],[2686,37,2211,39],[2686,42,2211,44],[2686,47,2211,49],[2686,48,2211,50],[2686,51,2211,53],[2686,56,2211,58],[2686,57,2211,59],[2686,60,2211,62,"options"],[2686,67,2211,69],[2686,68,2211,70,"scopes"],[2686,74,2211,76],[2686,76,2211,78],[2687,8,2212,12,"urlParams"],[2687,17,2212,21],[2687,18,2212,22,"push"],[2687,22,2212,26],[2687,23,2212,27],[2687,33,2212,37,"encodeURIComponent"],[2687,51,2212,55],[2687,52,2212,56,"options"],[2687,59,2212,63],[2687,60,2212,64,"scopes"],[2687,66,2212,70],[2687,67,2212,71],[2687,69,2212,73],[2687,70,2212,74],[2688,6,2213,8],[2689,6,2214,8],[2689,10,2214,12],[2689,14,2214,16],[2689,15,2214,17,"flowType"],[2689,23,2214,25],[2689,28,2214,30],[2689,34,2214,36],[2689,36,2214,38],[2690,8,2215,12],[2690,14,2215,18],[2690,15,2215,19,"codeChallenge"],[2690,28,2215,32],[2690,30,2215,34,"codeChallengeMethod"],[2690,49,2215,53],[2690,50,2215,54],[2690,53,2215,57],[2690,59,2215,63],[2690,60,2215,64],[2690,61,2215,65],[2690,63,2215,67,"helpers_1"],[2690,72,2215,76],[2690,73,2215,77,"getCodeChallengeAndMethod"],[2690,98,2215,102],[2690,100,2215,104],[2690,104,2215,108],[2690,105,2215,109,"storage"],[2690,112,2215,116],[2690,114,2215,118],[2690,118,2215,122],[2690,119,2215,123,"storageKey"],[2690,129,2215,133],[2690,130,2215,134],[2691,8,2216,12],[2691,14,2216,18,"flowParams"],[2691,24,2216,28],[2691,27,2216,31],[2691,31,2216,35,"URLSearchParams"],[2691,46,2216,50],[2691,47,2216,51],[2692,10,2217,16,"code_challenge"],[2692,24,2217,30],[2692,26,2217,32],[2692,29,2217,35,"encodeURIComponent"],[2692,47,2217,53],[2692,48,2217,54,"codeChallenge"],[2692,61,2217,67],[2692,62,2217,68],[2692,64,2217,70],[2693,10,2218,16,"code_challenge_method"],[2693,31,2218,37],[2693,33,2218,39],[2693,36,2218,42,"encodeURIComponent"],[2693,54,2218,60],[2693,55,2218,61,"codeChallengeMethod"],[2693,74,2218,80],[2693,75,2218,81],[2694,8,2219,12],[2694,9,2219,13],[2694,10,2219,14],[2695,8,2220,12,"urlParams"],[2695,17,2220,21],[2695,18,2220,22,"push"],[2695,22,2220,26],[2695,23,2220,27,"flowParams"],[2695,33,2220,37],[2695,34,2220,38,"toString"],[2695,42,2220,46],[2695,43,2220,47],[2695,44,2220,48],[2695,45,2220,49],[2696,6,2221,8],[2697,6,2222,8],[2697,10,2222,12,"options"],[2697,17,2222,19],[2697,22,2222,24],[2697,26,2222,28],[2697,30,2222,32,"options"],[2697,37,2222,39],[2697,42,2222,44],[2697,47,2222,49],[2697,48,2222,50],[2697,51,2222,53],[2697,56,2222,58],[2697,57,2222,59],[2697,60,2222,62,"options"],[2697,67,2222,69],[2697,68,2222,70,"queryParams"],[2697,79,2222,81],[2697,81,2222,83],[2698,8,2223,12],[2698,14,2223,18,"query"],[2698,19,2223,23],[2698,22,2223,26],[2698,26,2223,30,"URLSearchParams"],[2698,41,2223,45],[2698,42,2223,46,"options"],[2698,49,2223,53],[2698,50,2223,54,"queryParams"],[2698,61,2223,65],[2698,62,2223,66],[2699,8,2224,12,"urlParams"],[2699,17,2224,21],[2699,18,2224,22,"push"],[2699,22,2224,26],[2699,23,2224,27,"query"],[2699,28,2224,32],[2699,29,2224,33,"toString"],[2699,37,2224,41],[2699,38,2224,42],[2699,39,2224,43],[2699,40,2224,44],[2700,6,2225,8],[2701,6,2226,8],[2701,10,2226,12,"options"],[2701,17,2226,19],[2701,22,2226,24],[2701,26,2226,28],[2701,30,2226,32,"options"],[2701,37,2226,39],[2701,42,2226,44],[2701,47,2226,49],[2701,48,2226,50],[2701,51,2226,53],[2701,56,2226,58],[2701,57,2226,59],[2701,60,2226,62,"options"],[2701,67,2226,69],[2701,68,2226,70,"skipBrowserRedirect"],[2701,87,2226,89],[2701,89,2226,91],[2702,8,2227,12,"urlParams"],[2702,17,2227,21],[2702,18,2227,22,"push"],[2702,22,2227,26],[2702,23,2227,27],[2702,45,2227,49,"options"],[2702,52,2227,56],[2702,53,2227,57,"skipBrowserRedirect"],[2702,72,2227,76],[2702,74,2227,78],[2702,75,2227,79],[2703,6,2228,8],[2704,6,2229,8],[2704,13,2229,15],[2704,16,2229,18,"url"],[2704,19,2229,21],[2704,23,2229,25,"urlParams"],[2704,32,2229,34],[2704,33,2229,35,"join"],[2704,37,2229,39],[2704,38,2229,40],[2704,41,2229,43],[2704,42,2229,44],[2704,44,2229,46],[2705,4,2230,4],[2706,4,2231,4],[2706,10,2231,10,"_unenroll"],[2706,19,2231,19,"_unenroll"],[2706,20,2231,20,"params"],[2706,26,2231,26],[2706,28,2231,28],[2707,6,2232,8],[2707,10,2232,12],[2708,8,2233,12],[2708,15,2233,19],[2708,21,2233,25],[2708,25,2233,29],[2708,26,2233,30,"_useSession"],[2708,37,2233,41],[2708,38,2233,42],[2708,44,2233,49,"result"],[2708,50,2233,55],[2708,54,2233,60],[2709,10,2234,16],[2709,14,2234,20,"_a"],[2709,16,2234,22],[2710,10,2235,16],[2710,16,2235,22],[2711,12,2235,24,"data"],[2711,16,2235,28],[2711,18,2235,30,"sessionData"],[2711,29,2235,41],[2712,12,2235,43,"error"],[2712,17,2235,48],[2712,19,2235,50,"sessionError"],[2713,10,2235,63],[2713,11,2235,64],[2713,14,2235,67,"result"],[2713,20,2235,73],[2714,10,2236,16],[2714,14,2236,20,"sessionError"],[2714,26,2236,32],[2714,28,2236,34],[2715,12,2237,20],[2715,19,2237,27],[2716,14,2237,29,"data"],[2716,18,2237,33],[2716,20,2237,35],[2716,24,2237,39],[2717,14,2237,41,"error"],[2717,19,2237,46],[2717,21,2237,48,"sessionError"],[2718,12,2237,61],[2718,13,2237,62],[2719,10,2238,16],[2720,10,2239,16],[2720,17,2239,23],[2720,23,2239,29],[2720,24,2239,30],[2720,25,2239,31],[2720,27,2239,33,"fetch_1"],[2720,34,2239,40],[2720,35,2239,41,"_request"],[2720,43,2239,49],[2720,45,2239,51],[2720,49,2239,55],[2720,50,2239,56,"fetch"],[2720,55,2239,61],[2720,57,2239,63],[2720,65,2239,71],[2720,67,2239,73],[2720,70,2239,76],[2720,74,2239,80],[2720,75,2239,81,"url"],[2720,78,2239,84],[2720,90,2239,96,"params"],[2720,96,2239,102],[2720,97,2239,103,"factorId"],[2720,105,2239,111],[2720,107,2239,113],[2720,109,2239,115],[2721,12,2240,20,"headers"],[2721,19,2240,27],[2721,21,2240,29],[2721,25,2240,33],[2721,26,2240,34,"headers"],[2721,33,2240,41],[2722,12,2241,20,"jwt"],[2722,15,2241,23],[2722,17,2241,25],[2722,18,2241,26,"_a"],[2722,20,2241,28],[2722,23,2241,31,"sessionData"],[2722,34,2241,42],[2722,39,2241,47],[2722,43,2241,51],[2722,47,2241,55,"sessionData"],[2722,58,2241,66],[2722,63,2241,71],[2722,68,2241,76],[2722,69,2241,77],[2722,72,2241,80],[2722,77,2241,85],[2722,78,2241,86],[2722,81,2241,89,"sessionData"],[2722,92,2241,100],[2722,93,2241,101,"session"],[2722,100,2241,108],[2722,106,2241,114],[2722,110,2241,118],[2722,114,2241,122,"_a"],[2722,116,2241,124],[2722,121,2241,129],[2722,126,2241,134],[2722,127,2241,135],[2722,130,2241,138],[2722,135,2241,143],[2722,136,2241,144],[2722,139,2241,147,"_a"],[2722,141,2241,149],[2722,142,2241,150,"access_token"],[2723,10,2242,16],[2723,11,2242,17],[2723,12,2242,18],[2724,8,2243,12],[2724,9,2243,13],[2724,10,2243,14],[2725,6,2244,8],[2725,7,2244,9],[2725,8,2245,8],[2725,15,2245,15,"error"],[2725,20,2245,20],[2725,22,2245,22],[2726,8,2246,12],[2726,12,2246,16],[2726,13,2246,17],[2726,14,2246,18],[2726,16,2246,20,"errors_1"],[2726,24,2246,28],[2726,25,2246,29,"isAuthError"],[2726,36,2246,40],[2726,38,2246,42,"error"],[2726,43,2246,47],[2726,44,2246,48],[2726,46,2246,50],[2727,10,2247,16],[2727,17,2247,23],[2728,12,2247,25,"data"],[2728,16,2247,29],[2728,18,2247,31],[2728,22,2247,35],[2729,12,2247,37,"error"],[2730,10,2247,43],[2730,11,2247,44],[2731,8,2248,12],[2732,8,2249,12],[2732,14,2249,18,"error"],[2732,19,2249,23],[2733,6,2250,8],[2734,4,2251,4],[2735,4,2252,4],[2735,10,2252,10,"_enroll"],[2735,17,2252,17,"_enroll"],[2735,18,2252,18,"params"],[2735,24,2252,24],[2735,26,2252,26],[2736,6,2253,8],[2736,10,2253,12],[2737,8,2254,12],[2737,15,2254,19],[2737,21,2254,25],[2737,25,2254,29],[2737,26,2254,30,"_useSession"],[2737,37,2254,41],[2737,38,2254,42],[2737,44,2254,49,"result"],[2737,50,2254,55],[2737,54,2254,60],[2738,10,2255,16],[2738,14,2255,20,"_a"],[2738,16,2255,22],[2738,18,2255,24,"_b"],[2738,20,2255,26],[2739,10,2256,16],[2739,16,2256,22],[2740,12,2256,24,"data"],[2740,16,2256,28],[2740,18,2256,30,"sessionData"],[2740,29,2256,41],[2741,12,2256,43,"error"],[2741,17,2256,48],[2741,19,2256,50,"sessionError"],[2742,10,2256,63],[2742,11,2256,64],[2742,14,2256,67,"result"],[2742,20,2256,73],[2743,10,2257,16],[2743,14,2257,20,"sessionError"],[2743,26,2257,32],[2743,28,2257,34],[2744,12,2258,20],[2744,19,2258,27],[2745,14,2258,29,"data"],[2745,18,2258,33],[2745,20,2258,35],[2745,24,2258,39],[2746,14,2258,41,"error"],[2746,19,2258,46],[2746,21,2258,48,"sessionError"],[2747,12,2258,61],[2747,13,2258,62],[2748,10,2259,16],[2749,10,2260,16],[2749,16,2260,22,"body"],[2749,20,2260,26],[2749,23,2260,29,"Object"],[2749,29,2260,35],[2749,30,2260,36,"assign"],[2749,36,2260,42],[2749,37,2260,43],[2750,12,2260,45,"friendly_name"],[2750,25,2260,58],[2750,27,2260,60,"params"],[2750,33,2260,66],[2750,34,2260,67,"friendlyName"],[2750,46,2260,79],[2751,12,2260,81,"factor_type"],[2751,23,2260,92],[2751,25,2260,94,"params"],[2751,31,2260,100],[2751,32,2260,101,"factorType"],[2752,10,2260,112],[2752,11,2260,113],[2752,13,2260,116,"params"],[2752,19,2260,122],[2752,20,2260,123,"factorType"],[2752,30,2260,133],[2752,35,2260,138],[2752,42,2260,145],[2752,45,2261,22],[2753,12,2261,24,"phone"],[2753,17,2261,29],[2753,19,2261,31,"params"],[2753,25,2261,37],[2753,26,2261,38,"phone"],[2754,10,2261,44],[2754,11,2261,45],[2754,14,2262,22,"params"],[2754,20,2262,28],[2754,21,2262,29,"factorType"],[2754,31,2262,39],[2754,36,2262,44],[2754,42,2262,50],[2754,45,2263,26],[2755,12,2263,28,"issuer"],[2755,18,2263,34],[2755,20,2263,36,"params"],[2755,26,2263,42],[2755,27,2263,43,"issuer"],[2756,10,2263,50],[2756,11,2263,51],[2756,14,2264,26],[2756,15,2264,27],[2756,16,2264,29],[2756,17,2264,30],[2757,10,2265,16],[2757,16,2265,22],[2758,12,2265,24,"data"],[2758,16,2265,28],[2759,12,2265,30,"error"],[2760,10,2265,36],[2760,11,2265,37],[2760,14,2265,41],[2760,20,2265,47],[2760,21,2265,48],[2760,22,2265,49],[2760,24,2265,51,"fetch_1"],[2760,31,2265,58],[2760,32,2265,59,"_request"],[2760,40,2265,67],[2760,42,2265,69],[2760,46,2265,73],[2760,47,2265,74,"fetch"],[2760,52,2265,79],[2760,54,2265,81],[2760,60,2265,87],[2760,62,2265,89],[2760,65,2265,92],[2760,69,2265,96],[2760,70,2265,97,"url"],[2760,73,2265,100],[2760,83,2265,110],[2760,85,2265,112],[2761,12,2266,20,"body"],[2761,16,2266,24],[2762,12,2267,20,"headers"],[2762,19,2267,27],[2762,21,2267,29],[2762,25,2267,33],[2762,26,2267,34,"headers"],[2762,33,2267,41],[2763,12,2268,20,"jwt"],[2763,15,2268,23],[2763,17,2268,25],[2763,18,2268,26,"_a"],[2763,20,2268,28],[2763,23,2268,31,"sessionData"],[2763,34,2268,42],[2763,39,2268,47],[2763,43,2268,51],[2763,47,2268,55,"sessionData"],[2763,58,2268,66],[2763,63,2268,71],[2763,68,2268,76],[2763,69,2268,77],[2763,72,2268,80],[2763,77,2268,85],[2763,78,2268,86],[2763,81,2268,89,"sessionData"],[2763,92,2268,100],[2763,93,2268,101,"session"],[2763,100,2268,108],[2763,106,2268,114],[2763,110,2268,118],[2763,114,2268,122,"_a"],[2763,116,2268,124],[2763,121,2268,129],[2763,126,2268,134],[2763,127,2268,135],[2763,130,2268,138],[2763,135,2268,143],[2763,136,2268,144],[2763,139,2268,147,"_a"],[2763,141,2268,149],[2763,142,2268,150,"access_token"],[2764,10,2269,16],[2764,11,2269,17],[2764,12,2269,19],[2765,10,2270,16],[2765,14,2270,20,"error"],[2765,19,2270,25],[2765,21,2270,27],[2766,12,2271,20],[2766,19,2271,27],[2767,14,2271,29,"data"],[2767,18,2271,33],[2767,20,2271,35],[2767,24,2271,39],[2768,14,2271,41,"error"],[2769,12,2271,47],[2769,13,2271,48],[2770,10,2272,16],[2771,10,2273,16],[2771,14,2273,20,"params"],[2771,20,2273,26],[2771,21,2273,27,"factorType"],[2771,31,2273,37],[2771,36,2273,42],[2771,42,2273,48],[2771,46,2273,52,"data"],[2771,50,2273,56],[2771,51,2273,57,"type"],[2771,55,2273,61],[2771,60,2273,66],[2771,66,2273,72],[2771,71,2273,77],[2771,72,2273,78,"_b"],[2771,74,2273,80],[2771,77,2273,83,"data"],[2771,81,2273,87],[2771,86,2273,92],[2771,90,2273,96],[2771,94,2273,100,"data"],[2771,98,2273,104],[2771,103,2273,109],[2771,108,2273,114],[2771,109,2273,115],[2771,112,2273,118],[2771,117,2273,123],[2771,118,2273,124],[2771,121,2273,127,"data"],[2771,125,2273,131],[2771,126,2273,132,"totp"],[2771,130,2273,136],[2771,136,2273,142],[2771,140,2273,146],[2771,144,2273,150,"_b"],[2771,146,2273,152],[2771,151,2273,157],[2771,156,2273,162],[2771,157,2273,163],[2771,160,2273,166],[2771,165,2273,171],[2771,166,2273,172],[2771,169,2273,175,"_b"],[2771,171,2273,177],[2771,172,2273,178,"qr_code"],[2771,179,2273,185],[2771,180,2273,186],[2771,182,2273,188],[2772,12,2274,20,"data"],[2772,16,2274,24],[2772,17,2274,25,"totp"],[2772,21,2274,29],[2772,22,2274,30,"qr_code"],[2772,29,2274,37],[2772,32,2274,40],[2772,60,2274,68,"data"],[2772,64,2274,72],[2772,65,2274,73,"totp"],[2772,69,2274,77],[2772,70,2274,78,"qr_code"],[2772,77,2274,85],[2772,79,2274,87],[2773,10,2275,16],[2774,10,2276,16],[2774,17,2276,23],[2775,12,2276,25,"data"],[2775,16,2276,29],[2776,12,2276,31,"error"],[2776,17,2276,36],[2776,19,2276,38],[2777,10,2276,43],[2777,11,2276,44],[2778,8,2277,12],[2778,9,2277,13],[2778,10,2277,14],[2779,6,2278,8],[2779,7,2278,9],[2779,8,2279,8],[2779,15,2279,15,"error"],[2779,20,2279,20],[2779,22,2279,22],[2780,8,2280,12],[2780,12,2280,16],[2780,13,2280,17],[2780,14,2280,18],[2780,16,2280,20,"errors_1"],[2780,24,2280,28],[2780,25,2280,29,"isAuthError"],[2780,36,2280,40],[2780,38,2280,42,"error"],[2780,43,2280,47],[2780,44,2280,48],[2780,46,2280,50],[2781,10,2281,16],[2781,17,2281,23],[2782,12,2281,25,"data"],[2782,16,2281,29],[2782,18,2281,31],[2782,22,2281,35],[2783,12,2281,37,"error"],[2784,10,2281,43],[2784,11,2281,44],[2785,8,2282,12],[2786,8,2283,12],[2786,14,2283,18,"error"],[2786,19,2283,23],[2787,6,2284,8],[2788,4,2285,4],[2789,4,2286,4],[2789,10,2286,10,"_verify"],[2789,17,2286,17,"_verify"],[2789,18,2286,18,"params"],[2789,24,2286,24],[2789,26,2286,26],[2790,6,2287,8],[2790,13,2287,15],[2790,17,2287,19],[2790,18,2287,20,"_acquireLock"],[2790,30,2287,32],[2790,31,2287,33],[2790,32,2287,34],[2790,33,2287,35],[2790,35,2287,37],[2790,47,2287,49],[2791,8,2288,12],[2791,12,2288,16],[2792,10,2289,16],[2792,17,2289,23],[2792,23,2289,29],[2792,27,2289,33],[2792,28,2289,34,"_useSession"],[2792,39,2289,45],[2792,40,2289,46],[2792,46,2289,53,"result"],[2792,52,2289,59],[2792,56,2289,64],[2793,12,2290,20],[2793,16,2290,24,"_a"],[2793,18,2290,26],[2794,12,2291,20],[2794,18,2291,26],[2795,14,2291,28,"data"],[2795,18,2291,32],[2795,20,2291,34,"sessionData"],[2795,31,2291,45],[2796,14,2291,47,"error"],[2796,19,2291,52],[2796,21,2291,54,"sessionError"],[2797,12,2291,67],[2797,13,2291,68],[2797,16,2291,71,"result"],[2797,22,2291,77],[2798,12,2292,20],[2798,16,2292,24,"sessionError"],[2798,28,2292,36],[2798,30,2292,38],[2799,14,2293,24],[2799,21,2293,31],[2800,16,2293,33,"data"],[2800,20,2293,37],[2800,22,2293,39],[2800,26,2293,43],[2801,16,2293,45,"error"],[2801,21,2293,50],[2801,23,2293,52,"sessionError"],[2802,14,2293,65],[2802,15,2293,66],[2803,12,2294,20],[2804,12,2295,20],[2804,18,2295,26,"body"],[2804,22,2295,30],[2804,25,2295,33,"Object"],[2804,31,2295,39],[2804,32,2295,40,"assign"],[2804,38,2295,46],[2804,39,2295,47],[2805,14,2295,49,"challenge_id"],[2805,26,2295,61],[2805,28,2295,63,"params"],[2805,34,2295,69],[2805,35,2295,70,"challengeId"],[2806,12,2295,82],[2806,13,2295,83],[2806,15,2295,86],[2806,25,2295,96],[2806,29,2295,100,"params"],[2806,35,2295,106],[2806,38,2296,26],[2807,14,2297,28,"webauthn"],[2807,22,2297,36],[2807,24,2297,38,"Object"],[2807,30,2297,44],[2807,31,2297,45,"assign"],[2807,37,2297,51],[2807,38,2297,52,"Object"],[2807,44,2297,58],[2807,45,2297,59,"assign"],[2807,51,2297,65],[2807,52,2297,66],[2807,53,2297,67],[2807,54,2297,68],[2807,56,2297,70,"params"],[2807,62,2297,76],[2807,63,2297,77,"webauthn"],[2807,71,2297,85],[2807,72,2297,86],[2807,74,2297,88],[2808,16,2297,90,"credential_response"],[2808,35,2297,109],[2808,37,2297,111,"params"],[2808,43,2297,117],[2808,44,2297,118,"webauthn"],[2808,52,2297,126],[2808,53,2297,127,"type"],[2808,57,2297,131],[2808,62,2297,136],[2808,70,2297,144],[2808,73,2298,38],[2808,74,2298,39],[2808,75,2298,40],[2808,77,2298,42,"webauthn_1"],[2808,87,2298,52],[2808,88,2298,53,"serializeCredentialCreationResponse"],[2808,123,2298,88],[2808,125,2298,90,"params"],[2808,131,2298,96],[2808,132,2298,97,"webauthn"],[2808,140,2298,105],[2808,141,2298,106,"credential_response"],[2808,160,2298,125],[2808,161,2298,126],[2808,164,2299,38],[2808,165,2299,39],[2808,166,2299,40],[2808,168,2299,42,"webauthn_1"],[2808,178,2299,52],[2808,179,2299,53,"serializeCredentialRequestResponse"],[2808,213,2299,87],[2808,215,2299,89,"params"],[2808,221,2299,95],[2808,222,2299,96,"webauthn"],[2808,230,2299,104],[2808,231,2299,105,"credential_response"],[2808,250,2299,124],[2809,14,2299,126],[2809,15,2299,127],[2810,12,2300,24],[2810,13,2300,25],[2810,16,2301,26],[2811,14,2301,28,"code"],[2811,18,2301,32],[2811,20,2301,34,"params"],[2811,26,2301,40],[2811,27,2301,41,"code"],[2812,12,2301,46],[2812,13,2301,48],[2812,14,2301,49],[2813,12,2302,20],[2813,18,2302,26],[2814,14,2302,28,"data"],[2814,18,2302,32],[2815,14,2302,34,"error"],[2816,12,2302,40],[2816,13,2302,41],[2816,16,2302,44],[2816,22,2302,50],[2816,23,2302,51],[2816,24,2302,52],[2816,26,2302,54,"fetch_1"],[2816,33,2302,61],[2816,34,2302,62,"_request"],[2816,42,2302,70],[2816,44,2302,72],[2816,48,2302,76],[2816,49,2302,77,"fetch"],[2816,54,2302,82],[2816,56,2302,84],[2816,62,2302,90],[2816,64,2302,92],[2816,67,2302,95],[2816,71,2302,99],[2816,72,2302,100,"url"],[2816,75,2302,103],[2816,87,2302,115,"params"],[2816,93,2302,121],[2816,94,2302,122,"factorId"],[2816,102,2302,130],[2816,111,2302,139],[2816,113,2302,141],[2817,14,2303,24,"body"],[2817,18,2303,28],[2818,14,2304,24,"headers"],[2818,21,2304,31],[2818,23,2304,33],[2818,27,2304,37],[2818,28,2304,38,"headers"],[2818,35,2304,45],[2819,14,2305,24,"jwt"],[2819,17,2305,27],[2819,19,2305,29],[2819,20,2305,30,"_a"],[2819,22,2305,32],[2819,25,2305,35,"sessionData"],[2819,36,2305,46],[2819,41,2305,51],[2819,45,2305,55],[2819,49,2305,59,"sessionData"],[2819,60,2305,70],[2819,65,2305,75],[2819,70,2305,80],[2819,71,2305,81],[2819,74,2305,84],[2819,79,2305,89],[2819,80,2305,90],[2819,83,2305,93,"sessionData"],[2819,94,2305,104],[2819,95,2305,105,"session"],[2819,102,2305,112],[2819,108,2305,118],[2819,112,2305,122],[2819,116,2305,126,"_a"],[2819,118,2305,128],[2819,123,2305,133],[2819,128,2305,138],[2819,129,2305,139],[2819,132,2305,142],[2819,137,2305,147],[2819,138,2305,148],[2819,141,2305,151,"_a"],[2819,143,2305,153],[2819,144,2305,154,"access_token"],[2820,12,2306,20],[2820,13,2306,21],[2820,14,2306,22],[2821,12,2307,20],[2821,16,2307,24,"error"],[2821,21,2307,29],[2821,23,2307,31],[2822,14,2308,24],[2822,21,2308,31],[2823,16,2308,33,"data"],[2823,20,2308,37],[2823,22,2308,39],[2823,26,2308,43],[2824,16,2308,45,"error"],[2825,14,2308,51],[2825,15,2308,52],[2826,12,2309,20],[2827,12,2310,20],[2827,18,2310,26],[2827,22,2310,30],[2827,23,2310,31,"_saveSession"],[2827,35,2310,43],[2827,36,2310,44,"Object"],[2827,42,2310,50],[2827,43,2310,51,"assign"],[2827,49,2310,57],[2827,50,2310,58],[2828,14,2310,60,"expires_at"],[2828,24,2310,70],[2828,26,2310,72,"Math"],[2828,30,2310,76],[2828,31,2310,77,"round"],[2828,36,2310,82],[2828,37,2310,83,"Date"],[2828,41,2310,87],[2828,42,2310,88,"now"],[2828,45,2310,91],[2828,46,2310,92],[2828,47,2310,93],[2828,50,2310,96],[2828,54,2310,100],[2828,55,2310,101],[2828,58,2310,104,"data"],[2828,62,2310,108],[2828,63,2310,109,"expires_in"],[2829,12,2310,120],[2829,13,2310,121],[2829,15,2310,123,"data"],[2829,19,2310,127],[2829,20,2310,128],[2829,21,2310,129],[2830,12,2311,20],[2830,18,2311,26],[2830,22,2311,30],[2830,23,2311,31,"_notifyAllSubscribers"],[2830,44,2311,52],[2830,45,2311,53],[2830,69,2311,77],[2830,71,2311,79,"data"],[2830,75,2311,83],[2830,76,2311,84],[2831,12,2312,20],[2831,19,2312,27],[2832,14,2312,29,"data"],[2832,18,2312,33],[2833,14,2312,35,"error"],[2834,12,2312,41],[2834,13,2312,42],[2835,10,2313,16],[2835,11,2313,17],[2835,12,2313,18],[2836,8,2314,12],[2836,9,2314,13],[2836,10,2315,12],[2836,17,2315,19,"error"],[2836,22,2315,24],[2836,24,2315,26],[2837,10,2316,16],[2837,14,2316,20],[2837,15,2316,21],[2837,16,2316,22],[2837,18,2316,24,"errors_1"],[2837,26,2316,32],[2837,27,2316,33,"isAuthError"],[2837,38,2316,44],[2837,40,2316,46,"error"],[2837,45,2316,51],[2837,46,2316,52],[2837,48,2316,54],[2838,12,2317,20],[2838,19,2317,27],[2839,14,2317,29,"data"],[2839,18,2317,33],[2839,20,2317,35],[2839,24,2317,39],[2840,14,2317,41,"error"],[2841,12,2317,47],[2841,13,2317,48],[2842,10,2318,16],[2843,10,2319,16],[2843,16,2319,22,"error"],[2843,21,2319,27],[2844,8,2320,12],[2845,6,2321,8],[2845,7,2321,9],[2845,8,2321,10],[2846,4,2322,4],[2847,4,2323,4],[2847,10,2323,10,"_challenge"],[2847,20,2323,20,"_challenge"],[2847,21,2323,21,"params"],[2847,27,2323,27],[2847,29,2323,29],[2848,6,2324,8],[2848,13,2324,15],[2848,17,2324,19],[2848,18,2324,20,"_acquireLock"],[2848,30,2324,32],[2848,31,2324,33],[2848,32,2324,34],[2848,33,2324,35],[2848,35,2324,37],[2848,47,2324,49],[2849,8,2325,12],[2849,12,2325,16],[2850,10,2326,16],[2850,17,2326,23],[2850,23,2326,29],[2850,27,2326,33],[2850,28,2326,34,"_useSession"],[2850,39,2326,45],[2850,40,2326,46],[2850,46,2326,53,"result"],[2850,52,2326,59],[2850,56,2326,64],[2851,12,2327,20],[2851,16,2327,24,"_a"],[2851,18,2327,26],[2852,12,2328,20],[2852,18,2328,26],[2853,14,2328,28,"data"],[2853,18,2328,32],[2853,20,2328,34,"sessionData"],[2853,31,2328,45],[2854,14,2328,47,"error"],[2854,19,2328,52],[2854,21,2328,54,"sessionError"],[2855,12,2328,67],[2855,13,2328,68],[2855,16,2328,71,"result"],[2855,22,2328,77],[2856,12,2329,20],[2856,16,2329,24,"sessionError"],[2856,28,2329,36],[2856,30,2329,38],[2857,14,2330,24],[2857,21,2330,31],[2858,16,2330,33,"data"],[2858,20,2330,37],[2858,22,2330,39],[2858,26,2330,43],[2859,16,2330,45,"error"],[2859,21,2330,50],[2859,23,2330,52,"sessionError"],[2860,14,2330,65],[2860,15,2330,66],[2861,12,2331,20],[2862,12,2332,20],[2862,18,2332,26,"response"],[2862,26,2332,34],[2862,29,2332,38],[2862,35,2332,44],[2862,36,2332,45],[2862,37,2332,46],[2862,39,2332,48,"fetch_1"],[2862,46,2332,55],[2862,47,2332,56,"_request"],[2862,55,2332,64],[2862,57,2332,66],[2862,61,2332,70],[2862,62,2332,71,"fetch"],[2862,67,2332,76],[2862,69,2332,78],[2862,75,2332,84],[2862,77,2332,86],[2862,80,2332,89],[2862,84,2332,93],[2862,85,2332,94,"url"],[2862,88,2332,97],[2862,100,2332,109,"params"],[2862,106,2332,115],[2862,107,2332,116,"factorId"],[2862,115,2332,124],[2862,127,2332,136],[2862,129,2332,138],[2863,14,2333,24,"body"],[2863,18,2333,28],[2863,20,2333,30,"params"],[2863,26,2333,36],[2864,14,2334,24,"headers"],[2864,21,2334,31],[2864,23,2334,33],[2864,27,2334,37],[2864,28,2334,38,"headers"],[2864,35,2334,45],[2865,14,2335,24,"jwt"],[2865,17,2335,27],[2865,19,2335,29],[2865,20,2335,30,"_a"],[2865,22,2335,32],[2865,25,2335,35,"sessionData"],[2865,36,2335,46],[2865,41,2335,51],[2865,45,2335,55],[2865,49,2335,59,"sessionData"],[2865,60,2335,70],[2865,65,2335,75],[2865,70,2335,80],[2865,71,2335,81],[2865,74,2335,84],[2865,79,2335,89],[2865,80,2335,90],[2865,83,2335,93,"sessionData"],[2865,94,2335,104],[2865,95,2335,105,"session"],[2865,102,2335,112],[2865,108,2335,118],[2865,112,2335,122],[2865,116,2335,126,"_a"],[2865,118,2335,128],[2865,123,2335,133],[2865,128,2335,138],[2865,129,2335,139],[2865,132,2335,142],[2865,137,2335,147],[2865,138,2335,148],[2865,141,2335,151,"_a"],[2865,143,2335,153],[2865,144,2335,154,"access_token"],[2866,12,2336,20],[2866,13,2336,21],[2866,14,2336,23],[2867,12,2337,20],[2867,16,2337,24,"response"],[2867,24,2337,32],[2867,25,2337,33,"error"],[2867,30,2337,38],[2867,32,2337,40],[2868,14,2338,24],[2868,21,2338,31,"response"],[2868,29,2338,39],[2869,12,2339,20],[2870,12,2340,20],[2870,18,2340,26],[2871,14,2340,28,"data"],[2872,12,2340,33],[2872,13,2340,34],[2872,16,2340,37,"response"],[2872,24,2340,45],[2873,12,2341,20],[2873,16,2341,24,"data"],[2873,20,2341,28],[2873,21,2341,29,"type"],[2873,25,2341,33],[2873,30,2341,38],[2873,40,2341,48],[2873,42,2341,50],[2874,14,2342,24],[2874,21,2342,31],[2875,16,2342,33,"data"],[2875,20,2342,37],[2876,16,2342,39,"error"],[2876,21,2342,44],[2876,23,2342,46],[2877,14,2342,51],[2877,15,2342,52],[2878,12,2343,20],[2879,12,2344,20],[2879,20,2344,28,"data"],[2879,24,2344,32],[2879,25,2344,33,"webauthn"],[2879,33,2344,41],[2879,34,2344,42,"type"],[2879,38,2344,46],[2880,14,2345,24],[2880,19,2345,29],[2880,27,2345,37],[2881,16,2346,28],[2881,23,2346,35],[2882,18,2347,32,"data"],[2882,22,2347,36],[2882,24,2347,38,"Object"],[2882,30,2347,44],[2882,31,2347,45,"assign"],[2882,37,2347,51],[2882,38,2347,52,"Object"],[2882,44,2347,58],[2882,45,2347,59,"assign"],[2882,51,2347,65],[2882,52,2347,66],[2882,53,2347,67],[2882,54,2347,68],[2882,56,2347,70,"data"],[2882,60,2347,74],[2882,61,2347,75],[2882,63,2347,77],[2883,20,2347,79,"webauthn"],[2883,28,2347,87],[2883,30,2347,89,"Object"],[2883,36,2347,95],[2883,37,2347,96,"assign"],[2883,43,2347,102],[2883,44,2347,103,"Object"],[2883,50,2347,109],[2883,51,2347,110,"assign"],[2883,57,2347,116],[2883,58,2347,117],[2883,59,2347,118],[2883,60,2347,119],[2883,62,2347,121,"data"],[2883,66,2347,125],[2883,67,2347,126,"webauthn"],[2883,75,2347,134],[2883,76,2347,135],[2883,78,2347,137],[2884,22,2347,139,"credential_options"],[2884,40,2347,157],[2884,42,2347,159,"Object"],[2884,48,2347,165],[2884,49,2347,166,"assign"],[2884,55,2347,172],[2884,56,2347,173,"Object"],[2884,62,2347,179],[2884,63,2347,180,"assign"],[2884,69,2347,186],[2884,70,2347,187],[2884,71,2347,188],[2884,72,2347,189],[2884,74,2347,191,"data"],[2884,78,2347,195],[2884,79,2347,196,"webauthn"],[2884,87,2347,204],[2884,88,2347,205,"credential_options"],[2884,106,2347,223],[2884,107,2347,224],[2884,109,2347,226],[2885,24,2347,228,"publicKey"],[2885,33,2347,237],[2885,35,2347,239],[2885,36,2347,240],[2885,37,2347,241],[2885,39,2347,243,"webauthn_1"],[2885,49,2347,253],[2885,50,2347,254,"deserializeCredentialCreationOptions"],[2885,86,2347,290],[2885,88,2347,292,"data"],[2885,92,2347,296],[2885,93,2347,297,"webauthn"],[2885,101,2347,305],[2885,102,2347,306,"credential_options"],[2885,120,2347,324],[2885,121,2347,325,"publicKey"],[2885,130,2347,334],[2886,22,2347,336],[2886,23,2347,337],[2887,20,2347,339],[2887,21,2347,340],[2888,18,2347,342],[2888,19,2347,343],[2888,20,2347,344],[2889,18,2348,32,"error"],[2889,23,2348,37],[2889,25,2348,39],[2890,16,2349,28],[2890,17,2349,29],[2891,14,2350,24],[2891,19,2350,29],[2891,28,2350,38],[2892,16,2351,28],[2892,23,2351,35],[2893,18,2352,32,"data"],[2893,22,2352,36],[2893,24,2352,38,"Object"],[2893,30,2352,44],[2893,31,2352,45,"assign"],[2893,37,2352,51],[2893,38,2352,52,"Object"],[2893,44,2352,58],[2893,45,2352,59,"assign"],[2893,51,2352,65],[2893,52,2352,66],[2893,53,2352,67],[2893,54,2352,68],[2893,56,2352,70,"data"],[2893,60,2352,74],[2893,61,2352,75],[2893,63,2352,77],[2894,20,2352,79,"webauthn"],[2894,28,2352,87],[2894,30,2352,89,"Object"],[2894,36,2352,95],[2894,37,2352,96,"assign"],[2894,43,2352,102],[2894,44,2352,103,"Object"],[2894,50,2352,109],[2894,51,2352,110,"assign"],[2894,57,2352,116],[2894,58,2352,117],[2894,59,2352,118],[2894,60,2352,119],[2894,62,2352,121,"data"],[2894,66,2352,125],[2894,67,2352,126,"webauthn"],[2894,75,2352,134],[2894,76,2352,135],[2894,78,2352,137],[2895,22,2352,139,"credential_options"],[2895,40,2352,157],[2895,42,2352,159,"Object"],[2895,48,2352,165],[2895,49,2352,166,"assign"],[2895,55,2352,172],[2895,56,2352,173,"Object"],[2895,62,2352,179],[2895,63,2352,180,"assign"],[2895,69,2352,186],[2895,70,2352,187],[2895,71,2352,188],[2895,72,2352,189],[2895,74,2352,191,"data"],[2895,78,2352,195],[2895,79,2352,196,"webauthn"],[2895,87,2352,204],[2895,88,2352,205,"credential_options"],[2895,106,2352,223],[2895,107,2352,224],[2895,109,2352,226],[2896,24,2352,228,"publicKey"],[2896,33,2352,237],[2896,35,2352,239],[2896,36,2352,240],[2896,37,2352,241],[2896,39,2352,243,"webauthn_1"],[2896,49,2352,253],[2896,50,2352,254,"deserializeCredentialRequestOptions"],[2896,85,2352,289],[2896,87,2352,291,"data"],[2896,91,2352,295],[2896,92,2352,296,"webauthn"],[2896,100,2352,304],[2896,101,2352,305,"credential_options"],[2896,119,2352,323],[2896,120,2352,324,"publicKey"],[2896,129,2352,333],[2897,22,2352,335],[2897,23,2352,336],[2898,20,2352,338],[2898,21,2352,339],[2899,18,2352,341],[2899,19,2352,342],[2899,20,2352,343],[2900,18,2353,32,"error"],[2900,23,2353,37],[2900,25,2353,39],[2901,16,2354,28],[2901,17,2354,29],[2902,12,2355,20],[2903,10,2356,16],[2903,11,2356,17],[2903,12,2356,18],[2904,8,2357,12],[2904,9,2357,13],[2904,10,2358,12],[2904,17,2358,19,"error"],[2904,22,2358,24],[2904,24,2358,26],[2905,10,2359,16],[2905,14,2359,20],[2905,15,2359,21],[2905,16,2359,22],[2905,18,2359,24,"errors_1"],[2905,26,2359,32],[2905,27,2359,33,"isAuthError"],[2905,38,2359,44],[2905,40,2359,46,"error"],[2905,45,2359,51],[2905,46,2359,52],[2905,48,2359,54],[2906,12,2360,20],[2906,19,2360,27],[2907,14,2360,29,"data"],[2907,18,2360,33],[2907,20,2360,35],[2907,24,2360,39],[2908,14,2360,41,"error"],[2909,12,2360,47],[2909,13,2360,48],[2910,10,2361,16],[2911,10,2362,16],[2911,16,2362,22,"error"],[2911,21,2362,27],[2912,8,2363,12],[2913,6,2364,8],[2913,7,2364,9],[2913,8,2364,10],[2914,4,2365,4],[2915,4,2366,4],[2916,0,2367,0],[2917,0,2368,0],[2918,4,2369,4],[2918,10,2369,10,"_challengeAndVerify"],[2918,29,2369,29,"_challengeAndVerify"],[2918,30,2369,30,"params"],[2918,36,2369,36],[2918,38,2369,38],[2919,6,2370,8],[2920,6,2371,8],[2921,6,2372,8],[2921,12,2372,14],[2922,8,2372,16,"data"],[2922,12,2372,20],[2922,14,2372,22,"challengeData"],[2922,27,2372,35],[2923,8,2372,37,"error"],[2923,13,2372,42],[2923,15,2372,44,"challengeError"],[2924,6,2372,59],[2924,7,2372,60],[2924,10,2372,63],[2924,16,2372,69],[2924,20,2372,73],[2924,21,2372,74,"_challenge"],[2924,31,2372,84],[2924,32,2372,85],[2925,8,2373,12,"factorId"],[2925,16,2373,20],[2925,18,2373,22,"params"],[2925,24,2373,28],[2925,25,2373,29,"factorId"],[2926,6,2374,8],[2926,7,2374,9],[2926,8,2374,10],[2927,6,2375,8],[2927,10,2375,12,"challengeError"],[2927,24,2375,26],[2927,26,2375,28],[2928,8,2376,12],[2928,15,2376,19],[2929,10,2376,21,"data"],[2929,14,2376,25],[2929,16,2376,27],[2929,20,2376,31],[2930,10,2376,33,"error"],[2930,15,2376,38],[2930,17,2376,40,"challengeError"],[2931,8,2376,55],[2931,9,2376,56],[2932,6,2377,8],[2933,6,2378,8],[2933,13,2378,15],[2933,19,2378,21],[2933,23,2378,25],[2933,24,2378,26,"_verify"],[2933,31,2378,33],[2933,32,2378,34],[2934,8,2379,12,"factorId"],[2934,16,2379,20],[2934,18,2379,22,"params"],[2934,24,2379,28],[2934,25,2379,29,"factorId"],[2934,33,2379,37],[2935,8,2380,12,"challengeId"],[2935,19,2380,23],[2935,21,2380,25,"challengeData"],[2935,34,2380,38],[2935,35,2380,39,"id"],[2935,37,2380,41],[2936,8,2381,12,"code"],[2936,12,2381,16],[2936,14,2381,18,"params"],[2936,20,2381,24],[2936,21,2381,25,"code"],[2937,6,2382,8],[2937,7,2382,9],[2937,8,2382,10],[2938,4,2383,4],[2939,4,2384,4],[2940,0,2385,0],[2941,0,2386,0],[2942,4,2387,4],[2942,10,2387,10,"_listFactors"],[2942,22,2387,22,"_listFactors"],[2942,23,2387,22],[2942,25,2387,25],[2943,6,2388,8],[2943,10,2388,12,"_a"],[2943,12,2388,14],[2944,6,2389,8],[2945,6,2390,8],[2945,12,2390,14],[2946,8,2390,16,"data"],[2946,12,2390,20],[2946,14,2390,22],[2947,10,2390,24,"user"],[2948,8,2390,29],[2948,9,2390,30],[2949,8,2390,32,"error"],[2949,13,2390,37],[2949,15,2390,39,"userError"],[2950,6,2390,50],[2950,7,2390,51],[2950,10,2390,54],[2950,16,2390,60],[2950,20,2390,64],[2950,21,2390,65,"getUser"],[2950,28,2390,72],[2950,29,2390,73],[2950,30,2390,74],[2951,6,2391,8],[2951,10,2391,12,"userError"],[2951,19,2391,21],[2951,21,2391,23],[2952,8,2392,12],[2952,15,2392,19],[2953,10,2392,21,"data"],[2953,14,2392,25],[2953,16,2392,27],[2953,20,2392,31],[2954,10,2392,33,"error"],[2954,15,2392,38],[2954,17,2392,40,"userError"],[2955,8,2392,50],[2955,9,2392,51],[2956,6,2393,8],[2957,6,2394,8],[2957,12,2394,14,"data"],[2957,16,2394,18],[2957,19,2394,21],[2958,8,2395,12,"all"],[2958,11,2395,15],[2958,13,2395,17],[2958,15,2395,19],[2959,8,2396,12,"phone"],[2959,13,2396,17],[2959,15,2396,19],[2959,17,2396,21],[2960,8,2397,12,"totp"],[2960,12,2397,16],[2960,14,2397,18],[2960,16,2397,20],[2961,8,2398,12,"webauthn"],[2961,16,2398,20],[2961,18,2398,22],[2962,6,2399,8],[2962,7,2399,9],[2963,6,2400,8],[2964,6,2401,8],[2964,11,2401,13],[2964,17,2401,19,"factor"],[2964,23,2401,25],[2964,27,2401,29],[2964,28,2401,30,"_a"],[2964,30,2401,32],[2964,33,2401,35,"user"],[2964,37,2401,39],[2964,42,2401,44],[2964,46,2401,48],[2964,50,2401,52,"user"],[2964,54,2401,56],[2964,59,2401,61],[2964,64,2401,66],[2964,65,2401,67],[2964,68,2401,70],[2964,73,2401,75],[2964,74,2401,76],[2964,77,2401,79,"user"],[2964,81,2401,83],[2964,82,2401,84,"factors"],[2964,89,2401,91],[2964,95,2401,97],[2964,99,2401,101],[2964,103,2401,105,"_a"],[2964,105,2401,107],[2964,110,2401,112],[2964,115,2401,117],[2964,116,2401,118],[2964,119,2401,121,"_a"],[2964,121,2401,123],[2964,124,2401,126],[2964,126,2401,128],[2964,128,2401,130],[2965,8,2402,12,"data"],[2965,12,2402,16],[2965,13,2402,17,"all"],[2965,16,2402,20],[2965,17,2402,21,"push"],[2965,21,2402,25],[2965,22,2402,26,"factor"],[2965,28,2402,32],[2965,29,2402,33],[2966,8,2403,12],[2966,12,2403,16,"factor"],[2966,18,2403,22],[2966,19,2403,23,"status"],[2966,25,2403,29],[2966,30,2403,34],[2966,40,2403,44],[2966,42,2403,46],[2967,10,2404,16],[2968,10,2405,16,"data"],[2968,14,2405,20],[2968,15,2405,21,"factor"],[2968,21,2405,27],[2968,22,2405,28,"factor_type"],[2968,33,2405,39],[2968,34,2405,40],[2968,35,2405,41,"push"],[2968,39,2405,45],[2968,40,2405,46,"factor"],[2968,46,2405,52],[2968,47,2405,53],[2969,8,2406,12],[2970,6,2407,8],[2971,6,2408,8],[2971,13,2408,15],[2972,8,2409,12,"data"],[2972,12,2409,16],[2973,8,2410,12,"error"],[2973,13,2410,17],[2973,15,2410,19],[2974,6,2411,8],[2974,7,2411,9],[2975,4,2412,4],[2976,4,2413,4],[2977,0,2414,0],[2978,0,2415,0],[2979,4,2416,4],[2979,10,2416,10,"_getAuthenticatorAssuranceLevel"],[2979,41,2416,41,"_getAuthenticatorAssuranceLevel"],[2979,42,2416,41],[2979,44,2416,44],[2980,6,2417,8],[2980,13,2417,15],[2980,17,2417,19],[2980,18,2417,20,"_acquireLock"],[2980,30,2417,32],[2980,31,2417,33],[2980,32,2417,34],[2980,33,2417,35],[2980,35,2417,37],[2980,47,2417,49],[2981,8,2418,12],[2981,15,2418,19],[2981,21,2418,25],[2981,25,2418,29],[2981,26,2418,30,"_useSession"],[2981,37,2418,41],[2981,38,2418,42],[2981,44,2418,49,"result"],[2981,50,2418,55],[2981,54,2418,60],[2982,10,2419,16],[2982,14,2419,20,"_a"],[2982,16,2419,22],[2982,18,2419,24,"_b"],[2982,20,2419,26],[2983,10,2420,16],[2983,16,2420,22],[2984,12,2420,24,"data"],[2984,16,2420,28],[2984,18,2420,30],[2985,14,2420,32,"session"],[2986,12,2420,40],[2986,13,2420,41],[2987,12,2420,43,"error"],[2987,17,2420,48],[2987,19,2420,50,"sessionError"],[2988,10,2420,64],[2988,11,2420,65],[2988,14,2420,68,"result"],[2988,20,2420,74],[2989,10,2421,16],[2989,14,2421,20,"sessionError"],[2989,26,2421,32],[2989,28,2421,34],[2990,12,2422,20],[2990,19,2422,27],[2991,14,2422,29,"data"],[2991,18,2422,33],[2991,20,2422,35],[2991,24,2422,39],[2992,14,2422,41,"error"],[2992,19,2422,46],[2992,21,2422,48,"sessionError"],[2993,12,2422,61],[2993,13,2422,62],[2994,10,2423,16],[2995,10,2424,16],[2995,14,2424,20],[2995,15,2424,21,"session"],[2995,22,2424,28],[2995,24,2424,30],[2996,12,2425,20],[2996,19,2425,27],[2997,14,2426,24,"data"],[2997,18,2426,28],[2997,20,2426,30],[2998,16,2426,32,"currentLevel"],[2998,28,2426,44],[2998,30,2426,46],[2998,34,2426,50],[2999,16,2426,52,"nextLevel"],[2999,25,2426,61],[2999,27,2426,63],[2999,31,2426,67],[3000,16,2426,69,"currentAuthenticationMethods"],[3000,44,2426,97],[3000,46,2426,99],[3001,14,2426,102],[3001,15,2426,103],[3002,14,2427,24,"error"],[3002,19,2427,29],[3002,21,2427,31],[3003,12,2428,20],[3003,13,2428,21],[3004,10,2429,16],[3005,10,2430,16],[3005,16,2430,22],[3006,12,2430,24,"payload"],[3007,10,2430,32],[3007,11,2430,33],[3007,14,2430,36],[3007,15,2430,37],[3007,16,2430,38],[3007,18,2430,40,"helpers_1"],[3007,27,2430,49],[3007,28,2430,50,"decodeJWT"],[3007,37,2430,59],[3007,39,2430,61,"session"],[3007,46,2430,68],[3007,47,2430,69,"access_token"],[3007,59,2430,81],[3007,60,2430,82],[3008,10,2431,16],[3008,14,2431,20,"currentLevel"],[3008,26,2431,32],[3008,29,2431,35],[3008,33,2431,39],[3009,10,2432,16],[3009,14,2432,20,"payload"],[3009,21,2432,27],[3009,22,2432,28,"aal"],[3009,25,2432,31],[3009,27,2432,33],[3010,12,2433,20,"currentLevel"],[3010,24,2433,32],[3010,27,2433,35,"payload"],[3010,34,2433,42],[3010,35,2433,43,"aal"],[3010,38,2433,46],[3011,10,2434,16],[3012,10,2435,16],[3012,14,2435,20,"nextLevel"],[3012,23,2435,29],[3012,26,2435,32,"currentLevel"],[3012,38,2435,44],[3013,10,2436,16],[3013,16,2436,22,"verifiedFactors"],[3013,31,2436,37],[3013,34,2436,40],[3013,35,2436,41,"_b"],[3013,37,2436,43],[3013,40,2436,46],[3013,41,2436,47,"_a"],[3013,43,2436,49],[3013,46,2436,52,"session"],[3013,53,2436,59],[3013,54,2436,60,"user"],[3013,58,2436,64],[3013,59,2436,65,"factors"],[3013,66,2436,72],[3013,72,2436,78],[3013,76,2436,82],[3013,80,2436,86,"_a"],[3013,82,2436,88],[3013,87,2436,93],[3013,92,2436,98],[3013,93,2436,99],[3013,96,2436,102],[3013,101,2436,107],[3013,102,2436,108],[3013,105,2436,111,"_a"],[3013,107,2436,113],[3013,108,2436,114,"filter"],[3013,114,2436,120],[3013,115,2436,122,"factor"],[3013,121,2436,128],[3013,125,2436,133,"factor"],[3013,131,2436,139],[3013,132,2436,140,"status"],[3013,138,2436,146],[3013,143,2436,151],[3013,153,2436,161],[3013,154,2436,162],[3013,160,2436,168],[3013,164,2436,172],[3013,168,2436,176,"_b"],[3013,170,2436,178],[3013,175,2436,183],[3013,180,2436,188],[3013,181,2436,189],[3013,184,2436,192,"_b"],[3013,186,2436,194],[3013,189,2436,197],[3013,191,2436,199],[3014,10,2437,16],[3014,14,2437,20,"verifiedFactors"],[3014,29,2437,35],[3014,30,2437,36,"length"],[3014,36,2437,42],[3014,39,2437,45],[3014,40,2437,46],[3014,42,2437,48],[3015,12,2438,20,"nextLevel"],[3015,21,2438,29],[3015,24,2438,32],[3015,30,2438,38],[3016,10,2439,16],[3017,10,2440,16],[3017,16,2440,22,"currentAuthenticationMethods"],[3017,44,2440,50],[3017,47,2440,53,"payload"],[3017,54,2440,60],[3017,55,2440,61,"amr"],[3017,58,2440,64],[3017,62,2440,68],[3017,64,2440,70],[3018,10,2441,16],[3018,17,2441,23],[3019,12,2441,25,"data"],[3019,16,2441,29],[3019,18,2441,31],[3020,14,2441,33,"currentLevel"],[3020,26,2441,45],[3021,14,2441,47,"nextLevel"],[3021,23,2441,56],[3022,14,2441,58,"currentAuthenticationMethods"],[3023,12,2441,87],[3023,13,2441,88],[3024,12,2441,90,"error"],[3024,17,2441,95],[3024,19,2441,97],[3025,10,2441,102],[3025,11,2441,103],[3026,8,2442,12],[3026,9,2442,13],[3026,10,2442,14],[3027,6,2443,8],[3027,7,2443,9],[3027,8,2443,10],[3028,4,2444,4],[3029,4,2445,4],[3029,10,2445,10,"fetchJwk"],[3029,18,2445,18,"fetchJwk"],[3029,19,2445,19,"kid"],[3029,22,2445,22],[3029,24,2445,24,"jwks"],[3029,28,2445,28],[3029,31,2445,31],[3030,6,2445,33,"keys"],[3030,10,2445,37],[3030,12,2445,39],[3031,4,2445,42],[3031,5,2445,43],[3031,7,2445,45],[3032,6,2446,8],[3033,6,2447,8],[3033,10,2447,12,"jwk"],[3033,13,2447,15],[3033,16,2447,18,"jwks"],[3033,20,2447,22],[3033,21,2447,23,"keys"],[3033,25,2447,27],[3033,26,2447,28,"find"],[3033,30,2447,32],[3033,31,2447,34,"key"],[3033,34,2447,37],[3033,38,2447,42,"key"],[3033,41,2447,45],[3033,42,2447,46,"kid"],[3033,45,2447,49],[3033,50,2447,54,"kid"],[3033,53,2447,57],[3033,54,2447,58],[3034,6,2448,8],[3034,10,2448,12,"jwk"],[3034,13,2448,15],[3034,15,2448,17],[3035,8,2449,12],[3035,15,2449,19,"jwk"],[3035,18,2449,22],[3036,6,2450,8],[3037,6,2451,8],[3037,12,2451,14,"now"],[3037,15,2451,17],[3037,18,2451,20,"Date"],[3037,22,2451,24],[3037,23,2451,25,"now"],[3037,26,2451,28],[3037,27,2451,29],[3037,28,2451,30],[3038,6,2452,8],[3039,6,2453,8,"jwk"],[3039,9,2453,11],[3039,12,2453,14],[3039,16,2453,18],[3039,17,2453,19,"jwks"],[3039,21,2453,23],[3039,22,2453,24,"keys"],[3039,26,2453,28],[3039,27,2453,29,"find"],[3039,31,2453,33],[3039,32,2453,35,"key"],[3039,35,2453,38],[3039,39,2453,43,"key"],[3039,42,2453,46],[3039,43,2453,47,"kid"],[3039,46,2453,50],[3039,51,2453,55,"kid"],[3039,54,2453,58],[3039,55,2453,59],[3040,6,2454,8],[3041,6,2455,8],[3041,10,2455,12,"jwk"],[3041,13,2455,15],[3041,17,2455,19],[3041,21,2455,23],[3041,22,2455,24,"jwks_cached_at"],[3041,36,2455,38],[3041,39,2455,41,"constants_1"],[3041,50,2455,52],[3041,51,2455,53,"JWKS_TTL"],[3041,59,2455,61],[3041,62,2455,64,"now"],[3041,65,2455,67],[3041,67,2455,69],[3042,8,2456,12],[3042,15,2456,19,"jwk"],[3042,18,2456,22],[3043,6,2457,8],[3044,6,2458,8],[3045,6,2459,8],[3045,12,2459,14],[3046,8,2459,16,"data"],[3046,12,2459,20],[3047,8,2459,22,"error"],[3048,6,2459,28],[3048,7,2459,29],[3048,10,2459,32],[3048,16,2459,38],[3048,17,2459,39],[3048,18,2459,40],[3048,20,2459,42,"fetch_1"],[3048,27,2459,49],[3048,28,2459,50,"_request"],[3048,36,2459,58],[3048,38,2459,60],[3048,42,2459,64],[3048,43,2459,65,"fetch"],[3048,48,2459,70],[3048,50,2459,72],[3048,55,2459,77],[3048,57,2459,79],[3048,60,2459,82],[3048,64,2459,86],[3048,65,2459,87,"url"],[3048,68,2459,90],[3048,92,2459,114],[3048,94,2459,116],[3049,8,2460,12,"headers"],[3049,15,2460,19],[3049,17,2460,21],[3049,21,2460,25],[3049,22,2460,26,"headers"],[3050,6,2461,8],[3050,7,2461,9],[3050,8,2461,10],[3051,6,2462,8],[3051,10,2462,12,"error"],[3051,15,2462,17],[3051,17,2462,19],[3052,8,2463,12],[3052,14,2463,18,"error"],[3052,19,2463,23],[3053,6,2464,8],[3054,6,2465,8],[3054,10,2465,12],[3054,11,2465,13,"data"],[3054,15,2465,17],[3054,16,2465,18,"keys"],[3054,20,2465,22],[3054,24,2465,26,"data"],[3054,28,2465,30],[3054,29,2465,31,"keys"],[3054,33,2465,35],[3054,34,2465,36,"length"],[3054,40,2465,42],[3054,45,2465,47],[3054,46,2465,48],[3054,48,2465,50],[3055,8,2466,12],[3055,15,2466,19],[3055,19,2466,23],[3056,6,2467,8],[3057,6,2468,8],[3057,10,2468,12],[3057,11,2468,13,"jwks"],[3057,15,2468,17],[3057,18,2468,20,"data"],[3057,22,2468,24],[3058,6,2469,8],[3058,10,2469,12],[3058,11,2469,13,"jwks_cached_at"],[3058,25,2469,27],[3058,28,2469,30,"now"],[3058,31,2469,33],[3059,6,2470,8],[3060,6,2471,8,"jwk"],[3060,9,2471,11],[3060,12,2471,14,"data"],[3060,16,2471,18],[3060,17,2471,19,"keys"],[3060,21,2471,23],[3060,22,2471,24,"find"],[3060,26,2471,28],[3060,27,2471,30,"key"],[3060,30,2471,33],[3060,34,2471,38,"key"],[3060,37,2471,41],[3060,38,2471,42,"kid"],[3060,41,2471,45],[3060,46,2471,50,"kid"],[3060,49,2471,53],[3060,50,2471,54],[3061,6,2472,8],[3061,10,2472,12],[3061,11,2472,13,"jwk"],[3061,14,2472,16],[3061,16,2472,18],[3062,8,2473,12],[3062,15,2473,19],[3062,19,2473,23],[3063,6,2474,8],[3064,6,2475,8],[3064,13,2475,15,"jwk"],[3064,16,2475,18],[3065,4,2476,4],[3066,4,2477,4],[3067,0,2478,0],[3068,0,2479,0],[3069,0,2480,0],[3070,0,2481,0],[3071,0,2482,0],[3072,0,2483,0],[3073,0,2484,0],[3074,0,2485,0],[3075,0,2486,0],[3076,0,2487,0],[3077,0,2488,0],[3078,0,2489,0],[3079,0,2490,0],[3080,0,2491,0],[3081,0,2492,0],[3082,4,2493,4],[3082,10,2493,10,"getClaims"],[3082,19,2493,19,"getClaims"],[3082,20,2493,20,"jwt"],[3082,23,2493,23],[3082,25,2493,25,"options"],[3082,32,2493,32],[3082,35,2493,35],[3082,36,2493,36],[3082,37,2493,37],[3082,39,2493,39],[3083,6,2494,8],[3083,10,2494,12],[3084,8,2495,12],[3084,12,2495,16,"token"],[3084,17,2495,21],[3084,20,2495,24,"jwt"],[3084,23,2495,27],[3085,8,2496,12],[3085,12,2496,16],[3085,13,2496,17,"token"],[3085,18,2496,22],[3085,20,2496,24],[3086,10,2497,16],[3086,16,2497,22],[3087,12,2497,24,"data"],[3087,16,2497,28],[3088,12,2497,30,"error"],[3089,10,2497,36],[3089,11,2497,37],[3089,14,2497,40],[3089,20,2497,46],[3089,24,2497,50],[3089,25,2497,51,"getSession"],[3089,35,2497,61],[3089,36,2497,62],[3089,37,2497,63],[3090,10,2498,16],[3090,14,2498,20,"error"],[3090,19,2498,25],[3090,23,2498,29],[3090,24,2498,30,"data"],[3090,28,2498,34],[3090,29,2498,35,"session"],[3090,36,2498,42],[3090,38,2498,44],[3091,12,2499,20],[3091,19,2499,27],[3092,14,2499,29,"data"],[3092,18,2499,33],[3092,20,2499,35],[3092,24,2499,39],[3093,14,2499,41,"error"],[3094,12,2499,47],[3094,13,2499,48],[3095,10,2500,16],[3096,10,2501,16,"token"],[3096,15,2501,21],[3096,18,2501,24,"data"],[3096,22,2501,28],[3096,23,2501,29,"session"],[3096,30,2501,36],[3096,31,2501,37,"access_token"],[3096,43,2501,49],[3097,8,2502,12],[3098,8,2503,12],[3098,14,2503,18],[3099,10,2503,20,"header"],[3099,16,2503,26],[3100,10,2503,28,"payload"],[3100,17,2503,35],[3101,10,2503,37,"signature"],[3101,19,2503,46],[3102,10,2503,48,"raw"],[3102,13,2503,51],[3102,15,2503,53],[3103,12,2503,55,"header"],[3103,18,2503,61],[3103,20,2503,63,"rawHeader"],[3103,29,2503,72],[3104,12,2503,74,"payload"],[3104,19,2503,81],[3104,21,2503,83,"rawPayload"],[3105,10,2503,94],[3106,8,2503,97],[3106,9,2503,98],[3106,12,2503,101],[3106,13,2503,102],[3106,14,2503,103],[3106,16,2503,105,"helpers_1"],[3106,25,2503,114],[3106,26,2503,115,"decodeJWT"],[3106,35,2503,124],[3106,37,2503,126,"token"],[3106,42,2503,131],[3106,43,2503,132],[3107,8,2504,12],[3107,12,2504,16],[3107,14,2504,18,"options"],[3107,21,2504,25],[3107,26,2504,30],[3107,30,2504,34],[3107,34,2504,38,"options"],[3107,41,2504,45],[3107,46,2504,50],[3107,51,2504,55],[3107,52,2504,56],[3107,55,2504,59],[3107,60,2504,64],[3107,61,2504,65],[3107,64,2504,68,"options"],[3107,71,2504,75],[3107,72,2504,76,"allowExpired"],[3107,84,2504,88],[3107,85,2504,89],[3107,87,2504,91],[3108,10,2505,16],[3109,10,2506,16],[3109,11,2506,17],[3109,12,2506,18],[3109,14,2506,20,"helpers_1"],[3109,23,2506,29],[3109,24,2506,30,"validateExp"],[3109,35,2506,41],[3109,37,2506,43,"payload"],[3109,44,2506,50],[3109,45,2506,51,"exp"],[3109,48,2506,54],[3109,49,2506,55],[3110,8,2507,12],[3111,8,2508,12],[3111,14,2508,18,"signingKey"],[3111,24,2508,28],[3111,27,2508,31],[3111,28,2508,32,"header"],[3111,34,2508,38],[3111,35,2508,39,"alg"],[3111,38,2508,42],[3111,42,2509,16,"header"],[3111,48,2509,22],[3111,49,2509,23,"alg"],[3111,52,2509,26],[3111,53,2509,27,"startsWith"],[3111,63,2509,37],[3111,64,2509,38],[3111,68,2509,42],[3111,69,2509,43],[3111,73,2510,16],[3111,74,2510,17,"header"],[3111,80,2510,23],[3111,81,2510,24,"kid"],[3111,84,2510,27],[3111,88,2511,16],[3111,90,2511,18],[3111,98,2511,26],[3111,102,2511,30,"globalThis"],[3111,112,2511,40],[3111,116,2511,44],[3111,124,2511,52],[3111,128,2511,56,"globalThis"],[3111,138,2511,66],[3111,139,2511,67,"crypto"],[3111,145,2511,73],[3111,146,2511,74],[3111,149,2512,18],[3111,153,2512,22],[3111,156,2513,18],[3111,162,2513,24],[3111,166,2513,28],[3111,167,2513,29,"fetchJwk"],[3111,175,2513,37],[3111,176,2513,38,"header"],[3111,182,2513,44],[3111,183,2513,45,"kid"],[3111,186,2513,48],[3111,188,2513,50],[3111,189,2513,51,"options"],[3111,196,2513,58],[3111,201,2513,63],[3111,205,2513,67],[3111,209,2513,71,"options"],[3111,216,2513,78],[3111,221,2513,83],[3111,226,2513,88],[3111,227,2513,89],[3111,230,2513,92],[3111,235,2513,97],[3111,236,2513,98],[3111,239,2513,101,"options"],[3111,246,2513,108],[3111,247,2513,109,"keys"],[3111,251,2513,113],[3111,255,2513,117],[3112,10,2513,119,"keys"],[3112,14,2513,123],[3112,16,2513,125,"options"],[3112,23,2513,132],[3112,24,2513,133,"keys"],[3113,8,2513,138],[3113,9,2513,139],[3113,12,2513,142,"options"],[3113,19,2513,149],[3113,24,2513,154],[3113,28,2513,158],[3113,32,2513,162,"options"],[3113,39,2513,169],[3113,44,2513,174],[3113,49,2513,179],[3113,50,2513,180],[3113,53,2513,183],[3113,58,2513,188],[3113,59,2513,189],[3113,62,2513,192,"options"],[3113,69,2513,199],[3113,70,2513,200,"jwks"],[3113,74,2513,204],[3113,75,2513,205],[3114,8,2514,12],[3115,8,2515,12],[3115,12,2515,16],[3115,13,2515,17,"signingKey"],[3115,23,2515,27],[3115,25,2515,29],[3116,10,2516,16],[3116,16,2516,22],[3117,12,2516,24,"error"],[3118,10,2516,30],[3118,11,2516,31],[3118,14,2516,34],[3118,20,2516,40],[3118,24,2516,44],[3118,25,2516,45,"getUser"],[3118,32,2516,52],[3118,33,2516,53,"token"],[3118,38,2516,58],[3118,39,2516,59],[3119,10,2517,16],[3119,14,2517,20,"error"],[3119,19,2517,25],[3119,21,2517,27],[3120,12,2518,20],[3120,18,2518,26,"error"],[3120,23,2518,31],[3121,10,2519,16],[3122,10,2520,16],[3123,10,2521,16],[3123,17,2521,23],[3124,12,2522,20,"data"],[3124,16,2522,24],[3124,18,2522,26],[3125,14,2523,24,"claims"],[3125,20,2523,30],[3125,22,2523,32,"payload"],[3125,29,2523,39],[3126,14,2524,24,"header"],[3126,20,2524,30],[3127,14,2525,24,"signature"],[3128,12,2526,20],[3128,13,2526,21],[3129,12,2527,20,"error"],[3129,17,2527,25],[3129,19,2527,27],[3130,10,2528,16],[3130,11,2528,17],[3131,8,2529,12],[3132,8,2530,12],[3132,14,2530,18,"algorithm"],[3132,23,2530,27],[3132,26,2530,30],[3132,27,2530,31],[3132,28,2530,32],[3132,30,2530,34,"helpers_1"],[3132,39,2530,43],[3132,40,2530,44,"getAlgorithm"],[3132,52,2530,56],[3132,54,2530,58,"header"],[3132,60,2530,64],[3132,61,2530,65,"alg"],[3132,64,2530,68],[3132,65,2530,69],[3133,8,2531,12],[3134,8,2532,12],[3134,14,2532,18,"publicKey"],[3134,23,2532,27],[3134,26,2532,30],[3134,32,2532,36,"crypto"],[3134,38,2532,42],[3134,39,2532,43,"subtle"],[3134,45,2532,49],[3134,46,2532,50,"importKey"],[3134,55,2532,59],[3134,56,2532,60],[3134,61,2532,65],[3134,63,2532,67,"signingKey"],[3134,73,2532,77],[3134,75,2532,79,"algorithm"],[3134,84,2532,88],[3134,86,2532,90],[3134,90,2532,94],[3134,92,2532,96],[3134,93,2533,16],[3134,101,2533,24],[3134,102,2534,13],[3134,103,2534,14],[3135,8,2535,12],[3136,8,2536,12],[3136,14,2536,18,"isValid"],[3136,21,2536,25],[3136,24,2536,28],[3136,30,2536,34,"crypto"],[3136,36,2536,40],[3136,37,2536,41,"subtle"],[3136,43,2536,47],[3136,44,2536,48,"verify"],[3136,50,2536,54],[3136,51,2536,55,"algorithm"],[3136,60,2536,64],[3136,62,2536,66,"publicKey"],[3136,71,2536,75],[3136,73,2536,77,"signature"],[3136,82,2536,86],[3136,84,2536,88],[3136,85,2536,89],[3136,86,2536,90],[3136,88,2536,92,"base64url_1"],[3136,99,2536,103],[3136,100,2536,104,"stringToUint8Array"],[3136,118,2536,122],[3136,120,2536,124],[3136,123,2536,127,"rawHeader"],[3136,132,2536,136],[3136,136,2536,140,"rawPayload"],[3136,146,2536,150],[3136,148,2536,152],[3136,149,2536,153],[3136,150,2536,154],[3137,8,2537,12],[3137,12,2537,16],[3137,13,2537,17,"isValid"],[3137,20,2537,24],[3137,22,2537,26],[3138,10,2538,16],[3138,16,2538,22],[3138,20,2538,26,"errors_1"],[3138,28,2538,34],[3138,29,2538,35,"AuthInvalidJwtError"],[3138,48,2538,54],[3138,49,2538,55],[3138,72,2538,78],[3138,73,2538,79],[3139,8,2539,12],[3140,8,2540,12],[3141,8,2541,12],[3141,15,2541,19],[3142,10,2542,16,"data"],[3142,14,2542,20],[3142,16,2542,22],[3143,12,2543,20,"claims"],[3143,18,2543,26],[3143,20,2543,28,"payload"],[3143,27,2543,35],[3144,12,2544,20,"header"],[3144,18,2544,26],[3145,12,2545,20,"signature"],[3146,10,2546,16],[3146,11,2546,17],[3147,10,2547,16,"error"],[3147,15,2547,21],[3147,17,2547,23],[3148,8,2548,12],[3148,9,2548,13],[3149,6,2549,8],[3149,7,2549,9],[3149,8,2550,8],[3149,15,2550,15,"error"],[3149,20,2550,20],[3149,22,2550,22],[3150,8,2551,12],[3150,12,2551,16],[3150,13,2551,17],[3150,14,2551,18],[3150,16,2551,20,"errors_1"],[3150,24,2551,28],[3150,25,2551,29,"isAuthError"],[3150,36,2551,40],[3150,38,2551,42,"error"],[3150,43,2551,47],[3150,44,2551,48],[3150,46,2551,50],[3151,10,2552,16],[3151,17,2552,23],[3152,12,2552,25,"data"],[3152,16,2552,29],[3152,18,2552,31],[3152,22,2552,35],[3153,12,2552,37,"error"],[3154,10,2552,43],[3154,11,2552,44],[3155,8,2553,12],[3156,8,2554,12],[3156,14,2554,18,"error"],[3156,19,2554,23],[3157,6,2555,8],[3158,4,2556,4],[3159,2,2557,0],[3160,2,2558,0,"GoTrueClient"],[3160,14,2558,12],[3160,15,2558,13,"nextInstanceID"],[3160,29,2558,27],[3160,32,2558,30],[3160,33,2558,31],[3161,2,2559,0,"exports"],[3161,9,2559,7],[3161,10,2559,8,"default"],[3161,17,2559,15],[3161,20,2559,18,"GoTrueClient"],[3161,32,2559,30],[3162,0,2559,31],[3162,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","constructor","_b.addEventListener$argument_1","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","linkIdentityOAuth","linkIdentityIdToken","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AE0B;CFE;AGU;ICI;KDG;IEC;KFE;IGC;KHG;IIC;KJE;IKI;6GCwG;aDG;KLG;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBQ;KjBU;IkBC;sBCsC,cD;uBEC;aFE;KlB+D;IqBC;sECmG,6BD;KrBwC;IuBC;KvBkC;IwBK;KxBoC;IyBkB;KzB+C;I0BI;K1BmC;I2Be;K3BuB;I4BK;2CnBE;SmBE;K5BC;I6BC;0CCE;aDW;K7BQ;I+BI;K/BoC;IgCY;mDvBE;oCqBC;arBE;SuBC;KhCE;IiCI;gCnCO;iBmCG;yCnCC;iBmCO;8ECG;6CpCK;qBoCO;aDc;KjCK;ImCO;KnCU;IoCM;6BC2C;yBDQ;KpCe;IsCQ;mD7BK;S6BE;KtCE;IuCC;0CTS;aSe;KvCc;IwCI;2C/BE;S+BE;KxCC;IyCC;0CXE;aW4B;KzCQ;I0CM;2CjCE;SiCE;K1CC;I2CC;K3CgD;I4CO;2CnCE;SmCE;K5CC;I6CC;0CfE;aeoB;K7CQ;I8CI;K9CsF;I+CI;K/CE;IgDI;KhDG;IiDS;2CxCE;SwCE;KjDC;IkDC;sCpBC;SoBuB;KlDC;ImDC;yBCK;aDG;SrDI;wCWE;aXE;SqDC;KnDE;IqDC;sCvBC;SuBc;KrDC;IsDQ;KtD0B;IuDI;KvDc;IwDC;KxDK;IyDC;2D3BG;a2Be;KzDc;I0DC;sC5BC;S4B0C;K1DC;I2DI;0C7BE;a6BU;K3DQ;I4DK;kD9DM;a8DU,E9D;a8DM;K5DY;I6DC;K7DO;I8DC;K9DY;I+DK;K/D0F;IgEC;KhEyC;IiEC;+ECQ;aDO;KjEY;ImEK;KnEmC;IoEC;KpES;IqEO;KrEY;IsEK;mCCG,kCD;mB3DqB;S2DG;KtEC;IwEK;KxEO;IyEuB;KzEG;I0ES;K1EG;I2EI;uClEG;sDqBI;yBrBY;akES;K3EU;I4EM;6CCU,kDD;K5ES;I8EI;4CrEe;iBqEQ;K9EQ;I+EO;K/EwB;IgFC;0ClDE;akDU;KhFQ;IiFC;0CnDE;amDuB;KjFQ;IkFC;qCzEC;8CqBE;iBrBwB;SyEQ;KlFC;ImFC;qC1EC;8CqBE;iBrB8B;S0EQ;KnFC;IoFI;KpFc;IqFI;KrFyB;IsFI;qC7EC;0CqBC;yHyDkB,wCzD;arBM;S6EC;KtFC;IwFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KxFK;I2FiB;K3F+D;CHC"},"hasCjsExports":true},"type":"js/module"}]}