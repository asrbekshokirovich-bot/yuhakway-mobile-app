{"dependencies":[{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"C5wTnt0gil7oSFkESSK1fbFt+2Q=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":164,"index":211}}],"key":"heoF0ph3MRKcRke4Rxium863E4Y=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":212},"end":{"line":3,"column":336,"index":548}}],"key":"NUE3c/K+JVzkrn4COE7BqSQ6w3g=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":549},"end":{"line":4,"column":113,"index":662}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":663},"end":{"line":5,"column":281,"index":944}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"],"imports":1}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":945},"end":{"line":6,"column":64,"index":1009}}],"key":"VpxVJy8OOX3gpmfaL4+qvZxcfEs=","exportNames":["*"],"imports":1}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":1010},"end":{"line":7,"column":69,"index":1079}}],"key":"3nAl8WGToTbG9Ylo2D6LWgFHzy4=","exportNames":["*"],"imports":1}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":1080},"end":{"line":8,"column":53,"index":1133}}],"key":"lV0rT+lff8tbqQElPGdAzUbCNgE=","exportNames":["*"],"imports":1}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":1134},"end":{"line":9,"column":40,"index":1174}}],"key":"JwaDbHnT/nA4LCdbzFXkLM5KVrg=","exportNames":["*"],"imports":1}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":1175},"end":{"line":10,"column":71,"index":1246}}],"key":"e/SLVEwEOrfSGzIvDteO64GlclY=","exportNames":["*"],"imports":1}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":1247},"end":{"line":11,"column":85,"index":1332}}],"key":"Uu8BLUnMyMgoPSi9pntE8LE9JBk=","exportNames":["*"],"imports":1}},{"name":"./lib/webauthn","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":1333},"end":{"line":12,"column":194,"index":1527}}],"key":"KUEdeZex37VmEHka5FVYG6WErNE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _GoTrueAdminApi = require(_dependencyMap[0], \"./GoTrueAdminApi\");\n  var GoTrueAdminApi = _interopDefault(_GoTrueAdminApi);\n  var _libConstants = require(_dependencyMap[1], \"./lib/constants\");\n  var _libErrors = require(_dependencyMap[2], \"./lib/errors\");\n  var _libFetch = require(_dependencyMap[3], \"./lib/fetch\");\n  var _libHelpers = require(_dependencyMap[4], \"./lib/helpers\");\n  var _libLocalStorage = require(_dependencyMap[5], \"./lib/local-storage\");\n  var _libLocks = require(_dependencyMap[6], \"./lib/locks\");\n  var _libPolyfills = require(_dependencyMap[7], \"./lib/polyfills\");\n  var _libVersion = require(_dependencyMap[8], \"./lib/version\");\n  var _libBase64url = require(_dependencyMap[9], \"./lib/base64url\");\n  var _libWeb3Ethereum = require(_dependencyMap[10], \"./lib/web3/ethereum\");\n  var _libWebauthn = require(_dependencyMap[11], \"./lib/webauthn\");\n  (0, _libPolyfills.polyfillGlobalThis)(); // Make \"globalThis\" available\n  const DEFAULT_OPTIONS = {\n    url: _libConstants.GOTRUE_URL,\n    storageKey: _libConstants.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: _libConstants.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  async function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  const GLOBAL_JWKS = {};\n  class GoTrueClient {\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n        keys: []\n      };\n    }\n    set jwks(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        jwks: value\n      });\n    }\n    get jwks_cached_at() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        cachedAt: value\n      });\n    }\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, _libHelpers.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, _libHelpers.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, _libHelpers.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = _libLocks.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        webauthn: new _libWebauthn.WebAuthnApi(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, _libHelpers.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, _libLocalStorage.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, _libLocalStorage.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, _libHelpers.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async event => {\n          this._debug('received broadcast notification from other tab or client', event);\n          await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n        });\n      }\n      this.initialize();\n    }\n    _debug(...args) {\n      if (this.logDebugMessages) {\n        this.logger(`GoTrueClient@${this.instanceID} (${_libVersion.version}) ${new Date().toISOString()}`, ...args);\n      }\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n      if (this.initializePromise) {\n        return await this.initializePromise;\n      }\n      this.initializePromise = (async () => {\n        return await this._acquireLock(-1, async () => {\n          return await this._initialize();\n        });\n      })();\n      return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n      var _a;\n      try {\n        const params = (0, _libHelpers.parseParametersFromURL)(window.location.href);\n        let callbackUrlType = 'none';\n        if (this._isImplicitGrantCallback(params)) {\n          callbackUrlType = 'implicit';\n        } else if (await this._isPKCECallback(params)) {\n          callbackUrlType = 'pkce';\n        }\n        /**\n         * Attempt to get the session from the URL only if these conditions are fulfilled\n         *\n         * Note: If the URL isn't one of the callback url types (implicit or pkce),\n         * then there could be an existing session so we don't want to prematurely remove it\n         */\n        if ((0, _libHelpers.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n          const {\n            data,\n            error\n          } = await this._getSessionFromURL(params, callbackUrlType);\n          if (error) {\n            this._debug('#_initialize()', 'error detecting session from URL', error);\n            if ((0, _libErrors.isAuthImplicitGrantRedirectError)(error)) {\n              const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n              if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                return {\n                  error\n                };\n              }\n            }\n            // failed login attempt via url,\n            // remove old session as in verifyOtp, signUp and signInWith*\n            await this._removeSession();\n            return {\n              error\n            };\n          }\n          const {\n            session,\n            redirectType\n          } = data;\n          this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n          await this._saveSession(session);\n          setTimeout(async () => {\n            if (redirectType === 'recovery') {\n              await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n            } else {\n              await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n          }, 0);\n          return {\n            error: null\n          };\n        }\n        // no login attempt via callback url try to recover session from storage\n        await this._recoverAndRefresh();\n        return {\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            error\n          };\n        }\n        return {\n          error: new _libErrors.AuthUnknownError('Unexpected error during initialization', error)\n        };\n      } finally {\n        await this._handleVisibilityChange();\n        this._debug('#_initialize()', 'end');\n      }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n      var _a, _b, _c;\n      try {\n        const res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n            gotrue_meta_security: {\n              captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n            }\n          },\n          xform: _libFetch._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n      var _a, _b, _c;\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, _libHelpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: {\n              email,\n              password,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            xform: _libFetch._sessionResponse\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n              channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _libFetch._sessionResponse\n          });\n        } else {\n          throw new _libErrors.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              email,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _libFetch._sessionResponsePassword\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _libFetch._sessionResponsePassword\n          });\n        } else {\n          throw new _libErrors.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _libErrors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({\n            user: data.user,\n            session: data.session\n          }, data.weak_password ? {\n            weakPassword: data.weak_password\n          } : null),\n          error\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n      var _a, _b, _c, _d;\n      return await this._handleProviderSignIn(credentials.provider, {\n        redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n        scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n        queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n        skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n      });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n      await this.initializePromise;\n      return this._acquireLock(-1, async () => {\n        return this._exchangeCodeForSession(authCode);\n      });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n     * both of which derive from the EIP-4361 standard\n     * With slight variation on Solana's side.\n     * @reference https://eips.ethereum.org/EIPS/eip-4361\n     */\n    async signInWithWeb3(credentials) {\n      const {\n        chain\n      } = credentials;\n      switch (chain) {\n        case 'ethereum':\n          return await this.signInWithEthereum(credentials);\n        case 'solana':\n          return await this.signInWithSolana(credentials);\n        default:\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n      }\n    }\n    async signInWithEthereum(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n      // TODO: flatten type\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, _libHelpers.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n            resolvedWallet = windowAny.ethereum;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        const accounts = await resolvedWallet.request({\n          method: 'eth_requestAccounts'\n        }).then(accs => accs).catch(() => {\n          throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n        });\n        if (!accounts || accounts.length === 0) {\n          throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n        }\n        const address = (0, _libWeb3Ethereum.getAddress)(accounts[0]);\n        let chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n        if (!chainId) {\n          const chainIdHex = await resolvedWallet.request({\n            method: 'eth_chainId'\n          });\n          chainId = (0, _libWeb3Ethereum.fromHex)(chainIdHex);\n        }\n        const siweMessage = {\n          domain: url.host,\n          address: address,\n          statement: statement,\n          uri: url.href,\n          version: '1',\n          chainId: chainId,\n          nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n          issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n          expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n          notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n          requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n          resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n        };\n        message = (0, _libWeb3Ethereum.createSiweMessage)(siweMessage);\n        // Sign message\n        signature = await resolvedWallet.request({\n          method: 'personal_sign',\n          params: [(0, _libWeb3Ethereum.toHex)(message), address]\n        });\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'ethereum',\n            message,\n            signature\n          }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n            }\n          } : null),\n          xform: _libFetch._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _libErrors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async signInWithSolana(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, _libHelpers.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n            resolvedWallet = windowAny.solana;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n          const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n            issuedAt: new Date().toISOString()\n          }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n            // non-overridable properties\n            version: '1',\n            domain: url.host,\n            uri: url.href\n          }), statement ? {\n            statement\n          } : null));\n          let outputToProcess;\n          if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n            outputToProcess = output[0];\n          } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n            outputToProcess = output;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n          }\n          if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n            message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n            signature = outputToProcess.signature;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n          }\n        } else {\n          if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n            throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n          }\n          message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n          const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n          if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n            throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n          }\n          signature = maybeSignature;\n        }\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'solana',\n            message,\n            signature: (0, _libBase64url.bytesToBase64URL)(signature)\n          }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n            }\n          } : null),\n          xform: _libFetch._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _libErrors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _exchangeCodeForSession(authCode) {\n      const storageItem = await (0, _libHelpers.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n      try {\n        const {\n          data,\n          error\n        } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n          headers: this.headers,\n          body: {\n            auth_code: authCode,\n            code_verifier: codeVerifier\n          },\n          xform: _libFetch._sessionResponse\n        });\n        await (0, _libHelpers.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error: new _libErrors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign(Object.assign({}, data), {\n            redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n          }),\n          error\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n      try {\n        const {\n          options,\n          provider,\n          token,\n          access_token,\n          nonce\n        } = credentials;\n        const res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n          headers: this.headers,\n          body: {\n            provider,\n            id_token: token,\n            access_token,\n            nonce,\n            gotrue_meta_security: {\n              captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n            }\n          },\n          xform: _libFetch._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new _libErrors.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n      var _a, _b, _c, _d, _e;\n      try {\n        if ('email' in credentials) {\n          const {\n            email,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, _libHelpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            error\n          } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              email,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        if ('phone' in credentials) {\n          const {\n            phone,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              phone,\n              data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n              create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms'\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new _libErrors.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n      var _a, _b;\n      try {\n        let redirectTo = undefined;\n        let captchaToken = undefined;\n        if ('options' in params) {\n          redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n          captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n        }\n        const {\n          data,\n          error\n        } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/verify`, {\n          headers: this.headers,\n          body: Object.assign(Object.assign({}, params), {\n            gotrue_meta_security: {\n              captcha_token: captchaToken\n            }\n          }),\n          redirectTo,\n          xform: _libFetch._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data) {\n          throw new Error('An error occurred on token verification.');\n        }\n        const session = data.session;\n        const user = data.user;\n        if (session === null || session === void 0 ? void 0 : session.access_token) {\n          await this._saveSession(session);\n          await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n      var _a, _b, _c;\n      try {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n          ;\n          [codeChallenge, codeChallengeMethod] = await (0, _libHelpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        }\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/sso`, {\n          body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n            provider_id: params.providerId\n          } : null), 'domain' in params ? {\n            domain: params.domain\n          } : null), {\n            redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n          }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: params.options.captchaToken\n            }\n          } : null), {\n            skip_http_redirect: true,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod\n          }),\n          headers: this.headers,\n          xform: _libFetch._ssoResponse\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._reauthenticate();\n      });\n    }\n    async _reauthenticate() {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) throw sessionError;\n          if (!session) throw new _libErrors.AuthSessionMissingError();\n          const {\n            error\n          } = await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n            headers: this.headers,\n            jwt: session.access_token\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n      try {\n        const endpoint = `${this.url}/resend`;\n        if ('email' in credentials) {\n          const {\n            email,\n            type,\n            options\n          } = credentials;\n          const {\n            error\n          } = await (0, _libFetch._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              email,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            type,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, _libFetch._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              phone,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new _libErrors.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return this._useSession(async result => {\n          return result;\n        });\n      });\n      return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n      this._debug('#_acquireLock', 'begin', acquireTimeout);\n      try {\n        if (this.lockAcquired) {\n          const last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n          const result = (async () => {\n            await last;\n            return await fn();\n          })();\n          this.pendingInLock.push((async () => {\n            try {\n              await result;\n            } catch (e) {\n              // we just care if it finished\n            }\n          })());\n          return result;\n        }\n        return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n          this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n          try {\n            this.lockAcquired = true;\n            const result = fn();\n            this.pendingInLock.push((async () => {\n              try {\n                await result;\n              } catch (e) {\n                // we just care if it finished\n              }\n            })());\n            await result;\n            // keep draining the queue until there's nothing to wait on\n            while (this.pendingInLock.length) {\n              const waitOn = [...this.pendingInLock];\n              await Promise.all(waitOn);\n              this.pendingInLock.splice(0, waitOn.length);\n            }\n            return await result;\n          } finally {\n            this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n            this.lockAcquired = false;\n          }\n        });\n      } finally {\n        this._debug('#_acquireLock', 'end');\n      }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n      this._debug('#_useSession', 'begin');\n      try {\n        // the use of __loadSession here is the only correct use of the function!\n        const result = await this.__loadSession();\n        return await fn(result);\n      } finally {\n        this._debug('#_useSession', 'end');\n      }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n      this._debug('#__loadSession()', 'begin');\n      if (!this.lockAcquired) {\n        this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n      }\n      try {\n        let currentSession = null;\n        const maybeSession = await (0, _libHelpers.getItemAsync)(this.storage, this.storageKey);\n        this._debug('#getSession()', 'session from storage', maybeSession);\n        if (maybeSession !== null) {\n          if (this._isValidSession(maybeSession)) {\n            currentSession = maybeSession;\n          } else {\n            this._debug('#getSession()', 'session from storage is not valid');\n            await this._removeSession();\n          }\n        }\n        if (!currentSession) {\n          return {\n            data: {\n              session: null\n            },\n            error: null\n          };\n        }\n        // A session is considered expired before the access token _actually_\n        // expires. When the autoRefreshToken option is off (or when the tab is\n        // in the background), very eager users of getSession() -- like\n        // realtime-js -- might send a valid JWT which will expire by the time it\n        // reaches the server.\n        const hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < _libConstants.EXPIRY_MARGIN_MS : false;\n        this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n        if (!hasExpired) {\n          if (this.userStorage) {\n            const maybeUser = await (0, _libHelpers.getItemAsync)(this.userStorage, this.storageKey + '-user');\n            if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n              currentSession.user = maybeUser.user;\n            } else {\n              currentSession.user = (0, _libHelpers.userNotAvailableProxy)();\n            }\n          }\n          if (this.storage.isServer && currentSession.user) {\n            let suppressWarning = this.suppressGetSessionWarning;\n            const proxySession = new Proxy(currentSession, {\n              get: (target, prop, receiver) => {\n                if (!suppressWarning && prop === 'user') {\n                  // only show warning when the user object is being accessed from the server\n                  console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                  suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                  this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                }\n                return Reflect.get(target, prop, receiver);\n              }\n            });\n            currentSession = proxySession;\n          }\n          return {\n            data: {\n              session: currentSession\n            },\n            error: null\n          };\n        }\n        const {\n          data: session,\n          error\n        } = await this._callRefreshToken(currentSession.refresh_token);\n        if (error) {\n          return {\n            data: {\n              session: null\n            },\n            error\n          };\n        }\n        return {\n          data: {\n            session\n          },\n          error: null\n        };\n      } finally {\n        this._debug('#__loadSession()', 'end');\n      }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n      if (jwt) {\n        return await this._getUser(jwt);\n      }\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return await this._getUser();\n      });\n      return result;\n    }\n    async _getUser(jwt) {\n      try {\n        if (jwt) {\n          return await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: jwt,\n            xform: _libFetch._userResponse\n          });\n        }\n        return await this._useSession(async result => {\n          var _a, _b, _c;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          // returns an error if there is no access_token or custom authorization header\n          if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n            return {\n              data: {\n                user: null\n              },\n              error: new _libErrors.AuthSessionMissingError()\n            };\n          }\n          return await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n            xform: _libFetch._userResponse\n          });\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          if ((0, _libErrors.isAuthSessionMissingError)(error)) {\n            // JWT contains a `session_id` which does not correspond to an active\n            // session in the database, indicating the user is signed out.\n            await this._removeSession();\n            await (0, _libHelpers.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          }\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._updateUser(attributes, options);\n      });\n    }\n    async _updateUser(attributes, options = {}) {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            throw sessionError;\n          }\n          if (!sessionData.session) {\n            throw new _libErrors.AuthSessionMissingError();\n          }\n          const session = sessionData.session;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce' && attributes.email != null) {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, _libHelpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            data,\n            error: userError\n          } = await (0, _libFetch._request)(this.fetch, 'PUT', `${this.url}/user`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: Object.assign(Object.assign({}, attributes), {\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            }),\n            jwt: session.access_token,\n            xform: _libFetch._userResponse\n          });\n          if (userError) throw userError;\n          session.user = data.user;\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('USER_UPDATED', session);\n          return {\n            data: {\n              user: session.user\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._setSession(currentSession);\n      });\n    }\n    async _setSession(currentSession) {\n      try {\n        if (!currentSession.access_token || !currentSession.refresh_token) {\n          throw new _libErrors.AuthSessionMissingError();\n        }\n        const timeNow = Date.now() / 1000;\n        let expiresAt = timeNow;\n        let hasExpired = true;\n        let session = null;\n        const {\n          payload\n        } = (0, _libHelpers.decodeJWT)(currentSession.access_token);\n        if (payload.exp) {\n          expiresAt = payload.exp;\n          hasExpired = expiresAt <= timeNow;\n        }\n        if (hasExpired) {\n          const {\n            data: refreshedSession,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!refreshedSession) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          session = refreshedSession;\n        } else {\n          const {\n            data,\n            error\n          } = await this._getUser(currentSession.access_token);\n          if (error) {\n            throw error;\n          }\n          session = {\n            access_token: currentSession.access_token,\n            refresh_token: currentSession.refresh_token,\n            user: data.user,\n            token_type: 'bearer',\n            expires_in: expiresAt - timeNow,\n            expires_at: expiresAt\n          };\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user: session.user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._refreshSession(currentSession);\n      });\n    }\n    async _refreshSession(currentSession) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          if (!currentSession) {\n            const {\n              data,\n              error\n            } = result;\n            if (error) {\n              throw error;\n            }\n            currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n          }\n          if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n            throw new _libErrors.AuthSessionMissingError();\n          }\n          const {\n            data: session,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          return {\n            data: {\n              user: session.user,\n              session\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n      try {\n        if (!(0, _libHelpers.isBrowser)()) throw new _libErrors.AuthImplicitGrantRedirectError('No browser detected.');\n        // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n        if (params.error || params.error_description || params.error_code) {\n          // The error class returned implies that the redirect is from an implicit grant flow\n          // but it could also be from a redirect error from a PKCE flow.\n          throw new _libErrors.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code'\n          });\n        }\n        // Checks for mismatches between the flowType initialised in the client and the URL parameters\n        switch (callbackUrlType) {\n          case 'implicit':\n            if (this.flowType === 'pkce') {\n              throw new _libErrors.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n            }\n            break;\n          case 'pkce':\n            if (this.flowType === 'implicit') {\n              throw new _libErrors.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n            }\n            break;\n          default:\n          // there's no mismatch so we continue\n        }\n        // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n        if (callbackUrlType === 'pkce') {\n          this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n          if (!params.code) throw new _libErrors.AuthPKCEGrantCodeExchangeError('No code detected.');\n          const {\n            data,\n            error\n          } = await this._exchangeCodeForSession(params.code);\n          if (error) throw error;\n          const url = new URL(window.location.href);\n          url.searchParams.delete('code');\n          window.history.replaceState(window.history.state, '', url.toString());\n          return {\n            data: {\n              session: data.session,\n              redirectType: null\n            },\n            error: null\n          };\n        }\n        const {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          refresh_token,\n          expires_in,\n          expires_at,\n          token_type\n        } = params;\n        if (!access_token || !expires_in || !refresh_token || !token_type) {\n          throw new _libErrors.AuthImplicitGrantRedirectError('No session defined in URL');\n        }\n        const timeNow = Math.round(Date.now() / 1000);\n        const expiresIn = parseInt(expires_in);\n        let expiresAt = timeNow + expiresIn;\n        if (expires_at) {\n          expiresAt = parseInt(expires_at);\n        }\n        const actuallyExpiresIn = expiresAt - timeNow;\n        if (actuallyExpiresIn * 1000 <= _libConstants.AUTO_REFRESH_TICK_DURATION_MS) {\n          console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n        }\n        const issuedAt = expiresAt - expiresIn;\n        if (timeNow - issuedAt >= 120) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n        } else if (timeNow - issuedAt < 0) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n        }\n        const {\n          data,\n          error\n        } = await this._getUser(access_token);\n        if (error) throw error;\n        const session = {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          expires_in: expiresIn,\n          expires_at: expiresAt,\n          refresh_token,\n          token_type: token_type,\n          user: data.user\n        };\n        // Remove tokens from URL\n        window.location.hash = '';\n        this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n        return {\n          data: {\n            session,\n            redirectType: params.type\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n      return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n      const currentStorageContent = await (0, _libHelpers.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = {\n      scope: 'global'\n    }) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._signOut(options);\n      });\n    }\n    async _signOut({\n      scope\n    } = {\n      scope: 'global'\n    }) {\n      return await this._useSession(async result => {\n        var _a;\n        const {\n          data,\n          error: sessionError\n        } = result;\n        if (sessionError) {\n          return {\n            error: sessionError\n          };\n        }\n        const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n        if (accessToken) {\n          const {\n            error\n          } = await this.admin.signOut(accessToken, scope);\n          if (error) {\n            // ignore 404s since user might not exist anymore\n            // ignore 401s since an invalid or expired JWT should sign out the current session\n            if (!((0, _libErrors.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n              return {\n                error\n              };\n            }\n          }\n        }\n        if (scope !== 'others') {\n          await this._removeSession();\n          await (0, _libHelpers.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        }\n        return {\n          error: null\n        };\n      });\n    }\n    onAuthStateChange(callback) {\n      const id = (0, _libHelpers.uuid)();\n      const subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this._debug('#unsubscribe()', 'state change callback with id removed', id);\n          this.stateChangeEmitters.delete(id);\n        }\n      };\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n      this.stateChangeEmitters.set(id, subscription);\n      (async () => {\n        await this.initializePromise;\n        await this._acquireLock(-1, async () => {\n          this._emitInitialSession(id);\n        });\n      })();\n      return {\n        data: {\n          subscription\n        }\n      };\n    }\n    async _emitInitialSession(id) {\n      return await this._useSession(async result => {\n        var _a, _b;\n        try {\n          const {\n            data: {\n              session\n            },\n            error\n          } = result;\n          if (error) throw error;\n          await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n        } catch (err) {\n          await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n          console.error(err);\n        }\n      });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n      let codeChallenge = null;\n      let codeChallengeMethod = null;\n      if (this.flowType === 'pkce') {\n        ;\n        [codeChallenge, codeChallengeMethod] = await (0, _libHelpers.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n        );\n      }\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/recover`, {\n          body: {\n            email,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n            gotrue_meta_security: {\n              captcha_token: options.captchaToken\n            }\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this.getUser();\n        if (error) throw error;\n        return {\n          data: {\n            identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async linkIdentity(credentials) {\n      if ('token' in credentials) {\n        return this.linkIdentityIdToken(credentials);\n      }\n      return this.linkIdentityOAuth(credentials);\n    }\n    async linkIdentityOAuth(credentials) {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this._useSession(async result => {\n          var _a, _b, _c, _d, _e;\n          const {\n            data,\n            error\n          } = result;\n          if (error) throw error;\n          const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: true\n          });\n          return await (0, _libFetch._request)(this.fetch, 'GET', url, {\n            headers: this.headers,\n            jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n          });\n        });\n        if (error) throw error;\n        if ((0, _libHelpers.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n          window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n        }\n        return {\n          data: {\n            provider: credentials.provider,\n            url: data === null || data === void 0 ? void 0 : data.url\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              provider: credentials.provider,\n              url: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async linkIdentityIdToken(credentials) {\n      return await this._useSession(async result => {\n        var _a;\n        try {\n          const {\n            error: sessionError,\n            data: {\n              session\n            }\n          } = result;\n          if (sessionError) throw sessionError;\n          const {\n            options,\n            provider,\n            token,\n            access_token,\n            nonce\n          } = credentials;\n          const res = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n            headers: this.headers,\n            jwt: (_a = session === null || session === void 0 ? void 0 : session.access_token) !== null && _a !== void 0 ? _a : undefined,\n            body: {\n              provider,\n              id_token: token,\n              access_token,\n              nonce,\n              link_identity: true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: _libFetch._sessionResponse\n          });\n          const {\n            data,\n            error\n          } = res;\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error\n            };\n          } else if (!data || !data.session || !data.user) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: new _libErrors.AuthInvalidTokenResponseError()\n            };\n          }\n          if (data.session) {\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('USER_UPDATED', data.session);\n          }\n          return {\n            data,\n            error\n          };\n        } catch (error) {\n          if ((0, _libErrors.isAuthError)(error)) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          return await (0, _libFetch._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n            headers: this.headers,\n            jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n          });\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n      const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        const startedAt = Date.now();\n        // will attempt to refresh the token with exponential backoff\n        return await (0, _libHelpers.retryable)(async attempt => {\n          if (attempt > 0) {\n            await (0, _libHelpers.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n          }\n          this._debug(debugName, 'refreshing attempt', attempt);\n          return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: {\n              refresh_token: refreshToken\n            },\n            headers: this.headers,\n            xform: _libFetch._sessionResponse\n          });\n        }, (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt);\n          return error && (0, _libErrors.isAuthRetryableFetchError)(error) &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + nextBackOffInterval - startedAt < _libConstants.AUTO_REFRESH_TICK_DURATION_MS;\n        });\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    _isValidSession(maybeSession) {\n      const isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n      const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n        redirectTo: options.redirectTo,\n        scopes: options.scopes,\n        queryParams: options.queryParams\n      });\n      this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n      // try to open on the browser\n      if ((0, _libHelpers.isBrowser)() && !options.skipBrowserRedirect) {\n        window.location.assign(url);\n      }\n      return {\n        data: {\n          provider,\n          url\n        },\n        error: null\n      };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n      var _a, _b;\n      const debugName = '#_recoverAndRefresh()';\n      this._debug(debugName, 'begin');\n      try {\n        const currentSession = await (0, _libHelpers.getItemAsync)(this.storage, this.storageKey);\n        if (currentSession && this.userStorage) {\n          let maybeUser = await (0, _libHelpers.getItemAsync)(this.userStorage, this.storageKey + '-user');\n          if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n            // storage and userStorage are the same storage medium, for example\n            // window.localStorage if userStorage does not have the user from\n            // storage stored, store it first thereby migrating the user object\n            // from storage -> userStorage\n            maybeUser = {\n              user: currentSession.user\n            };\n            await (0, _libHelpers.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n          }\n          currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, _libHelpers.userNotAvailableProxy)();\n        } else if (currentSession && !currentSession.user) {\n          // user storage is not set, let's check if it was previously enabled so\n          // we bring back the storage as it should be\n          if (!currentSession.user) {\n            // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n            const separateUser = await (0, _libHelpers.getItemAsync)(this.storage, this.storageKey + '-user');\n            if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n              currentSession.user = separateUser.user;\n              await (0, _libHelpers.removeItemAsync)(this.storage, this.storageKey + '-user');\n              await (0, _libHelpers.setItemAsync)(this.storage, this.storageKey, currentSession);\n            } else {\n              currentSession.user = (0, _libHelpers.userNotAvailableProxy)();\n            }\n          }\n        }\n        this._debug(debugName, 'session from storage', currentSession);\n        if (!this._isValidSession(currentSession)) {\n          this._debug(debugName, 'session is not valid');\n          if (currentSession !== null) {\n            await this._removeSession();\n          }\n          return;\n        }\n        const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < _libConstants.EXPIRY_MARGIN_MS;\n        this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${_libConstants.EXPIRY_MARGIN_MS}s`);\n        if (expiresWithMargin) {\n          if (this.autoRefreshToken && currentSession.refresh_token) {\n            const {\n              error\n            } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n              console.error(error);\n              if (!(0, _libErrors.isAuthRetryableFetchError)(error)) {\n                this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                await this._removeSession();\n              }\n            }\n          }\n        } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n          // If we have a proxy user, try to get the real user data\n          try {\n            const {\n              data,\n              error: userError\n            } = await this._getUser(currentSession.access_token);\n            if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n              currentSession.user = data.user;\n              await this._saveSession(currentSession);\n              await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            } else {\n              this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n            }\n          } catch (getUserError) {\n            console.error('Error getting user data:', getUserError);\n            this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n          }\n        } else {\n          // no need to persist currentSession again, as we just loaded it from\n          // local storage; persisting it again may overwrite a value saved by\n          // another client with access to the same local storage\n          await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n        }\n      } catch (err) {\n        this._debug(debugName, 'error', err);\n        console.error(err);\n        return;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    async _callRefreshToken(refreshToken) {\n      var _a, _b;\n      if (!refreshToken) {\n        throw new _libErrors.AuthSessionMissingError();\n      }\n      // refreshing is already in progress\n      if (this.refreshingDeferred) {\n        return this.refreshingDeferred.promise;\n      }\n      const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        this.refreshingDeferred = new _libHelpers.Deferred();\n        const {\n          data,\n          error\n        } = await this._refreshAccessToken(refreshToken);\n        if (error) throw error;\n        if (!data.session) throw new _libErrors.AuthSessionMissingError();\n        await this._saveSession(data.session);\n        await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n        const result = {\n          data: data.session,\n          error: null\n        };\n        this.refreshingDeferred.resolve(result);\n        return result;\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, _libErrors.isAuthError)(error)) {\n          const result = {\n            data: null,\n            error\n          };\n          if (!(0, _libErrors.isAuthRetryableFetchError)(error)) {\n            await this._removeSession();\n          }\n          (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n          return result;\n        }\n        (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n        throw error;\n      } finally {\n        this.refreshingDeferred = null;\n        this._debug(debugName, 'end');\n      }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n      const debugName = `#_notifyAllSubscribers(${event})`;\n      this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n      try {\n        if (this.broadcastChannel && broadcast) {\n          this.broadcastChannel.postMessage({\n            event,\n            session\n          });\n        }\n        const errors = [];\n        const promises = Array.from(this.stateChangeEmitters.values()).map(async x => {\n          try {\n            await x.callback(event, session);\n          } catch (e) {\n            errors.push(e);\n          }\n        });\n        await Promise.all(promises);\n        if (errors.length > 0) {\n          for (let i = 0; i < errors.length; i += 1) {\n            console.error(errors[i]);\n          }\n          throw errors[0];\n        }\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n      this._debug('#_saveSession()', session);\n      // _saveSession is always called whenever a new session has been acquired\n      // so we can safely suppress the warning returned by future getSession calls\n      this.suppressGetSessionWarning = true;\n      // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n      const sessionToProcess = Object.assign({}, session);\n      const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n      if (this.userStorage) {\n        if (!userIsProxy && sessionToProcess.user) {\n          // If it's a real user object, save it to userStorage.\n          await (0, _libHelpers.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n            user: sessionToProcess.user\n          });\n        } else if (userIsProxy) {\n          // If it's the proxy, it means user was not found in userStorage.\n          // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n          // or simply not save the proxy. For now, we don't save the proxy here.\n          // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n        }\n        // Prepare the main session data for primary storage: remove the user property before cloning\n        // This is important because the original session.user might be the proxy\n        const mainSessionData = Object.assign({}, sessionToProcess);\n        delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n        const clonedMainSessionData = (0, _libHelpers.deepClone)(mainSessionData);\n        await (0, _libHelpers.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n      } else {\n        // No userStorage is configured.\n        // In this case, session.user should ideally not be a proxy.\n        // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n        const clonedSession = (0, _libHelpers.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n        await (0, _libHelpers.setItemAsync)(this.storage, this.storageKey, clonedSession);\n      }\n    }\n    async _removeSession() {\n      this._debug('#_removeSession()');\n      await (0, _libHelpers.removeItemAsync)(this.storage, this.storageKey);\n      await (0, _libHelpers.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n      await (0, _libHelpers.removeItemAsync)(this.storage, this.storageKey + '-user');\n      if (this.userStorage) {\n        await (0, _libHelpers.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n      }\n      await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n      const callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n      try {\n        if (callback && (0, _libHelpers.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n      await this._stopAutoRefresh();\n      this._debug('#_startAutoRefresh()');\n      const ticker = setInterval(() => this._autoRefreshTokenTick(), _libConstants.AUTO_REFRESH_TICK_DURATION_MS);\n      this.autoRefreshTicker = ticker;\n      if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n        // ticker is a NodeJS Timeout object that has an `unref` method\n        // https://nodejs.org/api/timers.html#timeoutunref\n        // When auto refresh is used in NodeJS (like for testing) the\n        // `setInterval` is preventing the process from being marked as\n        // finished and tests run endlessly. This can be prevented by calling\n        // `unref()` on the returned object.\n        ticker.unref();\n        // @ts-expect-error TS has no context of Deno\n      } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n        // similar like for NodeJS, but with the Deno API\n        // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n        // @ts-expect-error TS has no context of Deno\n        Deno.unrefTimer(ticker);\n      }\n      // run the tick immediately, but in the next pass of the event loop so that\n      // #_initialize can be allowed to complete without recursively waiting on\n      // itself\n      setTimeout(async () => {\n        await this.initializePromise;\n        await this._autoRefreshTokenTick();\n      }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n      this._debug('#_stopAutoRefresh()');\n      const ticker = this.autoRefreshTicker;\n      this.autoRefreshTicker = null;\n      if (ticker) {\n        clearInterval(ticker);\n      }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n      this._debug('#_autoRefreshTokenTick()', 'begin');\n      try {\n        await this._acquireLock(0, async () => {\n          try {\n            const now = Date.now();\n            try {\n              return await this._useSession(async result => {\n                const {\n                  data: {\n                    session\n                  }\n                } = result;\n                if (!session || !session.refresh_token || !session.expires_at) {\n                  this._debug('#_autoRefreshTokenTick()', 'no session');\n                  return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / _libConstants.AUTO_REFRESH_TICK_DURATION_MS);\n                this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${_libConstants.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${_libConstants.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                if (expiresInTicks <= _libConstants.AUTO_REFRESH_TICK_THRESHOLD) {\n                  await this._callRefreshToken(session.refresh_token);\n                }\n              });\n            } catch (e) {\n              console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n          } finally {\n            this._debug('#_autoRefreshTokenTick()', 'end');\n          }\n        });\n      } catch (e) {\n        if (e.isAcquireTimeout || e instanceof _libLocks.LockAcquireTimeoutError) {\n          this._debug('auto refresh token tick lock not available');\n        } else {\n          throw e;\n        }\n      }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n      this._debug('#_handleVisibilityChange()');\n      if (!(0, _libHelpers.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n        if (this.autoRefreshToken) {\n          // in non-browser environments the refresh token ticker runs always\n          this.startAutoRefresh();\n        }\n        return false;\n      }\n      try {\n        this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n        window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n        // now immediately call the visbility changed callback to setup with the\n        // current visbility state\n        await this._onVisibilityChanged(true); // initial call\n      } catch (error) {\n        console.error('_handleVisibilityChange', error);\n      }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n      const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n      this._debug(methodName, 'visibilityState', document.visibilityState);\n      if (document.visibilityState === 'visible') {\n        if (this.autoRefreshToken) {\n          // in browser environments the refresh token ticker runs only on focused tabs\n          // which prevents race conditions\n          this._startAutoRefresh();\n        }\n        if (!calledFromInitialize) {\n          // called when the visibility has changed, i.e. the browser\n          // transitioned from hidden -> visible so we need to see if the session\n          // should be recovered immediately... but to do that we need to acquire\n          // the lock first asynchronously\n          await this.initializePromise;\n          await this._acquireLock(-1, async () => {\n            if (document.visibilityState !== 'visible') {\n              this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n              // visibility has changed while waiting for the lock, abort\n              return;\n            }\n            // recover the session\n            await this._recoverAndRefresh();\n          });\n        }\n      } else if (document.visibilityState === 'hidden') {\n        if (this.autoRefreshToken) {\n          this._stopAutoRefresh();\n        }\n      }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n      const urlParams = [`provider=${encodeURIComponent(provider)}`];\n      if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n      }\n      if (options === null || options === void 0 ? void 0 : options.scopes) {\n        urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n      }\n      if (this.flowType === 'pkce') {\n        const [codeChallenge, codeChallengeMethod] = await (0, _libHelpers.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        const flowParams = new URLSearchParams({\n          code_challenge: `${encodeURIComponent(codeChallenge)}`,\n          code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n        });\n        urlParams.push(flowParams.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.queryParams) {\n        const query = new URLSearchParams(options.queryParams);\n        urlParams.push(query.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n        urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n      }\n      return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          return await (0, _libFetch._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _enroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          const body = Object.assign({\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType\n          }, params.factorType === 'phone' ? {\n            phone: params.phone\n          } : params.factorType === 'totp' ? {\n            issuer: params.issuer\n          } : {});\n          const {\n            data,\n            error\n          } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/factors`, {\n            body,\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n          if (error) {\n            return {\n              data: null,\n              error\n            };\n          }\n          if (params.factorType === 'totp' && data.type === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n            data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n          }\n          return {\n            data,\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _verify(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const body = Object.assign({\n              challenge_id: params.challengeId\n            }, 'webauthn' in params ? {\n              webauthn: Object.assign(Object.assign({}, params.webauthn), {\n                credential_response: params.webauthn.type === 'create' ? (0, _libWebauthn.serializeCredentialCreationResponse)(params.webauthn.credential_response) : (0, _libWebauthn.serializeCredentialRequestResponse)(params.webauthn.credential_response)\n              })\n            } : {\n              code: params.code\n            });\n            const {\n              data,\n              error\n            } = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n              body,\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (error) {\n              return {\n                data: null,\n                error\n              };\n            }\n            await this._saveSession(Object.assign({\n              expires_at: Math.round(Date.now() / 1000) + data.expires_in\n            }, data));\n            await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n            return {\n              data,\n              error\n            };\n          });\n        } catch (error) {\n          if ((0, _libErrors.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    async _challenge(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const response = await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n              body: params,\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (response.error) {\n              return response;\n            }\n            const {\n              data\n            } = response;\n            if (data.type !== 'webauthn') {\n              return {\n                data,\n                error: null\n              };\n            }\n            switch (data.webauthn.type) {\n              case 'create':\n                return {\n                  data: Object.assign(Object.assign({}, data), {\n                    webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                      credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                        publicKey: (0, _libWebauthn.deserializeCredentialCreationOptions)(data.webauthn.credential_options.publicKey)\n                      })\n                    })\n                  }),\n                  error: null\n                };\n              case 'request':\n                return {\n                  data: Object.assign(Object.assign({}, data), {\n                    webauthn: Object.assign(Object.assign({}, data.webauthn), {\n                      credential_options: Object.assign(Object.assign({}, data.webauthn.credential_options), {\n                        publicKey: (0, _libWebauthn.deserializeCredentialRequestOptions)(data.webauthn.credential_options.publicKey)\n                      })\n                    })\n                  }),\n                  error: null\n                };\n            }\n          });\n        } catch (error) {\n          if ((0, _libErrors.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n      // both _challenge and _verify independently acquire the lock, so no need\n      // to acquire it here\n      const {\n        data: challengeData,\n        error: challengeError\n      } = await this._challenge({\n        factorId: params.factorId\n      });\n      if (challengeError) {\n        return {\n          data: null,\n          error: challengeError\n        };\n      }\n      return await this._verify({\n        factorId: params.factorId,\n        challengeId: challengeData.id,\n        code: params.code\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n      var _a;\n      // use #getUser instead of #_getUser as the former acquires a lock\n      const {\n        data: {\n          user\n        },\n        error: userError\n      } = await this.getUser();\n      if (userError) {\n        return {\n          data: null,\n          error: userError\n        };\n      }\n      const data = {\n        all: [],\n        phone: [],\n        totp: [],\n        webauthn: []\n      };\n      // loop over the factors ONCE\n      for (const factor of (_a = user === null || user === void 0 ? void 0 : user.factors) !== null && _a !== void 0 ? _a : []) {\n        data.all.push(factor);\n        if (factor.status === 'verified') {\n          ;\n          data[factor.factor_type].push(factor);\n        }\n      }\n      return {\n        data,\n        error: null\n      };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n      return this._acquireLock(-1, async () => {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                currentLevel: null,\n                nextLevel: null,\n                currentAuthenticationMethods: []\n              },\n              error: null\n            };\n          }\n          const {\n            payload\n          } = (0, _libHelpers.decodeJWT)(session.access_token);\n          let currentLevel = null;\n          if (payload.aal) {\n            currentLevel = payload.aal;\n          }\n          let nextLevel = currentLevel;\n          const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n          if (verifiedFactors.length > 0) {\n            nextLevel = 'aal2';\n          }\n          const currentAuthenticationMethods = payload.amr || [];\n          return {\n            data: {\n              currentLevel,\n              nextLevel,\n              currentAuthenticationMethods\n            },\n            error: null\n          };\n        });\n      });\n    }\n    async fetchJwk(kid, jwks = {\n      keys: []\n    }) {\n      // try fetching from the supplied jwks\n      let jwk = jwks.keys.find(key => key.kid === kid);\n      if (jwk) {\n        return jwk;\n      }\n      const now = Date.now();\n      // try fetching from cache\n      jwk = this.jwks.keys.find(key => key.kid === kid);\n      // jwk exists and jwks isn't stale\n      if (jwk && this.jwks_cached_at + _libConstants.JWKS_TTL > now) {\n        return jwk;\n      }\n      // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n      const {\n        data,\n        error\n      } = await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n        headers: this.headers\n      });\n      if (error) {\n        throw error;\n      }\n      if (!data.keys || data.keys.length === 0) {\n        return null;\n      }\n      this.jwks = data;\n      this.jwks_cached_at = now;\n      // Find the signing key\n      jwk = data.keys.find(key => key.kid === kid);\n      if (!jwk) {\n        return null;\n      }\n      return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n      try {\n        let token = jwt;\n        if (!token) {\n          const {\n            data,\n            error\n          } = await this.getSession();\n          if (error || !data.session) {\n            return {\n              data: null,\n              error\n            };\n          }\n          token = data.session.access_token;\n        }\n        const {\n          header,\n          payload,\n          signature,\n          raw: {\n            header: rawHeader,\n            payload: rawPayload\n          }\n        } = (0, _libHelpers.decodeJWT)(token);\n        if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n          // Reject expired JWTs should only happen if jwt argument was passed\n          (0, _libHelpers.validateExp)(payload.exp);\n        }\n        const signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n          keys: options.keys\n        } : options === null || options === void 0 ? void 0 : options.jwks);\n        // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n        if (!signingKey) {\n          const {\n            error\n          } = await this.getUser(token);\n          if (error) {\n            throw error;\n          }\n          // getUser succeeds so the claims in the JWT can be trusted\n          return {\n            data: {\n              claims: payload,\n              header,\n              signature\n            },\n            error: null\n          };\n        }\n        const algorithm = (0, _libHelpers.getAlgorithm)(header.alg);\n        // Convert JWK to CryptoKey\n        const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n        // Verify the signature\n        const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0, _libBase64url.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n        if (!isValid) {\n          throw new _libErrors.AuthInvalidJwtError('Invalid JWT signature');\n        }\n        // If verification succeeds, decode and return claims\n        return {\n          data: {\n            claims: payload,\n            header,\n            signature\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  GoTrueClient.nextInstanceID = 0;\n  var _default = GoTrueClient;\n});","lineCount":3169,"map":[[12,2,2554,0,"Object"],[12,8,2554,0],[12,9,2554,0,"defineProperty"],[12,23,2554,0],[12,24,2554,0,"exports"],[12,31,2554,0],[13,4,2554,0,"enumerable"],[13,14,2554,0],[14,4,2554,0,"get"],[14,7,2554,0],[14,18,2554,0,"get"],[14,19,2554,0],[15,6,2554,0],[15,13,2554,0,"_default"],[15,21,2554,0],[16,4,2554,0],[17,2,2554,0],[18,2,1,0],[18,6,1,0,"_GoTrueAdminApi"],[18,21,1,0],[18,24,1,0,"require"],[18,31,1,0],[18,32,1,0,"_dependencyMap"],[18,46,1,0],[19,2,1,0],[19,6,1,0,"GoTrueAdminApi"],[19,20,1,0],[19,23,1,0,"_interopDefault"],[19,38,1,0],[19,39,1,0,"_GoTrueAdminApi"],[19,54,1,0],[20,2,2,0],[20,6,2,0,"_libConstants"],[20,19,2,0],[20,22,2,0,"require"],[20,29,2,0],[20,30,2,0,"_dependencyMap"],[20,44,2,0],[21,2,3,0],[21,6,3,0,"_libErrors"],[21,16,3,0],[21,19,3,0,"require"],[21,26,3,0],[21,27,3,0,"_dependencyMap"],[21,41,3,0],[22,2,4,0],[22,6,4,0,"_libFetch"],[22,15,4,0],[22,18,4,0,"require"],[22,25,4,0],[22,26,4,0,"_dependencyMap"],[22,40,4,0],[23,2,5,0],[23,6,5,0,"_libHelpers"],[23,17,5,0],[23,20,5,0,"require"],[23,27,5,0],[23,28,5,0,"_dependencyMap"],[23,42,5,0],[24,2,6,0],[24,6,6,0,"_libLocalStorage"],[24,22,6,0],[24,25,6,0,"require"],[24,32,6,0],[24,33,6,0,"_dependencyMap"],[24,47,6,0],[25,2,7,0],[25,6,7,0,"_libLocks"],[25,15,7,0],[25,18,7,0,"require"],[25,25,7,0],[25,26,7,0,"_dependencyMap"],[25,40,7,0],[26,2,8,0],[26,6,8,0,"_libPolyfills"],[26,19,8,0],[26,22,8,0,"require"],[26,29,8,0],[26,30,8,0,"_dependencyMap"],[26,44,8,0],[27,2,9,0],[27,6,9,0,"_libVersion"],[27,17,9,0],[27,20,9,0,"require"],[27,27,9,0],[27,28,9,0,"_dependencyMap"],[27,42,9,0],[28,2,10,0],[28,6,10,0,"_libBase64url"],[28,19,10,0],[28,22,10,0,"require"],[28,29,10,0],[28,30,10,0,"_dependencyMap"],[28,44,10,0],[29,2,11,0],[29,6,11,0,"_libWeb3Ethereum"],[29,22,11,0],[29,25,11,0,"require"],[29,32,11,0],[29,33,11,0,"_dependencyMap"],[29,47,11,0],[30,2,12,0],[30,6,12,0,"_libWebauthn"],[30,18,12,0],[30,21,12,0,"require"],[30,28,12,0],[30,29,12,0,"_dependencyMap"],[30,43,12,0],[31,2,13,0],[31,6,13,0,"polyfillGlobalThis"],[31,19,13,18],[31,20,13,18,"polyfillGlobalThis"],[31,38,13,18],[31,40,13,19],[31,41,13,20],[31,42,13,21],[31,43,13,22],[32,2,14,0],[32,8,14,6,"DEFAULT_OPTIONS"],[32,23,14,21],[32,26,14,24],[33,4,15,4,"url"],[33,7,15,7],[33,9,15,9,"GOTRUE_URL"],[33,22,15,19],[33,23,15,19,"GOTRUE_URL"],[33,33,15,19],[34,4,16,4,"storageKey"],[34,14,16,14],[34,16,16,16,"STORAGE_KEY"],[34,29,16,27],[34,30,16,27,"STORAGE_KEY"],[34,41,16,27],[35,4,17,4,"autoRefreshToken"],[35,20,17,20],[35,22,17,22],[35,26,17,26],[36,4,18,4,"persistSession"],[36,18,18,18],[36,20,18,20],[36,24,18,24],[37,4,19,4,"detectSessionInUrl"],[37,22,19,22],[37,24,19,24],[37,28,19,28],[38,4,20,4,"headers"],[38,11,20,11],[38,13,20,13,"DEFAULT_HEADERS"],[38,26,20,28],[38,27,20,28,"DEFAULT_HEADERS"],[38,42,20,28],[39,4,21,4,"flowType"],[39,12,21,12],[39,14,21,14],[39,24,21,24],[40,4,22,4,"debug"],[40,9,22,9],[40,11,22,11],[40,16,22,16],[41,4,23,4,"hasCustomAuthorizationHeader"],[41,32,23,32],[41,34,23,34],[42,2,24,0],[42,3,24,1],[43,2,25,0],[43,17,25,15,"lockNoOp"],[43,25,25,23,"lockNoOp"],[43,26,25,24,"name"],[43,30,25,28],[43,32,25,30,"acquireTimeout"],[43,46,25,44],[43,48,25,46,"fn"],[43,50,25,48],[43,52,25,50],[44,4,26,4],[44,11,26,11],[44,17,26,17,"fn"],[44,19,26,19],[44,20,26,20],[44,21,26,21],[45,2,27,0],[46,2,28,0],[47,0,29,0],[48,0,30,0],[49,0,31,0],[50,0,32,0],[51,0,33,0],[52,0,34,0],[53,0,35,0],[54,2,36,0],[54,8,36,6,"GLOBAL_JWKS"],[54,19,36,17],[54,22,36,20],[54,23,36,21],[54,24,36,22],[55,2,37,0],[55,8,37,6,"GoTrueClient"],[55,20,37,18],[55,21,37,19],[56,4,38,4],[57,0,39,0],[58,0,40,0],[59,4,41,4],[59,8,41,8,"jwks"],[59,12,41,12,"jwks"],[59,13,41,12],[59,15,41,15],[60,6,42,8],[60,10,42,12,"_a"],[60,12,42,14],[60,14,42,16,"_b"],[60,16,42,18],[61,6,43,8],[61,13,43,15],[61,14,43,16,"_b"],[61,16,43,18],[61,19,43,21],[61,20,43,22,"_a"],[61,22,43,24],[61,25,43,27,"GLOBAL_JWKS"],[61,36,43,38],[61,37,43,39],[61,41,43,43],[61,42,43,44,"storageKey"],[61,52,43,54],[61,53,43,55],[61,59,43,61],[61,63,43,65],[61,67,43,69,"_a"],[61,69,43,71],[61,74,43,76],[61,79,43,81],[61,80,43,82],[61,83,43,85],[61,88,43,90],[61,89,43,91],[61,92,43,94,"_a"],[61,94,43,96],[61,95,43,97,"jwks"],[61,99,43,101],[61,105,43,107],[61,109,43,111],[61,113,43,115,"_b"],[61,115,43,117],[61,120,43,122],[61,125,43,127],[61,126,43,128],[61,129,43,131,"_b"],[61,131,43,133],[61,134,43,136],[62,8,43,138,"keys"],[62,12,43,142],[62,14,43,144],[63,6,43,147],[63,7,43,148],[64,4,44,4],[65,4,45,4],[65,8,45,8,"jwks"],[65,12,45,12,"jwks"],[65,13,45,13,"value"],[65,18,45,18],[65,20,45,20],[66,6,46,8,"GLOBAL_JWKS"],[66,17,46,19],[66,18,46,20],[66,22,46,24],[66,23,46,25,"storageKey"],[66,33,46,35],[66,34,46,36],[66,37,46,39,"Object"],[66,43,46,45],[66,44,46,46,"assign"],[66,50,46,52],[66,51,46,53,"Object"],[66,57,46,59],[66,58,46,60,"assign"],[66,64,46,66],[66,65,46,67],[66,66,46,68],[66,67,46,69],[66,69,46,71,"GLOBAL_JWKS"],[66,80,46,82],[66,81,46,83],[66,85,46,87],[66,86,46,88,"storageKey"],[66,96,46,98],[66,97,46,99],[66,98,46,100],[66,100,46,102],[67,8,46,104,"jwks"],[67,12,46,108],[67,14,46,110,"value"],[68,6,46,116],[68,7,46,117],[68,8,46,118],[69,4,47,4],[70,4,48,4],[70,8,48,8,"jwks_cached_at"],[70,22,48,22,"jwks_cached_at"],[70,23,48,22],[70,25,48,25],[71,6,49,8],[71,10,49,12,"_a"],[71,12,49,14],[71,14,49,16,"_b"],[71,16,49,18],[72,6,50,8],[72,13,50,15],[72,14,50,16,"_b"],[72,16,50,18],[72,19,50,21],[72,20,50,22,"_a"],[72,22,50,24],[72,25,50,27,"GLOBAL_JWKS"],[72,36,50,38],[72,37,50,39],[72,41,50,43],[72,42,50,44,"storageKey"],[72,52,50,54],[72,53,50,55],[72,59,50,61],[72,63,50,65],[72,67,50,69,"_a"],[72,69,50,71],[72,74,50,76],[72,79,50,81],[72,80,50,82],[72,83,50,85],[72,88,50,90],[72,89,50,91],[72,92,50,94,"_a"],[72,94,50,96],[72,95,50,97,"cachedAt"],[72,103,50,105],[72,109,50,111],[72,113,50,115],[72,117,50,119,"_b"],[72,119,50,121],[72,124,50,126],[72,129,50,131],[72,130,50,132],[72,133,50,135,"_b"],[72,135,50,137],[72,138,50,140,"Number"],[72,144,50,146],[72,145,50,147,"MIN_SAFE_INTEGER"],[72,161,50,163],[73,4,51,4],[74,4,52,4],[74,8,52,8,"jwks_cached_at"],[74,22,52,22,"jwks_cached_at"],[74,23,52,23,"value"],[74,28,52,28],[74,30,52,30],[75,6,53,8,"GLOBAL_JWKS"],[75,17,53,19],[75,18,53,20],[75,22,53,24],[75,23,53,25,"storageKey"],[75,33,53,35],[75,34,53,36],[75,37,53,39,"Object"],[75,43,53,45],[75,44,53,46,"assign"],[75,50,53,52],[75,51,53,53,"Object"],[75,57,53,59],[75,58,53,60,"assign"],[75,64,53,66],[75,65,53,67],[75,66,53,68],[75,67,53,69],[75,69,53,71,"GLOBAL_JWKS"],[75,80,53,82],[75,81,53,83],[75,85,53,87],[75,86,53,88,"storageKey"],[75,96,53,98],[75,97,53,99],[75,98,53,100],[75,100,53,102],[76,8,53,104,"cachedAt"],[76,16,53,112],[76,18,53,114,"value"],[77,6,53,120],[77,7,53,121],[77,8,53,122],[78,4,54,4],[79,4,55,4],[80,0,56,0],[81,0,57,0],[82,4,58,4,"constructor"],[82,15,58,15,"constructor"],[82,16,58,16,"options"],[82,23,58,23],[82,25,58,25],[83,6,59,8],[83,10,59,12,"_a"],[83,12,59,14],[83,14,59,16,"_b"],[83,16,59,18],[84,6,60,8],[85,0,61,0],[86,0,62,0],[87,6,63,8],[87,10,63,12],[87,11,63,13,"userStorage"],[87,22,63,24],[87,25,63,27],[87,29,63,31],[88,6,64,8],[88,10,64,12],[88,11,64,13,"memoryStorage"],[88,24,64,26],[88,27,64,29],[88,31,64,33],[89,6,65,8],[89,10,65,12],[89,11,65,13,"stateChangeEmitters"],[89,30,65,32],[89,33,65,35],[89,37,65,39,"Map"],[89,40,65,42],[89,41,65,43],[89,42,65,44],[90,6,66,8],[90,10,66,12],[90,11,66,13,"autoRefreshTicker"],[90,28,66,30],[90,31,66,33],[90,35,66,37],[91,6,67,8],[91,10,67,12],[91,11,67,13,"visibilityChangedCallback"],[91,36,67,38],[91,39,67,41],[91,43,67,45],[92,6,68,8],[92,10,68,12],[92,11,68,13,"refreshingDeferred"],[92,29,68,31],[92,32,68,34],[92,36,68,38],[93,6,69,8],[94,0,70,0],[95,0,71,0],[96,0,72,0],[97,0,73,0],[98,0,74,0],[99,6,75,8],[99,10,75,12],[99,11,75,13,"initializePromise"],[99,28,75,30],[99,31,75,33],[99,35,75,37],[100,6,76,8],[100,10,76,12],[100,11,76,13,"detectSessionInUrl"],[100,29,76,31],[100,32,76,34],[100,36,76,38],[101,6,77,8],[101,10,77,12],[101,11,77,13,"hasCustomAuthorizationHeader"],[101,39,77,41],[101,42,77,44],[101,47,77,49],[102,6,78,8],[102,10,78,12],[102,11,78,13,"suppressGetSessionWarning"],[102,36,78,38],[102,39,78,41],[102,44,78,46],[103,6,79,8],[103,10,79,12],[103,11,79,13,"lockAcquired"],[103,23,79,25],[103,26,79,28],[103,31,79,33],[104,6,80,8],[104,10,80,12],[104,11,80,13,"pendingInLock"],[104,24,80,26],[104,27,80,29],[104,29,80,31],[105,6,81,8],[106,0,82,0],[107,0,83,0],[108,6,84,8],[108,10,84,12],[108,11,84,13,"broadcastChannel"],[108,27,84,29],[108,30,84,32],[108,34,84,36],[109,6,85,8],[109,10,85,12],[109,11,85,13,"logger"],[109,17,85,19],[109,20,85,22,"console"],[109,27,85,29],[109,28,85,30,"log"],[109,31,85,33],[110,6,86,8],[110,10,86,12],[110,11,86,13,"instanceID"],[110,21,86,23],[110,24,86,26,"GoTrueClient"],[110,36,86,38],[110,37,86,39,"nextInstanceID"],[110,51,86,53],[111,6,87,8,"GoTrueClient"],[111,18,87,20],[111,19,87,21,"nextInstanceID"],[111,33,87,35],[111,37,87,39],[111,38,87,40],[112,6,88,8],[112,10,88,12],[112,14,88,16],[112,15,88,17,"instanceID"],[112,25,88,27],[112,28,88,30],[112,29,88,31],[112,33,88,35],[112,37,88,35,"isBrowser"],[112,48,88,44],[112,49,88,44,"isBrowser"],[112,58,88,44],[112,60,88,45],[112,61,88,46],[112,63,88,48],[113,8,89,12,"console"],[113,15,89,19],[113,16,89,20,"warn"],[113,20,89,24],[113,21,89,25],[113,227,89,231],[113,228,89,232],[114,6,90,8],[115,6,91,8],[115,12,91,14,"settings"],[115,20,91,22],[115,23,91,25,"Object"],[115,29,91,31],[115,30,91,32,"assign"],[115,36,91,38],[115,37,91,39,"Object"],[115,43,91,45],[115,44,91,46,"assign"],[115,50,91,52],[115,51,91,53],[115,52,91,54],[115,53,91,55],[115,55,91,57,"DEFAULT_OPTIONS"],[115,70,91,72],[115,71,91,73],[115,73,91,75,"options"],[115,80,91,82],[115,81,91,83],[116,6,92,8],[116,10,92,12],[116,11,92,13,"logDebugMessages"],[116,27,92,29],[116,30,92,32],[116,31,92,33],[116,32,92,34,"settings"],[116,40,92,42],[116,41,92,43,"debug"],[116,46,92,48],[117,6,93,8],[117,10,93,12],[117,17,93,19,"settings"],[117,25,93,27],[117,26,93,28,"debug"],[117,31,93,33],[117,36,93,38],[117,46,93,48],[117,48,93,50],[118,8,94,12],[118,12,94,16],[118,13,94,17,"logger"],[118,19,94,23],[118,22,94,26,"settings"],[118,30,94,34],[118,31,94,35,"debug"],[118,36,94,40],[119,6,95,8],[120,6,96,8],[120,10,96,12],[120,11,96,13,"persistSession"],[120,25,96,27],[120,28,96,30,"settings"],[120,36,96,38],[120,37,96,39,"persistSession"],[120,51,96,53],[121,6,97,8],[121,10,97,12],[121,11,97,13,"storageKey"],[121,21,97,23],[121,24,97,26,"settings"],[121,32,97,34],[121,33,97,35,"storageKey"],[121,43,97,45],[122,6,98,8],[122,10,98,12],[122,11,98,13,"autoRefreshToken"],[122,27,98,29],[122,30,98,32,"settings"],[122,38,98,40],[122,39,98,41,"autoRefreshToken"],[122,55,98,57],[123,6,99,8],[123,10,99,12],[123,11,99,13,"admin"],[123,16,99,18],[123,19,99,21],[123,23,99,25,"GoTrueAdminApi"],[123,37,99,39],[123,38,99,39,"default"],[123,45,99,39],[123,46,99,40],[124,8,100,12,"url"],[124,11,100,15],[124,13,100,17,"settings"],[124,21,100,25],[124,22,100,26,"url"],[124,25,100,29],[125,8,101,12,"headers"],[125,15,101,19],[125,17,101,21,"settings"],[125,25,101,29],[125,26,101,30,"headers"],[125,33,101,37],[126,8,102,12,"fetch"],[126,13,102,17],[126,15,102,19,"settings"],[126,23,102,27],[126,24,102,28,"fetch"],[127,6,103,8],[127,7,103,9],[127,8,103,10],[128,6,104,8],[128,10,104,12],[128,11,104,13,"url"],[128,14,104,16],[128,17,104,19,"settings"],[128,25,104,27],[128,26,104,28,"url"],[128,29,104,31],[129,6,105,8],[129,10,105,12],[129,11,105,13,"headers"],[129,18,105,20],[129,21,105,23,"settings"],[129,29,105,31],[129,30,105,32,"headers"],[129,37,105,39],[130,6,106,8],[130,10,106,12],[130,11,106,13,"fetch"],[130,16,106,18],[130,19,106,21],[130,23,106,21,"resolveFetch"],[130,34,106,33],[130,35,106,33,"resolveFetch"],[130,47,106,33],[130,49,106,34,"settings"],[130,57,106,42],[130,58,106,43,"fetch"],[130,63,106,48],[130,64,106,49],[131,6,107,8],[131,10,107,12],[131,11,107,13,"lock"],[131,15,107,17],[131,18,107,20,"settings"],[131,26,107,28],[131,27,107,29,"lock"],[131,31,107,33],[131,35,107,37,"lockNoOp"],[131,43,107,45],[132,6,108,8],[132,10,108,12],[132,11,108,13,"detectSessionInUrl"],[132,29,108,31],[132,32,108,34,"settings"],[132,40,108,42],[132,41,108,43,"detectSessionInUrl"],[132,59,108,61],[133,6,109,8],[133,10,109,12],[133,11,109,13,"flowType"],[133,19,109,21],[133,22,109,24,"settings"],[133,30,109,32],[133,31,109,33,"flowType"],[133,39,109,41],[134,6,110,8],[134,10,110,12],[134,11,110,13,"hasCustomAuthorizationHeader"],[134,39,110,41],[134,42,110,44,"settings"],[134,50,110,52],[134,51,110,53,"hasCustomAuthorizationHeader"],[134,79,110,81],[135,6,111,8],[135,10,111,12,"settings"],[135,18,111,20],[135,19,111,21,"lock"],[135,23,111,25],[135,25,111,27],[136,8,112,12],[136,12,112,16],[136,13,112,17,"lock"],[136,17,112,21],[136,20,112,24,"settings"],[136,28,112,32],[136,29,112,33,"lock"],[136,33,112,37],[137,6,113,8],[137,7,113,9],[137,13,114,13],[137,17,114,17],[137,21,114,17,"isBrowser"],[137,32,114,26],[137,33,114,26,"isBrowser"],[137,42,114,26],[137,44,114,27],[137,45,114,28],[137,50,114,33],[137,51,114,34,"_a"],[137,53,114,36],[137,56,114,39,"globalThis"],[137,66,114,49],[137,71,114,54],[137,75,114,58],[137,79,114,62,"globalThis"],[137,89,114,72],[137,94,114,77],[137,99,114,82],[137,100,114,83],[137,103,114,86],[137,108,114,91],[137,109,114,92],[137,112,114,95,"globalThis"],[137,122,114,105],[137,123,114,106,"navigator"],[137,132,114,115],[137,138,114,121],[137,142,114,125],[137,146,114,129,"_a"],[137,148,114,131],[137,153,114,136],[137,158,114,141],[137,159,114,142],[137,162,114,145],[137,167,114,150],[137,168,114,151],[137,171,114,154,"_a"],[137,173,114,156],[137,174,114,157,"locks"],[137,179,114,162],[137,180,114,163],[137,182,114,165],[138,8,115,12],[138,12,115,16],[138,13,115,17,"lock"],[138,17,115,21],[138,20,115,24,"navigatorLock"],[138,29,115,37],[138,30,115,37,"navigatorLock"],[138,43,115,37],[139,6,116,8],[139,7,116,9],[139,13,117,13],[140,8,118,12],[140,12,118,16],[140,13,118,17,"lock"],[140,17,118,21],[140,20,118,24,"lockNoOp"],[140,28,118,32],[141,6,119,8],[142,6,120,8],[142,10,120,12],[142,11,120,13],[142,15,120,17],[142,16,120,18,"jwks"],[142,20,120,22],[142,22,120,24],[143,8,121,12],[143,12,121,16],[143,13,121,17,"jwks"],[143,17,121,21],[143,20,121,24],[144,10,121,26,"keys"],[144,14,121,30],[144,16,121,32],[145,8,121,35],[145,9,121,36],[146,8,122,12],[146,12,122,16],[146,13,122,17,"jwks_cached_at"],[146,27,122,31],[146,30,122,34,"Number"],[146,36,122,40],[146,37,122,41,"MIN_SAFE_INTEGER"],[146,53,122,57],[147,6,123,8],[148,6,124,8],[148,10,124,12],[148,11,124,13,"mfa"],[148,14,124,16],[148,17,124,19],[149,8,125,12,"verify"],[149,14,125,18],[149,16,125,20],[149,20,125,24],[149,21,125,25,"_verify"],[149,28,125,32],[149,29,125,33,"bind"],[149,33,125,37],[149,34,125,38],[149,38,125,42],[149,39,125,43],[150,8,126,12,"enroll"],[150,14,126,18],[150,16,126,20],[150,20,126,24],[150,21,126,25,"_enroll"],[150,28,126,32],[150,29,126,33,"bind"],[150,33,126,37],[150,34,126,38],[150,38,126,42],[150,39,126,43],[151,8,127,12,"unenroll"],[151,16,127,20],[151,18,127,22],[151,22,127,26],[151,23,127,27,"_unenroll"],[151,32,127,36],[151,33,127,37,"bind"],[151,37,127,41],[151,38,127,42],[151,42,127,46],[151,43,127,47],[152,8,128,12,"challenge"],[152,17,128,21],[152,19,128,23],[152,23,128,27],[152,24,128,28,"_challenge"],[152,34,128,38],[152,35,128,39,"bind"],[152,39,128,43],[152,40,128,44],[152,44,128,48],[152,45,128,49],[153,8,129,12,"listFactors"],[153,19,129,23],[153,21,129,25],[153,25,129,29],[153,26,129,30,"_listFactors"],[153,38,129,42],[153,39,129,43,"bind"],[153,43,129,47],[153,44,129,48],[153,48,129,52],[153,49,129,53],[154,8,130,12,"challengeAndVerify"],[154,26,130,30],[154,28,130,32],[154,32,130,36],[154,33,130,37,"_challengeAndVerify"],[154,52,130,56],[154,53,130,57,"bind"],[154,57,130,61],[154,58,130,62],[154,62,130,66],[154,63,130,67],[155,8,131,12,"getAuthenticatorAssuranceLevel"],[155,38,131,42],[155,40,131,44],[155,44,131,48],[155,45,131,49,"_getAuthenticatorAssuranceLevel"],[155,76,131,80],[155,77,131,81,"bind"],[155,81,131,85],[155,82,131,86],[155,86,131,90],[155,87,131,91],[156,8,132,12,"webauthn"],[156,16,132,20],[156,18,132,22],[156,22,132,26,"WebAuthnApi"],[156,34,132,37],[156,35,132,37,"WebAuthnApi"],[156,46,132,37],[156,47,132,38],[156,51,132,42],[157,6,133,8],[157,7,133,9],[158,6,134,8],[158,10,134,12],[158,14,134,16],[158,15,134,17,"persistSession"],[158,29,134,31],[158,31,134,33],[159,8,135,12],[159,12,135,16,"settings"],[159,20,135,24],[159,21,135,25,"storage"],[159,28,135,32],[159,30,135,34],[160,10,136,16],[160,14,136,20],[160,15,136,21,"storage"],[160,22,136,28],[160,25,136,31,"settings"],[160,33,136,39],[160,34,136,40,"storage"],[160,41,136,47],[161,8,137,12],[161,9,137,13],[161,15,138,17],[162,10,139,16],[162,14,139,20],[162,18,139,20,"supportsLocalStorage"],[162,29,139,40],[162,30,139,40,"supportsLocalStorage"],[162,50,139,40],[162,52,139,41],[162,53,139,42],[162,55,139,44],[163,12,140,20],[163,16,140,24],[163,17,140,25,"storage"],[163,24,140,32],[163,27,140,35,"globalThis"],[163,37,140,45],[163,38,140,46,"localStorage"],[163,50,140,58],[164,10,141,16],[164,11,141,17],[164,17,142,21],[165,12,143,20],[165,16,143,24],[165,17,143,25,"memoryStorage"],[165,30,143,38],[165,33,143,41],[165,34,143,42],[165,35,143,43],[166,12,144,20],[166,16,144,24],[166,17,144,25,"storage"],[166,24,144,32],[166,27,144,35],[166,31,144,35,"memoryLocalStorageAdapter"],[166,47,144,60],[166,48,144,60,"memoryLocalStorageAdapter"],[166,73,144,60],[166,75,144,61],[166,79,144,65],[166,80,144,66,"memoryStorage"],[166,93,144,79],[166,94,144,80],[167,10,145,16],[168,8,146,12],[169,8,147,12],[169,12,147,16,"settings"],[169,20,147,24],[169,21,147,25,"userStorage"],[169,32,147,36],[169,34,147,38],[170,10,148,16],[170,14,148,20],[170,15,148,21,"userStorage"],[170,26,148,32],[170,29,148,35,"settings"],[170,37,148,43],[170,38,148,44,"userStorage"],[170,49,148,55],[171,8,149,12],[172,6,150,8],[172,7,150,9],[172,13,151,13],[173,8,152,12],[173,12,152,16],[173,13,152,17,"memoryStorage"],[173,26,152,30],[173,29,152,33],[173,30,152,34],[173,31,152,35],[174,8,153,12],[174,12,153,16],[174,13,153,17,"storage"],[174,20,153,24],[174,23,153,27],[174,27,153,27,"memoryLocalStorageAdapter"],[174,43,153,52],[174,44,153,52,"memoryLocalStorageAdapter"],[174,69,153,52],[174,71,153,53],[174,75,153,57],[174,76,153,58,"memoryStorage"],[174,89,153,71],[174,90,153,72],[175,6,154,8],[176,6,155,8],[176,10,155,12],[176,14,155,12,"isBrowser"],[176,25,155,21],[176,26,155,21,"isBrowser"],[176,35,155,21],[176,37,155,22],[176,38,155,23],[176,42,155,27,"globalThis"],[176,52,155,37],[176,53,155,38,"BroadcastChannel"],[176,69,155,54],[176,73,155,58],[176,77,155,62],[176,78,155,63,"persistSession"],[176,92,155,77],[176,96,155,81],[176,100,155,85],[176,101,155,86,"storageKey"],[176,111,155,96],[176,113,155,98],[177,8,156,12],[177,12,156,16],[178,10,157,16],[178,14,157,20],[178,15,157,21,"broadcastChannel"],[178,31,157,37],[178,34,157,40],[178,38,157,44,"globalThis"],[178,48,157,54],[178,49,157,55,"BroadcastChannel"],[178,65,157,71],[178,66,157,72],[178,70,157,76],[178,71,157,77,"storageKey"],[178,81,157,87],[178,82,157,88],[179,8,158,12],[179,9,158,13],[179,10,159,12],[179,17,159,19,"e"],[179,18,159,20],[179,20,159,22],[180,10,160,16,"console"],[180,17,160,23],[180,18,160,24,"error"],[180,23,160,29],[180,24,160,30],[180,112,160,118],[180,114,160,120,"e"],[180,115,160,121],[180,116,160,122],[181,8,161,12],[182,8,162,12],[182,9,162,13,"_b"],[182,11,162,15],[182,14,162,18],[182,18,162,22],[182,19,162,23,"broadcastChannel"],[182,35,162,39],[182,41,162,45],[182,45,162,49],[182,49,162,53,"_b"],[182,51,162,55],[182,56,162,60],[182,61,162,65],[182,62,162,66],[182,65,162,69],[182,70,162,74],[182,71,162,75],[182,74,162,78,"_b"],[182,76,162,80],[182,77,162,81,"addEventListener"],[182,93,162,97],[182,94,162,98],[182,103,162,107],[182,105,162,109],[182,111,162,116,"event"],[182,116,162,121],[182,120,162,126],[183,10,163,16],[183,14,163,20],[183,15,163,21,"_debug"],[183,21,163,27],[183,22,163,28],[183,80,163,86],[183,82,163,88,"event"],[183,87,163,93],[183,88,163,94],[184,10,164,16],[184,16,164,22],[184,20,164,26],[184,21,164,27,"_notifyAllSubscribers"],[184,42,164,48],[184,43,164,49,"event"],[184,48,164,54],[184,49,164,55,"data"],[184,53,164,59],[184,54,164,60,"event"],[184,59,164,65],[184,61,164,67,"event"],[184,66,164,72],[184,67,164,73,"data"],[184,71,164,77],[184,72,164,78,"session"],[184,79,164,85],[184,81,164,87],[184,86,164,92],[184,87,164,93],[184,88,164,94],[184,89,164,95],[185,8,165,12],[185,9,165,13],[185,10,165,14],[186,6,166,8],[187,6,167,8],[187,10,167,12],[187,11,167,13,"initialize"],[187,21,167,23],[187,22,167,24],[187,23,167,25],[188,4,168,4],[189,4,169,4,"_debug"],[189,10,169,10,"_debug"],[189,11,169,11],[189,14,169,14,"args"],[189,18,169,18],[189,20,169,20],[190,6,170,8],[190,10,170,12],[190,14,170,16],[190,15,170,17,"logDebugMessages"],[190,31,170,33],[190,33,170,35],[191,8,171,12],[191,12,171,16],[191,13,171,17,"logger"],[191,19,171,23],[191,20,171,24],[191,36,171,40],[191,40,171,44],[191,41,171,45,"instanceID"],[191,51,171,55],[191,56,171,60,"version"],[191,67,171,67],[191,68,171,67,"version"],[191,75,171,67],[191,80,171,72],[191,84,171,76,"Date"],[191,88,171,80],[191,89,171,81],[191,90,171,82],[191,91,171,83,"toISOString"],[191,102,171,94],[191,103,171,95],[191,104,171,96],[191,106,171,98],[191,108,171,100],[191,111,171,103,"args"],[191,115,171,107],[191,116,171,108],[192,6,172,8],[193,6,173,8],[193,13,173,15],[193,17,173,19],[194,4,174,4],[195,4,175,4],[196,0,176,0],[197,0,177,0],[198,0,178,0],[199,0,179,0],[200,4,180,4],[200,10,180,10,"initialize"],[200,20,180,20,"initialize"],[200,21,180,20],[200,23,180,23],[201,6,181,8],[201,10,181,12],[201,14,181,16],[201,15,181,17,"initializePromise"],[201,32,181,34],[201,34,181,36],[202,8,182,12],[202,15,182,19],[202,21,182,25],[202,25,182,29],[202,26,182,30,"initializePromise"],[202,43,182,47],[203,6,183,8],[204,6,184,8],[204,10,184,12],[204,11,184,13,"initializePromise"],[204,28,184,30],[204,31,184,33],[204,32,184,34],[204,44,184,46],[205,8,185,12],[205,15,185,19],[205,21,185,25],[205,25,185,29],[205,26,185,30,"_acquireLock"],[205,38,185,42],[205,39,185,43],[205,40,185,44],[205,41,185,45],[205,43,185,47],[205,55,185,59],[206,10,186,16],[206,17,186,23],[206,23,186,29],[206,27,186,33],[206,28,186,34,"_initialize"],[206,39,186,45],[206,40,186,46],[206,41,186,47],[207,8,187,12],[207,9,187,13],[207,10,187,14],[208,6,188,8],[208,7,188,9],[208,9,188,11],[208,10,188,12],[209,6,189,8],[209,13,189,15],[209,19,189,21],[209,23,189,25],[209,24,189,26,"initializePromise"],[209,41,189,43],[210,4,190,4],[211,4,191,4],[212,0,192,0],[213,0,193,0],[214,0,194,0],[215,0,195,0],[216,0,196,0],[217,4,197,4],[217,10,197,10,"_initialize"],[217,21,197,21,"_initialize"],[217,22,197,21],[217,24,197,24],[218,6,198,8],[218,10,198,12,"_a"],[218,12,198,14],[219,6,199,8],[219,10,199,12],[220,8,200,12],[220,14,200,18,"params"],[220,20,200,24],[220,23,200,27],[220,27,200,27,"parseParametersFromURL"],[220,38,200,49],[220,39,200,49,"parseParametersFromURL"],[220,61,200,49],[220,63,200,50,"window"],[220,69,200,56],[220,70,200,57,"location"],[220,78,200,65],[220,79,200,66,"href"],[220,83,200,70],[220,84,200,71],[221,8,201,12],[221,12,201,16,"callbackUrlType"],[221,27,201,31],[221,30,201,34],[221,36,201,40],[222,8,202,12],[222,12,202,16],[222,16,202,20],[222,17,202,21,"_isImplicitGrantCallback"],[222,41,202,45],[222,42,202,46,"params"],[222,48,202,52],[222,49,202,53],[222,51,202,55],[223,10,203,16,"callbackUrlType"],[223,25,203,31],[223,28,203,34],[223,38,203,44],[224,8,204,12],[224,9,204,13],[224,15,205,17],[224,19,205,21],[224,25,205,27],[224,29,205,31],[224,30,205,32,"_isPKCECallback"],[224,45,205,47],[224,46,205,48,"params"],[224,52,205,54],[224,53,205,55],[224,55,205,57],[225,10,206,16,"callbackUrlType"],[225,25,206,31],[225,28,206,34],[225,34,206,40],[226,8,207,12],[227,8,208,12],[228,0,209,0],[229,0,210,0],[230,0,211,0],[231,0,212,0],[232,0,213,0],[233,8,214,12],[233,12,214,16],[233,16,214,16,"isBrowser"],[233,27,214,25],[233,28,214,25,"isBrowser"],[233,37,214,25],[233,39,214,26],[233,40,214,27],[233,44,214,31],[233,48,214,35],[233,49,214,36,"detectSessionInUrl"],[233,67,214,54],[233,71,214,58,"callbackUrlType"],[233,86,214,73],[233,91,214,78],[233,97,214,84],[233,99,214,86],[234,10,215,16],[234,16,215,22],[235,12,215,24,"data"],[235,16,215,28],[236,12,215,30,"error"],[237,10,215,36],[237,11,215,37],[237,14,215,40],[237,20,215,46],[237,24,215,50],[237,25,215,51,"_getSessionFromURL"],[237,43,215,69],[237,44,215,70,"params"],[237,50,215,76],[237,52,215,78,"callbackUrlType"],[237,67,215,93],[237,68,215,94],[238,10,216,16],[238,14,216,20,"error"],[238,19,216,25],[238,21,216,27],[239,12,217,20],[239,16,217,24],[239,17,217,25,"_debug"],[239,23,217,31],[239,24,217,32],[239,40,217,48],[239,42,217,50],[239,76,217,84],[239,78,217,86,"error"],[239,83,217,91],[239,84,217,92],[240,12,218,20],[240,16,218,24],[240,20,218,24,"isAuthImplicitGrantRedirectError"],[240,30,218,56],[240,31,218,56,"isAuthImplicitGrantRedirectError"],[240,63,218,56],[240,65,218,57,"error"],[240,70,218,62],[240,71,218,63],[240,73,218,65],[241,14,219,24],[241,20,219,30,"errorCode"],[241,29,219,39],[241,32,219,42],[241,33,219,43,"_a"],[241,35,219,45],[241,38,219,48,"error"],[241,43,219,53],[241,44,219,54,"details"],[241,51,219,61],[241,57,219,67],[241,61,219,71],[241,65,219,75,"_a"],[241,67,219,77],[241,72,219,82],[241,77,219,87],[241,78,219,88],[241,81,219,91],[241,86,219,96],[241,87,219,97],[241,90,219,100,"_a"],[241,92,219,102],[241,93,219,103,"code"],[241,97,219,107],[242,14,220,24],[242,18,220,28,"errorCode"],[242,27,220,37],[242,32,220,42],[242,57,220,67],[242,61,221,28,"errorCode"],[242,70,221,37],[242,75,221,42],[242,95,221,62],[242,99,222,28,"errorCode"],[242,108,222,37],[242,113,222,42],[242,144,222,73],[242,146,222,75],[243,16,223,28],[243,23,223,35],[244,18,223,37,"error"],[245,16,223,43],[245,17,223,44],[246,14,224,24],[247,12,225,20],[248,12,226,20],[249,12,227,20],[250,12,228,20],[250,18,228,26],[250,22,228,30],[250,23,228,31,"_removeSession"],[250,37,228,45],[250,38,228,46],[250,39,228,47],[251,12,229,20],[251,19,229,27],[252,14,229,29,"error"],[253,12,229,35],[253,13,229,36],[254,10,230,16],[255,10,231,16],[255,16,231,22],[256,12,231,24,"session"],[256,19,231,31],[257,12,231,33,"redirectType"],[258,10,231,46],[258,11,231,47],[258,14,231,50,"data"],[258,18,231,54],[259,10,232,16],[259,14,232,20],[259,15,232,21,"_debug"],[259,21,232,27],[259,22,232,28],[259,38,232,44],[259,40,232,46],[259,65,232,71],[259,67,232,73,"session"],[259,74,232,80],[259,76,232,82],[259,91,232,97],[259,93,232,99,"redirectType"],[259,105,232,111],[259,106,232,112],[260,10,233,16],[260,16,233,22],[260,20,233,26],[260,21,233,27,"_saveSession"],[260,33,233,39],[260,34,233,40,"session"],[260,41,233,47],[260,42,233,48],[261,10,234,16,"setTimeout"],[261,20,234,26],[261,21,234,27],[261,33,234,39],[262,12,235,20],[262,16,235,24,"redirectType"],[262,28,235,36],[262,33,235,41],[262,43,235,51],[262,45,235,53],[263,14,236,24],[263,20,236,30],[263,24,236,34],[263,25,236,35,"_notifyAllSubscribers"],[263,46,236,56],[263,47,236,57],[263,66,236,76],[263,68,236,78,"session"],[263,75,236,85],[263,76,236,86],[264,12,237,20],[264,13,237,21],[264,19,238,25],[265,14,239,24],[265,20,239,30],[265,24,239,34],[265,25,239,35,"_notifyAllSubscribers"],[265,46,239,56],[265,47,239,57],[265,58,239,68],[265,60,239,70,"session"],[265,67,239,77],[265,68,239,78],[266,12,240,20],[267,10,241,16],[267,11,241,17],[267,13,241,19],[267,14,241,20],[267,15,241,21],[268,10,242,16],[268,17,242,23],[269,12,242,25,"error"],[269,17,242,30],[269,19,242,32],[270,10,242,37],[270,11,242,38],[271,8,243,12],[272,8,244,12],[273,8,245,12],[273,14,245,18],[273,18,245,22],[273,19,245,23,"_recoverAndRefresh"],[273,37,245,41],[273,38,245,42],[273,39,245,43],[274,8,246,12],[274,15,246,19],[275,10,246,21,"error"],[275,15,246,26],[275,17,246,28],[276,8,246,33],[276,9,246,34],[277,6,247,8],[277,7,247,9],[277,8,248,8],[277,15,248,15,"error"],[277,20,248,20],[277,22,248,22],[278,8,249,12],[278,12,249,16],[278,16,249,16,"isAuthError"],[278,26,249,27],[278,27,249,27,"isAuthError"],[278,38,249,27],[278,40,249,28,"error"],[278,45,249,33],[278,46,249,34],[278,48,249,36],[279,10,250,16],[279,17,250,23],[280,12,250,25,"error"],[281,10,250,31],[281,11,250,32],[282,8,251,12],[283,8,252,12],[283,15,252,19],[284,10,253,16,"error"],[284,15,253,21],[284,17,253,23],[284,21,253,27,"AuthUnknownError"],[284,31,253,43],[284,32,253,43,"AuthUnknownError"],[284,48,253,43],[284,49,253,44],[284,89,253,84],[284,91,253,86,"error"],[284,96,253,91],[285,8,254,12],[285,9,254,13],[286,6,255,8],[286,7,255,9],[286,16,256,16],[287,8,257,12],[287,14,257,18],[287,18,257,22],[287,19,257,23,"_handleVisibilityChange"],[287,42,257,46],[287,43,257,47],[287,44,257,48],[288,8,258,12],[288,12,258,16],[288,13,258,17,"_debug"],[288,19,258,23],[288,20,258,24],[288,36,258,40],[288,38,258,42],[288,43,258,47],[288,44,258,48],[289,6,259,8],[290,4,260,4],[291,4,261,4],[292,0,262,0],[293,0,263,0],[294,0,264,0],[295,0,265,0],[296,4,266,4],[296,10,266,10,"signInAnonymously"],[296,27,266,27,"signInAnonymously"],[296,28,266,28,"credentials"],[296,39,266,39],[296,41,266,41],[297,6,267,8],[297,10,267,12,"_a"],[297,12,267,14],[297,14,267,16,"_b"],[297,16,267,18],[297,18,267,20,"_c"],[297,20,267,22],[298,6,268,8],[298,10,268,12],[299,8,269,12],[299,14,269,18,"res"],[299,17,269,21],[299,20,269,24],[299,26,269,30],[299,30,269,30,"_request"],[299,39,269,38],[299,40,269,38,"_request"],[299,48,269,38],[299,50,269,39],[299,54,269,43],[299,55,269,44,"fetch"],[299,60,269,49],[299,62,269,51],[299,68,269,57],[299,70,269,59],[299,73,269,62],[299,77,269,66],[299,78,269,67,"url"],[299,81,269,70],[299,90,269,79],[299,92,269,81],[300,10,270,16,"headers"],[300,17,270,23],[300,19,270,25],[300,23,270,29],[300,24,270,30,"headers"],[300,31,270,37],[301,10,271,16,"body"],[301,14,271,20],[301,16,271,22],[302,12,272,20,"data"],[302,16,272,24],[302,18,272,26],[302,19,272,27,"_b"],[302,21,272,29],[302,24,272,32],[302,25,272,33,"_a"],[302,27,272,35],[302,30,272,38,"credentials"],[302,41,272,49],[302,46,272,54],[302,50,272,58],[302,54,272,62,"credentials"],[302,65,272,73],[302,70,272,78],[302,75,272,83],[302,76,272,84],[302,79,272,87],[302,84,272,92],[302,85,272,93],[302,88,272,96,"credentials"],[302,99,272,107],[302,100,272,108,"options"],[302,107,272,115],[302,113,272,121],[302,117,272,125],[302,121,272,129,"_a"],[302,123,272,131],[302,128,272,136],[302,133,272,141],[302,134,272,142],[302,137,272,145],[302,142,272,150],[302,143,272,151],[302,146,272,154,"_a"],[302,148,272,156],[302,149,272,157,"data"],[302,153,272,161],[302,159,272,167],[302,163,272,171],[302,167,272,175,"_b"],[302,169,272,177],[302,174,272,182],[302,179,272,187],[302,180,272,188],[302,183,272,191,"_b"],[302,185,272,193],[302,188,272,196],[302,189,272,197],[302,190,272,198],[303,12,273,20,"gotrue_meta_security"],[303,32,273,40],[303,34,273,42],[304,14,273,44,"captcha_token"],[304,27,273,57],[304,29,273,59],[304,30,273,60,"_c"],[304,32,273,62],[304,35,273,65,"credentials"],[304,46,273,76],[304,51,273,81],[304,55,273,85],[304,59,273,89,"credentials"],[304,70,273,100],[304,75,273,105],[304,80,273,110],[304,81,273,111],[304,84,273,114],[304,89,273,119],[304,90,273,120],[304,93,273,123,"credentials"],[304,104,273,134],[304,105,273,135,"options"],[304,112,273,142],[304,118,273,148],[304,122,273,152],[304,126,273,156,"_c"],[304,128,273,158],[304,133,273,163],[304,138,273,168],[304,139,273,169],[304,142,273,172],[304,147,273,177],[304,148,273,178],[304,151,273,181,"_c"],[304,153,273,183],[304,154,273,184,"captchaToken"],[305,12,273,197],[306,10,274,16],[306,11,274,17],[307,10,275,16,"xform"],[307,15,275,21],[307,17,275,23,"_sessionResponse"],[307,26,275,39],[307,27,275,39,"_sessionResponse"],[308,8,276,12],[308,9,276,13],[308,10,276,14],[309,8,277,12],[309,14,277,18],[310,10,277,20,"data"],[310,14,277,24],[311,10,277,26,"error"],[312,8,277,32],[312,9,277,33],[312,12,277,36,"res"],[312,15,277,39],[313,8,278,12],[313,12,278,16,"error"],[313,17,278,21],[313,21,278,25],[313,22,278,26,"data"],[313,26,278,30],[313,28,278,32],[314,10,279,16],[314,17,279,23],[315,12,279,25,"data"],[315,16,279,29],[315,18,279,31],[316,14,279,33,"user"],[316,18,279,37],[316,20,279,39],[316,24,279,43],[317,14,279,45,"session"],[317,21,279,52],[317,23,279,54],[318,12,279,59],[318,13,279,60],[319,12,279,62,"error"],[319,17,279,67],[319,19,279,69,"error"],[320,10,279,75],[320,11,279,76],[321,8,280,12],[322,8,281,12],[322,14,281,18,"session"],[322,21,281,25],[322,24,281,28,"data"],[322,28,281,32],[322,29,281,33,"session"],[322,36,281,40],[323,8,282,12],[323,14,282,18,"user"],[323,18,282,22],[323,21,282,25,"data"],[323,25,282,29],[323,26,282,30,"user"],[323,30,282,34],[324,8,283,12],[324,12,283,16,"data"],[324,16,283,20],[324,17,283,21,"session"],[324,24,283,28],[324,26,283,30],[325,10,284,16],[325,16,284,22],[325,20,284,26],[325,21,284,27,"_saveSession"],[325,33,284,39],[325,34,284,40,"data"],[325,38,284,44],[325,39,284,45,"session"],[325,46,284,52],[325,47,284,53],[326,10,285,16],[326,16,285,22],[326,20,285,26],[326,21,285,27,"_notifyAllSubscribers"],[326,42,285,48],[326,43,285,49],[326,54,285,60],[326,56,285,62,"session"],[326,63,285,69],[326,64,285,70],[327,8,286,12],[328,8,287,12],[328,15,287,19],[329,10,287,21,"data"],[329,14,287,25],[329,16,287,27],[330,12,287,29,"user"],[330,16,287,33],[331,12,287,35,"session"],[332,10,287,43],[332,11,287,44],[333,10,287,46,"error"],[333,15,287,51],[333,17,287,53],[334,8,287,58],[334,9,287,59],[335,6,288,8],[335,7,288,9],[335,8,289,8],[335,15,289,15,"error"],[335,20,289,20],[335,22,289,22],[336,8,290,12],[336,12,290,16],[336,16,290,16,"isAuthError"],[336,26,290,27],[336,27,290,27,"isAuthError"],[336,38,290,27],[336,40,290,28,"error"],[336,45,290,33],[336,46,290,34],[336,48,290,36],[337,10,291,16],[337,17,291,23],[338,12,291,25,"data"],[338,16,291,29],[338,18,291,31],[339,14,291,33,"user"],[339,18,291,37],[339,20,291,39],[339,24,291,43],[340,14,291,45,"session"],[340,21,291,52],[340,23,291,54],[341,12,291,59],[341,13,291,60],[342,12,291,62,"error"],[343,10,291,68],[343,11,291,69],[344,8,292,12],[345,8,293,12],[345,14,293,18,"error"],[345,19,293,23],[346,6,294,8],[347,4,295,4],[348,4,296,4],[349,0,297,0],[350,0,298,0],[351,0,299,0],[352,0,300,0],[353,0,301,0],[354,0,302,0],[355,0,303,0],[356,0,304,0],[357,0,305,0],[358,4,306,4],[358,10,306,10,"signUp"],[358,16,306,16,"signUp"],[358,17,306,17,"credentials"],[358,28,306,28],[358,30,306,30],[359,6,307,8],[359,10,307,12,"_a"],[359,12,307,14],[359,14,307,16,"_b"],[359,16,307,18],[359,18,307,20,"_c"],[359,20,307,22],[360,6,308,8],[360,10,308,12],[361,8,309,12],[361,12,309,16,"res"],[361,15,309,19],[362,8,310,12],[362,12,310,16],[362,19,310,23],[362,23,310,27,"credentials"],[362,34,310,38],[362,36,310,40],[363,10,311,16],[363,16,311,22],[364,12,311,24,"email"],[364,17,311,29],[365,12,311,31,"password"],[365,20,311,39],[366,12,311,41,"options"],[367,10,311,49],[367,11,311,50],[367,14,311,53,"credentials"],[367,25,311,64],[368,10,312,16],[368,14,312,20,"codeChallenge"],[368,27,312,33],[368,30,312,36],[368,34,312,40],[369,10,313,16],[369,14,313,20,"codeChallengeMethod"],[369,33,313,39],[369,36,313,42],[369,40,313,46],[370,10,314,16],[370,14,314,20],[370,18,314,24],[370,19,314,25,"flowType"],[370,27,314,33],[370,32,314,38],[370,38,314,44],[370,40,314,46],[371,12,315,20],[372,12,316,20],[372,13,316,21,"codeChallenge"],[372,26,316,34],[372,28,316,36,"codeChallengeMethod"],[372,47,316,55],[372,48,316,56],[372,51,316,59],[372,57,316,65],[372,61,316,65,"getCodeChallengeAndMethod"],[372,72,316,90],[372,73,316,90,"getCodeChallengeAndMethod"],[372,98,316,90],[372,100,316,91],[372,104,316,95],[372,105,316,96,"storage"],[372,112,316,103],[372,114,316,105],[372,118,316,109],[372,119,316,110,"storageKey"],[372,129,316,120],[372,130,316,121],[373,10,317,16],[374,10,318,16,"res"],[374,13,318,19],[374,16,318,22],[374,22,318,28],[374,26,318,28,"_request"],[374,35,318,36],[374,36,318,36,"_request"],[374,44,318,36],[374,46,318,37],[374,50,318,41],[374,51,318,42,"fetch"],[374,56,318,47],[374,58,318,49],[374,64,318,55],[374,66,318,57],[374,69,318,60],[374,73,318,64],[374,74,318,65,"url"],[374,77,318,68],[374,86,318,77],[374,88,318,79],[375,12,319,20,"headers"],[375,19,319,27],[375,21,319,29],[375,25,319,33],[375,26,319,34,"headers"],[375,33,319,41],[376,12,320,20,"redirectTo"],[376,22,320,30],[376,24,320,32,"options"],[376,31,320,39],[376,36,320,44],[376,40,320,48],[376,44,320,52,"options"],[376,51,320,59],[376,56,320,64],[376,61,320,69],[376,62,320,70],[376,65,320,73],[376,70,320,78],[376,71,320,79],[376,74,320,82,"options"],[376,81,320,89],[376,82,320,90,"emailRedirectTo"],[376,97,320,105],[377,12,321,20,"body"],[377,16,321,24],[377,18,321,26],[378,14,322,24,"email"],[378,19,322,29],[379,14,323,24,"password"],[379,22,323,32],[380,14,324,24,"data"],[380,18,324,28],[380,20,324,30],[380,21,324,31,"_a"],[380,23,324,33],[380,26,324,36,"options"],[380,33,324,43],[380,38,324,48],[380,42,324,52],[380,46,324,56,"options"],[380,53,324,63],[380,58,324,68],[380,63,324,73],[380,64,324,74],[380,67,324,77],[380,72,324,82],[380,73,324,83],[380,76,324,86,"options"],[380,83,324,93],[380,84,324,94,"data"],[380,88,324,98],[380,94,324,104],[380,98,324,108],[380,102,324,112,"_a"],[380,104,324,114],[380,109,324,119],[380,114,324,124],[380,115,324,125],[380,118,324,128,"_a"],[380,120,324,130],[380,123,324,133],[380,124,324,134],[380,125,324,135],[381,14,325,24,"gotrue_meta_security"],[381,34,325,44],[381,36,325,46],[382,16,325,48,"captcha_token"],[382,29,325,61],[382,31,325,63,"options"],[382,38,325,70],[382,43,325,75],[382,47,325,79],[382,51,325,83,"options"],[382,58,325,90],[382,63,325,95],[382,68,325,100],[382,69,325,101],[382,72,325,104],[382,77,325,109],[382,78,325,110],[382,81,325,113,"options"],[382,88,325,120],[382,89,325,121,"captchaToken"],[383,14,325,134],[383,15,325,135],[384,14,326,24,"code_challenge"],[384,28,326,38],[384,30,326,40,"codeChallenge"],[384,43,326,53],[385,14,327,24,"code_challenge_method"],[385,35,327,45],[385,37,327,47,"codeChallengeMethod"],[386,12,328,20],[386,13,328,21],[387,12,329,20,"xform"],[387,17,329,25],[387,19,329,27,"_sessionResponse"],[387,28,329,43],[387,29,329,43,"_sessionResponse"],[388,10,330,16],[388,11,330,17],[388,12,330,18],[389,8,331,12],[389,9,331,13],[389,15,332,17],[389,19,332,21],[389,26,332,28],[389,30,332,32,"credentials"],[389,41,332,43],[389,43,332,45],[390,10,333,16],[390,16,333,22],[391,12,333,24,"phone"],[391,17,333,29],[392,12,333,31,"password"],[392,20,333,39],[393,12,333,41,"options"],[394,10,333,49],[394,11,333,50],[394,14,333,53,"credentials"],[394,25,333,64],[395,10,334,16,"res"],[395,13,334,19],[395,16,334,22],[395,22,334,28],[395,26,334,28,"_request"],[395,35,334,36],[395,36,334,36,"_request"],[395,44,334,36],[395,46,334,37],[395,50,334,41],[395,51,334,42,"fetch"],[395,56,334,47],[395,58,334,49],[395,64,334,55],[395,66,334,57],[395,69,334,60],[395,73,334,64],[395,74,334,65,"url"],[395,77,334,68],[395,86,334,77],[395,88,334,79],[396,12,335,20,"headers"],[396,19,335,27],[396,21,335,29],[396,25,335,33],[396,26,335,34,"headers"],[396,33,335,41],[397,12,336,20,"body"],[397,16,336,24],[397,18,336,26],[398,14,337,24,"phone"],[398,19,337,29],[399,14,338,24,"password"],[399,22,338,32],[400,14,339,24,"data"],[400,18,339,28],[400,20,339,30],[400,21,339,31,"_b"],[400,23,339,33],[400,26,339,36,"options"],[400,33,339,43],[400,38,339,48],[400,42,339,52],[400,46,339,56,"options"],[400,53,339,63],[400,58,339,68],[400,63,339,73],[400,64,339,74],[400,67,339,77],[400,72,339,82],[400,73,339,83],[400,76,339,86,"options"],[400,83,339,93],[400,84,339,94,"data"],[400,88,339,98],[400,94,339,104],[400,98,339,108],[400,102,339,112,"_b"],[400,104,339,114],[400,109,339,119],[400,114,339,124],[400,115,339,125],[400,118,339,128,"_b"],[400,120,339,130],[400,123,339,133],[400,124,339,134],[400,125,339,135],[401,14,340,24,"channel"],[401,21,340,31],[401,23,340,33],[401,24,340,34,"_c"],[401,26,340,36],[401,29,340,39,"options"],[401,36,340,46],[401,41,340,51],[401,45,340,55],[401,49,340,59,"options"],[401,56,340,66],[401,61,340,71],[401,66,340,76],[401,67,340,77],[401,70,340,80],[401,75,340,85],[401,76,340,86],[401,79,340,89,"options"],[401,86,340,96],[401,87,340,97,"channel"],[401,94,340,104],[401,100,340,110],[401,104,340,114],[401,108,340,118,"_c"],[401,110,340,120],[401,115,340,125],[401,120,340,130],[401,121,340,131],[401,124,340,134,"_c"],[401,126,340,136],[401,129,340,139],[401,134,340,144],[402,14,341,24,"gotrue_meta_security"],[402,34,341,44],[402,36,341,46],[403,16,341,48,"captcha_token"],[403,29,341,61],[403,31,341,63,"options"],[403,38,341,70],[403,43,341,75],[403,47,341,79],[403,51,341,83,"options"],[403,58,341,90],[403,63,341,95],[403,68,341,100],[403,69,341,101],[403,72,341,104],[403,77,341,109],[403,78,341,110],[403,81,341,113,"options"],[403,88,341,120],[403,89,341,121,"captchaToken"],[404,14,341,134],[405,12,342,20],[405,13,342,21],[406,12,343,20,"xform"],[406,17,343,25],[406,19,343,27,"_sessionResponse"],[406,28,343,43],[406,29,343,43,"_sessionResponse"],[407,10,344,16],[407,11,344,17],[407,12,344,18],[408,8,345,12],[408,9,345,13],[408,15,346,17],[409,10,347,16],[409,16,347,22],[409,20,347,26,"AuthInvalidCredentialsError"],[409,30,347,53],[409,31,347,53,"AuthInvalidCredentialsError"],[409,58,347,53],[409,59,347,54],[409,124,347,119],[409,125,347,120],[410,8,348,12],[411,8,349,12],[411,14,349,18],[412,10,349,20,"data"],[412,14,349,24],[413,10,349,26,"error"],[414,8,349,32],[414,9,349,33],[414,12,349,36,"res"],[414,15,349,39],[415,8,350,12],[415,12,350,16,"error"],[415,17,350,21],[415,21,350,25],[415,22,350,26,"data"],[415,26,350,30],[415,28,350,32],[416,10,351,16],[416,17,351,23],[417,12,351,25,"data"],[417,16,351,29],[417,18,351,31],[418,14,351,33,"user"],[418,18,351,37],[418,20,351,39],[418,24,351,43],[419,14,351,45,"session"],[419,21,351,52],[419,23,351,54],[420,12,351,59],[420,13,351,60],[421,12,351,62,"error"],[421,17,351,67],[421,19,351,69,"error"],[422,10,351,75],[422,11,351,76],[423,8,352,12],[424,8,353,12],[424,14,353,18,"session"],[424,21,353,25],[424,24,353,28,"data"],[424,28,353,32],[424,29,353,33,"session"],[424,36,353,40],[425,8,354,12],[425,14,354,18,"user"],[425,18,354,22],[425,21,354,25,"data"],[425,25,354,29],[425,26,354,30,"user"],[425,30,354,34],[426,8,355,12],[426,12,355,16,"data"],[426,16,355,20],[426,17,355,21,"session"],[426,24,355,28],[426,26,355,30],[427,10,356,16],[427,16,356,22],[427,20,356,26],[427,21,356,27,"_saveSession"],[427,33,356,39],[427,34,356,40,"data"],[427,38,356,44],[427,39,356,45,"session"],[427,46,356,52],[427,47,356,53],[428,10,357,16],[428,16,357,22],[428,20,357,26],[428,21,357,27,"_notifyAllSubscribers"],[428,42,357,48],[428,43,357,49],[428,54,357,60],[428,56,357,62,"session"],[428,63,357,69],[428,64,357,70],[429,8,358,12],[430,8,359,12],[430,15,359,19],[431,10,359,21,"data"],[431,14,359,25],[431,16,359,27],[432,12,359,29,"user"],[432,16,359,33],[433,12,359,35,"session"],[434,10,359,43],[434,11,359,44],[435,10,359,46,"error"],[435,15,359,51],[435,17,359,53],[436,8,359,58],[436,9,359,59],[437,6,360,8],[437,7,360,9],[437,8,361,8],[437,15,361,15,"error"],[437,20,361,20],[437,22,361,22],[438,8,362,12],[438,12,362,16],[438,16,362,16,"isAuthError"],[438,26,362,27],[438,27,362,27,"isAuthError"],[438,38,362,27],[438,40,362,28,"error"],[438,45,362,33],[438,46,362,34],[438,48,362,36],[439,10,363,16],[439,17,363,23],[440,12,363,25,"data"],[440,16,363,29],[440,18,363,31],[441,14,363,33,"user"],[441,18,363,37],[441,20,363,39],[441,24,363,43],[442,14,363,45,"session"],[442,21,363,52],[442,23,363,54],[443,12,363,59],[443,13,363,60],[444,12,363,62,"error"],[445,10,363,68],[445,11,363,69],[446,8,364,12],[447,8,365,12],[447,14,365,18,"error"],[447,19,365,23],[448,6,366,8],[449,4,367,4],[450,4,368,4],[451,0,369,0],[452,0,370,0],[453,0,371,0],[454,0,372,0],[455,0,373,0],[456,0,374,0],[457,0,375,0],[458,4,376,4],[458,10,376,10,"signInWithPassword"],[458,28,376,28,"signInWithPassword"],[458,29,376,29,"credentials"],[458,40,376,40],[458,42,376,42],[459,6,377,8],[459,10,377,12],[460,8,378,12],[460,12,378,16,"res"],[460,15,378,19],[461,8,379,12],[461,12,379,16],[461,19,379,23],[461,23,379,27,"credentials"],[461,34,379,38],[461,36,379,40],[462,10,380,16],[462,16,380,22],[463,12,380,24,"email"],[463,17,380,29],[464,12,380,31,"password"],[464,20,380,39],[465,12,380,41,"options"],[466,10,380,49],[466,11,380,50],[466,14,380,53,"credentials"],[466,25,380,64],[467,10,381,16,"res"],[467,13,381,19],[467,16,381,22],[467,22,381,28],[467,26,381,28,"_request"],[467,35,381,36],[467,36,381,36,"_request"],[467,44,381,36],[467,46,381,37],[467,50,381,41],[467,51,381,42,"fetch"],[467,56,381,47],[467,58,381,49],[467,64,381,55],[467,66,381,57],[467,69,381,60],[467,73,381,64],[467,74,381,65,"url"],[467,77,381,68],[467,105,381,96],[467,107,381,98],[468,12,382,20,"headers"],[468,19,382,27],[468,21,382,29],[468,25,382,33],[468,26,382,34,"headers"],[468,33,382,41],[469,12,383,20,"body"],[469,16,383,24],[469,18,383,26],[470,14,384,24,"email"],[470,19,384,29],[471,14,385,24,"password"],[471,22,385,32],[472,14,386,24,"gotrue_meta_security"],[472,34,386,44],[472,36,386,46],[473,16,386,48,"captcha_token"],[473,29,386,61],[473,31,386,63,"options"],[473,38,386,70],[473,43,386,75],[473,47,386,79],[473,51,386,83,"options"],[473,58,386,90],[473,63,386,95],[473,68,386,100],[473,69,386,101],[473,72,386,104],[473,77,386,109],[473,78,386,110],[473,81,386,113,"options"],[473,88,386,120],[473,89,386,121,"captchaToken"],[474,14,386,134],[475,12,387,20],[475,13,387,21],[476,12,388,20,"xform"],[476,17,388,25],[476,19,388,27,"_sessionResponsePassword"],[476,28,388,51],[476,29,388,51,"_sessionResponsePassword"],[477,10,389,16],[477,11,389,17],[477,12,389,18],[478,8,390,12],[478,9,390,13],[478,15,391,17],[478,19,391,21],[478,26,391,28],[478,30,391,32,"credentials"],[478,41,391,43],[478,43,391,45],[479,10,392,16],[479,16,392,22],[480,12,392,24,"phone"],[480,17,392,29],[481,12,392,31,"password"],[481,20,392,39],[482,12,392,41,"options"],[483,10,392,49],[483,11,392,50],[483,14,392,53,"credentials"],[483,25,392,64],[484,10,393,16,"res"],[484,13,393,19],[484,16,393,22],[484,22,393,28],[484,26,393,28,"_request"],[484,35,393,36],[484,36,393,36,"_request"],[484,44,393,36],[484,46,393,37],[484,50,393,41],[484,51,393,42,"fetch"],[484,56,393,47],[484,58,393,49],[484,64,393,55],[484,66,393,57],[484,69,393,60],[484,73,393,64],[484,74,393,65,"url"],[484,77,393,68],[484,105,393,96],[484,107,393,98],[485,12,394,20,"headers"],[485,19,394,27],[485,21,394,29],[485,25,394,33],[485,26,394,34,"headers"],[485,33,394,41],[486,12,395,20,"body"],[486,16,395,24],[486,18,395,26],[487,14,396,24,"phone"],[487,19,396,29],[488,14,397,24,"password"],[488,22,397,32],[489,14,398,24,"gotrue_meta_security"],[489,34,398,44],[489,36,398,46],[490,16,398,48,"captcha_token"],[490,29,398,61],[490,31,398,63,"options"],[490,38,398,70],[490,43,398,75],[490,47,398,79],[490,51,398,83,"options"],[490,58,398,90],[490,63,398,95],[490,68,398,100],[490,69,398,101],[490,72,398,104],[490,77,398,109],[490,78,398,110],[490,81,398,113,"options"],[490,88,398,120],[490,89,398,121,"captchaToken"],[491,14,398,134],[492,12,399,20],[492,13,399,21],[493,12,400,20,"xform"],[493,17,400,25],[493,19,400,27,"_sessionResponsePassword"],[493,28,400,51],[493,29,400,51,"_sessionResponsePassword"],[494,10,401,16],[494,11,401,17],[494,12,401,18],[495,8,402,12],[495,9,402,13],[495,15,403,17],[496,10,404,16],[496,16,404,22],[496,20,404,26,"AuthInvalidCredentialsError"],[496,30,404,53],[496,31,404,53,"AuthInvalidCredentialsError"],[496,58,404,53],[496,59,404,54],[496,124,404,119],[496,125,404,120],[497,8,405,12],[498,8,406,12],[498,14,406,18],[499,10,406,20,"data"],[499,14,406,24],[500,10,406,26,"error"],[501,8,406,32],[501,9,406,33],[501,12,406,36,"res"],[501,15,406,39],[502,8,407,12],[502,12,407,16,"error"],[502,17,407,21],[502,19,407,23],[503,10,408,16],[503,17,408,23],[504,12,408,25,"data"],[504,16,408,29],[504,18,408,31],[505,14,408,33,"user"],[505,18,408,37],[505,20,408,39],[505,24,408,43],[506,14,408,45,"session"],[506,21,408,52],[506,23,408,54],[507,12,408,59],[507,13,408,60],[508,12,408,62,"error"],[509,10,408,68],[509,11,408,69],[510,8,409,12],[510,9,409,13],[510,15,410,17],[510,19,410,21],[510,20,410,22,"data"],[510,24,410,26],[510,28,410,30],[510,29,410,31,"data"],[510,33,410,35],[510,34,410,36,"session"],[510,41,410,43],[510,45,410,47],[510,46,410,48,"data"],[510,50,410,52],[510,51,410,53,"user"],[510,55,410,57],[510,57,410,59],[511,10,411,16],[511,17,411,23],[512,12,411,25,"data"],[512,16,411,29],[512,18,411,31],[513,14,411,33,"user"],[513,18,411,37],[513,20,411,39],[513,24,411,43],[514,14,411,45,"session"],[514,21,411,52],[514,23,411,54],[515,12,411,59],[515,13,411,60],[516,12,411,62,"error"],[516,17,411,67],[516,19,411,69],[516,23,411,73,"AuthInvalidTokenResponseError"],[516,33,411,102],[516,34,411,102,"AuthInvalidTokenResponseError"],[516,63,411,102],[516,64,411,103],[517,10,411,105],[517,11,411,106],[518,8,412,12],[519,8,413,12],[519,12,413,16,"data"],[519,16,413,20],[519,17,413,21,"session"],[519,24,413,28],[519,26,413,30],[520,10,414,16],[520,16,414,22],[520,20,414,26],[520,21,414,27,"_saveSession"],[520,33,414,39],[520,34,414,40,"data"],[520,38,414,44],[520,39,414,45,"session"],[520,46,414,52],[520,47,414,53],[521,10,415,16],[521,16,415,22],[521,20,415,26],[521,21,415,27,"_notifyAllSubscribers"],[521,42,415,48],[521,43,415,49],[521,54,415,60],[521,56,415,62,"data"],[521,60,415,66],[521,61,415,67,"session"],[521,68,415,74],[521,69,415,75],[522,8,416,12],[523,8,417,12],[523,15,417,19],[524,10,418,16,"data"],[524,14,418,20],[524,16,418,22,"Object"],[524,22,418,28],[524,23,418,29,"assign"],[524,29,418,35],[524,30,418,36],[525,12,418,38,"user"],[525,16,418,42],[525,18,418,44,"data"],[525,22,418,48],[525,23,418,49,"user"],[525,27,418,53],[526,12,418,55,"session"],[526,19,418,62],[526,21,418,64,"data"],[526,25,418,68],[526,26,418,69,"session"],[527,10,418,77],[527,11,418,78],[527,13,418,81,"data"],[527,17,418,85],[527,18,418,86,"weak_password"],[527,31,418,99],[527,34,418,102],[528,12,418,104,"weakPassword"],[528,24,418,116],[528,26,418,118,"data"],[528,30,418,122],[528,31,418,123,"weak_password"],[529,10,418,137],[529,11,418,138],[529,14,418,141],[529,18,418,146],[529,19,418,147],[530,10,419,16,"error"],[531,8,420,12],[531,9,420,13],[532,6,421,8],[532,7,421,9],[532,8,422,8],[532,15,422,15,"error"],[532,20,422,20],[532,22,422,22],[533,8,423,12],[533,12,423,16],[533,16,423,16,"isAuthError"],[533,26,423,27],[533,27,423,27,"isAuthError"],[533,38,423,27],[533,40,423,28,"error"],[533,45,423,33],[533,46,423,34],[533,48,423,36],[534,10,424,16],[534,17,424,23],[535,12,424,25,"data"],[535,16,424,29],[535,18,424,31],[536,14,424,33,"user"],[536,18,424,37],[536,20,424,39],[536,24,424,43],[537,14,424,45,"session"],[537,21,424,52],[537,23,424,54],[538,12,424,59],[538,13,424,60],[539,12,424,62,"error"],[540,10,424,68],[540,11,424,69],[541,8,425,12],[542,8,426,12],[542,14,426,18,"error"],[542,19,426,23],[543,6,427,8],[544,4,428,4],[545,4,429,4],[546,0,430,0],[547,0,431,0],[548,0,432,0],[549,4,433,4],[549,10,433,10,"signInWithOAuth"],[549,25,433,25,"signInWithOAuth"],[549,26,433,26,"credentials"],[549,37,433,37],[549,39,433,39],[550,6,434,8],[550,10,434,12,"_a"],[550,12,434,14],[550,14,434,16,"_b"],[550,16,434,18],[550,18,434,20,"_c"],[550,20,434,22],[550,22,434,24,"_d"],[550,24,434,26],[551,6,435,8],[551,13,435,15],[551,19,435,21],[551,23,435,25],[551,24,435,26,"_handleProviderSignIn"],[551,45,435,47],[551,46,435,48,"credentials"],[551,57,435,59],[551,58,435,60,"provider"],[551,66,435,68],[551,68,435,70],[552,8,436,12,"redirectTo"],[552,18,436,22],[552,20,436,24],[552,21,436,25,"_a"],[552,23,436,27],[552,26,436,30,"credentials"],[552,37,436,41],[552,38,436,42,"options"],[552,45,436,49],[552,51,436,55],[552,55,436,59],[552,59,436,63,"_a"],[552,61,436,65],[552,66,436,70],[552,71,436,75],[552,72,436,76],[552,75,436,79],[552,80,436,84],[552,81,436,85],[552,84,436,88,"_a"],[552,86,436,90],[552,87,436,91,"redirectTo"],[552,97,436,101],[553,8,437,12,"scopes"],[553,14,437,18],[553,16,437,20],[553,17,437,21,"_b"],[553,19,437,23],[553,22,437,26,"credentials"],[553,33,437,37],[553,34,437,38,"options"],[553,41,437,45],[553,47,437,51],[553,51,437,55],[553,55,437,59,"_b"],[553,57,437,61],[553,62,437,66],[553,67,437,71],[553,68,437,72],[553,71,437,75],[553,76,437,80],[553,77,437,81],[553,80,437,84,"_b"],[553,82,437,86],[553,83,437,87,"scopes"],[553,89,437,93],[554,8,438,12,"queryParams"],[554,19,438,23],[554,21,438,25],[554,22,438,26,"_c"],[554,24,438,28],[554,27,438,31,"credentials"],[554,38,438,42],[554,39,438,43,"options"],[554,46,438,50],[554,52,438,56],[554,56,438,60],[554,60,438,64,"_c"],[554,62,438,66],[554,67,438,71],[554,72,438,76],[554,73,438,77],[554,76,438,80],[554,81,438,85],[554,82,438,86],[554,85,438,89,"_c"],[554,87,438,91],[554,88,438,92,"queryParams"],[554,99,438,103],[555,8,439,12,"skipBrowserRedirect"],[555,27,439,31],[555,29,439,33],[555,30,439,34,"_d"],[555,32,439,36],[555,35,439,39,"credentials"],[555,46,439,50],[555,47,439,51,"options"],[555,54,439,58],[555,60,439,64],[555,64,439,68],[555,68,439,72,"_d"],[555,70,439,74],[555,75,439,79],[555,80,439,84],[555,81,439,85],[555,84,439,88],[555,89,439,93],[555,90,439,94],[555,93,439,97,"_d"],[555,95,439,99],[555,96,439,100,"skipBrowserRedirect"],[556,6,440,8],[556,7,440,9],[556,8,440,10],[557,4,441,4],[558,4,442,4],[559,0,443,0],[560,0,444,0],[561,4,445,4],[561,10,445,10,"exchangeCodeForSession"],[561,32,445,32,"exchangeCodeForSession"],[561,33,445,33,"authCode"],[561,41,445,41],[561,43,445,43],[562,6,446,8],[562,12,446,14],[562,16,446,18],[562,17,446,19,"initializePromise"],[562,34,446,36],[563,6,447,8],[563,13,447,15],[563,17,447,19],[563,18,447,20,"_acquireLock"],[563,30,447,32],[563,31,447,33],[563,32,447,34],[563,33,447,35],[563,35,447,37],[563,47,447,49],[564,8,448,12],[564,15,448,19],[564,19,448,23],[564,20,448,24,"_exchangeCodeForSession"],[564,43,448,47],[564,44,448,48,"authCode"],[564,52,448,56],[564,53,448,57],[565,6,449,8],[565,7,449,9],[565,8,449,10],[566,4,450,4],[567,4,451,4],[568,0,452,0],[569,0,453,0],[570,0,454,0],[571,0,455,0],[572,0,456,0],[573,0,457,0],[574,4,458,4],[574,10,458,10,"signInWithWeb3"],[574,24,458,24,"signInWithWeb3"],[574,25,458,25,"credentials"],[574,36,458,36],[574,38,458,38],[575,6,459,8],[575,12,459,14],[576,8,459,16,"chain"],[577,6,459,22],[577,7,459,23],[577,10,459,26,"credentials"],[577,21,459,37],[578,6,460,8],[578,14,460,16,"chain"],[578,19,460,21],[579,8,461,12],[579,13,461,17],[579,23,461,27],[580,10,462,16],[580,17,462,23],[580,23,462,29],[580,27,462,33],[580,28,462,34,"signInWithEthereum"],[580,46,462,52],[580,47,462,53,"credentials"],[580,58,462,64],[580,59,462,65],[581,8,463,12],[581,13,463,17],[581,21,463,25],[582,10,464,16],[582,17,464,23],[582,23,464,29],[582,27,464,33],[582,28,464,34,"signInWithSolana"],[582,44,464,50],[582,45,464,51,"credentials"],[582,56,464,62],[582,57,464,63],[583,8,465,12],[584,10,466,16],[584,16,466,22],[584,20,466,26,"Error"],[584,25,466,31],[584,26,466,32],[584,67,466,73,"chain"],[584,72,466,78],[584,75,466,81],[584,76,466,82],[585,6,467,8],[586,4,468,4],[587,4,469,4],[587,10,469,10,"signInWithEthereum"],[587,28,469,28,"signInWithEthereum"],[587,29,469,29,"credentials"],[587,40,469,40],[587,42,469,42],[588,6,470,8],[588,10,470,12,"_a"],[588,12,470,14],[588,14,470,16,"_b"],[588,16,470,18],[588,18,470,20,"_c"],[588,20,470,22],[588,22,470,24,"_d"],[588,24,470,26],[588,26,470,28,"_e"],[588,28,470,30],[588,30,470,32,"_f"],[588,32,470,34],[588,34,470,36,"_g"],[588,36,470,38],[588,38,470,40,"_h"],[588,40,470,42],[588,42,470,44,"_j"],[588,44,470,46],[588,46,470,48,"_k"],[588,48,470,50],[588,50,470,52,"_l"],[588,52,470,54],[589,6,471,8],[590,6,472,8],[590,10,472,12,"message"],[590,17,472,19],[591,6,473,8],[591,10,473,12,"signature"],[591,19,473,21],[592,6,474,8],[592,10,474,12],[592,19,474,21],[592,23,474,25,"credentials"],[592,34,474,36],[592,36,474,38],[593,8,475,12,"message"],[593,15,475,19],[593,18,475,22,"credentials"],[593,29,475,33],[593,30,475,34,"message"],[593,37,475,41],[594,8,476,12,"signature"],[594,17,476,21],[594,20,476,24,"credentials"],[594,31,476,35],[594,32,476,36,"signature"],[594,41,476,45],[595,6,477,8],[595,7,477,9],[595,13,478,13],[596,8,479,12],[596,14,479,18],[597,10,479,20,"chain"],[597,15,479,25],[598,10,479,27,"wallet"],[598,16,479,33],[599,10,479,35,"statement"],[599,19,479,44],[600,10,479,46,"options"],[601,8,479,54],[601,9,479,55],[601,12,479,58,"credentials"],[601,23,479,69],[602,8,480,12],[602,12,480,16,"resolvedWallet"],[602,26,480,30],[603,8,481,12],[603,12,481,16],[603,13,481,17],[603,17,481,17,"isBrowser"],[603,28,481,26],[603,29,481,26,"isBrowser"],[603,38,481,26],[603,40,481,27],[603,41,481,28],[603,43,481,30],[604,10,482,16],[604,14,482,20],[604,21,482,27,"wallet"],[604,27,482,33],[604,32,482,38],[604,40,482,46],[604,44,482,50],[604,46,482,52,"options"],[604,53,482,59],[604,58,482,64],[604,62,482,68],[604,66,482,72,"options"],[604,73,482,79],[604,78,482,84],[604,83,482,89],[604,84,482,90],[604,87,482,93],[604,92,482,98],[604,93,482,99],[604,96,482,102,"options"],[604,103,482,109],[604,104,482,110,"url"],[604,107,482,113],[604,108,482,114],[604,110,482,116],[605,12,483,20],[605,18,483,26],[605,22,483,30,"Error"],[605,27,483,35],[605,28,483,36],[605,115,483,123],[605,116,483,124],[606,10,484,16],[607,10,485,16,"resolvedWallet"],[607,24,485,30],[607,27,485,33,"wallet"],[607,33,485,39],[608,8,486,12],[608,9,486,13],[608,15,487,17],[608,19,487,21],[608,26,487,28,"wallet"],[608,32,487,34],[608,37,487,39],[608,45,487,47],[608,47,487,49],[609,10,488,16,"resolvedWallet"],[609,24,488,30],[609,27,488,33,"wallet"],[609,33,488,39],[610,8,489,12],[610,9,489,13],[610,15,490,17],[611,10,491,16],[611,16,491,22,"windowAny"],[611,25,491,31],[611,28,491,34,"window"],[611,34,491,40],[612,10,492,16],[612,14,492,20],[612,24,492,30],[612,28,492,34,"windowAny"],[612,37,492,43],[612,41,493,20],[612,48,493,27,"windowAny"],[612,57,493,36],[612,58,493,37,"ethereum"],[612,66,493,45],[612,71,493,50],[612,79,493,58],[612,83,494,20],[612,92,494,29],[612,96,494,33,"windowAny"],[612,105,494,42],[612,106,494,43,"ethereum"],[612,114,494,51],[612,118,495,20],[612,125,495,27,"windowAny"],[612,134,495,36],[612,135,495,37,"ethereum"],[612,143,495,45],[612,144,495,46,"request"],[612,151,495,53],[612,156,495,58],[612,166,495,68],[612,168,495,70],[613,12,496,20,"resolvedWallet"],[613,26,496,34],[613,29,496,37,"windowAny"],[613,38,496,46],[613,39,496,47,"ethereum"],[613,47,496,55],[614,10,497,16],[614,11,497,17],[614,17,498,21],[615,12,499,20],[615,18,499,26],[615,22,499,30,"Error"],[615,27,499,35],[615,28,499,36],[615,345,499,353],[615,346,499,354],[616,10,500,16],[617,8,501,12],[618,8,502,12],[618,14,502,18,"url"],[618,17,502,21],[618,20,502,24],[618,24,502,28,"URL"],[618,27,502,31],[618,28,502,32],[618,29,502,33,"_a"],[618,31,502,35],[618,34,502,38,"options"],[618,41,502,45],[618,46,502,50],[618,50,502,54],[618,54,502,58,"options"],[618,61,502,65],[618,66,502,70],[618,71,502,75],[618,72,502,76],[618,75,502,79],[618,80,502,84],[618,81,502,85],[618,84,502,88,"options"],[618,91,502,95],[618,92,502,96,"url"],[618,95,502,99],[618,101,502,105],[618,105,502,109],[618,109,502,113,"_a"],[618,111,502,115],[618,116,502,120],[618,121,502,125],[618,122,502,126],[618,125,502,129,"_a"],[618,127,502,131],[618,130,502,134,"window"],[618,136,502,140],[618,137,502,141,"location"],[618,145,502,149],[618,146,502,150,"href"],[618,150,502,154],[618,151,502,155],[619,8,503,12],[619,14,503,18,"accounts"],[619,22,503,26],[619,25,503,29],[619,31,503,35,"resolvedWallet"],[619,45,503,49],[619,46,504,17,"request"],[619,53,504,24],[619,54,504,25],[620,10,505,16,"method"],[620,16,505,22],[620,18,505,24],[621,8,506,12],[621,9,506,13],[621,10,506,14],[621,11,507,17,"then"],[621,15,507,21],[621,16,507,23,"accs"],[621,20,507,27],[621,24,507,32,"accs"],[621,28,507,36],[621,29,507,37],[621,30,508,17,"catch"],[621,35,508,22],[621,36,508,23],[621,42,508,29],[622,10,509,16],[622,16,509,22],[622,20,509,26,"Error"],[622,25,509,31],[622,26,509,32],[622,102,509,108],[622,103,509,109],[623,8,510,12],[623,9,510,13],[623,10,510,14],[624,8,511,12],[624,12,511,16],[624,13,511,17,"accounts"],[624,21,511,25],[624,25,511,29,"accounts"],[624,33,511,37],[624,34,511,38,"length"],[624,40,511,44],[624,45,511,49],[624,46,511,50],[624,48,511,52],[625,10,512,16],[625,16,512,22],[625,20,512,26,"Error"],[625,25,512,31],[625,26,512,32],[625,108,512,114],[625,109,512,115],[626,8,513,12],[627,8,514,12],[627,14,514,18,"address"],[627,21,514,25],[627,24,514,28],[627,28,514,28,"getAddress"],[627,44,514,38],[627,45,514,38,"getAddress"],[627,55,514,38],[627,57,514,39,"accounts"],[627,65,514,47],[627,66,514,48],[627,67,514,49],[627,68,514,50],[627,69,514,51],[628,8,515,12],[628,12,515,16,"chainId"],[628,19,515,23],[628,22,515,26],[628,23,515,27,"_b"],[628,25,515,29],[628,28,515,32,"options"],[628,35,515,39],[628,40,515,44],[628,44,515,48],[628,48,515,52,"options"],[628,55,515,59],[628,60,515,64],[628,65,515,69],[628,66,515,70],[628,69,515,73],[628,74,515,78],[628,75,515,79],[628,78,515,82,"options"],[628,85,515,89],[628,86,515,90,"signInWithEthereum"],[628,104,515,108],[628,110,515,114],[628,114,515,118],[628,118,515,122,"_b"],[628,120,515,124],[628,125,515,129],[628,130,515,134],[628,131,515,135],[628,134,515,138],[628,139,515,143],[628,140,515,144],[628,143,515,147,"_b"],[628,145,515,149],[628,146,515,150,"chainId"],[628,153,515,157],[629,8,516,12],[629,12,516,16],[629,13,516,17,"chainId"],[629,20,516,24],[629,22,516,26],[630,10,517,16],[630,16,517,22,"chainIdHex"],[630,26,517,32],[630,29,517,35],[630,35,517,41,"resolvedWallet"],[630,49,517,55],[630,50,517,56,"request"],[630,57,517,63],[630,58,517,64],[631,12,518,20,"method"],[631,18,518,26],[631,20,518,28],[632,10,519,16],[632,11,519,17],[632,12,519,18],[633,10,520,16,"chainId"],[633,17,520,23],[633,20,520,26],[633,24,520,26,"fromHex"],[633,40,520,33],[633,41,520,33,"fromHex"],[633,48,520,33],[633,50,520,34,"chainIdHex"],[633,60,520,44],[633,61,520,45],[634,8,521,12],[635,8,522,12],[635,14,522,18,"siweMessage"],[635,25,522,29],[635,28,522,32],[636,10,523,16,"domain"],[636,16,523,22],[636,18,523,24,"url"],[636,21,523,27],[636,22,523,28,"host"],[636,26,523,32],[637,10,524,16,"address"],[637,17,524,23],[637,19,524,25,"address"],[637,26,524,32],[638,10,525,16,"statement"],[638,19,525,25],[638,21,525,27,"statement"],[638,30,525,36],[639,10,526,16,"uri"],[639,13,526,19],[639,15,526,21,"url"],[639,18,526,24],[639,19,526,25,"href"],[639,23,526,29],[640,10,527,16,"version"],[640,17,527,23],[640,19,527,25],[640,22,527,28],[641,10,528,16,"chainId"],[641,17,528,23],[641,19,528,25,"chainId"],[641,26,528,32],[642,10,529,16,"nonce"],[642,15,529,21],[642,17,529,23],[642,18,529,24,"_c"],[642,20,529,26],[642,23,529,29,"options"],[642,30,529,36],[642,35,529,41],[642,39,529,45],[642,43,529,49,"options"],[642,50,529,56],[642,55,529,61],[642,60,529,66],[642,61,529,67],[642,64,529,70],[642,69,529,75],[642,70,529,76],[642,73,529,79,"options"],[642,80,529,86],[642,81,529,87,"signInWithEthereum"],[642,99,529,105],[642,105,529,111],[642,109,529,115],[642,113,529,119,"_c"],[642,115,529,121],[642,120,529,126],[642,125,529,131],[642,126,529,132],[642,129,529,135],[642,134,529,140],[642,135,529,141],[642,138,529,144,"_c"],[642,140,529,146],[642,141,529,147,"nonce"],[642,146,529,152],[643,10,530,16,"issuedAt"],[643,18,530,24],[643,20,530,26],[643,21,530,27,"_e"],[643,23,530,29],[643,26,530,32],[643,27,530,33,"_d"],[643,29,530,35],[643,32,530,38,"options"],[643,39,530,45],[643,44,530,50],[643,48,530,54],[643,52,530,58,"options"],[643,59,530,65],[643,64,530,70],[643,69,530,75],[643,70,530,76],[643,73,530,79],[643,78,530,84],[643,79,530,85],[643,82,530,88,"options"],[643,89,530,95],[643,90,530,96,"signInWithEthereum"],[643,108,530,114],[643,114,530,120],[643,118,530,124],[643,122,530,128,"_d"],[643,124,530,130],[643,129,530,135],[643,134,530,140],[643,135,530,141],[643,138,530,144],[643,143,530,149],[643,144,530,150],[643,147,530,153,"_d"],[643,149,530,155],[643,150,530,156,"issuedAt"],[643,158,530,164],[643,164,530,170],[643,168,530,174],[643,172,530,178,"_e"],[643,174,530,180],[643,179,530,185],[643,184,530,190],[643,185,530,191],[643,188,530,194,"_e"],[643,190,530,196],[643,193,530,199],[643,197,530,203,"Date"],[643,201,530,207],[643,202,530,208],[643,203,530,209],[644,10,531,16,"expirationTime"],[644,24,531,30],[644,26,531,32],[644,27,531,33,"_f"],[644,29,531,35],[644,32,531,38,"options"],[644,39,531,45],[644,44,531,50],[644,48,531,54],[644,52,531,58,"options"],[644,59,531,65],[644,64,531,70],[644,69,531,75],[644,70,531,76],[644,73,531,79],[644,78,531,84],[644,79,531,85],[644,82,531,88,"options"],[644,89,531,95],[644,90,531,96,"signInWithEthereum"],[644,108,531,114],[644,114,531,120],[644,118,531,124],[644,122,531,128,"_f"],[644,124,531,130],[644,129,531,135],[644,134,531,140],[644,135,531,141],[644,138,531,144],[644,143,531,149],[644,144,531,150],[644,147,531,153,"_f"],[644,149,531,155],[644,150,531,156,"expirationTime"],[644,164,531,170],[645,10,532,16,"notBefore"],[645,19,532,25],[645,21,532,27],[645,22,532,28,"_g"],[645,24,532,30],[645,27,532,33,"options"],[645,34,532,40],[645,39,532,45],[645,43,532,49],[645,47,532,53,"options"],[645,54,532,60],[645,59,532,65],[645,64,532,70],[645,65,532,71],[645,68,532,74],[645,73,532,79],[645,74,532,80],[645,77,532,83,"options"],[645,84,532,90],[645,85,532,91,"signInWithEthereum"],[645,103,532,109],[645,109,532,115],[645,113,532,119],[645,117,532,123,"_g"],[645,119,532,125],[645,124,532,130],[645,129,532,135],[645,130,532,136],[645,133,532,139],[645,138,532,144],[645,139,532,145],[645,142,532,148,"_g"],[645,144,532,150],[645,145,532,151,"notBefore"],[645,154,532,160],[646,10,533,16,"requestId"],[646,19,533,25],[646,21,533,27],[646,22,533,28,"_h"],[646,24,533,30],[646,27,533,33,"options"],[646,34,533,40],[646,39,533,45],[646,43,533,49],[646,47,533,53,"options"],[646,54,533,60],[646,59,533,65],[646,64,533,70],[646,65,533,71],[646,68,533,74],[646,73,533,79],[646,74,533,80],[646,77,533,83,"options"],[646,84,533,90],[646,85,533,91,"signInWithEthereum"],[646,103,533,109],[646,109,533,115],[646,113,533,119],[646,117,533,123,"_h"],[646,119,533,125],[646,124,533,130],[646,129,533,135],[646,130,533,136],[646,133,533,139],[646,138,533,144],[646,139,533,145],[646,142,533,148,"_h"],[646,144,533,150],[646,145,533,151,"requestId"],[646,154,533,160],[647,10,534,16,"resources"],[647,19,534,25],[647,21,534,27],[647,22,534,28,"_j"],[647,24,534,30],[647,27,534,33,"options"],[647,34,534,40],[647,39,534,45],[647,43,534,49],[647,47,534,53,"options"],[647,54,534,60],[647,59,534,65],[647,64,534,70],[647,65,534,71],[647,68,534,74],[647,73,534,79],[647,74,534,80],[647,77,534,83,"options"],[647,84,534,90],[647,85,534,91,"signInWithEthereum"],[647,103,534,109],[647,109,534,115],[647,113,534,119],[647,117,534,123,"_j"],[647,119,534,125],[647,124,534,130],[647,129,534,135],[647,130,534,136],[647,133,534,139],[647,138,534,144],[647,139,534,145],[647,142,534,148,"_j"],[647,144,534,150],[647,145,534,151,"resources"],[648,8,535,12],[648,9,535,13],[649,8,536,12,"message"],[649,15,536,19],[649,18,536,22],[649,22,536,22,"createSiweMessage"],[649,38,536,39],[649,39,536,39,"createSiweMessage"],[649,56,536,39],[649,58,536,40,"siweMessage"],[649,69,536,51],[649,70,536,52],[650,8,537,12],[651,8,538,12,"signature"],[651,17,538,21],[651,20,538,25],[651,26,538,31,"resolvedWallet"],[651,40,538,45],[651,41,538,46,"request"],[651,48,538,53],[651,49,538,54],[652,10,539,16,"method"],[652,16,539,22],[652,18,539,24],[652,33,539,39],[653,10,540,16,"params"],[653,16,540,22],[653,18,540,24],[653,19,540,25],[653,23,540,25,"toHex"],[653,39,540,30],[653,40,540,30,"toHex"],[653,45,540,30],[653,47,540,31,"message"],[653,54,540,38],[653,55,540,39],[653,57,540,41,"address"],[653,64,540,48],[654,8,541,12],[654,9,541,13],[654,10,541,15],[655,6,542,8],[656,6,543,8],[656,10,543,12],[657,8,544,12],[657,14,544,18],[658,10,544,20,"data"],[658,14,544,24],[659,10,544,26,"error"],[660,8,544,32],[660,9,544,33],[660,12,544,36],[660,18,544,42],[660,22,544,42,"_request"],[660,31,544,50],[660,32,544,50,"_request"],[660,40,544,50],[660,42,544,51],[660,46,544,55],[660,47,544,56,"fetch"],[660,52,544,61],[660,54,544,63],[660,60,544,69],[660,62,544,71],[660,65,544,74],[660,69,544,78],[660,70,544,79,"url"],[660,73,544,82],[660,97,544,106],[660,99,544,108],[661,10,545,16,"headers"],[661,17,545,23],[661,19,545,25],[661,23,545,29],[661,24,545,30,"headers"],[661,31,545,37],[662,10,546,16,"body"],[662,14,546,20],[662,16,546,22,"Object"],[662,22,546,28],[662,23,546,29,"assign"],[662,29,546,35],[662,30,546,36],[663,12,546,38,"chain"],[663,17,546,43],[663,19,546,45],[663,29,546,55],[664,12,546,57,"message"],[664,19,546,64],[665,12,547,20,"signature"],[666,10,547,30],[666,11,547,31],[666,13,547,34],[666,14,547,35],[666,15,547,36,"_k"],[666,17,547,38],[666,20,547,41,"credentials"],[666,31,547,52],[666,32,547,53,"options"],[666,39,547,60],[666,45,547,66],[666,49,547,70],[666,53,547,74,"_k"],[666,55,547,76],[666,60,547,81],[666,65,547,86],[666,66,547,87],[666,69,547,90],[666,74,547,95],[666,75,547,96],[666,78,547,99,"_k"],[666,80,547,101],[666,81,547,102,"captchaToken"],[666,93,547,114],[666,97,548,22],[667,12,548,24,"gotrue_meta_security"],[667,32,548,44],[667,34,548,46],[668,14,548,48,"captcha_token"],[668,27,548,61],[668,29,548,63],[668,30,548,64,"_l"],[668,32,548,66],[668,35,548,69,"credentials"],[668,46,548,80],[668,47,548,81,"options"],[668,54,548,88],[668,60,548,94],[668,64,548,98],[668,68,548,102,"_l"],[668,70,548,104],[668,75,548,109],[668,80,548,114],[668,81,548,115],[668,84,548,118],[668,89,548,123],[668,90,548,124],[668,93,548,127,"_l"],[668,95,548,129],[668,96,548,130,"captchaToken"],[669,12,548,143],[670,10,548,145],[670,11,548,146],[670,14,549,22],[670,18,549,27],[670,19,549,28],[671,10,550,16,"xform"],[671,15,550,21],[671,17,550,23,"_sessionResponse"],[671,26,550,39],[671,27,550,39,"_sessionResponse"],[672,8,551,12],[672,9,551,13],[672,10,551,14],[673,8,552,12],[673,12,552,16,"error"],[673,17,552,21],[673,19,552,23],[674,10,553,16],[674,16,553,22,"error"],[674,21,553,27],[675,8,554,12],[676,8,555,12],[676,12,555,16],[676,13,555,17,"data"],[676,17,555,21],[676,21,555,25],[676,22,555,26,"data"],[676,26,555,30],[676,27,555,31,"session"],[676,34,555,38],[676,38,555,42],[676,39,555,43,"data"],[676,43,555,47],[676,44,555,48,"user"],[676,48,555,52],[676,50,555,54],[677,10,556,16],[677,17,556,23],[678,12,557,20,"data"],[678,16,557,24],[678,18,557,26],[679,14,557,28,"user"],[679,18,557,32],[679,20,557,34],[679,24,557,38],[680,14,557,40,"session"],[680,21,557,47],[680,23,557,49],[681,12,557,54],[681,13,557,55],[682,12,558,20,"error"],[682,17,558,25],[682,19,558,27],[682,23,558,31,"AuthInvalidTokenResponseError"],[682,33,558,60],[682,34,558,60,"AuthInvalidTokenResponseError"],[682,63,558,60],[682,64,558,61],[683,10,559,16],[683,11,559,17],[684,8,560,12],[685,8,561,12],[685,12,561,16,"data"],[685,16,561,20],[685,17,561,21,"session"],[685,24,561,28],[685,26,561,30],[686,10,562,16],[686,16,562,22],[686,20,562,26],[686,21,562,27,"_saveSession"],[686,33,562,39],[686,34,562,40,"data"],[686,38,562,44],[686,39,562,45,"session"],[686,46,562,52],[686,47,562,53],[687,10,563,16],[687,16,563,22],[687,20,563,26],[687,21,563,27,"_notifyAllSubscribers"],[687,42,563,48],[687,43,563,49],[687,54,563,60],[687,56,563,62,"data"],[687,60,563,66],[687,61,563,67,"session"],[687,68,563,74],[687,69,563,75],[688,8,564,12],[689,8,565,12],[689,15,565,19],[690,10,565,21,"data"],[690,14,565,25],[690,16,565,27,"Object"],[690,22,565,33],[690,23,565,34,"assign"],[690,29,565,40],[690,30,565,41],[690,31,565,42],[690,32,565,43],[690,34,565,45,"data"],[690,38,565,49],[690,39,565,50],[691,10,565,52,"error"],[692,8,565,58],[692,9,565,59],[693,6,566,8],[693,7,566,9],[693,8,567,8],[693,15,567,15,"error"],[693,20,567,20],[693,22,567,22],[694,8,568,12],[694,12,568,16],[694,16,568,16,"isAuthError"],[694,26,568,27],[694,27,568,27,"isAuthError"],[694,38,568,27],[694,40,568,28,"error"],[694,45,568,33],[694,46,568,34],[694,48,568,36],[695,10,569,16],[695,17,569,23],[696,12,569,25,"data"],[696,16,569,29],[696,18,569,31],[697,14,569,33,"user"],[697,18,569,37],[697,20,569,39],[697,24,569,43],[698,14,569,45,"session"],[698,21,569,52],[698,23,569,54],[699,12,569,59],[699,13,569,60],[700,12,569,62,"error"],[701,10,569,68],[701,11,569,69],[702,8,570,12],[703,8,571,12],[703,14,571,18,"error"],[703,19,571,23],[704,6,572,8],[705,4,573,4],[706,4,574,4],[706,10,574,10,"signInWithSolana"],[706,26,574,26,"signInWithSolana"],[706,27,574,27,"credentials"],[706,38,574,38],[706,40,574,40],[707,6,575,8],[707,10,575,12,"_a"],[707,12,575,14],[707,14,575,16,"_b"],[707,16,575,18],[707,18,575,20,"_c"],[707,20,575,22],[707,22,575,24,"_d"],[707,24,575,26],[707,26,575,28,"_e"],[707,28,575,30],[707,30,575,32,"_f"],[707,32,575,34],[707,34,575,36,"_g"],[707,36,575,38],[707,38,575,40,"_h"],[707,40,575,42],[707,42,575,44,"_j"],[707,44,575,46],[707,46,575,48,"_k"],[707,48,575,50],[707,50,575,52,"_l"],[707,52,575,54],[707,54,575,56,"_m"],[707,56,575,58],[708,6,576,8],[708,10,576,12,"message"],[708,17,576,19],[709,6,577,8],[709,10,577,12,"signature"],[709,19,577,21],[710,6,578,8],[710,10,578,12],[710,19,578,21],[710,23,578,25,"credentials"],[710,34,578,36],[710,36,578,38],[711,8,579,12,"message"],[711,15,579,19],[711,18,579,22,"credentials"],[711,29,579,33],[711,30,579,34,"message"],[711,37,579,41],[712,8,580,12,"signature"],[712,17,580,21],[712,20,580,24,"credentials"],[712,31,580,35],[712,32,580,36,"signature"],[712,41,580,45],[713,6,581,8],[713,7,581,9],[713,13,582,13],[714,8,583,12],[714,14,583,18],[715,10,583,20,"chain"],[715,15,583,25],[716,10,583,27,"wallet"],[716,16,583,33],[717,10,583,35,"statement"],[717,19,583,44],[718,10,583,46,"options"],[719,8,583,54],[719,9,583,55],[719,12,583,58,"credentials"],[719,23,583,69],[720,8,584,12],[720,12,584,16,"resolvedWallet"],[720,26,584,30],[721,8,585,12],[721,12,585,16],[721,13,585,17],[721,17,585,17,"isBrowser"],[721,28,585,26],[721,29,585,26,"isBrowser"],[721,38,585,26],[721,40,585,27],[721,41,585,28],[721,43,585,30],[722,10,586,16],[722,14,586,20],[722,21,586,27,"wallet"],[722,27,586,33],[722,32,586,38],[722,40,586,46],[722,44,586,50],[722,46,586,52,"options"],[722,53,586,59],[722,58,586,64],[722,62,586,68],[722,66,586,72,"options"],[722,73,586,79],[722,78,586,84],[722,83,586,89],[722,84,586,90],[722,87,586,93],[722,92,586,98],[722,93,586,99],[722,96,586,102,"options"],[722,103,586,109],[722,104,586,110,"url"],[722,107,586,113],[722,108,586,114],[722,110,586,116],[723,12,587,20],[723,18,587,26],[723,22,587,30,"Error"],[723,27,587,35],[723,28,587,36],[723,115,587,123],[723,116,587,124],[724,10,588,16],[725,10,589,16,"resolvedWallet"],[725,24,589,30],[725,27,589,33,"wallet"],[725,33,589,39],[726,8,590,12],[726,9,590,13],[726,15,591,17],[726,19,591,21],[726,26,591,28,"wallet"],[726,32,591,34],[726,37,591,39],[726,45,591,47],[726,47,591,49],[727,10,592,16,"resolvedWallet"],[727,24,592,30],[727,27,592,33,"wallet"],[727,33,592,39],[728,8,593,12],[728,9,593,13],[728,15,594,17],[729,10,595,16],[729,16,595,22,"windowAny"],[729,25,595,31],[729,28,595,34,"window"],[729,34,595,40],[730,10,596,16],[730,14,596,20],[730,22,596,28],[730,26,596,32,"windowAny"],[730,35,596,41],[730,39,597,20],[730,46,597,27,"windowAny"],[730,55,597,36],[730,56,597,37,"solana"],[730,62,597,43],[730,67,597,48],[730,75,597,56],[730,80,598,22],[730,88,598,30],[730,92,598,34,"windowAny"],[730,101,598,43],[730,102,598,44,"solana"],[730,108,598,50],[730,112,598,54],[730,119,598,61,"windowAny"],[730,128,598,70],[730,129,598,71,"solana"],[730,135,598,77],[730,136,598,78,"signIn"],[730,142,598,84],[730,147,598,89],[730,157,598,99],[730,161,599,25],[730,174,599,38],[730,178,599,42,"windowAny"],[730,187,599,51],[730,188,599,52,"solana"],[730,194,599,58],[730,198,600,28],[730,205,600,35,"windowAny"],[730,214,600,44],[730,215,600,45,"solana"],[730,221,600,51],[730,222,600,52,"signMessage"],[730,233,600,63],[730,238,600,68],[730,248,600,79],[730,249,600,80],[730,251,600,82],[731,12,601,20,"resolvedWallet"],[731,26,601,34],[731,29,601,37,"windowAny"],[731,38,601,46],[731,39,601,47,"solana"],[731,45,601,53],[732,10,602,16],[732,11,602,17],[732,17,603,21],[733,12,604,20],[733,18,604,26],[733,22,604,30,"Error"],[733,27,604,35],[733,28,604,36],[733,339,604,347],[733,340,604,348],[734,10,605,16],[735,8,606,12],[736,8,607,12],[736,14,607,18,"url"],[736,17,607,21],[736,20,607,24],[736,24,607,28,"URL"],[736,27,607,31],[736,28,607,32],[736,29,607,33,"_a"],[736,31,607,35],[736,34,607,38,"options"],[736,41,607,45],[736,46,607,50],[736,50,607,54],[736,54,607,58,"options"],[736,61,607,65],[736,66,607,70],[736,71,607,75],[736,72,607,76],[736,75,607,79],[736,80,607,84],[736,81,607,85],[736,84,607,88,"options"],[736,91,607,95],[736,92,607,96,"url"],[736,95,607,99],[736,101,607,105],[736,105,607,109],[736,109,607,113,"_a"],[736,111,607,115],[736,116,607,120],[736,121,607,125],[736,122,607,126],[736,125,607,129,"_a"],[736,127,607,131],[736,130,607,134,"window"],[736,136,607,140],[736,137,607,141,"location"],[736,145,607,149],[736,146,607,150,"href"],[736,150,607,154],[736,151,607,155],[737,8,608,12],[737,12,608,16],[737,20,608,24],[737,24,608,28,"resolvedWallet"],[737,38,608,42],[737,42,608,46,"resolvedWallet"],[737,56,608,60],[737,57,608,61,"signIn"],[737,63,608,67],[737,65,608,69],[738,10,609,16],[738,16,609,22,"output"],[738,22,609,28],[738,25,609,31],[738,31,609,37,"resolvedWallet"],[738,45,609,51],[738,46,609,52,"signIn"],[738,52,609,58],[738,53,609,59,"Object"],[738,59,609,65],[738,60,609,66,"assign"],[738,66,609,72],[738,67,609,73,"Object"],[738,73,609,79],[738,74,609,80,"assign"],[738,80,609,86],[738,81,609,87,"Object"],[738,87,609,93],[738,88,609,94,"assign"],[738,94,609,100],[738,95,609,101],[739,12,609,103,"issuedAt"],[739,20,609,111],[739,22,609,113],[739,26,609,117,"Date"],[739,30,609,121],[739,31,609,122],[739,32,609,123],[739,33,609,124,"toISOString"],[739,44,609,135],[739,45,609,136],[740,10,609,138],[740,11,609,139],[740,13,609,141,"options"],[740,20,609,148],[740,25,609,153],[740,29,609,157],[740,33,609,161,"options"],[740,40,609,168],[740,45,609,173],[740,50,609,178],[740,51,609,179],[740,54,609,182],[740,59,609,187],[740,60,609,188],[740,63,609,191,"options"],[740,70,609,198],[740,71,609,199,"signInWithSolana"],[740,87,609,215],[740,88,609,216],[740,90,609,218],[741,12,610,20],[742,12,611,20,"version"],[742,19,611,27],[742,21,611,29],[742,24,611,32],[743,12,611,34,"domain"],[743,18,611,40],[743,20,611,42,"url"],[743,23,611,45],[743,24,611,46,"host"],[743,28,611,50],[744,12,611,52,"uri"],[744,15,611,55],[744,17,611,57,"url"],[744,20,611,60],[744,21,611,61,"href"],[745,10,611,66],[745,11,611,67],[745,12,611,68],[745,14,611,71,"statement"],[745,23,611,80],[745,26,611,83],[746,12,611,85,"statement"],[747,10,611,95],[747,11,611,96],[747,14,611,99],[747,18,611,104],[747,19,611,105],[747,20,611,106],[748,10,612,16],[748,14,612,20,"outputToProcess"],[748,29,612,35],[749,10,613,16],[749,14,613,20,"Array"],[749,19,613,25],[749,20,613,26,"isArray"],[749,27,613,33],[749,28,613,34,"output"],[749,34,613,40],[749,35,613,41],[749,39,613,45,"output"],[749,45,613,51],[749,46,613,52],[749,47,613,53],[749,48,613,54],[749,52,613,58],[749,59,613,65,"output"],[749,65,613,71],[749,66,613,72],[749,67,613,73],[749,68,613,74],[749,73,613,79],[749,81,613,87],[749,83,613,89],[750,12,614,20,"outputToProcess"],[750,27,614,35],[750,30,614,38,"output"],[750,36,614,44],[750,37,614,45],[750,38,614,46],[750,39,614,47],[751,10,615,16],[751,11,615,17],[751,17,616,21],[751,21,616,25,"output"],[751,27,616,31],[751,31,617,20],[751,38,617,27,"output"],[751,44,617,33],[751,49,617,38],[751,57,617,46],[751,61,618,20],[751,76,618,35],[751,80,618,39,"output"],[751,86,618,45],[751,90,619,20],[751,101,619,31],[751,105,619,35,"output"],[751,111,619,41],[751,113,619,43],[752,12,620,20,"outputToProcess"],[752,27,620,35],[752,30,620,38,"output"],[752,36,620,44],[753,10,621,16],[753,11,621,17],[753,17,622,21],[754,12,623,20],[754,18,623,26],[754,22,623,30,"Error"],[754,27,623,35],[754,28,623,36],[754,99,623,107],[754,100,623,108],[755,10,624,16],[756,10,625,16],[756,14,625,20],[756,29,625,35],[756,33,625,39,"outputToProcess"],[756,48,625,54],[756,52,626,20],[756,63,626,31],[756,67,626,35,"outputToProcess"],[756,82,626,50],[756,87,627,21],[756,94,627,28,"outputToProcess"],[756,109,627,43],[756,110,627,44,"signedMessage"],[756,123,627,57],[756,128,627,62],[756,136,627,70],[756,140,628,24,"outputToProcess"],[756,155,628,39],[756,156,628,40,"signedMessage"],[756,169,628,53],[756,181,628,65,"Uint8Array"],[756,191,628,75],[756,192,628,76],[756,196,629,20,"outputToProcess"],[756,211,629,35],[756,212,629,36,"signature"],[756,221,629,45],[756,233,629,57,"Uint8Array"],[756,243,629,67],[756,245,629,69],[757,12,630,20,"message"],[757,19,630,27],[757,22,631,24],[757,29,631,31,"outputToProcess"],[757,44,631,46],[757,45,631,47,"signedMessage"],[757,58,631,60],[757,63,631,65],[757,71,631,73],[757,74,632,30,"outputToProcess"],[757,89,632,45],[757,90,632,46,"signedMessage"],[757,103,632,59],[757,106,633,30],[757,110,633,34,"TextDecoder"],[757,121,633,45],[757,122,633,46],[757,123,633,47],[757,124,633,48,"decode"],[757,130,633,54],[757,131,633,55,"outputToProcess"],[757,146,633,70],[757,147,633,71,"signedMessage"],[757,160,633,84],[757,161,633,85],[758,12,634,20,"signature"],[758,21,634,29],[758,24,634,32,"outputToProcess"],[758,39,634,47],[758,40,634,48,"signature"],[758,49,634,57],[759,10,635,16],[759,11,635,17],[759,17,636,21],[760,12,637,20],[760,18,637,26],[760,22,637,30,"Error"],[760,27,637,35],[760,28,637,36],[760,134,637,142],[760,135,637,143],[761,10,638,16],[762,8,639,12],[762,9,639,13],[762,15,640,17],[763,10,641,16],[763,14,641,20],[763,16,641,22],[763,29,641,35],[763,33,641,39,"resolvedWallet"],[763,47,641,53],[763,48,641,54],[763,52,642,20],[763,59,642,27,"resolvedWallet"],[763,73,642,41],[763,74,642,42,"signMessage"],[763,85,642,53],[763,90,642,58],[763,100,642,68],[763,104,643,20],[763,106,643,22],[763,117,643,33],[763,121,643,37,"resolvedWallet"],[763,135,643,51],[763,136,643,52],[763,140,644,20],[763,147,644,27,"resolvedWallet"],[763,161,644,41],[763,166,644,46],[763,174,644,54],[763,178,645,20],[763,179,645,21,"resolvedWallet"],[763,193,645,35],[763,194,645,36,"publicKey"],[763,203,645,45],[763,207,646,20],[763,209,646,22],[763,219,646,32],[763,223,646,36,"resolvedWallet"],[763,237,646,50],[763,238,646,51,"publicKey"],[763,247,646,60],[763,248,646,61],[763,252,647,20],[763,259,647,27,"resolvedWallet"],[763,273,647,41],[763,274,647,42,"publicKey"],[763,283,647,51],[763,284,647,52,"toBase58"],[763,292,647,60],[763,297,647,65],[763,307,647,75],[763,309,647,77],[764,12,648,20],[764,18,648,26],[764,22,648,30,"Error"],[764,27,648,35],[764,28,648,36],[764,125,648,133],[764,126,648,134],[765,10,649,16],[766,10,650,16,"message"],[766,17,650,23],[766,20,650,26],[766,21,651,20],[766,24,651,23,"url"],[766,27,651,26],[766,28,651,27,"host"],[766,32,651,31],[766,81,651,80],[766,83,652,20,"resolvedWallet"],[766,97,652,34],[766,98,652,35,"publicKey"],[766,107,652,44],[766,108,652,45,"toBase58"],[766,116,652,53],[766,117,652,54],[766,118,652,55],[766,120,653,20],[766,124,653,24,"statement"],[766,133,653,33],[766,136,653,36],[766,137,653,37],[766,139,653,39],[766,141,653,41,"statement"],[766,150,653,50],[766,152,653,52],[766,154,653,54],[766,155,653,55],[766,158,653,58],[766,159,653,59],[766,161,653,61],[766,162,653,62],[766,163,653,63],[766,165,654,20],[766,177,654,32],[766,179,655,20],[766,187,655,28,"url"],[766,190,655,31],[766,191,655,32,"href"],[766,195,655,36],[766,197,655,38],[766,199,656,20],[766,213,656,34],[766,214,656,35,"_c"],[766,216,656,37],[766,219,656,40],[766,220,656,41,"_b"],[766,222,656,43],[766,225,656,46,"options"],[766,232,656,53],[766,237,656,58],[766,241,656,62],[766,245,656,66,"options"],[766,252,656,73],[766,257,656,78],[766,262,656,83],[766,263,656,84],[766,266,656,87],[766,271,656,92],[766,272,656,93],[766,275,656,96,"options"],[766,282,656,103],[766,283,656,104,"signInWithSolana"],[766,299,656,120],[766,305,656,126],[766,309,656,130],[766,313,656,134,"_b"],[766,315,656,136],[766,320,656,141],[766,325,656,146],[766,326,656,147],[766,329,656,150],[766,334,656,155],[766,335,656,156],[766,338,656,159,"_b"],[766,340,656,161],[766,341,656,162,"issuedAt"],[766,349,656,170],[766,355,656,176],[766,359,656,180],[766,363,656,184,"_c"],[766,365,656,186],[766,370,656,191],[766,375,656,196],[766,376,656,197],[766,379,656,200,"_c"],[766,381,656,202],[766,384,656,205],[766,388,656,209,"Date"],[766,392,656,213],[766,393,656,214],[766,394,656,215],[766,395,656,216,"toISOString"],[766,406,656,227],[766,407,656,228],[766,408,656,229],[766,410,656,231],[766,412,657,20],[766,416,657,24],[766,417,657,25],[766,418,657,26,"_d"],[766,420,657,28],[766,423,657,31,"options"],[766,430,657,38],[766,435,657,43],[766,439,657,47],[766,443,657,51,"options"],[766,450,657,58],[766,455,657,63],[766,460,657,68],[766,461,657,69],[766,464,657,72],[766,469,657,77],[766,470,657,78],[766,473,657,81,"options"],[766,480,657,88],[766,481,657,89,"signInWithSolana"],[766,497,657,105],[766,503,657,111],[766,507,657,115],[766,511,657,119,"_d"],[766,513,657,121],[766,518,657,126],[766,523,657,131],[766,524,657,132],[766,527,657,135],[766,532,657,140],[766,533,657,141],[766,536,657,144,"_d"],[766,538,657,146],[766,539,657,147,"notBefore"],[766,548,657,156],[766,552,658,26],[766,553,658,27],[766,568,658,42,"options"],[766,575,658,49],[766,576,658,50,"signInWithSolana"],[766,592,658,66],[766,593,658,67,"notBefore"],[766,602,658,76],[766,604,658,78],[766,605,658,79],[766,608,659,26],[766,610,659,28],[766,611,659,29],[766,613,660,20],[766,617,660,24],[766,618,660,25],[766,619,660,26,"_e"],[766,621,660,28],[766,624,660,31,"options"],[766,631,660,38],[766,636,660,43],[766,640,660,47],[766,644,660,51,"options"],[766,651,660,58],[766,656,660,63],[766,661,660,68],[766,662,660,69],[766,665,660,72],[766,670,660,77],[766,671,660,78],[766,674,660,81,"options"],[766,681,660,88],[766,682,660,89,"signInWithSolana"],[766,698,660,105],[766,704,660,111],[766,708,660,115],[766,712,660,119,"_e"],[766,714,660,121],[766,719,660,126],[766,724,660,131],[766,725,660,132],[766,728,660,135],[766,733,660,140],[766,734,660,141],[766,737,660,144,"_e"],[766,739,660,146],[766,740,660,147,"expirationTime"],[766,754,660,161],[766,758,661,26],[766,759,661,27],[766,779,661,47,"options"],[766,786,661,54],[766,787,661,55,"signInWithSolana"],[766,803,661,71],[766,804,661,72,"expirationTime"],[766,818,661,86],[766,820,661,88],[766,821,661,89],[766,824,662,26],[766,826,662,28],[766,827,662,29],[766,829,663,20],[766,833,663,24],[766,834,663,25],[766,835,663,26,"_f"],[766,837,663,28],[766,840,663,31,"options"],[766,847,663,38],[766,852,663,43],[766,856,663,47],[766,860,663,51,"options"],[766,867,663,58],[766,872,663,63],[766,877,663,68],[766,878,663,69],[766,881,663,72],[766,886,663,77],[766,887,663,78],[766,890,663,81,"options"],[766,897,663,88],[766,898,663,89,"signInWithSolana"],[766,914,663,105],[766,920,663,111],[766,924,663,115],[766,928,663,119,"_f"],[766,930,663,121],[766,935,663,126],[766,940,663,131],[766,941,663,132],[766,944,663,135],[766,949,663,140],[766,950,663,141],[766,953,663,144,"_f"],[766,955,663,146],[766,956,663,147,"chainId"],[766,963,663,154],[766,967,664,26],[766,968,664,27],[766,981,664,40,"options"],[766,988,664,47],[766,989,664,48,"signInWithSolana"],[766,1005,664,64],[766,1006,664,65,"chainId"],[766,1013,664,72],[766,1015,664,74],[766,1016,664,75],[766,1019,665,26],[766,1021,665,28],[766,1022,665,29],[766,1024,666,20],[766,1028,666,24],[766,1029,666,25],[766,1030,666,26,"_g"],[766,1032,666,28],[766,1035,666,31,"options"],[766,1042,666,38],[766,1047,666,43],[766,1051,666,47],[766,1055,666,51,"options"],[766,1062,666,58],[766,1067,666,63],[766,1072,666,68],[766,1073,666,69],[766,1076,666,72],[766,1081,666,77],[766,1082,666,78],[766,1085,666,81,"options"],[766,1092,666,88],[766,1093,666,89,"signInWithSolana"],[766,1109,666,105],[766,1115,666,111],[766,1119,666,115],[766,1123,666,119,"_g"],[766,1125,666,121],[766,1130,666,126],[766,1135,666,131],[766,1136,666,132],[766,1139,666,135],[766,1144,666,140],[766,1145,666,141],[766,1148,666,144,"_g"],[766,1150,666,146],[766,1151,666,147,"nonce"],[766,1156,666,152],[766,1160,666,156],[766,1161,666,157],[766,1171,666,167,"options"],[766,1178,666,174],[766,1179,666,175,"signInWithSolana"],[766,1195,666,191],[766,1196,666,192,"nonce"],[766,1201,666,197],[766,1203,666,199],[766,1204,666,200],[766,1207,666,203],[766,1209,666,205],[766,1210,666,206],[766,1212,667,20],[766,1216,667,24],[766,1217,667,25],[766,1218,667,26,"_h"],[766,1220,667,28],[766,1223,667,31,"options"],[766,1230,667,38],[766,1235,667,43],[766,1239,667,47],[766,1243,667,51,"options"],[766,1250,667,58],[766,1255,667,63],[766,1260,667,68],[766,1261,667,69],[766,1264,667,72],[766,1269,667,77],[766,1270,667,78],[766,1273,667,81,"options"],[766,1280,667,88],[766,1281,667,89,"signInWithSolana"],[766,1297,667,105],[766,1303,667,111],[766,1307,667,115],[766,1311,667,119,"_h"],[766,1313,667,121],[766,1318,667,126],[766,1323,667,131],[766,1324,667,132],[766,1327,667,135],[766,1332,667,140],[766,1333,667,141],[766,1336,667,144,"_h"],[766,1338,667,146],[766,1339,667,147,"requestId"],[766,1348,667,156],[766,1352,668,26],[766,1353,668,27],[766,1368,668,42,"options"],[766,1375,668,49],[766,1376,668,50,"signInWithSolana"],[766,1392,668,66],[766,1393,668,67,"requestId"],[766,1402,668,76],[766,1404,668,78],[766,1405,668,79],[766,1408,669,26],[766,1410,669,28],[766,1411,669,29],[766,1413,670,20],[766,1417,670,24],[766,1418,670,25],[766,1419,670,26,"_k"],[766,1421,670,28],[766,1424,670,31],[766,1425,670,32,"_j"],[766,1427,670,34],[766,1430,670,37,"options"],[766,1437,670,44],[766,1442,670,49],[766,1446,670,53],[766,1450,670,57,"options"],[766,1457,670,64],[766,1462,670,69],[766,1467,670,74],[766,1468,670,75],[766,1471,670,78],[766,1476,670,83],[766,1477,670,84],[766,1480,670,87,"options"],[766,1487,670,94],[766,1488,670,95,"signInWithSolana"],[766,1504,670,111],[766,1510,670,117],[766,1514,670,121],[766,1518,670,125,"_j"],[766,1520,670,127],[766,1525,670,132],[766,1530,670,137],[766,1531,670,138],[766,1534,670,141],[766,1539,670,146],[766,1540,670,147],[766,1543,670,150,"_j"],[766,1545,670,152],[766,1546,670,153,"resources"],[766,1555,670,162],[766,1561,670,168],[766,1565,670,172],[766,1569,670,176,"_k"],[766,1571,670,178],[766,1576,670,183],[766,1581,670,188],[766,1582,670,189],[766,1585,670,192],[766,1590,670,197],[766,1591,670,198],[766,1594,670,201,"_k"],[766,1596,670,203],[766,1597,670,204,"length"],[766,1603,670,210],[766,1607,671,26],[766,1608,672,28],[766,1619,672,39],[766,1621,673,28],[766,1624,673,31,"options"],[766,1631,673,38],[766,1632,673,39,"signInWithSolana"],[766,1648,673,55],[766,1649,673,56,"resources"],[766,1658,673,65],[766,1659,673,66,"map"],[766,1662,673,69],[766,1663,673,71,"resource"],[766,1671,673,79],[766,1675,673,84],[766,1680,673,89,"resource"],[766,1688,673,97],[766,1690,673,99],[766,1691,673,100],[766,1692,674,25],[766,1695,675,26],[766,1697,675,28],[766,1698,675,29],[766,1699,676,17],[766,1700,676,18,"join"],[766,1704,676,22],[766,1705,676,23],[766,1709,676,27],[766,1710,676,28],[767,10,677,16],[767,16,677,22,"maybeSignature"],[767,30,677,36],[767,33,677,39],[767,39,677,45,"resolvedWallet"],[767,53,677,59],[767,54,677,60,"signMessage"],[767,65,677,71],[767,66,677,72],[767,70,677,76,"TextEncoder"],[767,81,677,87],[767,82,677,88],[767,83,677,89],[767,84,677,90,"encode"],[767,90,677,96],[767,91,677,97,"message"],[767,98,677,104],[767,99,677,105],[767,101,677,107],[767,107,677,113],[767,108,677,114],[768,10,678,16],[768,14,678,20],[768,15,678,21,"maybeSignature"],[768,29,678,35],[768,33,678,39],[768,35,678,41,"maybeSignature"],[768,49,678,55],[768,61,678,67,"Uint8Array"],[768,71,678,77],[768,72,678,78],[768,74,678,80],[769,12,679,20],[769,18,679,26],[769,22,679,30,"Error"],[769,27,679,35],[769,28,679,36],[769,102,679,110],[769,103,679,111],[770,10,680,16],[771,10,681,16,"signature"],[771,19,681,25],[771,22,681,28,"maybeSignature"],[771,36,681,42],[772,8,682,12],[773,6,683,8],[774,6,684,8],[774,10,684,12],[775,8,685,12],[775,14,685,18],[776,10,685,20,"data"],[776,14,685,24],[777,10,685,26,"error"],[778,8,685,32],[778,9,685,33],[778,12,685,36],[778,18,685,42],[778,22,685,42,"_request"],[778,31,685,50],[778,32,685,50,"_request"],[778,40,685,50],[778,42,685,51],[778,46,685,55],[778,47,685,56,"fetch"],[778,52,685,61],[778,54,685,63],[778,60,685,69],[778,62,685,71],[778,65,685,74],[778,69,685,78],[778,70,685,79,"url"],[778,73,685,82],[778,97,685,106],[778,99,685,108],[779,10,686,16,"headers"],[779,17,686,23],[779,19,686,25],[779,23,686,29],[779,24,686,30,"headers"],[779,31,686,37],[780,10,687,16,"body"],[780,14,687,20],[780,16,687,22,"Object"],[780,22,687,28],[780,23,687,29,"assign"],[780,29,687,35],[780,30,687,36],[781,12,687,38,"chain"],[781,17,687,43],[781,19,687,45],[781,27,687,53],[782,12,687,55,"message"],[782,19,687,62],[783,12,687,64,"signature"],[783,21,687,73],[783,23,687,75],[783,27,687,75,"bytesToBase64URL"],[783,40,687,91],[783,41,687,91,"bytesToBase64URL"],[783,57,687,91],[783,59,687,92,"signature"],[783,68,687,101],[784,10,687,103],[784,11,687,104],[784,13,687,107],[784,14,687,108],[784,15,687,109,"_l"],[784,17,687,111],[784,20,687,114,"credentials"],[784,31,687,125],[784,32,687,126,"options"],[784,39,687,133],[784,45,687,139],[784,49,687,143],[784,53,687,147,"_l"],[784,55,687,149],[784,60,687,154],[784,65,687,159],[784,66,687,160],[784,69,687,163],[784,74,687,168],[784,75,687,169],[784,78,687,172,"_l"],[784,80,687,174],[784,81,687,175,"captchaToken"],[784,93,687,187],[784,97,688,22],[785,12,688,24,"gotrue_meta_security"],[785,32,688,44],[785,34,688,46],[786,14,688,48,"captcha_token"],[786,27,688,61],[786,29,688,63],[786,30,688,64,"_m"],[786,32,688,66],[786,35,688,69,"credentials"],[786,46,688,80],[786,47,688,81,"options"],[786,54,688,88],[786,60,688,94],[786,64,688,98],[786,68,688,102,"_m"],[786,70,688,104],[786,75,688,109],[786,80,688,114],[786,81,688,115],[786,84,688,118],[786,89,688,123],[786,90,688,124],[786,93,688,127,"_m"],[786,95,688,129],[786,96,688,130,"captchaToken"],[787,12,688,143],[788,10,688,145],[788,11,688,146],[788,14,689,22],[788,18,689,27],[788,19,689,28],[789,10,690,16,"xform"],[789,15,690,21],[789,17,690,23,"_sessionResponse"],[789,26,690,39],[789,27,690,39,"_sessionResponse"],[790,8,691,12],[790,9,691,13],[790,10,691,14],[791,8,692,12],[791,12,692,16,"error"],[791,17,692,21],[791,19,692,23],[792,10,693,16],[792,16,693,22,"error"],[792,21,693,27],[793,8,694,12],[794,8,695,12],[794,12,695,16],[794,13,695,17,"data"],[794,17,695,21],[794,21,695,25],[794,22,695,26,"data"],[794,26,695,30],[794,27,695,31,"session"],[794,34,695,38],[794,38,695,42],[794,39,695,43,"data"],[794,43,695,47],[794,44,695,48,"user"],[794,48,695,52],[794,50,695,54],[795,10,696,16],[795,17,696,23],[796,12,697,20,"data"],[796,16,697,24],[796,18,697,26],[797,14,697,28,"user"],[797,18,697,32],[797,20,697,34],[797,24,697,38],[798,14,697,40,"session"],[798,21,697,47],[798,23,697,49],[799,12,697,54],[799,13,697,55],[800,12,698,20,"error"],[800,17,698,25],[800,19,698,27],[800,23,698,31,"AuthInvalidTokenResponseError"],[800,33,698,60],[800,34,698,60,"AuthInvalidTokenResponseError"],[800,63,698,60],[800,64,698,61],[801,10,699,16],[801,11,699,17],[802,8,700,12],[803,8,701,12],[803,12,701,16,"data"],[803,16,701,20],[803,17,701,21,"session"],[803,24,701,28],[803,26,701,30],[804,10,702,16],[804,16,702,22],[804,20,702,26],[804,21,702,27,"_saveSession"],[804,33,702,39],[804,34,702,40,"data"],[804,38,702,44],[804,39,702,45,"session"],[804,46,702,52],[804,47,702,53],[805,10,703,16],[805,16,703,22],[805,20,703,26],[805,21,703,27,"_notifyAllSubscribers"],[805,42,703,48],[805,43,703,49],[805,54,703,60],[805,56,703,62,"data"],[805,60,703,66],[805,61,703,67,"session"],[805,68,703,74],[805,69,703,75],[806,8,704,12],[807,8,705,12],[807,15,705,19],[808,10,705,21,"data"],[808,14,705,25],[808,16,705,27,"Object"],[808,22,705,33],[808,23,705,34,"assign"],[808,29,705,40],[808,30,705,41],[808,31,705,42],[808,32,705,43],[808,34,705,45,"data"],[808,38,705,49],[808,39,705,50],[809,10,705,52,"error"],[810,8,705,58],[810,9,705,59],[811,6,706,8],[811,7,706,9],[811,8,707,8],[811,15,707,15,"error"],[811,20,707,20],[811,22,707,22],[812,8,708,12],[812,12,708,16],[812,16,708,16,"isAuthError"],[812,26,708,27],[812,27,708,27,"isAuthError"],[812,38,708,27],[812,40,708,28,"error"],[812,45,708,33],[812,46,708,34],[812,48,708,36],[813,10,709,16],[813,17,709,23],[814,12,709,25,"data"],[814,16,709,29],[814,18,709,31],[815,14,709,33,"user"],[815,18,709,37],[815,20,709,39],[815,24,709,43],[816,14,709,45,"session"],[816,21,709,52],[816,23,709,54],[817,12,709,59],[817,13,709,60],[818,12,709,62,"error"],[819,10,709,68],[819,11,709,69],[820,8,710,12],[821,8,711,12],[821,14,711,18,"error"],[821,19,711,23],[822,6,712,8],[823,4,713,4],[824,4,714,4],[824,10,714,10,"_exchangeCodeForSession"],[824,33,714,33,"_exchangeCodeForSession"],[824,34,714,34,"authCode"],[824,42,714,42],[824,44,714,44],[825,6,715,8],[825,12,715,14,"storageItem"],[825,23,715,25],[825,26,715,28],[825,32,715,34],[825,36,715,34,"getItemAsync"],[825,47,715,46],[825,48,715,46,"getItemAsync"],[825,60,715,46],[825,62,715,47],[825,66,715,51],[825,67,715,52,"storage"],[825,74,715,59],[825,76,715,61],[825,79,715,64],[825,83,715,68],[825,84,715,69,"storageKey"],[825,94,715,79],[825,110,715,95],[825,111,715,96],[826,6,716,8],[826,12,716,14],[826,13,716,15,"codeVerifier"],[826,25,716,27],[826,27,716,29,"redirectType"],[826,39,716,41],[826,40,716,42],[826,43,716,45],[826,44,716,46,"storageItem"],[826,55,716,57],[826,60,716,62],[826,64,716,66],[826,68,716,70,"storageItem"],[826,79,716,81],[826,84,716,86],[826,89,716,91],[826,90,716,92],[826,93,716,95,"storageItem"],[826,104,716,106],[826,107,716,109],[826,109,716,111],[826,111,716,113,"split"],[826,116,716,118],[826,117,716,119],[826,120,716,122],[826,121,716,123],[827,6,717,8],[827,10,717,12],[828,8,718,12],[828,14,718,18],[829,10,718,20,"data"],[829,14,718,24],[830,10,718,26,"error"],[831,8,718,32],[831,9,718,33],[831,12,718,36],[831,18,718,42],[831,22,718,42,"_request"],[831,31,718,50],[831,32,718,50,"_request"],[831,40,718,50],[831,42,718,51],[831,46,718,55],[831,47,718,56,"fetch"],[831,52,718,61],[831,54,718,63],[831,60,718,69],[831,62,718,71],[831,65,718,74],[831,69,718,78],[831,70,718,79,"url"],[831,73,718,82],[831,97,718,106],[831,99,718,108],[832,10,719,16,"headers"],[832,17,719,23],[832,19,719,25],[832,23,719,29],[832,24,719,30,"headers"],[832,31,719,37],[833,10,720,16,"body"],[833,14,720,20],[833,16,720,22],[834,12,721,20,"auth_code"],[834,21,721,29],[834,23,721,31,"authCode"],[834,31,721,39],[835,12,722,20,"code_verifier"],[835,25,722,33],[835,27,722,35,"codeVerifier"],[836,10,723,16],[836,11,723,17],[837,10,724,16,"xform"],[837,15,724,21],[837,17,724,23,"_sessionResponse"],[837,26,724,39],[837,27,724,39,"_sessionResponse"],[838,8,725,12],[838,9,725,13],[838,10,725,14],[839,8,726,12],[839,14,726,18],[839,18,726,18,"removeItemAsync"],[839,29,726,33],[839,30,726,33,"removeItemAsync"],[839,45,726,33],[839,47,726,34],[839,51,726,38],[839,52,726,39,"storage"],[839,59,726,46],[839,61,726,48],[839,64,726,51],[839,68,726,55],[839,69,726,56,"storageKey"],[839,79,726,66],[839,95,726,82],[839,96,726,83],[840,8,727,12],[840,12,727,16,"error"],[840,17,727,21],[840,19,727,23],[841,10,728,16],[841,16,728,22,"error"],[841,21,728,27],[842,8,729,12],[843,8,730,12],[843,12,730,16],[843,13,730,17,"data"],[843,17,730,21],[843,21,730,25],[843,22,730,26,"data"],[843,26,730,30],[843,27,730,31,"session"],[843,34,730,38],[843,38,730,42],[843,39,730,43,"data"],[843,43,730,47],[843,44,730,48,"user"],[843,48,730,52],[843,50,730,54],[844,10,731,16],[844,17,731,23],[845,12,732,20,"data"],[845,16,732,24],[845,18,732,26],[846,14,732,28,"user"],[846,18,732,32],[846,20,732,34],[846,24,732,38],[847,14,732,40,"session"],[847,21,732,47],[847,23,732,49],[847,27,732,53],[848,14,732,55,"redirectType"],[848,26,732,67],[848,28,732,69],[849,12,732,74],[849,13,732,75],[850,12,733,20,"error"],[850,17,733,25],[850,19,733,27],[850,23,733,31,"AuthInvalidTokenResponseError"],[850,33,733,60],[850,34,733,60,"AuthInvalidTokenResponseError"],[850,63,733,60],[850,64,733,61],[851,10,734,16],[851,11,734,17],[852,8,735,12],[853,8,736,12],[853,12,736,16,"data"],[853,16,736,20],[853,17,736,21,"session"],[853,24,736,28],[853,26,736,30],[854,10,737,16],[854,16,737,22],[854,20,737,26],[854,21,737,27,"_saveSession"],[854,33,737,39],[854,34,737,40,"data"],[854,38,737,44],[854,39,737,45,"session"],[854,46,737,52],[854,47,737,53],[855,10,738,16],[855,16,738,22],[855,20,738,26],[855,21,738,27,"_notifyAllSubscribers"],[855,42,738,48],[855,43,738,49],[855,54,738,60],[855,56,738,62,"data"],[855,60,738,66],[855,61,738,67,"session"],[855,68,738,74],[855,69,738,75],[856,8,739,12],[857,8,740,12],[857,15,740,19],[858,10,740,21,"data"],[858,14,740,25],[858,16,740,27,"Object"],[858,22,740,33],[858,23,740,34,"assign"],[858,29,740,40],[858,30,740,41,"Object"],[858,36,740,47],[858,37,740,48,"assign"],[858,43,740,54],[858,44,740,55],[858,45,740,56],[858,46,740,57],[858,48,740,59,"data"],[858,52,740,63],[858,53,740,64],[858,55,740,66],[859,12,740,68,"redirectType"],[859,24,740,80],[859,26,740,82,"redirectType"],[859,38,740,94],[859,43,740,99],[859,47,740,103],[859,51,740,107,"redirectType"],[859,63,740,119],[859,68,740,124],[859,73,740,129],[859,74,740,130],[859,77,740,133,"redirectType"],[859,89,740,145],[859,92,740,148],[860,10,740,153],[860,11,740,154],[860,12,740,155],[861,10,740,157,"error"],[862,8,740,163],[862,9,740,164],[863,6,741,8],[863,7,741,9],[863,8,742,8],[863,15,742,15,"error"],[863,20,742,20],[863,22,742,22],[864,8,743,12],[864,12,743,16],[864,16,743,16,"isAuthError"],[864,26,743,27],[864,27,743,27,"isAuthError"],[864,38,743,27],[864,40,743,28,"error"],[864,45,743,33],[864,46,743,34],[864,48,743,36],[865,10,744,16],[865,17,744,23],[866,12,744,25,"data"],[866,16,744,29],[866,18,744,31],[867,14,744,33,"user"],[867,18,744,37],[867,20,744,39],[867,24,744,43],[868,14,744,45,"session"],[868,21,744,52],[868,23,744,54],[868,27,744,58],[869,14,744,60,"redirectType"],[869,26,744,72],[869,28,744,74],[870,12,744,79],[870,13,744,80],[871,12,744,82,"error"],[872,10,744,88],[872,11,744,89],[873,8,745,12],[874,8,746,12],[874,14,746,18,"error"],[874,19,746,23],[875,6,747,8],[876,4,748,4],[877,4,749,4],[878,0,750,0],[879,0,751,0],[880,0,752,0],[881,4,753,4],[881,10,753,10,"signInWithIdToken"],[881,27,753,27,"signInWithIdToken"],[881,28,753,28,"credentials"],[881,39,753,39],[881,41,753,41],[882,6,754,8],[882,10,754,12],[883,8,755,12],[883,14,755,18],[884,10,755,20,"options"],[884,17,755,27],[885,10,755,29,"provider"],[885,18,755,37],[886,10,755,39,"token"],[886,15,755,44],[887,10,755,46,"access_token"],[887,22,755,58],[888,10,755,60,"nonce"],[889,8,755,66],[889,9,755,67],[889,12,755,70,"credentials"],[889,23,755,81],[890,8,756,12],[890,14,756,18,"res"],[890,17,756,21],[890,20,756,24],[890,26,756,30],[890,30,756,30,"_request"],[890,39,756,38],[890,40,756,38,"_request"],[890,48,756,38],[890,50,756,39],[890,54,756,43],[890,55,756,44,"fetch"],[890,60,756,49],[890,62,756,51],[890,68,756,57],[890,70,756,59],[890,73,756,62],[890,77,756,66],[890,78,756,67,"url"],[890,81,756,70],[890,109,756,98],[890,111,756,100],[891,10,757,16,"headers"],[891,17,757,23],[891,19,757,25],[891,23,757,29],[891,24,757,30,"headers"],[891,31,757,37],[892,10,758,16,"body"],[892,14,758,20],[892,16,758,22],[893,12,759,20,"provider"],[893,20,759,28],[894,12,760,20,"id_token"],[894,20,760,28],[894,22,760,30,"token"],[894,27,760,35],[895,12,761,20,"access_token"],[895,24,761,32],[896,12,762,20,"nonce"],[896,17,762,25],[897,12,763,20,"gotrue_meta_security"],[897,32,763,40],[897,34,763,42],[898,14,763,44,"captcha_token"],[898,27,763,57],[898,29,763,59,"options"],[898,36,763,66],[898,41,763,71],[898,45,763,75],[898,49,763,79,"options"],[898,56,763,86],[898,61,763,91],[898,66,763,96],[898,67,763,97],[898,70,763,100],[898,75,763,105],[898,76,763,106],[898,79,763,109,"options"],[898,86,763,116],[898,87,763,117,"captchaToken"],[899,12,763,130],[900,10,764,16],[900,11,764,17],[901,10,765,16,"xform"],[901,15,765,21],[901,17,765,23,"_sessionResponse"],[901,26,765,39],[901,27,765,39,"_sessionResponse"],[902,8,766,12],[902,9,766,13],[902,10,766,14],[903,8,767,12],[903,14,767,18],[904,10,767,20,"data"],[904,14,767,24],[905,10,767,26,"error"],[906,8,767,32],[906,9,767,33],[906,12,767,36,"res"],[906,15,767,39],[907,8,768,12],[907,12,768,16,"error"],[907,17,768,21],[907,19,768,23],[908,10,769,16],[908,17,769,23],[909,12,769,25,"data"],[909,16,769,29],[909,18,769,31],[910,14,769,33,"user"],[910,18,769,37],[910,20,769,39],[910,24,769,43],[911,14,769,45,"session"],[911,21,769,52],[911,23,769,54],[912,12,769,59],[912,13,769,60],[913,12,769,62,"error"],[914,10,769,68],[914,11,769,69],[915,8,770,12],[915,9,770,13],[915,15,771,17],[915,19,771,21],[915,20,771,22,"data"],[915,24,771,26],[915,28,771,30],[915,29,771,31,"data"],[915,33,771,35],[915,34,771,36,"session"],[915,41,771,43],[915,45,771,47],[915,46,771,48,"data"],[915,50,771,52],[915,51,771,53,"user"],[915,55,771,57],[915,57,771,59],[916,10,772,16],[916,17,772,23],[917,12,773,20,"data"],[917,16,773,24],[917,18,773,26],[918,14,773,28,"user"],[918,18,773,32],[918,20,773,34],[918,24,773,38],[919,14,773,40,"session"],[919,21,773,47],[919,23,773,49],[920,12,773,54],[920,13,773,55],[921,12,774,20,"error"],[921,17,774,25],[921,19,774,27],[921,23,774,31,"AuthInvalidTokenResponseError"],[921,33,774,60],[921,34,774,60,"AuthInvalidTokenResponseError"],[921,63,774,60],[921,64,774,61],[922,10,775,16],[922,11,775,17],[923,8,776,12],[924,8,777,12],[924,12,777,16,"data"],[924,16,777,20],[924,17,777,21,"session"],[924,24,777,28],[924,26,777,30],[925,10,778,16],[925,16,778,22],[925,20,778,26],[925,21,778,27,"_saveSession"],[925,33,778,39],[925,34,778,40,"data"],[925,38,778,44],[925,39,778,45,"session"],[925,46,778,52],[925,47,778,53],[926,10,779,16],[926,16,779,22],[926,20,779,26],[926,21,779,27,"_notifyAllSubscribers"],[926,42,779,48],[926,43,779,49],[926,54,779,60],[926,56,779,62,"data"],[926,60,779,66],[926,61,779,67,"session"],[926,68,779,74],[926,69,779,75],[927,8,780,12],[928,8,781,12],[928,15,781,19],[929,10,781,21,"data"],[929,14,781,25],[930,10,781,27,"error"],[931,8,781,33],[931,9,781,34],[932,6,782,8],[932,7,782,9],[932,8,783,8],[932,15,783,15,"error"],[932,20,783,20],[932,22,783,22],[933,8,784,12],[933,12,784,16],[933,16,784,16,"isAuthError"],[933,26,784,27],[933,27,784,27,"isAuthError"],[933,38,784,27],[933,40,784,28,"error"],[933,45,784,33],[933,46,784,34],[933,48,784,36],[934,10,785,16],[934,17,785,23],[935,12,785,25,"data"],[935,16,785,29],[935,18,785,31],[936,14,785,33,"user"],[936,18,785,37],[936,20,785,39],[936,24,785,43],[937,14,785,45,"session"],[937,21,785,52],[937,23,785,54],[938,12,785,59],[938,13,785,60],[939,12,785,62,"error"],[940,10,785,68],[940,11,785,69],[941,8,786,12],[942,8,787,12],[942,14,787,18,"error"],[942,19,787,23],[943,6,788,8],[944,4,789,4],[945,4,790,4],[946,0,791,0],[947,0,792,0],[948,0,793,0],[949,0,794,0],[950,0,795,0],[951,0,796,0],[952,0,797,0],[953,0,798,0],[954,0,799,0],[955,0,800,0],[956,0,801,0],[957,0,802,0],[958,0,803,0],[959,0,804,0],[960,0,805,0],[961,0,806,0],[962,4,807,4],[962,10,807,10,"signInWithOtp"],[962,23,807,23,"signInWithOtp"],[962,24,807,24,"credentials"],[962,35,807,35],[962,37,807,37],[963,6,808,8],[963,10,808,12,"_a"],[963,12,808,14],[963,14,808,16,"_b"],[963,16,808,18],[963,18,808,20,"_c"],[963,20,808,22],[963,22,808,24,"_d"],[963,24,808,26],[963,26,808,28,"_e"],[963,28,808,30],[964,6,809,8],[964,10,809,12],[965,8,810,12],[965,12,810,16],[965,19,810,23],[965,23,810,27,"credentials"],[965,34,810,38],[965,36,810,40],[966,10,811,16],[966,16,811,22],[967,12,811,24,"email"],[967,17,811,29],[968,12,811,31,"options"],[969,10,811,39],[969,11,811,40],[969,14,811,43,"credentials"],[969,25,811,54],[970,10,812,16],[970,14,812,20,"codeChallenge"],[970,27,812,33],[970,30,812,36],[970,34,812,40],[971,10,813,16],[971,14,813,20,"codeChallengeMethod"],[971,33,813,39],[971,36,813,42],[971,40,813,46],[972,10,814,16],[972,14,814,20],[972,18,814,24],[972,19,814,25,"flowType"],[972,27,814,33],[972,32,814,38],[972,38,814,44],[972,40,814,46],[973,12,815,20],[974,12,816,20],[974,13,816,21,"codeChallenge"],[974,26,816,34],[974,28,816,36,"codeChallengeMethod"],[974,47,816,55],[974,48,816,56],[974,51,816,59],[974,57,816,65],[974,61,816,65,"getCodeChallengeAndMethod"],[974,72,816,90],[974,73,816,90,"getCodeChallengeAndMethod"],[974,98,816,90],[974,100,816,91],[974,104,816,95],[974,105,816,96,"storage"],[974,112,816,103],[974,114,816,105],[974,118,816,109],[974,119,816,110,"storageKey"],[974,129,816,120],[974,130,816,121],[975,10,817,16],[976,10,818,16],[976,16,818,22],[977,12,818,24,"error"],[978,10,818,30],[978,11,818,31],[978,14,818,34],[978,20,818,40],[978,24,818,40,"_request"],[978,33,818,48],[978,34,818,48,"_request"],[978,42,818,48],[978,44,818,49],[978,48,818,53],[978,49,818,54,"fetch"],[978,54,818,59],[978,56,818,61],[978,62,818,67],[978,64,818,69],[978,67,818,72],[978,71,818,76],[978,72,818,77,"url"],[978,75,818,80],[978,81,818,86],[978,83,818,88],[979,12,819,20,"headers"],[979,19,819,27],[979,21,819,29],[979,25,819,33],[979,26,819,34,"headers"],[979,33,819,41],[980,12,820,20,"body"],[980,16,820,24],[980,18,820,26],[981,14,821,24,"email"],[981,19,821,29],[982,14,822,24,"data"],[982,18,822,28],[982,20,822,30],[982,21,822,31,"_a"],[982,23,822,33],[982,26,822,36,"options"],[982,33,822,43],[982,38,822,48],[982,42,822,52],[982,46,822,56,"options"],[982,53,822,63],[982,58,822,68],[982,63,822,73],[982,64,822,74],[982,67,822,77],[982,72,822,82],[982,73,822,83],[982,76,822,86,"options"],[982,83,822,93],[982,84,822,94,"data"],[982,88,822,98],[982,94,822,104],[982,98,822,108],[982,102,822,112,"_a"],[982,104,822,114],[982,109,822,119],[982,114,822,124],[982,115,822,125],[982,118,822,128,"_a"],[982,120,822,130],[982,123,822,133],[982,124,822,134],[982,125,822,135],[983,14,823,24,"create_user"],[983,25,823,35],[983,27,823,37],[983,28,823,38,"_b"],[983,30,823,40],[983,33,823,43,"options"],[983,40,823,50],[983,45,823,55],[983,49,823,59],[983,53,823,63,"options"],[983,60,823,70],[983,65,823,75],[983,70,823,80],[983,71,823,81],[983,74,823,84],[983,79,823,89],[983,80,823,90],[983,83,823,93,"options"],[983,90,823,100],[983,91,823,101,"shouldCreateUser"],[983,107,823,117],[983,113,823,123],[983,117,823,127],[983,121,823,131,"_b"],[983,123,823,133],[983,128,823,138],[983,133,823,143],[983,134,823,144],[983,137,823,147,"_b"],[983,139,823,149],[983,142,823,152],[983,146,823,156],[984,14,824,24,"gotrue_meta_security"],[984,34,824,44],[984,36,824,46],[985,16,824,48,"captcha_token"],[985,29,824,61],[985,31,824,63,"options"],[985,38,824,70],[985,43,824,75],[985,47,824,79],[985,51,824,83,"options"],[985,58,824,90],[985,63,824,95],[985,68,824,100],[985,69,824,101],[985,72,824,104],[985,77,824,109],[985,78,824,110],[985,81,824,113,"options"],[985,88,824,120],[985,89,824,121,"captchaToken"],[986,14,824,134],[986,15,824,135],[987,14,825,24,"code_challenge"],[987,28,825,38],[987,30,825,40,"codeChallenge"],[987,43,825,53],[988,14,826,24,"code_challenge_method"],[988,35,826,45],[988,37,826,47,"codeChallengeMethod"],[989,12,827,20],[989,13,827,21],[990,12,828,20,"redirectTo"],[990,22,828,30],[990,24,828,32,"options"],[990,31,828,39],[990,36,828,44],[990,40,828,48],[990,44,828,52,"options"],[990,51,828,59],[990,56,828,64],[990,61,828,69],[990,62,828,70],[990,65,828,73],[990,70,828,78],[990,71,828,79],[990,74,828,82,"options"],[990,81,828,89],[990,82,828,90,"emailRedirectTo"],[991,10,829,16],[991,11,829,17],[991,12,829,18],[992,10,830,16],[992,17,830,23],[993,12,830,25,"data"],[993,16,830,29],[993,18,830,31],[994,14,830,33,"user"],[994,18,830,37],[994,20,830,39],[994,24,830,43],[995,14,830,45,"session"],[995,21,830,52],[995,23,830,54],[996,12,830,59],[996,13,830,60],[997,12,830,62,"error"],[998,10,830,68],[998,11,830,69],[999,8,831,12],[1000,8,832,12],[1000,12,832,16],[1000,19,832,23],[1000,23,832,27,"credentials"],[1000,34,832,38],[1000,36,832,40],[1001,10,833,16],[1001,16,833,22],[1002,12,833,24,"phone"],[1002,17,833,29],[1003,12,833,31,"options"],[1004,10,833,39],[1004,11,833,40],[1004,14,833,43,"credentials"],[1004,25,833,54],[1005,10,834,16],[1005,16,834,22],[1006,12,834,24,"data"],[1006,16,834,28],[1007,12,834,30,"error"],[1008,10,834,36],[1008,11,834,37],[1008,14,834,40],[1008,20,834,46],[1008,24,834,46,"_request"],[1008,33,834,54],[1008,34,834,54,"_request"],[1008,42,834,54],[1008,44,834,55],[1008,48,834,59],[1008,49,834,60,"fetch"],[1008,54,834,65],[1008,56,834,67],[1008,62,834,73],[1008,64,834,75],[1008,67,834,78],[1008,71,834,82],[1008,72,834,83,"url"],[1008,75,834,86],[1008,81,834,92],[1008,83,834,94],[1009,12,835,20,"headers"],[1009,19,835,27],[1009,21,835,29],[1009,25,835,33],[1009,26,835,34,"headers"],[1009,33,835,41],[1010,12,836,20,"body"],[1010,16,836,24],[1010,18,836,26],[1011,14,837,24,"phone"],[1011,19,837,29],[1012,14,838,24,"data"],[1012,18,838,28],[1012,20,838,30],[1012,21,838,31,"_c"],[1012,23,838,33],[1012,26,838,36,"options"],[1012,33,838,43],[1012,38,838,48],[1012,42,838,52],[1012,46,838,56,"options"],[1012,53,838,63],[1012,58,838,68],[1012,63,838,73],[1012,64,838,74],[1012,67,838,77],[1012,72,838,82],[1012,73,838,83],[1012,76,838,86,"options"],[1012,83,838,93],[1012,84,838,94,"data"],[1012,88,838,98],[1012,94,838,104],[1012,98,838,108],[1012,102,838,112,"_c"],[1012,104,838,114],[1012,109,838,119],[1012,114,838,124],[1012,115,838,125],[1012,118,838,128,"_c"],[1012,120,838,130],[1012,123,838,133],[1012,124,838,134],[1012,125,838,135],[1013,14,839,24,"create_user"],[1013,25,839,35],[1013,27,839,37],[1013,28,839,38,"_d"],[1013,30,839,40],[1013,33,839,43,"options"],[1013,40,839,50],[1013,45,839,55],[1013,49,839,59],[1013,53,839,63,"options"],[1013,60,839,70],[1013,65,839,75],[1013,70,839,80],[1013,71,839,81],[1013,74,839,84],[1013,79,839,89],[1013,80,839,90],[1013,83,839,93,"options"],[1013,90,839,100],[1013,91,839,101,"shouldCreateUser"],[1013,107,839,117],[1013,113,839,123],[1013,117,839,127],[1013,121,839,131,"_d"],[1013,123,839,133],[1013,128,839,138],[1013,133,839,143],[1013,134,839,144],[1013,137,839,147,"_d"],[1013,139,839,149],[1013,142,839,152],[1013,146,839,156],[1014,14,840,24,"gotrue_meta_security"],[1014,34,840,44],[1014,36,840,46],[1015,16,840,48,"captcha_token"],[1015,29,840,61],[1015,31,840,63,"options"],[1015,38,840,70],[1015,43,840,75],[1015,47,840,79],[1015,51,840,83,"options"],[1015,58,840,90],[1015,63,840,95],[1015,68,840,100],[1015,69,840,101],[1015,72,840,104],[1015,77,840,109],[1015,78,840,110],[1015,81,840,113,"options"],[1015,88,840,120],[1015,89,840,121,"captchaToken"],[1016,14,840,134],[1016,15,840,135],[1017,14,841,24,"channel"],[1017,21,841,31],[1017,23,841,33],[1017,24,841,34,"_e"],[1017,26,841,36],[1017,29,841,39,"options"],[1017,36,841,46],[1017,41,841,51],[1017,45,841,55],[1017,49,841,59,"options"],[1017,56,841,66],[1017,61,841,71],[1017,66,841,76],[1017,67,841,77],[1017,70,841,80],[1017,75,841,85],[1017,76,841,86],[1017,79,841,89,"options"],[1017,86,841,96],[1017,87,841,97,"channel"],[1017,94,841,104],[1017,100,841,110],[1017,104,841,114],[1017,108,841,118,"_e"],[1017,110,841,120],[1017,115,841,125],[1017,120,841,130],[1017,121,841,131],[1017,124,841,134,"_e"],[1017,126,841,136],[1017,129,841,139],[1018,12,842,20],[1019,10,843,16],[1019,11,843,17],[1019,12,843,18],[1020,10,844,16],[1020,17,844,23],[1021,12,844,25,"data"],[1021,16,844,29],[1021,18,844,31],[1022,14,844,33,"user"],[1022,18,844,37],[1022,20,844,39],[1022,24,844,43],[1023,14,844,45,"session"],[1023,21,844,52],[1023,23,844,54],[1023,27,844,58],[1024,14,844,60,"messageId"],[1024,23,844,69],[1024,25,844,71,"data"],[1024,29,844,75],[1024,34,844,80],[1024,38,844,84],[1024,42,844,88,"data"],[1024,46,844,92],[1024,51,844,97],[1024,56,844,102],[1024,57,844,103],[1024,60,844,106],[1024,65,844,111],[1024,66,844,112],[1024,69,844,115,"data"],[1024,73,844,119],[1024,74,844,120,"message_id"],[1025,12,844,131],[1025,13,844,132],[1026,12,844,134,"error"],[1027,10,844,140],[1027,11,844,141],[1028,8,845,12],[1029,8,846,12],[1029,14,846,18],[1029,18,846,22,"AuthInvalidCredentialsError"],[1029,28,846,49],[1029,29,846,49,"AuthInvalidCredentialsError"],[1029,56,846,49],[1029,57,846,50],[1029,108,846,101],[1029,109,846,102],[1030,6,847,8],[1030,7,847,9],[1030,8,848,8],[1030,15,848,15,"error"],[1030,20,848,20],[1030,22,848,22],[1031,8,849,12],[1031,12,849,16],[1031,16,849,16,"isAuthError"],[1031,26,849,27],[1031,27,849,27,"isAuthError"],[1031,38,849,27],[1031,40,849,28,"error"],[1031,45,849,33],[1031,46,849,34],[1031,48,849,36],[1032,10,850,16],[1032,17,850,23],[1033,12,850,25,"data"],[1033,16,850,29],[1033,18,850,31],[1034,14,850,33,"user"],[1034,18,850,37],[1034,20,850,39],[1034,24,850,43],[1035,14,850,45,"session"],[1035,21,850,52],[1035,23,850,54],[1036,12,850,59],[1036,13,850,60],[1037,12,850,62,"error"],[1038,10,850,68],[1038,11,850,69],[1039,8,851,12],[1040,8,852,12],[1040,14,852,18,"error"],[1040,19,852,23],[1041,6,853,8],[1042,4,854,4],[1043,4,855,4],[1044,0,856,0],[1045,0,857,0],[1046,4,858,4],[1046,10,858,10,"verifyOtp"],[1046,19,858,19,"verifyOtp"],[1046,20,858,20,"params"],[1046,26,858,26],[1046,28,858,28],[1047,6,859,8],[1047,10,859,12,"_a"],[1047,12,859,14],[1047,14,859,16,"_b"],[1047,16,859,18],[1048,6,860,8],[1048,10,860,12],[1049,8,861,12],[1049,12,861,16,"redirectTo"],[1049,22,861,26],[1049,25,861,29,"undefined"],[1049,34,861,38],[1050,8,862,12],[1050,12,862,16,"captchaToken"],[1050,24,862,28],[1050,27,862,31,"undefined"],[1050,36,862,40],[1051,8,863,12],[1051,12,863,16],[1051,21,863,25],[1051,25,863,29,"params"],[1051,31,863,35],[1051,33,863,37],[1052,10,864,16,"redirectTo"],[1052,20,864,26],[1052,23,864,29],[1052,24,864,30,"_a"],[1052,26,864,32],[1052,29,864,35,"params"],[1052,35,864,41],[1052,36,864,42,"options"],[1052,43,864,49],[1052,49,864,55],[1052,53,864,59],[1052,57,864,63,"_a"],[1052,59,864,65],[1052,64,864,70],[1052,69,864,75],[1052,70,864,76],[1052,73,864,79],[1052,78,864,84],[1052,79,864,85],[1052,82,864,88,"_a"],[1052,84,864,90],[1052,85,864,91,"redirectTo"],[1052,95,864,101],[1053,10,865,16,"captchaToken"],[1053,22,865,28],[1053,25,865,31],[1053,26,865,32,"_b"],[1053,28,865,34],[1053,31,865,37,"params"],[1053,37,865,43],[1053,38,865,44,"options"],[1053,45,865,51],[1053,51,865,57],[1053,55,865,61],[1053,59,865,65,"_b"],[1053,61,865,67],[1053,66,865,72],[1053,71,865,77],[1053,72,865,78],[1053,75,865,81],[1053,80,865,86],[1053,81,865,87],[1053,84,865,90,"_b"],[1053,86,865,92],[1053,87,865,93,"captchaToken"],[1053,99,865,105],[1054,8,866,12],[1055,8,867,12],[1055,14,867,18],[1056,10,867,20,"data"],[1056,14,867,24],[1057,10,867,26,"error"],[1058,8,867,32],[1058,9,867,33],[1058,12,867,36],[1058,18,867,42],[1058,22,867,42,"_request"],[1058,31,867,50],[1058,32,867,50,"_request"],[1058,40,867,50],[1058,42,867,51],[1058,46,867,55],[1058,47,867,56,"fetch"],[1058,52,867,61],[1058,54,867,63],[1058,60,867,69],[1058,62,867,71],[1058,65,867,74],[1058,69,867,78],[1058,70,867,79,"url"],[1058,73,867,82],[1058,82,867,91],[1058,84,867,93],[1059,10,868,16,"headers"],[1059,17,868,23],[1059,19,868,25],[1059,23,868,29],[1059,24,868,30,"headers"],[1059,31,868,37],[1060,10,869,16,"body"],[1060,14,869,20],[1060,16,869,22,"Object"],[1060,22,869,28],[1060,23,869,29,"assign"],[1060,29,869,35],[1060,30,869,36,"Object"],[1060,36,869,42],[1060,37,869,43,"assign"],[1060,43,869,49],[1060,44,869,50],[1060,45,869,51],[1060,46,869,52],[1060,48,869,54,"params"],[1060,54,869,60],[1060,55,869,61],[1060,57,869,63],[1061,12,869,65,"gotrue_meta_security"],[1061,32,869,85],[1061,34,869,87],[1062,14,869,89,"captcha_token"],[1062,27,869,102],[1062,29,869,104,"captchaToken"],[1063,12,869,117],[1064,10,869,119],[1064,11,869,120],[1064,12,869,121],[1065,10,870,16,"redirectTo"],[1065,20,870,26],[1066,10,871,16,"xform"],[1066,15,871,21],[1066,17,871,23,"_sessionResponse"],[1066,26,871,39],[1066,27,871,39,"_sessionResponse"],[1067,8,872,12],[1067,9,872,13],[1067,10,872,14],[1068,8,873,12],[1068,12,873,16,"error"],[1068,17,873,21],[1068,19,873,23],[1069,10,874,16],[1069,16,874,22,"error"],[1069,21,874,27],[1070,8,875,12],[1071,8,876,12],[1071,12,876,16],[1071,13,876,17,"data"],[1071,17,876,21],[1071,19,876,23],[1072,10,877,16],[1072,16,877,22],[1072,20,877,26,"Error"],[1072,25,877,31],[1072,26,877,32],[1072,68,877,74],[1072,69,877,75],[1073,8,878,12],[1074,8,879,12],[1074,14,879,18,"session"],[1074,21,879,25],[1074,24,879,28,"data"],[1074,28,879,32],[1074,29,879,33,"session"],[1074,36,879,40],[1075,8,880,12],[1075,14,880,18,"user"],[1075,18,880,22],[1075,21,880,25,"data"],[1075,25,880,29],[1075,26,880,30,"user"],[1075,30,880,34],[1076,8,881,12],[1076,12,881,16,"session"],[1076,19,881,23],[1076,24,881,28],[1076,28,881,32],[1076,32,881,36,"session"],[1076,39,881,43],[1076,44,881,48],[1076,49,881,53],[1076,50,881,54],[1076,53,881,57],[1076,58,881,62],[1076,59,881,63],[1076,62,881,66,"session"],[1076,69,881,73],[1076,70,881,74,"access_token"],[1076,82,881,86],[1076,84,881,88],[1077,10,882,16],[1077,16,882,22],[1077,20,882,26],[1077,21,882,27,"_saveSession"],[1077,33,882,39],[1077,34,882,40,"session"],[1077,41,882,47],[1077,42,882,48],[1078,10,883,16],[1078,16,883,22],[1078,20,883,26],[1078,21,883,27,"_notifyAllSubscribers"],[1078,42,883,48],[1078,43,883,49,"params"],[1078,49,883,55],[1078,50,883,56,"type"],[1078,54,883,60],[1078,58,883,64],[1078,68,883,74],[1078,71,883,77],[1078,90,883,96],[1078,93,883,99],[1078,104,883,110],[1078,106,883,112,"session"],[1078,113,883,119],[1078,114,883,120],[1079,8,884,12],[1080,8,885,12],[1080,15,885,19],[1081,10,885,21,"data"],[1081,14,885,25],[1081,16,885,27],[1082,12,885,29,"user"],[1082,16,885,33],[1083,12,885,35,"session"],[1084,10,885,43],[1084,11,885,44],[1085,10,885,46,"error"],[1085,15,885,51],[1085,17,885,53],[1086,8,885,58],[1086,9,885,59],[1087,6,886,8],[1087,7,886,9],[1087,8,887,8],[1087,15,887,15,"error"],[1087,20,887,20],[1087,22,887,22],[1088,8,888,12],[1088,12,888,16],[1088,16,888,16,"isAuthError"],[1088,26,888,27],[1088,27,888,27,"isAuthError"],[1088,38,888,27],[1088,40,888,28,"error"],[1088,45,888,33],[1088,46,888,34],[1088,48,888,36],[1089,10,889,16],[1089,17,889,23],[1090,12,889,25,"data"],[1090,16,889,29],[1090,18,889,31],[1091,14,889,33,"user"],[1091,18,889,37],[1091,20,889,39],[1091,24,889,43],[1092,14,889,45,"session"],[1092,21,889,52],[1092,23,889,54],[1093,12,889,59],[1093,13,889,60],[1094,12,889,62,"error"],[1095,10,889,68],[1095,11,889,69],[1096,8,890,12],[1097,8,891,12],[1097,14,891,18,"error"],[1097,19,891,23],[1098,6,892,8],[1099,4,893,4],[1100,4,894,4],[1101,0,895,0],[1102,0,896,0],[1103,0,897,0],[1104,0,898,0],[1105,0,899,0],[1106,0,900,0],[1107,0,901,0],[1108,0,902,0],[1109,0,903,0],[1110,0,904,0],[1111,0,905,0],[1112,0,906,0],[1113,0,907,0],[1114,4,908,4],[1114,10,908,10,"signInWithSSO"],[1114,23,908,23,"signInWithSSO"],[1114,24,908,24,"params"],[1114,30,908,30],[1114,32,908,32],[1115,6,909,8],[1115,10,909,12,"_a"],[1115,12,909,14],[1115,14,909,16,"_b"],[1115,16,909,18],[1115,18,909,20,"_c"],[1115,20,909,22],[1116,6,910,8],[1116,10,910,12],[1117,8,911,12],[1117,12,911,16,"codeChallenge"],[1117,25,911,29],[1117,28,911,32],[1117,32,911,36],[1118,8,912,12],[1118,12,912,16,"codeChallengeMethod"],[1118,31,912,35],[1118,34,912,38],[1118,38,912,42],[1119,8,913,12],[1119,12,913,16],[1119,16,913,20],[1119,17,913,21,"flowType"],[1119,25,913,29],[1119,30,913,34],[1119,36,913,40],[1119,38,913,42],[1120,10,914,16],[1121,10,915,16],[1121,11,915,17,"codeChallenge"],[1121,24,915,30],[1121,26,915,32,"codeChallengeMethod"],[1121,45,915,51],[1121,46,915,52],[1121,49,915,55],[1121,55,915,61],[1121,59,915,61,"getCodeChallengeAndMethod"],[1121,70,915,86],[1121,71,915,86,"getCodeChallengeAndMethod"],[1121,96,915,86],[1121,98,915,87],[1121,102,915,91],[1121,103,915,92,"storage"],[1121,110,915,99],[1121,112,915,101],[1121,116,915,105],[1121,117,915,106,"storageKey"],[1121,127,915,116],[1121,128,915,117],[1122,8,916,12],[1123,8,917,12],[1123,15,917,19],[1123,21,917,25],[1123,25,917,25,"_request"],[1123,34,917,33],[1123,35,917,33,"_request"],[1123,43,917,33],[1123,45,917,34],[1123,49,917,38],[1123,50,917,39,"fetch"],[1123,55,917,44],[1123,57,917,46],[1123,63,917,52],[1123,65,917,54],[1123,68,917,57],[1123,72,917,61],[1123,73,917,62,"url"],[1123,76,917,65],[1123,82,917,71],[1123,84,917,73],[1124,10,918,16,"body"],[1124,14,918,20],[1124,16,918,22,"Object"],[1124,22,918,28],[1124,23,918,29,"assign"],[1124,29,918,35],[1124,30,918,36,"Object"],[1124,36,918,42],[1124,37,918,43,"assign"],[1124,43,918,49],[1124,44,918,50,"Object"],[1124,50,918,56],[1124,51,918,57,"assign"],[1124,57,918,63],[1124,58,918,64,"Object"],[1124,64,918,70],[1124,65,918,71,"assign"],[1124,71,918,77],[1124,72,918,78,"Object"],[1124,78,918,84],[1124,79,918,85,"assign"],[1124,85,918,91],[1124,86,918,92],[1124,87,918,93],[1124,88,918,94],[1124,90,918,97],[1124,102,918,109],[1124,106,918,113,"params"],[1124,112,918,119],[1124,115,918,122],[1125,12,918,124,"provider_id"],[1125,23,918,135],[1125,25,918,137,"params"],[1125,31,918,143],[1125,32,918,144,"providerId"],[1126,10,918,155],[1126,11,918,156],[1126,14,918,159],[1126,18,918,164],[1126,19,918,165],[1126,21,918,168],[1126,29,918,176],[1126,33,918,180,"params"],[1126,39,918,186],[1126,42,918,189],[1127,12,918,191,"domain"],[1127,18,918,197],[1127,20,918,199,"params"],[1127,26,918,205],[1127,27,918,206,"domain"],[1128,10,918,213],[1128,11,918,214],[1128,14,918,217],[1128,18,918,222],[1128,19,918,223],[1128,21,918,225],[1129,12,918,227,"redirect_to"],[1129,23,918,238],[1129,25,918,240],[1129,26,918,241,"_b"],[1129,28,918,243],[1129,31,918,246],[1129,32,918,247,"_a"],[1129,34,918,249],[1129,37,918,252,"params"],[1129,43,918,258],[1129,44,918,259,"options"],[1129,51,918,266],[1129,57,918,272],[1129,61,918,276],[1129,65,918,280,"_a"],[1129,67,918,282],[1129,72,918,287],[1129,77,918,292],[1129,78,918,293],[1129,81,918,296],[1129,86,918,301],[1129,87,918,302],[1129,90,918,305,"_a"],[1129,92,918,307],[1129,93,918,308,"redirectTo"],[1129,103,918,318],[1129,109,918,324],[1129,113,918,328],[1129,117,918,332,"_b"],[1129,119,918,334],[1129,124,918,339],[1129,129,918,344],[1129,130,918,345],[1129,133,918,348,"_b"],[1129,135,918,350],[1129,138,918,353,"undefined"],[1130,10,918,363],[1130,11,918,364],[1130,12,918,365],[1130,14,918,368],[1130,15,918,369],[1130,16,918,370,"_c"],[1130,18,918,372],[1130,21,918,375,"params"],[1130,27,918,381],[1130,32,918,386],[1130,36,918,390],[1130,40,918,394,"params"],[1130,46,918,400],[1130,51,918,405],[1130,56,918,410],[1130,57,918,411],[1130,60,918,414],[1130,65,918,419],[1130,66,918,420],[1130,69,918,423,"params"],[1130,75,918,429],[1130,76,918,430,"options"],[1130,83,918,437],[1130,89,918,443],[1130,93,918,447],[1130,97,918,451,"_c"],[1130,99,918,453],[1130,104,918,458],[1130,109,918,463],[1130,110,918,464],[1130,113,918,467],[1130,118,918,472],[1130,119,918,473],[1130,122,918,476,"_c"],[1130,124,918,478],[1130,125,918,479,"captchaToken"],[1130,137,918,491],[1130,141,919,22],[1131,12,919,24,"gotrue_meta_security"],[1131,32,919,44],[1131,34,919,46],[1132,14,919,48,"captcha_token"],[1132,27,919,61],[1132,29,919,63,"params"],[1132,35,919,69],[1132,36,919,70,"options"],[1132,43,919,77],[1132,44,919,78,"captchaToken"],[1133,12,919,91],[1134,10,919,93],[1134,11,919,94],[1134,14,920,22],[1134,18,920,27],[1134,19,920,28],[1134,21,920,30],[1135,12,920,32,"skip_http_redirect"],[1135,30,920,50],[1135,32,920,52],[1135,36,920,56],[1136,12,920,58,"code_challenge"],[1136,26,920,72],[1136,28,920,74,"codeChallenge"],[1136,41,920,87],[1137,12,920,89,"code_challenge_method"],[1137,33,920,110],[1137,35,920,112,"codeChallengeMethod"],[1138,10,920,132],[1138,11,920,133],[1138,12,920,134],[1139,10,921,16,"headers"],[1139,17,921,23],[1139,19,921,25],[1139,23,921,29],[1139,24,921,30,"headers"],[1139,31,921,37],[1140,10,922,16,"xform"],[1140,15,922,21],[1140,17,922,23,"_ssoResponse"],[1140,26,922,35],[1140,27,922,35,"_ssoResponse"],[1141,8,923,12],[1141,9,923,13],[1141,10,923,14],[1142,6,924,8],[1142,7,924,9],[1142,8,925,8],[1142,15,925,15,"error"],[1142,20,925,20],[1142,22,925,22],[1143,8,926,12],[1143,12,926,16],[1143,16,926,16,"isAuthError"],[1143,26,926,27],[1143,27,926,27,"isAuthError"],[1143,38,926,27],[1143,40,926,28,"error"],[1143,45,926,33],[1143,46,926,34],[1143,48,926,36],[1144,10,927,16],[1144,17,927,23],[1145,12,927,25,"data"],[1145,16,927,29],[1145,18,927,31],[1145,22,927,35],[1146,12,927,37,"error"],[1147,10,927,43],[1147,11,927,44],[1148,8,928,12],[1149,8,929,12],[1149,14,929,18,"error"],[1149,19,929,23],[1150,6,930,8],[1151,4,931,4],[1152,4,932,4],[1153,0,933,0],[1154,0,934,0],[1155,0,935,0],[1156,4,936,4],[1156,10,936,10,"reauthenticate"],[1156,24,936,24,"reauthenticate"],[1156,25,936,24],[1156,27,936,27],[1157,6,937,8],[1157,12,937,14],[1157,16,937,18],[1157,17,937,19,"initializePromise"],[1157,34,937,36],[1158,6,938,8],[1158,13,938,15],[1158,19,938,21],[1158,23,938,25],[1158,24,938,26,"_acquireLock"],[1158,36,938,38],[1158,37,938,39],[1158,38,938,40],[1158,39,938,41],[1158,41,938,43],[1158,53,938,55],[1159,8,939,12],[1159,15,939,19],[1159,21,939,25],[1159,25,939,29],[1159,26,939,30,"_reauthenticate"],[1159,41,939,45],[1159,42,939,46],[1159,43,939,47],[1160,6,940,8],[1160,7,940,9],[1160,8,940,10],[1161,4,941,4],[1162,4,942,4],[1162,10,942,10,"_reauthenticate"],[1162,25,942,25,"_reauthenticate"],[1162,26,942,25],[1162,28,942,28],[1163,6,943,8],[1163,10,943,12],[1164,8,944,12],[1164,15,944,19],[1164,21,944,25],[1164,25,944,29],[1164,26,944,30,"_useSession"],[1164,37,944,41],[1164,38,944,42],[1164,44,944,49,"result"],[1164,50,944,55],[1164,54,944,60],[1165,10,945,16],[1165,16,945,22],[1166,12,945,24,"data"],[1166,16,945,28],[1166,18,945,30],[1167,14,945,32,"session"],[1168,12,945,40],[1168,13,945,41],[1169,12,945,43,"error"],[1169,17,945,48],[1169,19,945,50,"sessionError"],[1170,10,945,64],[1170,11,945,65],[1170,14,945,68,"result"],[1170,20,945,74],[1171,10,946,16],[1171,14,946,20,"sessionError"],[1171,26,946,32],[1171,28,947,20],[1171,34,947,26,"sessionError"],[1171,46,947,38],[1172,10,948,16],[1172,14,948,20],[1172,15,948,21,"session"],[1172,22,948,28],[1172,24,949,20],[1172,30,949,26],[1172,34,949,30,"AuthSessionMissingError"],[1172,44,949,53],[1172,45,949,53,"AuthSessionMissingError"],[1172,68,949,53],[1172,69,949,54],[1172,70,949,55],[1173,10,950,16],[1173,16,950,22],[1174,12,950,24,"error"],[1175,10,950,30],[1175,11,950,31],[1175,14,950,34],[1175,20,950,40],[1175,24,950,40,"_request"],[1175,33,950,48],[1175,34,950,48,"_request"],[1175,42,950,48],[1175,44,950,49],[1175,48,950,53],[1175,49,950,54,"fetch"],[1175,54,950,59],[1175,56,950,61],[1175,61,950,66],[1175,63,950,68],[1175,66,950,71],[1175,70,950,75],[1175,71,950,76,"url"],[1175,74,950,79],[1175,91,950,96],[1175,93,950,98],[1176,12,951,20,"headers"],[1176,19,951,27],[1176,21,951,29],[1176,25,951,33],[1176,26,951,34,"headers"],[1176,33,951,41],[1177,12,952,20,"jwt"],[1177,15,952,23],[1177,17,952,25,"session"],[1177,24,952,32],[1177,25,952,33,"access_token"],[1178,10,953,16],[1178,11,953,17],[1178,12,953,18],[1179,10,954,16],[1179,17,954,23],[1180,12,954,25,"data"],[1180,16,954,29],[1180,18,954,31],[1181,14,954,33,"user"],[1181,18,954,37],[1181,20,954,39],[1181,24,954,43],[1182,14,954,45,"session"],[1182,21,954,52],[1182,23,954,54],[1183,12,954,59],[1183,13,954,60],[1184,12,954,62,"error"],[1185,10,954,68],[1185,11,954,69],[1186,8,955,12],[1186,9,955,13],[1186,10,955,14],[1187,6,956,8],[1187,7,956,9],[1187,8,957,8],[1187,15,957,15,"error"],[1187,20,957,20],[1187,22,957,22],[1188,8,958,12],[1188,12,958,16],[1188,16,958,16,"isAuthError"],[1188,26,958,27],[1188,27,958,27,"isAuthError"],[1188,38,958,27],[1188,40,958,28,"error"],[1188,45,958,33],[1188,46,958,34],[1188,48,958,36],[1189,10,959,16],[1189,17,959,23],[1190,12,959,25,"data"],[1190,16,959,29],[1190,18,959,31],[1191,14,959,33,"user"],[1191,18,959,37],[1191,20,959,39],[1191,24,959,43],[1192,14,959,45,"session"],[1192,21,959,52],[1192,23,959,54],[1193,12,959,59],[1193,13,959,60],[1194,12,959,62,"error"],[1195,10,959,68],[1195,11,959,69],[1196,8,960,12],[1197,8,961,12],[1197,14,961,18,"error"],[1197,19,961,23],[1198,6,962,8],[1199,4,963,4],[1200,4,964,4],[1201,0,965,0],[1202,0,966,0],[1203,4,967,4],[1203,10,967,10,"resend"],[1203,16,967,16,"resend"],[1203,17,967,17,"credentials"],[1203,28,967,28],[1203,30,967,30],[1204,6,968,8],[1204,10,968,12],[1205,8,969,12],[1205,14,969,18,"endpoint"],[1205,22,969,26],[1205,25,969,29],[1205,28,969,32],[1205,32,969,36],[1205,33,969,37,"url"],[1205,36,969,40],[1205,45,969,49],[1206,8,970,12],[1206,12,970,16],[1206,19,970,23],[1206,23,970,27,"credentials"],[1206,34,970,38],[1206,36,970,40],[1207,10,971,16],[1207,16,971,22],[1208,12,971,24,"email"],[1208,17,971,29],[1209,12,971,31,"type"],[1209,16,971,35],[1210,12,971,37,"options"],[1211,10,971,45],[1211,11,971,46],[1211,14,971,49,"credentials"],[1211,25,971,60],[1212,10,972,16],[1212,16,972,22],[1213,12,972,24,"error"],[1214,10,972,30],[1214,11,972,31],[1214,14,972,34],[1214,20,972,40],[1214,24,972,40,"_request"],[1214,33,972,48],[1214,34,972,48,"_request"],[1214,42,972,48],[1214,44,972,49],[1214,48,972,53],[1214,49,972,54,"fetch"],[1214,54,972,59],[1214,56,972,61],[1214,62,972,67],[1214,64,972,69,"endpoint"],[1214,72,972,77],[1214,74,972,79],[1215,12,973,20,"headers"],[1215,19,973,27],[1215,21,973,29],[1215,25,973,33],[1215,26,973,34,"headers"],[1215,33,973,41],[1216,12,974,20,"body"],[1216,16,974,24],[1216,18,974,26],[1217,14,975,24,"email"],[1217,19,975,29],[1218,14,976,24,"type"],[1218,18,976,28],[1219,14,977,24,"gotrue_meta_security"],[1219,34,977,44],[1219,36,977,46],[1220,16,977,48,"captcha_token"],[1220,29,977,61],[1220,31,977,63,"options"],[1220,38,977,70],[1220,43,977,75],[1220,47,977,79],[1220,51,977,83,"options"],[1220,58,977,90],[1220,63,977,95],[1220,68,977,100],[1220,69,977,101],[1220,72,977,104],[1220,77,977,109],[1220,78,977,110],[1220,81,977,113,"options"],[1220,88,977,120],[1220,89,977,121,"captchaToken"],[1221,14,977,134],[1222,12,978,20],[1222,13,978,21],[1223,12,979,20,"redirectTo"],[1223,22,979,30],[1223,24,979,32,"options"],[1223,31,979,39],[1223,36,979,44],[1223,40,979,48],[1223,44,979,52,"options"],[1223,51,979,59],[1223,56,979,64],[1223,61,979,69],[1223,62,979,70],[1223,65,979,73],[1223,70,979,78],[1223,71,979,79],[1223,74,979,82,"options"],[1223,81,979,89],[1223,82,979,90,"emailRedirectTo"],[1224,10,980,16],[1224,11,980,17],[1224,12,980,18],[1225,10,981,16],[1225,17,981,23],[1226,12,981,25,"data"],[1226,16,981,29],[1226,18,981,31],[1227,14,981,33,"user"],[1227,18,981,37],[1227,20,981,39],[1227,24,981,43],[1228,14,981,45,"session"],[1228,21,981,52],[1228,23,981,54],[1229,12,981,59],[1229,13,981,60],[1230,12,981,62,"error"],[1231,10,981,68],[1231,11,981,69],[1232,8,982,12],[1232,9,982,13],[1232,15,983,17],[1232,19,983,21],[1232,26,983,28],[1232,30,983,32,"credentials"],[1232,41,983,43],[1232,43,983,45],[1233,10,984,16],[1233,16,984,22],[1234,12,984,24,"phone"],[1234,17,984,29],[1235,12,984,31,"type"],[1235,16,984,35],[1236,12,984,37,"options"],[1237,10,984,45],[1237,11,984,46],[1237,14,984,49,"credentials"],[1237,25,984,60],[1238,10,985,16],[1238,16,985,22],[1239,12,985,24,"data"],[1239,16,985,28],[1240,12,985,30,"error"],[1241,10,985,36],[1241,11,985,37],[1241,14,985,40],[1241,20,985,46],[1241,24,985,46,"_request"],[1241,33,985,54],[1241,34,985,54,"_request"],[1241,42,985,54],[1241,44,985,55],[1241,48,985,59],[1241,49,985,60,"fetch"],[1241,54,985,65],[1241,56,985,67],[1241,62,985,73],[1241,64,985,75,"endpoint"],[1241,72,985,83],[1241,74,985,85],[1242,12,986,20,"headers"],[1242,19,986,27],[1242,21,986,29],[1242,25,986,33],[1242,26,986,34,"headers"],[1242,33,986,41],[1243,12,987,20,"body"],[1243,16,987,24],[1243,18,987,26],[1244,14,988,24,"phone"],[1244,19,988,29],[1245,14,989,24,"type"],[1245,18,989,28],[1246,14,990,24,"gotrue_meta_security"],[1246,34,990,44],[1246,36,990,46],[1247,16,990,48,"captcha_token"],[1247,29,990,61],[1247,31,990,63,"options"],[1247,38,990,70],[1247,43,990,75],[1247,47,990,79],[1247,51,990,83,"options"],[1247,58,990,90],[1247,63,990,95],[1247,68,990,100],[1247,69,990,101],[1247,72,990,104],[1247,77,990,109],[1247,78,990,110],[1247,81,990,113,"options"],[1247,88,990,120],[1247,89,990,121,"captchaToken"],[1248,14,990,134],[1249,12,991,20],[1250,10,992,16],[1250,11,992,17],[1250,12,992,18],[1251,10,993,16],[1251,17,993,23],[1252,12,993,25,"data"],[1252,16,993,29],[1252,18,993,31],[1253,14,993,33,"user"],[1253,18,993,37],[1253,20,993,39],[1253,24,993,43],[1254,14,993,45,"session"],[1254,21,993,52],[1254,23,993,54],[1254,27,993,58],[1255,14,993,60,"messageId"],[1255,23,993,69],[1255,25,993,71,"data"],[1255,29,993,75],[1255,34,993,80],[1255,38,993,84],[1255,42,993,88,"data"],[1255,46,993,92],[1255,51,993,97],[1255,56,993,102],[1255,57,993,103],[1255,60,993,106],[1255,65,993,111],[1255,66,993,112],[1255,69,993,115,"data"],[1255,73,993,119],[1255,74,993,120,"message_id"],[1256,12,993,131],[1256,13,993,132],[1257,12,993,134,"error"],[1258,10,993,140],[1258,11,993,141],[1259,8,994,12],[1260,8,995,12],[1260,14,995,18],[1260,18,995,22,"AuthInvalidCredentialsError"],[1260,28,995,49],[1260,29,995,49,"AuthInvalidCredentialsError"],[1260,56,995,49],[1260,57,995,50],[1260,118,995,111],[1260,119,995,112],[1261,6,996,8],[1261,7,996,9],[1261,8,997,8],[1261,15,997,15,"error"],[1261,20,997,20],[1261,22,997,22],[1262,8,998,12],[1262,12,998,16],[1262,16,998,16,"isAuthError"],[1262,26,998,27],[1262,27,998,27,"isAuthError"],[1262,38,998,27],[1262,40,998,28,"error"],[1262,45,998,33],[1262,46,998,34],[1262,48,998,36],[1263,10,999,16],[1263,17,999,23],[1264,12,999,25,"data"],[1264,16,999,29],[1264,18,999,31],[1265,14,999,33,"user"],[1265,18,999,37],[1265,20,999,39],[1265,24,999,43],[1266,14,999,45,"session"],[1266,21,999,52],[1266,23,999,54],[1267,12,999,59],[1267,13,999,60],[1268,12,999,62,"error"],[1269,10,999,68],[1269,11,999,69],[1270,8,1000,12],[1271,8,1001,12],[1271,14,1001,18,"error"],[1271,19,1001,23],[1272,6,1002,8],[1273,4,1003,4],[1274,4,1004,4],[1275,0,1005,0],[1276,0,1006,0],[1277,0,1007,0],[1278,0,1008,0],[1279,0,1009,0],[1280,0,1010,0],[1281,0,1011,0],[1282,0,1012,0],[1283,0,1013,0],[1284,0,1014,0],[1285,4,1015,4],[1285,10,1015,10,"getSession"],[1285,20,1015,20,"getSession"],[1285,21,1015,20],[1285,23,1015,23],[1286,6,1016,8],[1286,12,1016,14],[1286,16,1016,18],[1286,17,1016,19,"initializePromise"],[1286,34,1016,36],[1287,6,1017,8],[1287,12,1017,14,"result"],[1287,18,1017,20],[1287,21,1017,23],[1287,27,1017,29],[1287,31,1017,33],[1287,32,1017,34,"_acquireLock"],[1287,44,1017,46],[1287,45,1017,47],[1287,46,1017,48],[1287,47,1017,49],[1287,49,1017,51],[1287,61,1017,63],[1288,8,1018,12],[1288,15,1018,19],[1288,19,1018,23],[1288,20,1018,24,"_useSession"],[1288,31,1018,35],[1288,32,1018,36],[1288,38,1018,43,"result"],[1288,44,1018,49],[1288,48,1018,54],[1289,10,1019,16],[1289,17,1019,23,"result"],[1289,23,1019,29],[1290,8,1020,12],[1290,9,1020,13],[1290,10,1020,14],[1291,6,1021,8],[1291,7,1021,9],[1291,8,1021,10],[1292,6,1022,8],[1292,13,1022,15,"result"],[1292,19,1022,21],[1293,4,1023,4],[1294,4,1024,4],[1295,0,1025,0],[1296,0,1026,0],[1297,4,1027,4],[1297,10,1027,10,"_acquireLock"],[1297,22,1027,22,"_acquireLock"],[1297,23,1027,23,"acquireTimeout"],[1297,37,1027,37],[1297,39,1027,39,"fn"],[1297,41,1027,41],[1297,43,1027,43],[1298,6,1028,8],[1298,10,1028,12],[1298,11,1028,13,"_debug"],[1298,17,1028,19],[1298,18,1028,20],[1298,33,1028,35],[1298,35,1028,37],[1298,42,1028,44],[1298,44,1028,46,"acquireTimeout"],[1298,58,1028,60],[1298,59,1028,61],[1299,6,1029,8],[1299,10,1029,12],[1300,8,1030,12],[1300,12,1030,16],[1300,16,1030,20],[1300,17,1030,21,"lockAcquired"],[1300,29,1030,33],[1300,31,1030,35],[1301,10,1031,16],[1301,16,1031,22,"last"],[1301,20,1031,26],[1301,23,1031,29],[1301,27,1031,33],[1301,28,1031,34,"pendingInLock"],[1301,41,1031,47],[1301,42,1031,48,"length"],[1301,48,1031,54],[1301,51,1032,22],[1301,55,1032,26],[1301,56,1032,27,"pendingInLock"],[1301,69,1032,40],[1301,70,1032,41],[1301,74,1032,45],[1301,75,1032,46,"pendingInLock"],[1301,88,1032,59],[1301,89,1032,60,"length"],[1301,95,1032,66],[1301,98,1032,69],[1301,99,1032,70],[1301,100,1032,71],[1301,103,1033,22,"Promise"],[1301,110,1033,29],[1301,111,1033,30,"resolve"],[1301,118,1033,37],[1301,119,1033,38],[1301,120,1033,39],[1302,10,1034,16],[1302,16,1034,22,"result"],[1302,22,1034,28],[1302,25,1034,31],[1302,26,1034,32],[1302,38,1034,44],[1303,12,1035,20],[1303,18,1035,26,"last"],[1303,22,1035,30],[1304,12,1036,20],[1304,19,1036,27],[1304,25,1036,33,"fn"],[1304,27,1036,35],[1304,28,1036,36],[1304,29,1036,37],[1305,10,1037,16],[1305,11,1037,17],[1305,13,1037,19],[1305,14,1037,20],[1306,10,1038,16],[1306,14,1038,20],[1306,15,1038,21,"pendingInLock"],[1306,28,1038,34],[1306,29,1038,35,"push"],[1306,33,1038,39],[1306,34,1038,40],[1306,35,1038,41],[1306,47,1038,53],[1307,12,1039,20],[1307,16,1039,24],[1308,14,1040,24],[1308,20,1040,30,"result"],[1308,26,1040,36],[1309,12,1041,20],[1309,13,1041,21],[1309,14,1042,20],[1309,21,1042,27,"e"],[1309,22,1042,28],[1309,24,1042,30],[1310,14,1043,24],[1311,12,1043,24],[1312,10,1045,16],[1312,11,1045,17],[1312,13,1045,19],[1312,14,1045,20],[1312,15,1045,21],[1313,10,1046,16],[1313,17,1046,23,"result"],[1313,23,1046,29],[1314,8,1047,12],[1315,8,1048,12],[1315,15,1048,19],[1315,21,1048,25],[1315,25,1048,29],[1315,26,1048,30,"lock"],[1315,30,1048,34],[1315,31,1048,35],[1315,39,1048,43],[1315,43,1048,47],[1315,44,1048,48,"storageKey"],[1315,54,1048,58],[1315,56,1048,60],[1315,58,1048,62,"acquireTimeout"],[1315,72,1048,76],[1315,74,1048,78],[1315,86,1048,90],[1316,10,1049,16],[1316,14,1049,20],[1316,15,1049,21,"_debug"],[1316,21,1049,27],[1316,22,1049,28],[1316,37,1049,43],[1316,39,1049,45],[1316,70,1049,76],[1316,72,1049,78],[1316,76,1049,82],[1316,77,1049,83,"storageKey"],[1316,87,1049,93],[1316,88,1049,94],[1317,10,1050,16],[1317,14,1050,20],[1318,12,1051,20],[1318,16,1051,24],[1318,17,1051,25,"lockAcquired"],[1318,29,1051,37],[1318,32,1051,40],[1318,36,1051,44],[1319,12,1052,20],[1319,18,1052,26,"result"],[1319,24,1052,32],[1319,27,1052,35,"fn"],[1319,29,1052,37],[1319,30,1052,38],[1319,31,1052,39],[1320,12,1053,20],[1320,16,1053,24],[1320,17,1053,25,"pendingInLock"],[1320,30,1053,38],[1320,31,1053,39,"push"],[1320,35,1053,43],[1320,36,1053,44],[1320,37,1053,45],[1320,49,1053,57],[1321,14,1054,24],[1321,18,1054,28],[1322,16,1055,28],[1322,22,1055,34,"result"],[1322,28,1055,40],[1323,14,1056,24],[1323,15,1056,25],[1323,16,1057,24],[1323,23,1057,31,"e"],[1323,24,1057,32],[1323,26,1057,34],[1324,16,1058,28],[1325,14,1058,28],[1326,12,1060,20],[1326,13,1060,21],[1326,15,1060,23],[1326,16,1060,24],[1326,17,1060,25],[1327,12,1061,20],[1327,18,1061,26,"result"],[1327,24,1061,32],[1328,12,1062,20],[1329,12,1063,20],[1329,19,1063,27],[1329,23,1063,31],[1329,24,1063,32,"pendingInLock"],[1329,37,1063,45],[1329,38,1063,46,"length"],[1329,44,1063,52],[1329,46,1063,54],[1330,14,1064,24],[1330,20,1064,30,"waitOn"],[1330,26,1064,36],[1330,29,1064,39],[1330,30,1064,40],[1330,33,1064,43],[1330,37,1064,47],[1330,38,1064,48,"pendingInLock"],[1330,51,1064,61],[1330,52,1064,62],[1331,14,1065,24],[1331,20,1065,30,"Promise"],[1331,27,1065,37],[1331,28,1065,38,"all"],[1331,31,1065,41],[1331,32,1065,42,"waitOn"],[1331,38,1065,48],[1331,39,1065,49],[1332,14,1066,24],[1332,18,1066,28],[1332,19,1066,29,"pendingInLock"],[1332,32,1066,42],[1332,33,1066,43,"splice"],[1332,39,1066,49],[1332,40,1066,50],[1332,41,1066,51],[1332,43,1066,53,"waitOn"],[1332,49,1066,59],[1332,50,1066,60,"length"],[1332,56,1066,66],[1332,57,1066,67],[1333,12,1067,20],[1334,12,1068,20],[1334,19,1068,27],[1334,25,1068,33,"result"],[1334,31,1068,39],[1335,10,1069,16],[1335,11,1069,17],[1335,20,1070,24],[1336,12,1071,20],[1336,16,1071,24],[1336,17,1071,25,"_debug"],[1336,23,1071,31],[1336,24,1071,32],[1336,39,1071,47],[1336,41,1071,49],[1336,72,1071,80],[1336,74,1071,82],[1336,78,1071,86],[1336,79,1071,87,"storageKey"],[1336,89,1071,97],[1336,90,1071,98],[1337,12,1072,20],[1337,16,1072,24],[1337,17,1072,25,"lockAcquired"],[1337,29,1072,37],[1337,32,1072,40],[1337,37,1072,45],[1338,10,1073,16],[1339,8,1074,12],[1339,9,1074,13],[1339,10,1074,14],[1340,6,1075,8],[1340,7,1075,9],[1340,16,1076,16],[1341,8,1077,12],[1341,12,1077,16],[1341,13,1077,17,"_debug"],[1341,19,1077,23],[1341,20,1077,24],[1341,35,1077,39],[1341,37,1077,41],[1341,42,1077,46],[1341,43,1077,47],[1342,6,1078,8],[1343,4,1079,4],[1344,4,1080,4],[1345,0,1081,0],[1346,0,1082,0],[1347,0,1083,0],[1348,0,1084,0],[1349,0,1085,0],[1350,4,1086,4],[1350,10,1086,10,"_useSession"],[1350,21,1086,21,"_useSession"],[1350,22,1086,22,"fn"],[1350,24,1086,24],[1350,26,1086,26],[1351,6,1087,8],[1351,10,1087,12],[1351,11,1087,13,"_debug"],[1351,17,1087,19],[1351,18,1087,20],[1351,32,1087,34],[1351,34,1087,36],[1351,41,1087,43],[1351,42,1087,44],[1352,6,1088,8],[1352,10,1088,12],[1353,8,1089,12],[1354,8,1090,12],[1354,14,1090,18,"result"],[1354,20,1090,24],[1354,23,1090,27],[1354,29,1090,33],[1354,33,1090,37],[1354,34,1090,38,"__loadSession"],[1354,47,1090,51],[1354,48,1090,52],[1354,49,1090,53],[1355,8,1091,12],[1355,15,1091,19],[1355,21,1091,25,"fn"],[1355,23,1091,27],[1355,24,1091,28,"result"],[1355,30,1091,34],[1355,31,1091,35],[1356,6,1092,8],[1356,7,1092,9],[1356,16,1093,16],[1357,8,1094,12],[1357,12,1094,16],[1357,13,1094,17,"_debug"],[1357,19,1094,23],[1357,20,1094,24],[1357,34,1094,38],[1357,36,1094,40],[1357,41,1094,45],[1357,42,1094,46],[1358,6,1095,8],[1359,4,1096,4],[1360,4,1097,4],[1361,0,1098,0],[1362,0,1099,0],[1363,0,1100,0],[1364,0,1101,0],[1365,4,1102,4],[1365,10,1102,10,"__loadSession"],[1365,23,1102,23,"__loadSession"],[1365,24,1102,23],[1365,26,1102,26],[1366,6,1103,8],[1366,10,1103,12],[1366,11,1103,13,"_debug"],[1366,17,1103,19],[1366,18,1103,20],[1366,36,1103,38],[1366,38,1103,40],[1366,45,1103,47],[1366,46,1103,48],[1367,6,1104,8],[1367,10,1104,12],[1367,11,1104,13],[1367,15,1104,17],[1367,16,1104,18,"lockAcquired"],[1367,28,1104,30],[1367,30,1104,32],[1368,8,1105,12],[1368,12,1105,16],[1368,13,1105,17,"_debug"],[1368,19,1105,23],[1368,20,1105,24],[1368,38,1105,42],[1368,40,1105,44],[1368,75,1105,79],[1368,77,1105,81],[1368,81,1105,85,"Error"],[1368,86,1105,90],[1368,87,1105,91],[1368,88,1105,92],[1368,89,1105,93,"stack"],[1368,94,1105,98],[1368,95,1105,99],[1369,6,1106,8],[1370,6,1107,8],[1370,10,1107,12],[1371,8,1108,12],[1371,12,1108,16,"currentSession"],[1371,26,1108,30],[1371,29,1108,33],[1371,33,1108,37],[1372,8,1109,12],[1372,14,1109,18,"maybeSession"],[1372,26,1109,30],[1372,29,1109,33],[1372,35,1109,39],[1372,39,1109,39,"getItemAsync"],[1372,50,1109,51],[1372,51,1109,51,"getItemAsync"],[1372,63,1109,51],[1372,65,1109,52],[1372,69,1109,56],[1372,70,1109,57,"storage"],[1372,77,1109,64],[1372,79,1109,66],[1372,83,1109,70],[1372,84,1109,71,"storageKey"],[1372,94,1109,81],[1372,95,1109,82],[1373,8,1110,12],[1373,12,1110,16],[1373,13,1110,17,"_debug"],[1373,19,1110,23],[1373,20,1110,24],[1373,35,1110,39],[1373,37,1110,41],[1373,59,1110,63],[1373,61,1110,65,"maybeSession"],[1373,73,1110,77],[1373,74,1110,78],[1374,8,1111,12],[1374,12,1111,16,"maybeSession"],[1374,24,1111,28],[1374,29,1111,33],[1374,33,1111,37],[1374,35,1111,39],[1375,10,1112,16],[1375,14,1112,20],[1375,18,1112,24],[1375,19,1112,25,"_isValidSession"],[1375,34,1112,40],[1375,35,1112,41,"maybeSession"],[1375,47,1112,53],[1375,48,1112,54],[1375,50,1112,56],[1376,12,1113,20,"currentSession"],[1376,26,1113,34],[1376,29,1113,37,"maybeSession"],[1376,41,1113,49],[1377,10,1114,16],[1377,11,1114,17],[1377,17,1115,21],[1378,12,1116,20],[1378,16,1116,24],[1378,17,1116,25,"_debug"],[1378,23,1116,31],[1378,24,1116,32],[1378,39,1116,47],[1378,41,1116,49],[1378,76,1116,84],[1378,77,1116,85],[1379,12,1117,20],[1379,18,1117,26],[1379,22,1117,30],[1379,23,1117,31,"_removeSession"],[1379,37,1117,45],[1379,38,1117,46],[1379,39,1117,47],[1380,10,1118,16],[1381,8,1119,12],[1382,8,1120,12],[1382,12,1120,16],[1382,13,1120,17,"currentSession"],[1382,27,1120,31],[1382,29,1120,33],[1383,10,1121,16],[1383,17,1121,23],[1384,12,1121,25,"data"],[1384,16,1121,29],[1384,18,1121,31],[1385,14,1121,33,"session"],[1385,21,1121,40],[1385,23,1121,42],[1386,12,1121,47],[1386,13,1121,48],[1387,12,1121,50,"error"],[1387,17,1121,55],[1387,19,1121,57],[1388,10,1121,62],[1388,11,1121,63],[1389,8,1122,12],[1390,8,1123,12],[1391,8,1124,12],[1392,8,1125,12],[1393,8,1126,12],[1394,8,1127,12],[1395,8,1128,12],[1395,14,1128,18,"hasExpired"],[1395,24,1128,28],[1395,27,1128,31,"currentSession"],[1395,41,1128,45],[1395,42,1128,46,"expires_at"],[1395,52,1128,56],[1395,55,1129,18,"currentSession"],[1395,69,1129,32],[1395,70,1129,33,"expires_at"],[1395,80,1129,43],[1395,83,1129,46],[1395,87,1129,50],[1395,90,1129,53,"Date"],[1395,94,1129,57],[1395,95,1129,58,"now"],[1395,98,1129,61],[1395,99,1129,62],[1395,100,1129,63],[1395,103,1129,66,"EXPIRY_MARGIN_MS"],[1395,116,1129,82],[1395,117,1129,82,"EXPIRY_MARGIN_MS"],[1395,133,1129,82],[1395,136,1130,18],[1395,141,1130,23],[1396,8,1131,12],[1396,12,1131,16],[1396,13,1131,17,"_debug"],[1396,19,1131,23],[1396,20,1131,24],[1396,38,1131,42],[1396,40,1131,44],[1396,54,1131,58,"hasExpired"],[1396,64,1131,68],[1396,67,1131,71],[1396,69,1131,73],[1396,72,1131,76],[1396,78,1131,82],[1396,88,1131,92],[1396,90,1131,94],[1396,102,1131,106],[1396,104,1131,108,"currentSession"],[1396,118,1131,122],[1396,119,1131,123,"expires_at"],[1396,129,1131,133],[1396,130,1131,134],[1397,8,1132,12],[1397,12,1132,16],[1397,13,1132,17,"hasExpired"],[1397,23,1132,27],[1397,25,1132,29],[1398,10,1133,16],[1398,14,1133,20],[1398,18,1133,24],[1398,19,1133,25,"userStorage"],[1398,30,1133,36],[1398,32,1133,38],[1399,12,1134,20],[1399,18,1134,26,"maybeUser"],[1399,27,1134,35],[1399,30,1134,39],[1399,36,1134,45],[1399,40,1134,45,"getItemAsync"],[1399,51,1134,57],[1399,52,1134,57,"getItemAsync"],[1399,64,1134,57],[1399,66,1134,58],[1399,70,1134,62],[1399,71,1134,63,"userStorage"],[1399,82,1134,74],[1399,84,1134,76],[1399,88,1134,80],[1399,89,1134,81,"storageKey"],[1399,99,1134,91],[1399,102,1134,94],[1399,109,1134,101],[1399,110,1134,103],[1400,12,1135,20],[1400,16,1135,24,"maybeUser"],[1400,25,1135,33],[1400,30,1135,38],[1400,34,1135,42],[1400,38,1135,46,"maybeUser"],[1400,47,1135,55],[1400,52,1135,60],[1400,57,1135,65],[1400,58,1135,66],[1400,61,1135,69],[1400,66,1135,74],[1400,67,1135,75],[1400,70,1135,78,"maybeUser"],[1400,79,1135,87],[1400,80,1135,88,"user"],[1400,84,1135,92],[1400,86,1135,94],[1401,14,1136,24,"currentSession"],[1401,28,1136,38],[1401,29,1136,39,"user"],[1401,33,1136,43],[1401,36,1136,46,"maybeUser"],[1401,45,1136,55],[1401,46,1136,56,"user"],[1401,50,1136,60],[1402,12,1137,20],[1402,13,1137,21],[1402,19,1138,25],[1403,14,1139,24,"currentSession"],[1403,28,1139,38],[1403,29,1139,39,"user"],[1403,33,1139,43],[1403,36,1139,46],[1403,40,1139,46,"userNotAvailableProxy"],[1403,51,1139,67],[1403,52,1139,67,"userNotAvailableProxy"],[1403,73,1139,67],[1403,75,1139,68],[1403,76,1139,69],[1404,12,1140,20],[1405,10,1141,16],[1406,10,1142,16],[1406,14,1142,20],[1406,18,1142,24],[1406,19,1142,25,"storage"],[1406,26,1142,32],[1406,27,1142,33,"isServer"],[1406,35,1142,41],[1406,39,1142,45,"currentSession"],[1406,53,1142,59],[1406,54,1142,60,"user"],[1406,58,1142,64],[1406,60,1142,66],[1407,12,1143,20],[1407,16,1143,24,"suppressWarning"],[1407,31,1143,39],[1407,34,1143,42],[1407,38,1143,46],[1407,39,1143,47,"suppressGetSessionWarning"],[1407,64,1143,72],[1408,12,1144,20],[1408,18,1144,26,"proxySession"],[1408,30,1144,38],[1408,33,1144,41],[1408,37,1144,45,"Proxy"],[1408,42,1144,50],[1408,43,1144,51,"currentSession"],[1408,57,1144,65],[1408,59,1144,67],[1409,14,1145,24,"get"],[1409,17,1145,27],[1409,19,1145,29,"get"],[1409,20,1145,30,"target"],[1409,26,1145,36],[1409,28,1145,38,"prop"],[1409,32,1145,42],[1409,34,1145,44,"receiver"],[1409,42,1145,52],[1409,47,1145,57],[1410,16,1146,28],[1410,20,1146,32],[1410,21,1146,33,"suppressWarning"],[1410,36,1146,48],[1410,40,1146,52,"prop"],[1410,44,1146,56],[1410,49,1146,61],[1410,55,1146,67],[1410,57,1146,69],[1411,18,1147,32],[1412,18,1148,32,"console"],[1412,25,1148,39],[1412,26,1148,40,"warn"],[1412,30,1148,44],[1412,31,1148,45],[1412,384,1148,398],[1412,385,1148,399],[1413,18,1149,32,"suppressWarning"],[1413,33,1149,47],[1413,36,1149,50],[1413,40,1149,54],[1413,41,1149,55],[1413,42,1149,56],[1414,18,1150,32],[1414,22,1150,36],[1414,23,1150,37,"suppressGetSessionWarning"],[1414,48,1150,62],[1414,51,1150,65],[1414,55,1150,69],[1414,56,1150,70],[1414,57,1150,71],[1415,16,1151,28],[1416,16,1152,28],[1416,23,1152,35,"Reflect"],[1416,30,1152,42],[1416,31,1152,43,"get"],[1416,34,1152,46],[1416,35,1152,47,"target"],[1416,41,1152,53],[1416,43,1152,55,"prop"],[1416,47,1152,59],[1416,49,1152,61,"receiver"],[1416,57,1152,69],[1416,58,1152,70],[1417,14,1153,24],[1418,12,1154,20],[1418,13,1154,21],[1418,14,1154,22],[1419,12,1155,20,"currentSession"],[1419,26,1155,34],[1419,29,1155,37,"proxySession"],[1419,41,1155,49],[1420,10,1156,16],[1421,10,1157,16],[1421,17,1157,23],[1422,12,1157,25,"data"],[1422,16,1157,29],[1422,18,1157,31],[1423,14,1157,33,"session"],[1423,21,1157,40],[1423,23,1157,42,"currentSession"],[1424,12,1157,57],[1424,13,1157,58],[1425,12,1157,60,"error"],[1425,17,1157,65],[1425,19,1157,67],[1426,10,1157,72],[1426,11,1157,73],[1427,8,1158,12],[1428,8,1159,12],[1428,14,1159,18],[1429,10,1159,20,"data"],[1429,14,1159,24],[1429,16,1159,26,"session"],[1429,23,1159,33],[1430,10,1159,35,"error"],[1431,8,1159,41],[1431,9,1159,42],[1431,12,1159,45],[1431,18,1159,51],[1431,22,1159,55],[1431,23,1159,56,"_callRefreshToken"],[1431,40,1159,73],[1431,41,1159,74,"currentSession"],[1431,55,1159,88],[1431,56,1159,89,"refresh_token"],[1431,69,1159,102],[1431,70,1159,103],[1432,8,1160,12],[1432,12,1160,16,"error"],[1432,17,1160,21],[1432,19,1160,23],[1433,10,1161,16],[1433,17,1161,23],[1434,12,1161,25,"data"],[1434,16,1161,29],[1434,18,1161,31],[1435,14,1161,33,"session"],[1435,21,1161,40],[1435,23,1161,42],[1436,12,1161,47],[1436,13,1161,48],[1437,12,1161,50,"error"],[1438,10,1161,56],[1438,11,1161,57],[1439,8,1162,12],[1440,8,1163,12],[1440,15,1163,19],[1441,10,1163,21,"data"],[1441,14,1163,25],[1441,16,1163,27],[1442,12,1163,29,"session"],[1443,10,1163,37],[1443,11,1163,38],[1444,10,1163,40,"error"],[1444,15,1163,45],[1444,17,1163,47],[1445,8,1163,52],[1445,9,1163,53],[1446,6,1164,8],[1446,7,1164,9],[1446,16,1165,16],[1447,8,1166,12],[1447,12,1166,16],[1447,13,1166,17,"_debug"],[1447,19,1166,23],[1447,20,1166,24],[1447,38,1166,42],[1447,40,1166,44],[1447,45,1166,49],[1447,46,1166,50],[1448,6,1167,8],[1449,4,1168,4],[1450,4,1169,4],[1451,0,1170,0],[1452,0,1171,0],[1453,0,1172,0],[1454,0,1173,0],[1455,0,1174,0],[1456,0,1175,0],[1457,4,1176,4],[1457,10,1176,10,"getUser"],[1457,17,1176,17,"getUser"],[1457,18,1176,18,"jwt"],[1457,21,1176,21],[1457,23,1176,23],[1458,6,1177,8],[1458,10,1177,12,"jwt"],[1458,13,1177,15],[1458,15,1177,17],[1459,8,1178,12],[1459,15,1178,19],[1459,21,1178,25],[1459,25,1178,29],[1459,26,1178,30,"_getUser"],[1459,34,1178,38],[1459,35,1178,39,"jwt"],[1459,38,1178,42],[1459,39,1178,43],[1460,6,1179,8],[1461,6,1180,8],[1461,12,1180,14],[1461,16,1180,18],[1461,17,1180,19,"initializePromise"],[1461,34,1180,36],[1462,6,1181,8],[1462,12,1181,14,"result"],[1462,18,1181,20],[1462,21,1181,23],[1462,27,1181,29],[1462,31,1181,33],[1462,32,1181,34,"_acquireLock"],[1462,44,1181,46],[1462,45,1181,47],[1462,46,1181,48],[1462,47,1181,49],[1462,49,1181,51],[1462,61,1181,63],[1463,8,1182,12],[1463,15,1182,19],[1463,21,1182,25],[1463,25,1182,29],[1463,26,1182,30,"_getUser"],[1463,34,1182,38],[1463,35,1182,39],[1463,36,1182,40],[1464,6,1183,8],[1464,7,1183,9],[1464,8,1183,10],[1465,6,1184,8],[1465,13,1184,15,"result"],[1465,19,1184,21],[1466,4,1185,4],[1467,4,1186,4],[1467,10,1186,10,"_getUser"],[1467,18,1186,18,"_getUser"],[1467,19,1186,19,"jwt"],[1467,22,1186,22],[1467,24,1186,24],[1468,6,1187,8],[1468,10,1187,12],[1469,8,1188,12],[1469,12,1188,16,"jwt"],[1469,15,1188,19],[1469,17,1188,21],[1470,10,1189,16],[1470,17,1189,23],[1470,23,1189,29],[1470,27,1189,29,"_request"],[1470,36,1189,37],[1470,37,1189,37,"_request"],[1470,45,1189,37],[1470,47,1189,38],[1470,51,1189,42],[1470,52,1189,43,"fetch"],[1470,57,1189,48],[1470,59,1189,50],[1470,64,1189,55],[1470,66,1189,57],[1470,69,1189,60],[1470,73,1189,64],[1470,74,1189,65,"url"],[1470,77,1189,68],[1470,84,1189,75],[1470,86,1189,77],[1471,12,1190,20,"headers"],[1471,19,1190,27],[1471,21,1190,29],[1471,25,1190,33],[1471,26,1190,34,"headers"],[1471,33,1190,41],[1472,12,1191,20,"jwt"],[1472,15,1191,23],[1472,17,1191,25,"jwt"],[1472,20,1191,28],[1473,12,1192,20,"xform"],[1473,17,1192,25],[1473,19,1192,27,"_userResponse"],[1473,28,1192,40],[1473,29,1192,40,"_userResponse"],[1474,10,1193,16],[1474,11,1193,17],[1474,12,1193,18],[1475,8,1194,12],[1476,8,1195,12],[1476,15,1195,19],[1476,21,1195,25],[1476,25,1195,29],[1476,26,1195,30,"_useSession"],[1476,37,1195,41],[1476,38,1195,42],[1476,44,1195,49,"result"],[1476,50,1195,55],[1476,54,1195,60],[1477,10,1196,16],[1477,14,1196,20,"_a"],[1477,16,1196,22],[1477,18,1196,24,"_b"],[1477,20,1196,26],[1477,22,1196,28,"_c"],[1477,24,1196,30],[1478,10,1197,16],[1478,16,1197,22],[1479,12,1197,24,"data"],[1479,16,1197,28],[1480,12,1197,30,"error"],[1481,10,1197,36],[1481,11,1197,37],[1481,14,1197,40,"result"],[1481,20,1197,46],[1482,10,1198,16],[1482,14,1198,20,"error"],[1482,19,1198,25],[1482,21,1198,27],[1483,12,1199,20],[1483,18,1199,26,"error"],[1483,23,1199,31],[1484,10,1200,16],[1485,10,1201,16],[1486,10,1202,16],[1486,14,1202,20],[1486,16,1202,22],[1486,17,1202,23,"_a"],[1486,19,1202,25],[1486,22,1202,28,"data"],[1486,26,1202,32],[1486,27,1202,33,"session"],[1486,34,1202,40],[1486,40,1202,46],[1486,44,1202,50],[1486,48,1202,54,"_a"],[1486,50,1202,56],[1486,55,1202,61],[1486,60,1202,66],[1486,61,1202,67],[1486,64,1202,70],[1486,69,1202,75],[1486,70,1202,76],[1486,73,1202,79,"_a"],[1486,75,1202,81],[1486,76,1202,82,"access_token"],[1486,88,1202,94],[1486,89,1202,95],[1486,93,1202,99],[1486,94,1202,100],[1486,98,1202,104],[1486,99,1202,105,"hasCustomAuthorizationHeader"],[1486,127,1202,133],[1486,129,1202,135],[1487,12,1203,20],[1487,19,1203,27],[1488,14,1203,29,"data"],[1488,18,1203,33],[1488,20,1203,35],[1489,16,1203,37,"user"],[1489,20,1203,41],[1489,22,1203,43],[1490,14,1203,48],[1490,15,1203,49],[1491,14,1203,51,"error"],[1491,19,1203,56],[1491,21,1203,58],[1491,25,1203,62,"AuthSessionMissingError"],[1491,35,1203,85],[1491,36,1203,85,"AuthSessionMissingError"],[1491,59,1203,85],[1491,60,1203,86],[1492,12,1203,88],[1492,13,1203,89],[1493,10,1204,16],[1494,10,1205,16],[1494,17,1205,23],[1494,23,1205,29],[1494,27,1205,29,"_request"],[1494,36,1205,37],[1494,37,1205,37,"_request"],[1494,45,1205,37],[1494,47,1205,38],[1494,51,1205,42],[1494,52,1205,43,"fetch"],[1494,57,1205,48],[1494,59,1205,50],[1494,64,1205,55],[1494,66,1205,57],[1494,69,1205,60],[1494,73,1205,64],[1494,74,1205,65,"url"],[1494,77,1205,68],[1494,84,1205,75],[1494,86,1205,77],[1495,12,1206,20,"headers"],[1495,19,1206,27],[1495,21,1206,29],[1495,25,1206,33],[1495,26,1206,34,"headers"],[1495,33,1206,41],[1496,12,1207,20,"jwt"],[1496,15,1207,23],[1496,17,1207,25],[1496,18,1207,26,"_c"],[1496,20,1207,28],[1496,23,1207,31],[1496,24,1207,32,"_b"],[1496,26,1207,34],[1496,29,1207,37,"data"],[1496,33,1207,41],[1496,34,1207,42,"session"],[1496,41,1207,49],[1496,47,1207,55],[1496,51,1207,59],[1496,55,1207,63,"_b"],[1496,57,1207,65],[1496,62,1207,70],[1496,67,1207,75],[1496,68,1207,76],[1496,71,1207,79],[1496,76,1207,84],[1496,77,1207,85],[1496,80,1207,88,"_b"],[1496,82,1207,90],[1496,83,1207,91,"access_token"],[1496,95,1207,103],[1496,101,1207,109],[1496,105,1207,113],[1496,109,1207,117,"_c"],[1496,111,1207,119],[1496,116,1207,124],[1496,121,1207,129],[1496,122,1207,130],[1496,125,1207,133,"_c"],[1496,127,1207,135],[1496,130,1207,138,"undefined"],[1496,139,1207,147],[1497,12,1208,20,"xform"],[1497,17,1208,25],[1497,19,1208,27,"_userResponse"],[1497,28,1208,40],[1497,29,1208,40,"_userResponse"],[1498,10,1209,16],[1498,11,1209,17],[1498,12,1209,18],[1499,8,1210,12],[1499,9,1210,13],[1499,10,1210,14],[1500,6,1211,8],[1500,7,1211,9],[1500,8,1212,8],[1500,15,1212,15,"error"],[1500,20,1212,20],[1500,22,1212,22],[1501,8,1213,12],[1501,12,1213,16],[1501,16,1213,16,"isAuthError"],[1501,26,1213,27],[1501,27,1213,27,"isAuthError"],[1501,38,1213,27],[1501,40,1213,28,"error"],[1501,45,1213,33],[1501,46,1213,34],[1501,48,1213,36],[1502,10,1214,16],[1502,14,1214,20],[1502,18,1214,20,"isAuthSessionMissingError"],[1502,28,1214,45],[1502,29,1214,45,"isAuthSessionMissingError"],[1502,54,1214,45],[1502,56,1214,46,"error"],[1502,61,1214,51],[1502,62,1214,52],[1502,64,1214,54],[1503,12,1215,20],[1504,12,1216,20],[1505,12,1217,20],[1505,18,1217,26],[1505,22,1217,30],[1505,23,1217,31,"_removeSession"],[1505,37,1217,45],[1505,38,1217,46],[1505,39,1217,47],[1506,12,1218,20],[1506,18,1218,26],[1506,22,1218,26,"removeItemAsync"],[1506,33,1218,41],[1506,34,1218,41,"removeItemAsync"],[1506,49,1218,41],[1506,51,1218,42],[1506,55,1218,46],[1506,56,1218,47,"storage"],[1506,63,1218,54],[1506,65,1218,56],[1506,68,1218,59],[1506,72,1218,63],[1506,73,1218,64,"storageKey"],[1506,83,1218,74],[1506,99,1218,90],[1506,100,1218,91],[1507,10,1219,16],[1508,10,1220,16],[1508,17,1220,23],[1509,12,1220,25,"data"],[1509,16,1220,29],[1509,18,1220,31],[1510,14,1220,33,"user"],[1510,18,1220,37],[1510,20,1220,39],[1511,12,1220,44],[1511,13,1220,45],[1512,12,1220,47,"error"],[1513,10,1220,53],[1513,11,1220,54],[1514,8,1221,12],[1515,8,1222,12],[1515,14,1222,18,"error"],[1515,19,1222,23],[1516,6,1223,8],[1517,4,1224,4],[1518,4,1225,4],[1519,0,1226,0],[1520,0,1227,0],[1521,4,1228,4],[1521,10,1228,10,"updateUser"],[1521,20,1228,20,"updateUser"],[1521,21,1228,21,"attributes"],[1521,31,1228,31],[1521,33,1228,33,"options"],[1521,40,1228,40],[1521,43,1228,43],[1521,44,1228,44],[1521,45,1228,45],[1521,47,1228,47],[1522,6,1229,8],[1522,12,1229,14],[1522,16,1229,18],[1522,17,1229,19,"initializePromise"],[1522,34,1229,36],[1523,6,1230,8],[1523,13,1230,15],[1523,19,1230,21],[1523,23,1230,25],[1523,24,1230,26,"_acquireLock"],[1523,36,1230,38],[1523,37,1230,39],[1523,38,1230,40],[1523,39,1230,41],[1523,41,1230,43],[1523,53,1230,55],[1524,8,1231,12],[1524,15,1231,19],[1524,21,1231,25],[1524,25,1231,29],[1524,26,1231,30,"_updateUser"],[1524,37,1231,41],[1524,38,1231,42,"attributes"],[1524,48,1231,52],[1524,50,1231,54,"options"],[1524,57,1231,61],[1524,58,1231,62],[1525,6,1232,8],[1525,7,1232,9],[1525,8,1232,10],[1526,4,1233,4],[1527,4,1234,4],[1527,10,1234,10,"_updateUser"],[1527,21,1234,21,"_updateUser"],[1527,22,1234,22,"attributes"],[1527,32,1234,32],[1527,34,1234,34,"options"],[1527,41,1234,41],[1527,44,1234,44],[1527,45,1234,45],[1527,46,1234,46],[1527,48,1234,48],[1528,6,1235,8],[1528,10,1235,12],[1529,8,1236,12],[1529,15,1236,19],[1529,21,1236,25],[1529,25,1236,29],[1529,26,1236,30,"_useSession"],[1529,37,1236,41],[1529,38,1236,42],[1529,44,1236,49,"result"],[1529,50,1236,55],[1529,54,1236,60],[1530,10,1237,16],[1530,16,1237,22],[1531,12,1237,24,"data"],[1531,16,1237,28],[1531,18,1237,30,"sessionData"],[1531,29,1237,41],[1532,12,1237,43,"error"],[1532,17,1237,48],[1532,19,1237,50,"sessionError"],[1533,10,1237,63],[1533,11,1237,64],[1533,14,1237,67,"result"],[1533,20,1237,73],[1534,10,1238,16],[1534,14,1238,20,"sessionError"],[1534,26,1238,32],[1534,28,1238,34],[1535,12,1239,20],[1535,18,1239,26,"sessionError"],[1535,30,1239,38],[1536,10,1240,16],[1537,10,1241,16],[1537,14,1241,20],[1537,15,1241,21,"sessionData"],[1537,26,1241,32],[1537,27,1241,33,"session"],[1537,34,1241,40],[1537,36,1241,42],[1538,12,1242,20],[1538,18,1242,26],[1538,22,1242,30,"AuthSessionMissingError"],[1538,32,1242,53],[1538,33,1242,53,"AuthSessionMissingError"],[1538,56,1242,53],[1538,57,1242,54],[1538,58,1242,55],[1539,10,1243,16],[1540,10,1244,16],[1540,16,1244,22,"session"],[1540,23,1244,29],[1540,26,1244,32,"sessionData"],[1540,37,1244,43],[1540,38,1244,44,"session"],[1540,45,1244,51],[1541,10,1245,16],[1541,14,1245,20,"codeChallenge"],[1541,27,1245,33],[1541,30,1245,36],[1541,34,1245,40],[1542,10,1246,16],[1542,14,1246,20,"codeChallengeMethod"],[1542,33,1246,39],[1542,36,1246,42],[1542,40,1246,46],[1543,10,1247,16],[1543,14,1247,20],[1543,18,1247,24],[1543,19,1247,25,"flowType"],[1543,27,1247,33],[1543,32,1247,38],[1543,38,1247,44],[1543,42,1247,48,"attributes"],[1543,52,1247,58],[1543,53,1247,59,"email"],[1543,58,1247,64],[1543,62,1247,68],[1543,66,1247,72],[1543,68,1247,74],[1544,12,1248,20],[1545,12,1249,20],[1545,13,1249,21,"codeChallenge"],[1545,26,1249,34],[1545,28,1249,36,"codeChallengeMethod"],[1545,47,1249,55],[1545,48,1249,56],[1545,51,1249,59],[1545,57,1249,65],[1545,61,1249,65,"getCodeChallengeAndMethod"],[1545,72,1249,90],[1545,73,1249,90,"getCodeChallengeAndMethod"],[1545,98,1249,90],[1545,100,1249,91],[1545,104,1249,95],[1545,105,1249,96,"storage"],[1545,112,1249,103],[1545,114,1249,105],[1545,118,1249,109],[1545,119,1249,110,"storageKey"],[1545,129,1249,120],[1545,130,1249,121],[1546,10,1250,16],[1547,10,1251,16],[1547,16,1251,22],[1548,12,1251,24,"data"],[1548,16,1251,28],[1549,12,1251,30,"error"],[1549,17,1251,35],[1549,19,1251,37,"userError"],[1550,10,1251,47],[1550,11,1251,48],[1550,14,1251,51],[1550,20,1251,57],[1550,24,1251,57,"_request"],[1550,33,1251,65],[1550,34,1251,65,"_request"],[1550,42,1251,65],[1550,44,1251,66],[1550,48,1251,70],[1550,49,1251,71,"fetch"],[1550,54,1251,76],[1550,56,1251,78],[1550,61,1251,83],[1550,63,1251,85],[1550,66,1251,88],[1550,70,1251,92],[1550,71,1251,93,"url"],[1550,74,1251,96],[1550,81,1251,103],[1550,83,1251,105],[1551,12,1252,20,"headers"],[1551,19,1252,27],[1551,21,1252,29],[1551,25,1252,33],[1551,26,1252,34,"headers"],[1551,33,1252,41],[1552,12,1253,20,"redirectTo"],[1552,22,1253,30],[1552,24,1253,32,"options"],[1552,31,1253,39],[1552,36,1253,44],[1552,40,1253,48],[1552,44,1253,52,"options"],[1552,51,1253,59],[1552,56,1253,64],[1552,61,1253,69],[1552,62,1253,70],[1552,65,1253,73],[1552,70,1253,78],[1552,71,1253,79],[1552,74,1253,82,"options"],[1552,81,1253,89],[1552,82,1253,90,"emailRedirectTo"],[1552,97,1253,105],[1553,12,1254,20,"body"],[1553,16,1254,24],[1553,18,1254,26,"Object"],[1553,24,1254,32],[1553,25,1254,33,"assign"],[1553,31,1254,39],[1553,32,1254,40,"Object"],[1553,38,1254,46],[1553,39,1254,47,"assign"],[1553,45,1254,53],[1553,46,1254,54],[1553,47,1254,55],[1553,48,1254,56],[1553,50,1254,58,"attributes"],[1553,60,1254,68],[1553,61,1254,69],[1553,63,1254,71],[1554,14,1254,73,"code_challenge"],[1554,28,1254,87],[1554,30,1254,89,"codeChallenge"],[1554,43,1254,102],[1555,14,1254,104,"code_challenge_method"],[1555,35,1254,125],[1555,37,1254,127,"codeChallengeMethod"],[1556,12,1254,147],[1556,13,1254,148],[1556,14,1254,149],[1557,12,1255,20,"jwt"],[1557,15,1255,23],[1557,17,1255,25,"session"],[1557,24,1255,32],[1557,25,1255,33,"access_token"],[1557,37,1255,45],[1558,12,1256,20,"xform"],[1558,17,1256,25],[1558,19,1256,27,"_userResponse"],[1558,28,1256,40],[1558,29,1256,40,"_userResponse"],[1559,10,1257,16],[1559,11,1257,17],[1559,12,1257,18],[1560,10,1258,16],[1560,14,1258,20,"userError"],[1560,23,1258,29],[1560,25,1259,20],[1560,31,1259,26,"userError"],[1560,40,1259,35],[1561,10,1260,16,"session"],[1561,17,1260,23],[1561,18,1260,24,"user"],[1561,22,1260,28],[1561,25,1260,31,"data"],[1561,29,1260,35],[1561,30,1260,36,"user"],[1561,34,1260,40],[1562,10,1261,16],[1562,16,1261,22],[1562,20,1261,26],[1562,21,1261,27,"_saveSession"],[1562,33,1261,39],[1562,34,1261,40,"session"],[1562,41,1261,47],[1562,42,1261,48],[1563,10,1262,16],[1563,16,1262,22],[1563,20,1262,26],[1563,21,1262,27,"_notifyAllSubscribers"],[1563,42,1262,48],[1563,43,1262,49],[1563,57,1262,63],[1563,59,1262,65,"session"],[1563,66,1262,72],[1563,67,1262,73],[1564,10,1263,16],[1564,17,1263,23],[1565,12,1263,25,"data"],[1565,16,1263,29],[1565,18,1263,31],[1566,14,1263,33,"user"],[1566,18,1263,37],[1566,20,1263,39,"session"],[1566,27,1263,46],[1566,28,1263,47,"user"],[1567,12,1263,52],[1567,13,1263,53],[1568,12,1263,55,"error"],[1568,17,1263,60],[1568,19,1263,62],[1569,10,1263,67],[1569,11,1263,68],[1570,8,1264,12],[1570,9,1264,13],[1570,10,1264,14],[1571,6,1265,8],[1571,7,1265,9],[1571,8,1266,8],[1571,15,1266,15,"error"],[1571,20,1266,20],[1571,22,1266,22],[1572,8,1267,12],[1572,12,1267,16],[1572,16,1267,16,"isAuthError"],[1572,26,1267,27],[1572,27,1267,27,"isAuthError"],[1572,38,1267,27],[1572,40,1267,28,"error"],[1572,45,1267,33],[1572,46,1267,34],[1572,48,1267,36],[1573,10,1268,16],[1573,17,1268,23],[1574,12,1268,25,"data"],[1574,16,1268,29],[1574,18,1268,31],[1575,14,1268,33,"user"],[1575,18,1268,37],[1575,20,1268,39],[1576,12,1268,44],[1576,13,1268,45],[1577,12,1268,47,"error"],[1578,10,1268,53],[1578,11,1268,54],[1579,8,1269,12],[1580,8,1270,12],[1580,14,1270,18,"error"],[1580,19,1270,23],[1581,6,1271,8],[1582,4,1272,4],[1583,4,1273,4],[1584,0,1274,0],[1585,0,1275,0],[1586,0,1276,0],[1587,0,1277,0],[1588,4,1278,4],[1588,10,1278,10,"setSession"],[1588,20,1278,20,"setSession"],[1588,21,1278,21,"currentSession"],[1588,35,1278,35],[1588,37,1278,37],[1589,6,1279,8],[1589,12,1279,14],[1589,16,1279,18],[1589,17,1279,19,"initializePromise"],[1589,34,1279,36],[1590,6,1280,8],[1590,13,1280,15],[1590,19,1280,21],[1590,23,1280,25],[1590,24,1280,26,"_acquireLock"],[1590,36,1280,38],[1590,37,1280,39],[1590,38,1280,40],[1590,39,1280,41],[1590,41,1280,43],[1590,53,1280,55],[1591,8,1281,12],[1591,15,1281,19],[1591,21,1281,25],[1591,25,1281,29],[1591,26,1281,30,"_setSession"],[1591,37,1281,41],[1591,38,1281,42,"currentSession"],[1591,52,1281,56],[1591,53,1281,57],[1592,6,1282,8],[1592,7,1282,9],[1592,8,1282,10],[1593,4,1283,4],[1594,4,1284,4],[1594,10,1284,10,"_setSession"],[1594,21,1284,21,"_setSession"],[1594,22,1284,22,"currentSession"],[1594,36,1284,36],[1594,38,1284,38],[1595,6,1285,8],[1595,10,1285,12],[1596,8,1286,12],[1596,12,1286,16],[1596,13,1286,17,"currentSession"],[1596,27,1286,31],[1596,28,1286,32,"access_token"],[1596,40,1286,44],[1596,44,1286,48],[1596,45,1286,49,"currentSession"],[1596,59,1286,63],[1596,60,1286,64,"refresh_token"],[1596,73,1286,77],[1596,75,1286,79],[1597,10,1287,16],[1597,16,1287,22],[1597,20,1287,26,"AuthSessionMissingError"],[1597,30,1287,49],[1597,31,1287,49,"AuthSessionMissingError"],[1597,54,1287,49],[1597,55,1287,50],[1597,56,1287,51],[1598,8,1288,12],[1599,8,1289,12],[1599,14,1289,18,"timeNow"],[1599,21,1289,25],[1599,24,1289,28,"Date"],[1599,28,1289,32],[1599,29,1289,33,"now"],[1599,32,1289,36],[1599,33,1289,37],[1599,34,1289,38],[1599,37,1289,41],[1599,41,1289,45],[1600,8,1290,12],[1600,12,1290,16,"expiresAt"],[1600,21,1290,25],[1600,24,1290,28,"timeNow"],[1600,31,1290,35],[1601,8,1291,12],[1601,12,1291,16,"hasExpired"],[1601,22,1291,26],[1601,25,1291,29],[1601,29,1291,33],[1602,8,1292,12],[1602,12,1292,16,"session"],[1602,19,1292,23],[1602,22,1292,26],[1602,26,1292,30],[1603,8,1293,12],[1603,14,1293,18],[1604,10,1293,20,"payload"],[1605,8,1293,28],[1605,9,1293,29],[1605,12,1293,32],[1605,16,1293,32,"decodeJWT"],[1605,27,1293,41],[1605,28,1293,41,"decodeJWT"],[1605,37,1293,41],[1605,39,1293,42,"currentSession"],[1605,53,1293,56],[1605,54,1293,57,"access_token"],[1605,66,1293,69],[1605,67,1293,70],[1606,8,1294,12],[1606,12,1294,16,"payload"],[1606,19,1294,23],[1606,20,1294,24,"exp"],[1606,23,1294,27],[1606,25,1294,29],[1607,10,1295,16,"expiresAt"],[1607,19,1295,25],[1607,22,1295,28,"payload"],[1607,29,1295,35],[1607,30,1295,36,"exp"],[1607,33,1295,39],[1608,10,1296,16,"hasExpired"],[1608,20,1296,26],[1608,23,1296,29,"expiresAt"],[1608,32,1296,38],[1608,36,1296,42,"timeNow"],[1608,43,1296,49],[1609,8,1297,12],[1610,8,1298,12],[1610,12,1298,16,"hasExpired"],[1610,22,1298,26],[1610,24,1298,28],[1611,10,1299,16],[1611,16,1299,22],[1612,12,1299,24,"data"],[1612,16,1299,28],[1612,18,1299,30,"refreshedSession"],[1612,34,1299,46],[1613,12,1299,48,"error"],[1614,10,1299,54],[1614,11,1299,55],[1614,14,1299,58],[1614,20,1299,64],[1614,24,1299,68],[1614,25,1299,69,"_callRefreshToken"],[1614,42,1299,86],[1614,43,1299,87,"currentSession"],[1614,57,1299,101],[1614,58,1299,102,"refresh_token"],[1614,71,1299,115],[1614,72,1299,116],[1615,10,1300,16],[1615,14,1300,20,"error"],[1615,19,1300,25],[1615,21,1300,27],[1616,12,1301,20],[1616,19,1301,27],[1617,14,1301,29,"data"],[1617,18,1301,33],[1617,20,1301,35],[1618,16,1301,37,"user"],[1618,20,1301,41],[1618,22,1301,43],[1618,26,1301,47],[1619,16,1301,49,"session"],[1619,23,1301,56],[1619,25,1301,58],[1620,14,1301,63],[1620,15,1301,64],[1621,14,1301,66,"error"],[1621,19,1301,71],[1621,21,1301,73,"error"],[1622,12,1301,79],[1622,13,1301,80],[1623,10,1302,16],[1624,10,1303,16],[1624,14,1303,20],[1624,15,1303,21,"refreshedSession"],[1624,31,1303,37],[1624,33,1303,39],[1625,12,1304,20],[1625,19,1304,27],[1626,14,1304,29,"data"],[1626,18,1304,33],[1626,20,1304,35],[1627,16,1304,37,"user"],[1627,20,1304,41],[1627,22,1304,43],[1627,26,1304,47],[1628,16,1304,49,"session"],[1628,23,1304,56],[1628,25,1304,58],[1629,14,1304,63],[1629,15,1304,64],[1630,14,1304,66,"error"],[1630,19,1304,71],[1630,21,1304,73],[1631,12,1304,78],[1631,13,1304,79],[1632,10,1305,16],[1633,10,1306,16,"session"],[1633,17,1306,23],[1633,20,1306,26,"refreshedSession"],[1633,36,1306,42],[1634,8,1307,12],[1634,9,1307,13],[1634,15,1308,17],[1635,10,1309,16],[1635,16,1309,22],[1636,12,1309,24,"data"],[1636,16,1309,28],[1637,12,1309,30,"error"],[1638,10,1309,36],[1638,11,1309,37],[1638,14,1309,40],[1638,20,1309,46],[1638,24,1309,50],[1638,25,1309,51,"_getUser"],[1638,33,1309,59],[1638,34,1309,60,"currentSession"],[1638,48,1309,74],[1638,49,1309,75,"access_token"],[1638,61,1309,87],[1638,62,1309,88],[1639,10,1310,16],[1639,14,1310,20,"error"],[1639,19,1310,25],[1639,21,1310,27],[1640,12,1311,20],[1640,18,1311,26,"error"],[1640,23,1311,31],[1641,10,1312,16],[1642,10,1313,16,"session"],[1642,17,1313,23],[1642,20,1313,26],[1643,12,1314,20,"access_token"],[1643,24,1314,32],[1643,26,1314,34,"currentSession"],[1643,40,1314,48],[1643,41,1314,49,"access_token"],[1643,53,1314,61],[1644,12,1315,20,"refresh_token"],[1644,25,1315,33],[1644,27,1315,35,"currentSession"],[1644,41,1315,49],[1644,42,1315,50,"refresh_token"],[1644,55,1315,63],[1645,12,1316,20,"user"],[1645,16,1316,24],[1645,18,1316,26,"data"],[1645,22,1316,30],[1645,23,1316,31,"user"],[1645,27,1316,35],[1646,12,1317,20,"token_type"],[1646,22,1317,30],[1646,24,1317,32],[1646,32,1317,40],[1647,12,1318,20,"expires_in"],[1647,22,1318,30],[1647,24,1318,32,"expiresAt"],[1647,33,1318,41],[1647,36,1318,44,"timeNow"],[1647,43,1318,51],[1648,12,1319,20,"expires_at"],[1648,22,1319,30],[1648,24,1319,32,"expiresAt"],[1649,10,1320,16],[1649,11,1320,17],[1650,10,1321,16],[1650,16,1321,22],[1650,20,1321,26],[1650,21,1321,27,"_saveSession"],[1650,33,1321,39],[1650,34,1321,40,"session"],[1650,41,1321,47],[1650,42,1321,48],[1651,10,1322,16],[1651,16,1322,22],[1651,20,1322,26],[1651,21,1322,27,"_notifyAllSubscribers"],[1651,42,1322,48],[1651,43,1322,49],[1651,54,1322,60],[1651,56,1322,62,"session"],[1651,63,1322,69],[1651,64,1322,70],[1652,8,1323,12],[1653,8,1324,12],[1653,15,1324,19],[1654,10,1324,21,"data"],[1654,14,1324,25],[1654,16,1324,27],[1655,12,1324,29,"user"],[1655,16,1324,33],[1655,18,1324,35,"session"],[1655,25,1324,42],[1655,26,1324,43,"user"],[1655,30,1324,47],[1656,12,1324,49,"session"],[1657,10,1324,57],[1657,11,1324,58],[1658,10,1324,60,"error"],[1658,15,1324,65],[1658,17,1324,67],[1659,8,1324,72],[1659,9,1324,73],[1660,6,1325,8],[1660,7,1325,9],[1660,8,1326,8],[1660,15,1326,15,"error"],[1660,20,1326,20],[1660,22,1326,22],[1661,8,1327,12],[1661,12,1327,16],[1661,16,1327,16,"isAuthError"],[1661,26,1327,27],[1661,27,1327,27,"isAuthError"],[1661,38,1327,27],[1661,40,1327,28,"error"],[1661,45,1327,33],[1661,46,1327,34],[1661,48,1327,36],[1662,10,1328,16],[1662,17,1328,23],[1663,12,1328,25,"data"],[1663,16,1328,29],[1663,18,1328,31],[1664,14,1328,33,"session"],[1664,21,1328,40],[1664,23,1328,42],[1664,27,1328,46],[1665,14,1328,48,"user"],[1665,18,1328,52],[1665,20,1328,54],[1666,12,1328,59],[1666,13,1328,60],[1667,12,1328,62,"error"],[1668,10,1328,68],[1668,11,1328,69],[1669,8,1329,12],[1670,8,1330,12],[1670,14,1330,18,"error"],[1670,19,1330,23],[1671,6,1331,8],[1672,4,1332,4],[1673,4,1333,4],[1674,0,1334,0],[1675,0,1335,0],[1676,0,1336,0],[1677,0,1337,0],[1678,0,1338,0],[1679,4,1339,4],[1679,10,1339,10,"refreshSession"],[1679,24,1339,24,"refreshSession"],[1679,25,1339,25,"currentSession"],[1679,39,1339,39],[1679,41,1339,41],[1680,6,1340,8],[1680,12,1340,14],[1680,16,1340,18],[1680,17,1340,19,"initializePromise"],[1680,34,1340,36],[1681,6,1341,8],[1681,13,1341,15],[1681,19,1341,21],[1681,23,1341,25],[1681,24,1341,26,"_acquireLock"],[1681,36,1341,38],[1681,37,1341,39],[1681,38,1341,40],[1681,39,1341,41],[1681,41,1341,43],[1681,53,1341,55],[1682,8,1342,12],[1682,15,1342,19],[1682,21,1342,25],[1682,25,1342,29],[1682,26,1342,30,"_refreshSession"],[1682,41,1342,45],[1682,42,1342,46,"currentSession"],[1682,56,1342,60],[1682,57,1342,61],[1683,6,1343,8],[1683,7,1343,9],[1683,8,1343,10],[1684,4,1344,4],[1685,4,1345,4],[1685,10,1345,10,"_refreshSession"],[1685,25,1345,25,"_refreshSession"],[1685,26,1345,26,"currentSession"],[1685,40,1345,40],[1685,42,1345,42],[1686,6,1346,8],[1686,10,1346,12],[1687,8,1347,12],[1687,15,1347,19],[1687,21,1347,25],[1687,25,1347,29],[1687,26,1347,30,"_useSession"],[1687,37,1347,41],[1687,38,1347,42],[1687,44,1347,49,"result"],[1687,50,1347,55],[1687,54,1347,60],[1688,10,1348,16],[1688,14,1348,20,"_a"],[1688,16,1348,22],[1689,10,1349,16],[1689,14,1349,20],[1689,15,1349,21,"currentSession"],[1689,29,1349,35],[1689,31,1349,37],[1690,12,1350,20],[1690,18,1350,26],[1691,14,1350,28,"data"],[1691,18,1350,32],[1692,14,1350,34,"error"],[1693,12,1350,40],[1693,13,1350,41],[1693,16,1350,44,"result"],[1693,22,1350,50],[1694,12,1351,20],[1694,16,1351,24,"error"],[1694,21,1351,29],[1694,23,1351,31],[1695,14,1352,24],[1695,20,1352,30,"error"],[1695,25,1352,35],[1696,12,1353,20],[1697,12,1354,20,"currentSession"],[1697,26,1354,34],[1697,29,1354,37],[1697,30,1354,38,"_a"],[1697,32,1354,40],[1697,35,1354,43,"data"],[1697,39,1354,47],[1697,40,1354,48,"session"],[1697,47,1354,55],[1697,53,1354,61],[1697,57,1354,65],[1697,61,1354,69,"_a"],[1697,63,1354,71],[1697,68,1354,76],[1697,73,1354,81],[1697,74,1354,82],[1697,77,1354,85,"_a"],[1697,79,1354,87],[1697,82,1354,90,"undefined"],[1697,91,1354,99],[1698,10,1355,16],[1699,10,1356,16],[1699,14,1356,20],[1699,16,1356,22,"currentSession"],[1699,30,1356,36],[1699,35,1356,41],[1699,39,1356,45],[1699,43,1356,49,"currentSession"],[1699,57,1356,63],[1699,62,1356,68],[1699,67,1356,73],[1699,68,1356,74],[1699,71,1356,77],[1699,76,1356,82],[1699,77,1356,83],[1699,80,1356,86,"currentSession"],[1699,94,1356,100],[1699,95,1356,101,"refresh_token"],[1699,108,1356,114],[1699,109,1356,115],[1699,111,1356,117],[1700,12,1357,20],[1700,18,1357,26],[1700,22,1357,30,"AuthSessionMissingError"],[1700,32,1357,53],[1700,33,1357,53,"AuthSessionMissingError"],[1700,56,1357,53],[1700,57,1357,54],[1700,58,1357,55],[1701,10,1358,16],[1702,10,1359,16],[1702,16,1359,22],[1703,12,1359,24,"data"],[1703,16,1359,28],[1703,18,1359,30,"session"],[1703,25,1359,37],[1704,12,1359,39,"error"],[1705,10,1359,45],[1705,11,1359,46],[1705,14,1359,49],[1705,20,1359,55],[1705,24,1359,59],[1705,25,1359,60,"_callRefreshToken"],[1705,42,1359,77],[1705,43,1359,78,"currentSession"],[1705,57,1359,92],[1705,58,1359,93,"refresh_token"],[1705,71,1359,106],[1705,72,1359,107],[1706,10,1360,16],[1706,14,1360,20,"error"],[1706,19,1360,25],[1706,21,1360,27],[1707,12,1361,20],[1707,19,1361,27],[1708,14,1361,29,"data"],[1708,18,1361,33],[1708,20,1361,35],[1709,16,1361,37,"user"],[1709,20,1361,41],[1709,22,1361,43],[1709,26,1361,47],[1710,16,1361,49,"session"],[1710,23,1361,56],[1710,25,1361,58],[1711,14,1361,63],[1711,15,1361,64],[1712,14,1361,66,"error"],[1712,19,1361,71],[1712,21,1361,73,"error"],[1713,12,1361,79],[1713,13,1361,80],[1714,10,1362,16],[1715,10,1363,16],[1715,14,1363,20],[1715,15,1363,21,"session"],[1715,22,1363,28],[1715,24,1363,30],[1716,12,1364,20],[1716,19,1364,27],[1717,14,1364,29,"data"],[1717,18,1364,33],[1717,20,1364,35],[1718,16,1364,37,"user"],[1718,20,1364,41],[1718,22,1364,43],[1718,26,1364,47],[1719,16,1364,49,"session"],[1719,23,1364,56],[1719,25,1364,58],[1720,14,1364,63],[1720,15,1364,64],[1721,14,1364,66,"error"],[1721,19,1364,71],[1721,21,1364,73],[1722,12,1364,78],[1722,13,1364,79],[1723,10,1365,16],[1724,10,1366,16],[1724,17,1366,23],[1725,12,1366,25,"data"],[1725,16,1366,29],[1725,18,1366,31],[1726,14,1366,33,"user"],[1726,18,1366,37],[1726,20,1366,39,"session"],[1726,27,1366,46],[1726,28,1366,47,"user"],[1726,32,1366,51],[1727,14,1366,53,"session"],[1728,12,1366,61],[1728,13,1366,62],[1729,12,1366,64,"error"],[1729,17,1366,69],[1729,19,1366,71],[1730,10,1366,76],[1730,11,1366,77],[1731,8,1367,12],[1731,9,1367,13],[1731,10,1367,14],[1732,6,1368,8],[1732,7,1368,9],[1732,8,1369,8],[1732,15,1369,15,"error"],[1732,20,1369,20],[1732,22,1369,22],[1733,8,1370,12],[1733,12,1370,16],[1733,16,1370,16,"isAuthError"],[1733,26,1370,27],[1733,27,1370,27,"isAuthError"],[1733,38,1370,27],[1733,40,1370,28,"error"],[1733,45,1370,33],[1733,46,1370,34],[1733,48,1370,36],[1734,10,1371,16],[1734,17,1371,23],[1735,12,1371,25,"data"],[1735,16,1371,29],[1735,18,1371,31],[1736,14,1371,33,"user"],[1736,18,1371,37],[1736,20,1371,39],[1736,24,1371,43],[1737,14,1371,45,"session"],[1737,21,1371,52],[1737,23,1371,54],[1738,12,1371,59],[1738,13,1371,60],[1739,12,1371,62,"error"],[1740,10,1371,68],[1740,11,1371,69],[1741,8,1372,12],[1742,8,1373,12],[1742,14,1373,18,"error"],[1742,19,1373,23],[1743,6,1374,8],[1744,4,1375,4],[1745,4,1376,4],[1746,0,1377,0],[1747,0,1378,0],[1748,4,1379,4],[1748,10,1379,10,"_getSessionFromURL"],[1748,28,1379,28,"_getSessionFromURL"],[1748,29,1379,29,"params"],[1748,35,1379,35],[1748,37,1379,37,"callbackUrlType"],[1748,52,1379,52],[1748,54,1379,54],[1749,6,1380,8],[1749,10,1380,12],[1750,8,1381,12],[1750,12,1381,16],[1750,13,1381,17],[1750,17,1381,17,"isBrowser"],[1750,28,1381,26],[1750,29,1381,26,"isBrowser"],[1750,38,1381,26],[1750,40,1381,27],[1750,41,1381,28],[1750,43,1382,16],[1750,49,1382,22],[1750,53,1382,26,"AuthImplicitGrantRedirectError"],[1750,63,1382,56],[1750,64,1382,56,"AuthImplicitGrantRedirectError"],[1750,94,1382,56],[1750,95,1382,57],[1750,117,1382,79],[1750,118,1382,80],[1751,8,1383,12],[1752,8,1384,12],[1752,12,1384,16,"params"],[1752,18,1384,22],[1752,19,1384,23,"error"],[1752,24,1384,28],[1752,28,1384,32,"params"],[1752,34,1384,38],[1752,35,1384,39,"error_description"],[1752,52,1384,56],[1752,56,1384,60,"params"],[1752,62,1384,66],[1752,63,1384,67,"error_code"],[1752,73,1384,77],[1752,75,1384,79],[1753,10,1385,16],[1754,10,1386,16],[1755,10,1387,16],[1755,16,1387,22],[1755,20,1387,26,"AuthImplicitGrantRedirectError"],[1755,30,1387,56],[1755,31,1387,56,"AuthImplicitGrantRedirectError"],[1755,61,1387,56],[1755,62,1387,57,"params"],[1755,68,1387,63],[1755,69,1387,64,"error_description"],[1755,86,1387,81],[1755,90,1387,85],[1755,139,1387,134],[1755,141,1387,136],[1756,12,1388,20,"error"],[1756,17,1388,25],[1756,19,1388,27,"params"],[1756,25,1388,33],[1756,26,1388,34,"error"],[1756,31,1388,39],[1756,35,1388,43],[1756,54,1388,62],[1757,12,1389,20,"code"],[1757,16,1389,24],[1757,18,1389,26,"params"],[1757,24,1389,32],[1757,25,1389,33,"error_code"],[1757,35,1389,43],[1757,39,1389,47],[1758,10,1390,16],[1758,11,1390,17],[1758,12,1390,18],[1759,8,1391,12],[1760,8,1392,12],[1761,8,1393,12],[1761,16,1393,20,"callbackUrlType"],[1761,31,1393,35],[1762,10,1394,16],[1762,15,1394,21],[1762,25,1394,31],[1763,12,1395,20],[1763,16,1395,24],[1763,20,1395,28],[1763,21,1395,29,"flowType"],[1763,29,1395,37],[1763,34,1395,42],[1763,40,1395,48],[1763,42,1395,50],[1764,14,1396,24],[1764,20,1396,30],[1764,24,1396,34,"AuthPKCEGrantCodeExchangeError"],[1764,34,1396,64],[1764,35,1396,64,"AuthPKCEGrantCodeExchangeError"],[1764,65,1396,64],[1764,66,1396,65],[1764,94,1396,93],[1764,95,1396,94],[1765,12,1397,20],[1766,12,1398,20],[1767,10,1399,16],[1767,15,1399,21],[1767,21,1399,27],[1768,12,1400,20],[1768,16,1400,24],[1768,20,1400,28],[1768,21,1400,29,"flowType"],[1768,29,1400,37],[1768,34,1400,42],[1768,44,1400,52],[1768,46,1400,54],[1769,14,1401,24],[1769,20,1401,30],[1769,24,1401,34,"AuthImplicitGrantRedirectError"],[1769,34,1401,64],[1769,35,1401,64,"AuthImplicitGrantRedirectError"],[1769,65,1401,64],[1769,66,1401,65],[1769,104,1401,103],[1769,105,1401,104],[1770,12,1402,20],[1771,12,1403,20],[1772,10,1404,16],[1773,10,1405,16],[1774,8,1406,12],[1775,8,1407,12],[1776,8,1408,12],[1776,12,1408,16,"callbackUrlType"],[1776,27,1408,31],[1776,32,1408,36],[1776,38,1408,42],[1776,40,1408,44],[1777,10,1409,16],[1777,14,1409,20],[1777,15,1409,21,"_debug"],[1777,21,1409,27],[1777,22,1409,28],[1777,38,1409,44],[1777,40,1409,46],[1777,47,1409,53],[1777,49,1409,55],[1777,63,1409,69],[1777,65,1409,71],[1777,69,1409,75],[1777,70,1409,76],[1778,10,1410,16],[1778,14,1410,20],[1778,15,1410,21,"params"],[1778,21,1410,27],[1778,22,1410,28,"code"],[1778,26,1410,32],[1778,28,1411,20],[1778,34,1411,26],[1778,38,1411,30,"AuthPKCEGrantCodeExchangeError"],[1778,48,1411,60],[1778,49,1411,60,"AuthPKCEGrantCodeExchangeError"],[1778,79,1411,60],[1778,80,1411,61],[1778,99,1411,80],[1778,100,1411,81],[1779,10,1412,16],[1779,16,1412,22],[1780,12,1412,24,"data"],[1780,16,1412,28],[1781,12,1412,30,"error"],[1782,10,1412,36],[1782,11,1412,37],[1782,14,1412,40],[1782,20,1412,46],[1782,24,1412,50],[1782,25,1412,51,"_exchangeCodeForSession"],[1782,48,1412,74],[1782,49,1412,75,"params"],[1782,55,1412,81],[1782,56,1412,82,"code"],[1782,60,1412,86],[1782,61,1412,87],[1783,10,1413,16],[1783,14,1413,20,"error"],[1783,19,1413,25],[1783,21,1414,20],[1783,27,1414,26,"error"],[1783,32,1414,31],[1784,10,1415,16],[1784,16,1415,22,"url"],[1784,19,1415,25],[1784,22,1415,28],[1784,26,1415,32,"URL"],[1784,29,1415,35],[1784,30,1415,36,"window"],[1784,36,1415,42],[1784,37,1415,43,"location"],[1784,45,1415,51],[1784,46,1415,52,"href"],[1784,50,1415,56],[1784,51,1415,57],[1785,10,1416,16,"url"],[1785,13,1416,19],[1785,14,1416,20,"searchParams"],[1785,26,1416,32],[1785,27,1416,33,"delete"],[1785,33,1416,39],[1785,34,1416,40],[1785,40,1416,46],[1785,41,1416,47],[1786,10,1417,16,"window"],[1786,16,1417,22],[1786,17,1417,23,"history"],[1786,24,1417,30],[1786,25,1417,31,"replaceState"],[1786,37,1417,43],[1786,38,1417,44,"window"],[1786,44,1417,50],[1786,45,1417,51,"history"],[1786,52,1417,58],[1786,53,1417,59,"state"],[1786,58,1417,64],[1786,60,1417,66],[1786,62,1417,68],[1786,64,1417,70,"url"],[1786,67,1417,73],[1786,68,1417,74,"toString"],[1786,76,1417,82],[1786,77,1417,83],[1786,78,1417,84],[1786,79,1417,85],[1787,10,1418,16],[1787,17,1418,23],[1788,12,1418,25,"data"],[1788,16,1418,29],[1788,18,1418,31],[1789,14,1418,33,"session"],[1789,21,1418,40],[1789,23,1418,42,"data"],[1789,27,1418,46],[1789,28,1418,47,"session"],[1789,35,1418,54],[1790,14,1418,56,"redirectType"],[1790,26,1418,68],[1790,28,1418,70],[1791,12,1418,75],[1791,13,1418,76],[1792,12,1418,78,"error"],[1792,17,1418,83],[1792,19,1418,85],[1793,10,1418,90],[1793,11,1418,91],[1794,8,1419,12],[1795,8,1420,12],[1795,14,1420,18],[1796,10,1420,20,"provider_token"],[1796,24,1420,34],[1797,10,1420,36,"provider_refresh_token"],[1797,32,1420,58],[1798,10,1420,60,"access_token"],[1798,22,1420,72],[1799,10,1420,74,"refresh_token"],[1799,23,1420,87],[1800,10,1420,89,"expires_in"],[1800,20,1420,99],[1801,10,1420,101,"expires_at"],[1801,20,1420,111],[1802,10,1420,113,"token_type"],[1803,8,1420,125],[1803,9,1420,126],[1803,12,1420,129,"params"],[1803,18,1420,135],[1804,8,1421,12],[1804,12,1421,16],[1804,13,1421,17,"access_token"],[1804,25,1421,29],[1804,29,1421,33],[1804,30,1421,34,"expires_in"],[1804,40,1421,44],[1804,44,1421,48],[1804,45,1421,49,"refresh_token"],[1804,58,1421,62],[1804,62,1421,66],[1804,63,1421,67,"token_type"],[1804,73,1421,77],[1804,75,1421,79],[1805,10,1422,16],[1805,16,1422,22],[1805,20,1422,26,"AuthImplicitGrantRedirectError"],[1805,30,1422,56],[1805,31,1422,56,"AuthImplicitGrantRedirectError"],[1805,61,1422,56],[1805,62,1422,57],[1805,89,1422,84],[1805,90,1422,85],[1806,8,1423,12],[1807,8,1424,12],[1807,14,1424,18,"timeNow"],[1807,21,1424,25],[1807,24,1424,28,"Math"],[1807,28,1424,32],[1807,29,1424,33,"round"],[1807,34,1424,38],[1807,35,1424,39,"Date"],[1807,39,1424,43],[1807,40,1424,44,"now"],[1807,43,1424,47],[1807,44,1424,48],[1807,45,1424,49],[1807,48,1424,52],[1807,52,1424,56],[1807,53,1424,57],[1808,8,1425,12],[1808,14,1425,18,"expiresIn"],[1808,23,1425,27],[1808,26,1425,30,"parseInt"],[1808,34,1425,38],[1808,35,1425,39,"expires_in"],[1808,45,1425,49],[1808,46,1425,50],[1809,8,1426,12],[1809,12,1426,16,"expiresAt"],[1809,21,1426,25],[1809,24,1426,28,"timeNow"],[1809,31,1426,35],[1809,34,1426,38,"expiresIn"],[1809,43,1426,47],[1810,8,1427,12],[1810,12,1427,16,"expires_at"],[1810,22,1427,26],[1810,24,1427,28],[1811,10,1428,16,"expiresAt"],[1811,19,1428,25],[1811,22,1428,28,"parseInt"],[1811,30,1428,36],[1811,31,1428,37,"expires_at"],[1811,41,1428,47],[1811,42,1428,48],[1812,8,1429,12],[1813,8,1430,12],[1813,14,1430,18,"actuallyExpiresIn"],[1813,31,1430,35],[1813,34,1430,38,"expiresAt"],[1813,43,1430,47],[1813,46,1430,50,"timeNow"],[1813,53,1430,57],[1814,8,1431,12],[1814,12,1431,16,"actuallyExpiresIn"],[1814,29,1431,33],[1814,32,1431,36],[1814,36,1431,40],[1814,40,1431,44,"AUTO_REFRESH_TICK_DURATION_MS"],[1814,53,1431,73],[1814,54,1431,73,"AUTO_REFRESH_TICK_DURATION_MS"],[1814,83,1431,73],[1814,85,1431,75],[1815,10,1432,16,"console"],[1815,17,1432,23],[1815,18,1432,24,"warn"],[1815,22,1432,28],[1815,23,1432,29],[1815,88,1432,94,"actuallyExpiresIn"],[1815,105,1432,111],[1815,138,1432,144,"expiresIn"],[1815,147,1432,153],[1815,150,1432,156],[1815,151,1432,157],[1816,8,1433,12],[1817,8,1434,12],[1817,14,1434,18,"issuedAt"],[1817,22,1434,26],[1817,25,1434,29,"expiresAt"],[1817,34,1434,38],[1817,37,1434,41,"expiresIn"],[1817,46,1434,50],[1818,8,1435,12],[1818,12,1435,16,"timeNow"],[1818,19,1435,23],[1818,22,1435,26,"issuedAt"],[1818,30,1435,34],[1818,34,1435,38],[1818,37,1435,41],[1818,39,1435,43],[1819,10,1436,16,"console"],[1819,17,1436,23],[1819,18,1436,24,"warn"],[1819,22,1436,28],[1819,23,1436,29],[1819,120,1436,126],[1819,122,1436,128,"issuedAt"],[1819,130,1436,136],[1819,132,1436,138,"expiresAt"],[1819,141,1436,147],[1819,143,1436,149,"timeNow"],[1819,150,1436,156],[1819,151,1436,157],[1820,8,1437,12],[1820,9,1437,13],[1820,15,1438,17],[1820,19,1438,21,"timeNow"],[1820,26,1438,28],[1820,29,1438,31,"issuedAt"],[1820,37,1438,39],[1820,40,1438,42],[1820,41,1438,43],[1820,43,1438,45],[1821,10,1439,16,"console"],[1821,17,1439,23],[1821,18,1439,24,"warn"],[1821,22,1439,28],[1821,23,1439,29],[1821,133,1439,139],[1821,135,1439,141,"issuedAt"],[1821,143,1439,149],[1821,145,1439,151,"expiresAt"],[1821,154,1439,160],[1821,156,1439,162,"timeNow"],[1821,163,1439,169],[1821,164,1439,170],[1822,8,1440,12],[1823,8,1441,12],[1823,14,1441,18],[1824,10,1441,20,"data"],[1824,14,1441,24],[1825,10,1441,26,"error"],[1826,8,1441,32],[1826,9,1441,33],[1826,12,1441,36],[1826,18,1441,42],[1826,22,1441,46],[1826,23,1441,47,"_getUser"],[1826,31,1441,55],[1826,32,1441,56,"access_token"],[1826,44,1441,68],[1826,45,1441,69],[1827,8,1442,12],[1827,12,1442,16,"error"],[1827,17,1442,21],[1827,19,1443,16],[1827,25,1443,22,"error"],[1827,30,1443,27],[1828,8,1444,12],[1828,14,1444,18,"session"],[1828,21,1444,25],[1828,24,1444,28],[1829,10,1445,16,"provider_token"],[1829,24,1445,30],[1830,10,1446,16,"provider_refresh_token"],[1830,32,1446,38],[1831,10,1447,16,"access_token"],[1831,22,1447,28],[1832,10,1448,16,"expires_in"],[1832,20,1448,26],[1832,22,1448,28,"expiresIn"],[1832,31,1448,37],[1833,10,1449,16,"expires_at"],[1833,20,1449,26],[1833,22,1449,28,"expiresAt"],[1833,31,1449,37],[1834,10,1450,16,"refresh_token"],[1834,23,1450,29],[1835,10,1451,16,"token_type"],[1835,20,1451,26],[1835,22,1451,28,"token_type"],[1835,32,1451,38],[1836,10,1452,16,"user"],[1836,14,1452,20],[1836,16,1452,22,"data"],[1836,20,1452,26],[1836,21,1452,27,"user"],[1837,8,1453,12],[1837,9,1453,13],[1838,8,1454,12],[1839,8,1455,12,"window"],[1839,14,1455,18],[1839,15,1455,19,"location"],[1839,23,1455,27],[1839,24,1455,28,"hash"],[1839,28,1455,32],[1839,31,1455,35],[1839,33,1455,37],[1840,8,1456,12],[1840,12,1456,16],[1840,13,1456,17,"_debug"],[1840,19,1456,23],[1840,20,1456,24],[1840,43,1456,47],[1840,45,1456,49],[1840,76,1456,80],[1840,77,1456,81],[1841,8,1457,12],[1841,15,1457,19],[1842,10,1457,21,"data"],[1842,14,1457,25],[1842,16,1457,27],[1843,12,1457,29,"session"],[1843,19,1457,36],[1844,12,1457,38,"redirectType"],[1844,24,1457,50],[1844,26,1457,52,"params"],[1844,32,1457,58],[1844,33,1457,59,"type"],[1845,10,1457,64],[1845,11,1457,65],[1846,10,1457,67,"error"],[1846,15,1457,72],[1846,17,1457,74],[1847,8,1457,79],[1847,9,1457,80],[1848,6,1458,8],[1848,7,1458,9],[1848,8,1459,8],[1848,15,1459,15,"error"],[1848,20,1459,20],[1848,22,1459,22],[1849,8,1460,12],[1849,12,1460,16],[1849,16,1460,16,"isAuthError"],[1849,26,1460,27],[1849,27,1460,27,"isAuthError"],[1849,38,1460,27],[1849,40,1460,28,"error"],[1849,45,1460,33],[1849,46,1460,34],[1849,48,1460,36],[1850,10,1461,16],[1850,17,1461,23],[1851,12,1461,25,"data"],[1851,16,1461,29],[1851,18,1461,31],[1852,14,1461,33,"session"],[1852,21,1461,40],[1852,23,1461,42],[1852,27,1461,46],[1853,14,1461,48,"redirectType"],[1853,26,1461,60],[1853,28,1461,62],[1854,12,1461,67],[1854,13,1461,68],[1855,12,1461,70,"error"],[1856,10,1461,76],[1856,11,1461,77],[1857,8,1462,12],[1858,8,1463,12],[1858,14,1463,18,"error"],[1858,19,1463,23],[1859,6,1464,8],[1860,4,1465,4],[1861,4,1466,4],[1862,0,1467,0],[1863,0,1468,0],[1864,4,1469,4,"_isImplicitGrantCallback"],[1864,28,1469,28,"_isImplicitGrantCallback"],[1864,29,1469,29,"params"],[1864,35,1469,35],[1864,37,1469,37],[1865,6,1470,8],[1865,13,1470,15,"Boolean"],[1865,20,1470,22],[1865,21,1470,23,"params"],[1865,27,1470,29],[1865,28,1470,30,"access_token"],[1865,40,1470,42],[1865,44,1470,46,"params"],[1865,50,1470,52],[1865,51,1470,53,"error_description"],[1865,68,1470,70],[1865,69,1470,71],[1866,4,1471,4],[1867,4,1472,4],[1868,0,1473,0],[1869,0,1474,0],[1870,4,1475,4],[1870,10,1475,10,"_isPKCECallback"],[1870,25,1475,25,"_isPKCECallback"],[1870,26,1475,26,"params"],[1870,32,1475,32],[1870,34,1475,34],[1871,6,1476,8],[1871,12,1476,14,"currentStorageContent"],[1871,33,1476,35],[1871,36,1476,38],[1871,42,1476,44],[1871,46,1476,44,"getItemAsync"],[1871,57,1476,56],[1871,58,1476,56,"getItemAsync"],[1871,70,1476,56],[1871,72,1476,57],[1871,76,1476,61],[1871,77,1476,62,"storage"],[1871,84,1476,69],[1871,86,1476,71],[1871,89,1476,74],[1871,93,1476,78],[1871,94,1476,79,"storageKey"],[1871,104,1476,89],[1871,120,1476,105],[1871,121,1476,106],[1872,6,1477,8],[1872,13,1477,15],[1872,14,1477,16],[1872,16,1477,18,"params"],[1872,22,1477,24],[1872,23,1477,25,"code"],[1872,27,1477,29],[1872,31,1477,33,"currentStorageContent"],[1872,52,1477,54],[1872,53,1477,55],[1873,4,1478,4],[1874,4,1479,4],[1875,0,1480,0],[1876,0,1481,0],[1877,0,1482,0],[1878,0,1483,0],[1879,0,1484,0],[1880,0,1485,0],[1881,0,1486,0],[1882,4,1487,4],[1882,10,1487,10,"signOut"],[1882,17,1487,17,"signOut"],[1882,18,1487,18,"options"],[1882,25,1487,25],[1882,28,1487,28],[1883,6,1487,30,"scope"],[1883,11,1487,35],[1883,13,1487,37],[1884,4,1487,46],[1884,5,1487,47],[1884,7,1487,49],[1885,6,1488,8],[1885,12,1488,14],[1885,16,1488,18],[1885,17,1488,19,"initializePromise"],[1885,34,1488,36],[1886,6,1489,8],[1886,13,1489,15],[1886,19,1489,21],[1886,23,1489,25],[1886,24,1489,26,"_acquireLock"],[1886,36,1489,38],[1886,37,1489,39],[1886,38,1489,40],[1886,39,1489,41],[1886,41,1489,43],[1886,53,1489,55],[1887,8,1490,12],[1887,15,1490,19],[1887,21,1490,25],[1887,25,1490,29],[1887,26,1490,30,"_signOut"],[1887,34,1490,38],[1887,35,1490,39,"options"],[1887,42,1490,46],[1887,43,1490,47],[1888,6,1491,8],[1888,7,1491,9],[1888,8,1491,10],[1889,4,1492,4],[1890,4,1493,4],[1890,10,1493,10,"_signOut"],[1890,18,1493,18,"_signOut"],[1890,19,1493,19],[1891,6,1493,21,"scope"],[1892,4,1493,27],[1892,5,1493,28],[1892,8,1493,31],[1893,6,1493,33,"scope"],[1893,11,1493,38],[1893,13,1493,40],[1894,4,1493,49],[1894,5,1493,50],[1894,7,1493,52],[1895,6,1494,8],[1895,13,1494,15],[1895,19,1494,21],[1895,23,1494,25],[1895,24,1494,26,"_useSession"],[1895,35,1494,37],[1895,36,1494,38],[1895,42,1494,45,"result"],[1895,48,1494,51],[1895,52,1494,56],[1896,8,1495,12],[1896,12,1495,16,"_a"],[1896,14,1495,18],[1897,8,1496,12],[1897,14,1496,18],[1898,10,1496,20,"data"],[1898,14,1496,24],[1899,10,1496,26,"error"],[1899,15,1496,31],[1899,17,1496,33,"sessionError"],[1900,8,1496,46],[1900,9,1496,47],[1900,12,1496,50,"result"],[1900,18,1496,56],[1901,8,1497,12],[1901,12,1497,16,"sessionError"],[1901,24,1497,28],[1901,26,1497,30],[1902,10,1498,16],[1902,17,1498,23],[1903,12,1498,25,"error"],[1903,17,1498,30],[1903,19,1498,32,"sessionError"],[1904,10,1498,45],[1904,11,1498,46],[1905,8,1499,12],[1906,8,1500,12],[1906,14,1500,18,"accessToken"],[1906,25,1500,29],[1906,28,1500,32],[1906,29,1500,33,"_a"],[1906,31,1500,35],[1906,34,1500,38,"data"],[1906,38,1500,42],[1906,39,1500,43,"session"],[1906,46,1500,50],[1906,52,1500,56],[1906,56,1500,60],[1906,60,1500,64,"_a"],[1906,62,1500,66],[1906,67,1500,71],[1906,72,1500,76],[1906,73,1500,77],[1906,76,1500,80],[1906,81,1500,85],[1906,82,1500,86],[1906,85,1500,89,"_a"],[1906,87,1500,91],[1906,88,1500,92,"access_token"],[1906,100,1500,104],[1907,8,1501,12],[1907,12,1501,16,"accessToken"],[1907,23,1501,27],[1907,25,1501,29],[1908,10,1502,16],[1908,16,1502,22],[1909,12,1502,24,"error"],[1910,10,1502,30],[1910,11,1502,31],[1910,14,1502,34],[1910,20,1502,40],[1910,24,1502,44],[1910,25,1502,45,"admin"],[1910,30,1502,50],[1910,31,1502,51,"signOut"],[1910,38,1502,58],[1910,39,1502,59,"accessToken"],[1910,50,1502,70],[1910,52,1502,72,"scope"],[1910,57,1502,77],[1910,58,1502,78],[1911,10,1503,16],[1911,14,1503,20,"error"],[1911,19,1503,25],[1911,21,1503,27],[1912,12,1504,20],[1913,12,1505,20],[1914,12,1506,20],[1914,16,1506,24],[1914,18,1506,26],[1914,22,1506,26,"isAuthApiError"],[1914,32,1506,40],[1914,33,1506,40,"isAuthApiError"],[1914,47,1506,40],[1914,49,1506,41,"error"],[1914,54,1506,46],[1914,55,1506,47],[1914,60,1507,25,"error"],[1914,65,1507,30],[1914,66,1507,31,"status"],[1914,72,1507,37],[1914,77,1507,42],[1914,80,1507,45],[1914,84,1507,49,"error"],[1914,89,1507,54],[1914,90,1507,55,"status"],[1914,96,1507,61],[1914,101,1507,66],[1914,104,1507,69],[1914,108,1507,73,"error"],[1914,113,1507,78],[1914,114,1507,79,"status"],[1914,120,1507,85],[1914,125,1507,90],[1914,128,1507,93],[1914,129,1507,94],[1914,130,1507,95],[1914,132,1507,97],[1915,14,1508,24],[1915,21,1508,31],[1916,16,1508,33,"error"],[1917,14,1508,39],[1917,15,1508,40],[1918,12,1509,20],[1919,10,1510,16],[1920,8,1511,12],[1921,8,1512,12],[1921,12,1512,16,"scope"],[1921,17,1512,21],[1921,22,1512,26],[1921,30,1512,34],[1921,32,1512,36],[1922,10,1513,16],[1922,16,1513,22],[1922,20,1513,26],[1922,21,1513,27,"_removeSession"],[1922,35,1513,41],[1922,36,1513,42],[1922,37,1513,43],[1923,10,1514,16],[1923,16,1514,22],[1923,20,1514,22,"removeItemAsync"],[1923,31,1514,37],[1923,32,1514,37,"removeItemAsync"],[1923,47,1514,37],[1923,49,1514,38],[1923,53,1514,42],[1923,54,1514,43,"storage"],[1923,61,1514,50],[1923,63,1514,52],[1923,66,1514,55],[1923,70,1514,59],[1923,71,1514,60,"storageKey"],[1923,81,1514,70],[1923,97,1514,86],[1923,98,1514,87],[1924,8,1515,12],[1925,8,1516,12],[1925,15,1516,19],[1926,10,1516,21,"error"],[1926,15,1516,26],[1926,17,1516,28],[1927,8,1516,33],[1927,9,1516,34],[1928,6,1517,8],[1928,7,1517,9],[1928,8,1517,10],[1929,4,1518,4],[1930,4,1519,4,"onAuthStateChange"],[1930,21,1519,21,"onAuthStateChange"],[1930,22,1519,22,"callback"],[1930,30,1519,30],[1930,32,1519,32],[1931,6,1520,8],[1931,12,1520,14,"id"],[1931,14,1520,16],[1931,17,1520,19],[1931,21,1520,19,"uuid"],[1931,32,1520,23],[1931,33,1520,23,"uuid"],[1931,37,1520,23],[1931,39,1520,24],[1931,40,1520,25],[1932,6,1521,8],[1932,12,1521,14,"subscription"],[1932,24,1521,26],[1932,27,1521,29],[1933,8,1522,12,"id"],[1933,10,1522,14],[1934,8,1523,12,"callback"],[1934,16,1523,20],[1935,8,1524,12,"unsubscribe"],[1935,19,1524,23],[1935,21,1524,25,"unsubscribe"],[1935,22,1524,25],[1935,27,1524,31],[1936,10,1525,16],[1936,14,1525,20],[1936,15,1525,21,"_debug"],[1936,21,1525,27],[1936,22,1525,28],[1936,38,1525,44],[1936,40,1525,46],[1936,79,1525,85],[1936,81,1525,87,"id"],[1936,83,1525,89],[1936,84,1525,90],[1937,10,1526,16],[1937,14,1526,20],[1937,15,1526,21,"stateChangeEmitters"],[1937,34,1526,40],[1937,35,1526,41,"delete"],[1937,41,1526,47],[1937,42,1526,48,"id"],[1937,44,1526,50],[1937,45,1526,51],[1938,8,1527,12],[1939,6,1528,8],[1939,7,1528,9],[1940,6,1529,8],[1940,10,1529,12],[1940,11,1529,13,"_debug"],[1940,17,1529,19],[1940,18,1529,20],[1940,40,1529,42],[1940,42,1529,44],[1940,71,1529,73],[1940,73,1529,75,"id"],[1940,75,1529,77],[1940,76,1529,78],[1941,6,1530,8],[1941,10,1530,12],[1941,11,1530,13,"stateChangeEmitters"],[1941,30,1530,32],[1941,31,1530,33,"set"],[1941,34,1530,36],[1941,35,1530,37,"id"],[1941,37,1530,39],[1941,39,1530,41,"subscription"],[1941,51,1530,53],[1941,52,1530,54],[1942,6,1531,8],[1942,7,1531,9],[1942,19,1531,21],[1943,8,1532,12],[1943,14,1532,18],[1943,18,1532,22],[1943,19,1532,23,"initializePromise"],[1943,36,1532,40],[1944,8,1533,12],[1944,14,1533,18],[1944,18,1533,22],[1944,19,1533,23,"_acquireLock"],[1944,31,1533,35],[1944,32,1533,36],[1944,33,1533,37],[1944,34,1533,38],[1944,36,1533,40],[1944,48,1533,52],[1945,10,1534,16],[1945,14,1534,20],[1945,15,1534,21,"_emitInitialSession"],[1945,34,1534,40],[1945,35,1534,41,"id"],[1945,37,1534,43],[1945,38,1534,44],[1946,8,1535,12],[1946,9,1535,13],[1946,10,1535,14],[1947,6,1536,8],[1947,7,1536,9],[1947,9,1536,11],[1947,10,1536,12],[1948,6,1537,8],[1948,13,1537,15],[1949,8,1537,17,"data"],[1949,12,1537,21],[1949,14,1537,23],[1950,10,1537,25,"subscription"],[1951,8,1537,38],[1952,6,1537,40],[1952,7,1537,41],[1953,4,1538,4],[1954,4,1539,4],[1954,10,1539,10,"_emitInitialSession"],[1954,29,1539,29,"_emitInitialSession"],[1954,30,1539,30,"id"],[1954,32,1539,32],[1954,34,1539,34],[1955,6,1540,8],[1955,13,1540,15],[1955,19,1540,21],[1955,23,1540,25],[1955,24,1540,26,"_useSession"],[1955,35,1540,37],[1955,36,1540,38],[1955,42,1540,45,"result"],[1955,48,1540,51],[1955,52,1540,56],[1956,8,1541,12],[1956,12,1541,16,"_a"],[1956,14,1541,18],[1956,16,1541,20,"_b"],[1956,18,1541,22],[1957,8,1542,12],[1957,12,1542,16],[1958,10,1543,16],[1958,16,1543,22],[1959,12,1543,24,"data"],[1959,16,1543,28],[1959,18,1543,30],[1960,14,1543,32,"session"],[1961,12,1543,40],[1961,13,1543,41],[1962,12,1543,43,"error"],[1963,10,1543,50],[1963,11,1543,51],[1963,14,1543,54,"result"],[1963,20,1543,60],[1964,10,1544,16],[1964,14,1544,20,"error"],[1964,19,1544,25],[1964,21,1545,20],[1964,27,1545,26,"error"],[1964,32,1545,31],[1965,10,1546,16],[1965,17,1546,23],[1965,18,1546,24,"_a"],[1965,20,1546,26],[1965,23,1546,29],[1965,27,1546,33],[1965,28,1546,34,"stateChangeEmitters"],[1965,47,1546,53],[1965,48,1546,54,"get"],[1965,51,1546,57],[1965,52,1546,58,"id"],[1965,54,1546,60],[1965,55,1546,61],[1965,61,1546,67],[1965,65,1546,71],[1965,69,1546,75,"_a"],[1965,71,1546,77],[1965,76,1546,82],[1965,81,1546,87],[1965,82,1546,88],[1965,85,1546,91],[1965,90,1546,96],[1965,91,1546,97],[1965,94,1546,100,"_a"],[1965,96,1546,102],[1965,97,1546,103,"callback"],[1965,105,1546,111],[1965,106,1546,112],[1965,123,1546,129],[1965,125,1546,131,"session"],[1965,132,1546,138],[1965,133,1546,139],[1965,134,1546,140],[1966,10,1547,16],[1966,14,1547,20],[1966,15,1547,21,"_debug"],[1966,21,1547,27],[1966,22,1547,28],[1966,39,1547,45],[1966,41,1547,47],[1966,54,1547,60],[1966,56,1547,62,"id"],[1966,58,1547,64],[1966,60,1547,66],[1966,69,1547,75],[1966,71,1547,77,"session"],[1966,78,1547,84],[1966,79,1547,85],[1967,8,1548,12],[1967,9,1548,13],[1967,10,1549,12],[1967,17,1549,19,"err"],[1967,20,1549,22],[1967,22,1549,24],[1968,10,1550,16],[1968,17,1550,23],[1968,18,1550,24,"_b"],[1968,20,1550,26],[1968,23,1550,29],[1968,27,1550,33],[1968,28,1550,34,"stateChangeEmitters"],[1968,47,1550,53],[1968,48,1550,54,"get"],[1968,51,1550,57],[1968,52,1550,58,"id"],[1968,54,1550,60],[1968,55,1550,61],[1968,61,1550,67],[1968,65,1550,71],[1968,69,1550,75,"_b"],[1968,71,1550,77],[1968,76,1550,82],[1968,81,1550,87],[1968,82,1550,88],[1968,85,1550,91],[1968,90,1550,96],[1968,91,1550,97],[1968,94,1550,100,"_b"],[1968,96,1550,102],[1968,97,1550,103,"callback"],[1968,105,1550,111],[1968,106,1550,112],[1968,123,1550,129],[1968,125,1550,131],[1968,129,1550,135],[1968,130,1550,136],[1968,131,1550,137],[1969,10,1551,16],[1969,14,1551,20],[1969,15,1551,21,"_debug"],[1969,21,1551,27],[1969,22,1551,28],[1969,39,1551,45],[1969,41,1551,47],[1969,54,1551,60],[1969,56,1551,62,"id"],[1969,58,1551,64],[1969,60,1551,66],[1969,67,1551,73],[1969,69,1551,75,"err"],[1969,72,1551,78],[1969,73,1551,79],[1970,10,1552,16,"console"],[1970,17,1552,23],[1970,18,1552,24,"error"],[1970,23,1552,29],[1970,24,1552,30,"err"],[1970,27,1552,33],[1970,28,1552,34],[1971,8,1553,12],[1972,6,1554,8],[1972,7,1554,9],[1972,8,1554,10],[1973,4,1555,4],[1974,4,1556,4],[1975,0,1557,0],[1976,0,1558,0],[1977,0,1559,0],[1978,0,1560,0],[1979,0,1561,0],[1980,0,1562,0],[1981,4,1563,4],[1981,10,1563,10,"resetPasswordForEmail"],[1981,31,1563,31,"resetPasswordForEmail"],[1981,32,1563,32,"email"],[1981,37,1563,37],[1981,39,1563,39,"options"],[1981,46,1563,46],[1981,49,1563,49],[1981,50,1563,50],[1981,51,1563,51],[1981,53,1563,53],[1982,6,1564,8],[1982,10,1564,12,"codeChallenge"],[1982,23,1564,25],[1982,26,1564,28],[1982,30,1564,32],[1983,6,1565,8],[1983,10,1565,12,"codeChallengeMethod"],[1983,29,1565,31],[1983,32,1565,34],[1983,36,1565,38],[1984,6,1566,8],[1984,10,1566,12],[1984,14,1566,16],[1984,15,1566,17,"flowType"],[1984,23,1566,25],[1984,28,1566,30],[1984,34,1566,36],[1984,36,1566,38],[1985,8,1567,12],[1986,8,1568,12],[1986,9,1568,13,"codeChallenge"],[1986,22,1568,26],[1986,24,1568,28,"codeChallengeMethod"],[1986,43,1568,47],[1986,44,1568,48],[1986,47,1568,51],[1986,53,1568,57],[1986,57,1568,57,"getCodeChallengeAndMethod"],[1986,68,1568,82],[1986,69,1568,82,"getCodeChallengeAndMethod"],[1986,94,1568,82],[1986,96,1568,83],[1986,100,1568,87],[1986,101,1568,88,"storage"],[1986,108,1568,95],[1986,110,1568,97],[1986,114,1568,101],[1986,115,1568,102,"storageKey"],[1986,125,1568,112],[1986,127,1568,114],[1986,131,1568,118],[1986,132,1568,119],[1987,8,1569,12],[1987,9,1569,13],[1988,6,1570,8],[1989,6,1571,8],[1989,10,1571,12],[1990,8,1572,12],[1990,15,1572,19],[1990,21,1572,25],[1990,25,1572,25,"_request"],[1990,34,1572,33],[1990,35,1572,33,"_request"],[1990,43,1572,33],[1990,45,1572,34],[1990,49,1572,38],[1990,50,1572,39,"fetch"],[1990,55,1572,44],[1990,57,1572,46],[1990,63,1572,52],[1990,65,1572,54],[1990,68,1572,57],[1990,72,1572,61],[1990,73,1572,62,"url"],[1990,76,1572,65],[1990,86,1572,75],[1990,88,1572,77],[1991,10,1573,16,"body"],[1991,14,1573,20],[1991,16,1573,22],[1992,12,1574,20,"email"],[1992,17,1574,25],[1993,12,1575,20,"code_challenge"],[1993,26,1575,34],[1993,28,1575,36,"codeChallenge"],[1993,41,1575,49],[1994,12,1576,20,"code_challenge_method"],[1994,33,1576,41],[1994,35,1576,43,"codeChallengeMethod"],[1994,54,1576,62],[1995,12,1577,20,"gotrue_meta_security"],[1995,32,1577,40],[1995,34,1577,42],[1996,14,1577,44,"captcha_token"],[1996,27,1577,57],[1996,29,1577,59,"options"],[1996,36,1577,66],[1996,37,1577,67,"captchaToken"],[1997,12,1577,80],[1998,10,1578,16],[1998,11,1578,17],[1999,10,1579,16,"headers"],[1999,17,1579,23],[1999,19,1579,25],[1999,23,1579,29],[1999,24,1579,30,"headers"],[1999,31,1579,37],[2000,10,1580,16,"redirectTo"],[2000,20,1580,26],[2000,22,1580,28,"options"],[2000,29,1580,35],[2000,30,1580,36,"redirectTo"],[2001,8,1581,12],[2001,9,1581,13],[2001,10,1581,14],[2002,6,1582,8],[2002,7,1582,9],[2002,8,1583,8],[2002,15,1583,15,"error"],[2002,20,1583,20],[2002,22,1583,22],[2003,8,1584,12],[2003,12,1584,16],[2003,16,1584,16,"isAuthError"],[2003,26,1584,27],[2003,27,1584,27,"isAuthError"],[2003,38,1584,27],[2003,40,1584,28,"error"],[2003,45,1584,33],[2003,46,1584,34],[2003,48,1584,36],[2004,10,1585,16],[2004,17,1585,23],[2005,12,1585,25,"data"],[2005,16,1585,29],[2005,18,1585,31],[2005,22,1585,35],[2006,12,1585,37,"error"],[2007,10,1585,43],[2007,11,1585,44],[2008,8,1586,12],[2009,8,1587,12],[2009,14,1587,18,"error"],[2009,19,1587,23],[2010,6,1588,8],[2011,4,1589,4],[2012,4,1590,4],[2013,0,1591,0],[2014,0,1592,0],[2015,4,1593,4],[2015,10,1593,10,"getUserIdentities"],[2015,27,1593,27,"getUserIdentities"],[2015,28,1593,27],[2015,30,1593,30],[2016,6,1594,8],[2016,10,1594,12,"_a"],[2016,12,1594,14],[2017,6,1595,8],[2017,10,1595,12],[2018,8,1596,12],[2018,14,1596,18],[2019,10,1596,20,"data"],[2019,14,1596,24],[2020,10,1596,26,"error"],[2021,8,1596,32],[2021,9,1596,33],[2021,12,1596,36],[2021,18,1596,42],[2021,22,1596,46],[2021,23,1596,47,"getUser"],[2021,30,1596,54],[2021,31,1596,55],[2021,32,1596,56],[2022,8,1597,12],[2022,12,1597,16,"error"],[2022,17,1597,21],[2022,19,1598,16],[2022,25,1598,22,"error"],[2022,30,1598,27],[2023,8,1599,12],[2023,15,1599,19],[2024,10,1599,21,"data"],[2024,14,1599,25],[2024,16,1599,27],[2025,12,1599,29,"identities"],[2025,22,1599,39],[2025,24,1599,41],[2025,25,1599,42,"_a"],[2025,27,1599,44],[2025,30,1599,47,"data"],[2025,34,1599,51],[2025,35,1599,52,"user"],[2025,39,1599,56],[2025,40,1599,57,"identities"],[2025,50,1599,67],[2025,56,1599,73],[2025,60,1599,77],[2025,64,1599,81,"_a"],[2025,66,1599,83],[2025,71,1599,88],[2025,76,1599,93],[2025,77,1599,94],[2025,80,1599,97,"_a"],[2025,82,1599,99],[2025,85,1599,102],[2026,10,1599,105],[2026,11,1599,106],[2027,10,1599,108,"error"],[2027,15,1599,113],[2027,17,1599,115],[2028,8,1599,120],[2028,9,1599,121],[2029,6,1600,8],[2029,7,1600,9],[2029,8,1601,8],[2029,15,1601,15,"error"],[2029,20,1601,20],[2029,22,1601,22],[2030,8,1602,12],[2030,12,1602,16],[2030,16,1602,16,"isAuthError"],[2030,26,1602,27],[2030,27,1602,27,"isAuthError"],[2030,38,1602,27],[2030,40,1602,28,"error"],[2030,45,1602,33],[2030,46,1602,34],[2030,48,1602,36],[2031,10,1603,16],[2031,17,1603,23],[2032,12,1603,25,"data"],[2032,16,1603,29],[2032,18,1603,31],[2032,22,1603,35],[2033,12,1603,37,"error"],[2034,10,1603,43],[2034,11,1603,44],[2035,8,1604,12],[2036,8,1605,12],[2036,14,1605,18,"error"],[2036,19,1605,23],[2037,6,1606,8],[2038,4,1607,4],[2039,4,1608,4],[2039,10,1608,10,"linkIdentity"],[2039,22,1608,22,"linkIdentity"],[2039,23,1608,23,"credentials"],[2039,34,1608,34],[2039,36,1608,36],[2040,6,1609,8],[2040,10,1609,12],[2040,17,1609,19],[2040,21,1609,23,"credentials"],[2040,32,1609,34],[2040,34,1609,36],[2041,8,1610,12],[2041,15,1610,19],[2041,19,1610,23],[2041,20,1610,24,"linkIdentityIdToken"],[2041,39,1610,43],[2041,40,1610,44,"credentials"],[2041,51,1610,55],[2041,52,1610,56],[2042,6,1611,8],[2043,6,1612,8],[2043,13,1612,15],[2043,17,1612,19],[2043,18,1612,20,"linkIdentityOAuth"],[2043,35,1612,37],[2043,36,1612,38,"credentials"],[2043,47,1612,49],[2043,48,1612,50],[2044,4,1613,4],[2045,4,1614,4],[2045,10,1614,10,"linkIdentityOAuth"],[2045,27,1614,27,"linkIdentityOAuth"],[2045,28,1614,28,"credentials"],[2045,39,1614,39],[2045,41,1614,41],[2046,6,1615,8],[2046,10,1615,12,"_a"],[2046,12,1615,14],[2047,6,1616,8],[2047,10,1616,12],[2048,8,1617,12],[2048,14,1617,18],[2049,10,1617,20,"data"],[2049,14,1617,24],[2050,10,1617,26,"error"],[2051,8,1617,32],[2051,9,1617,33],[2051,12,1617,36],[2051,18,1617,42],[2051,22,1617,46],[2051,23,1617,47,"_useSession"],[2051,34,1617,58],[2051,35,1617,59],[2051,41,1617,66,"result"],[2051,47,1617,72],[2051,51,1617,77],[2052,10,1618,16],[2052,14,1618,20,"_a"],[2052,16,1618,22],[2052,18,1618,24,"_b"],[2052,20,1618,26],[2052,22,1618,28,"_c"],[2052,24,1618,30],[2052,26,1618,32,"_d"],[2052,28,1618,34],[2052,30,1618,36,"_e"],[2052,32,1618,38],[2053,10,1619,16],[2053,16,1619,22],[2054,12,1619,24,"data"],[2054,16,1619,28],[2055,12,1619,30,"error"],[2056,10,1619,36],[2056,11,1619,37],[2056,14,1619,40,"result"],[2056,20,1619,46],[2057,10,1620,16],[2057,14,1620,20,"error"],[2057,19,1620,25],[2057,21,1621,20],[2057,27,1621,26,"error"],[2057,32,1621,31],[2058,10,1622,16],[2058,16,1622,22,"url"],[2058,19,1622,25],[2058,22,1622,28],[2058,28,1622,34],[2058,32,1622,38],[2058,33,1622,39,"_getUrlForProvider"],[2058,51,1622,57],[2058,52,1622,58],[2058,55,1622,61],[2058,59,1622,65],[2058,60,1622,66,"url"],[2058,63,1622,69],[2058,91,1622,97],[2058,93,1622,99,"credentials"],[2058,104,1622,110],[2058,105,1622,111,"provider"],[2058,113,1622,119],[2058,115,1622,121],[2059,12,1623,20,"redirectTo"],[2059,22,1623,30],[2059,24,1623,32],[2059,25,1623,33,"_a"],[2059,27,1623,35],[2059,30,1623,38,"credentials"],[2059,41,1623,49],[2059,42,1623,50,"options"],[2059,49,1623,57],[2059,55,1623,63],[2059,59,1623,67],[2059,63,1623,71,"_a"],[2059,65,1623,73],[2059,70,1623,78],[2059,75,1623,83],[2059,76,1623,84],[2059,79,1623,87],[2059,84,1623,92],[2059,85,1623,93],[2059,88,1623,96,"_a"],[2059,90,1623,98],[2059,91,1623,99,"redirectTo"],[2059,101,1623,109],[2060,12,1624,20,"scopes"],[2060,18,1624,26],[2060,20,1624,28],[2060,21,1624,29,"_b"],[2060,23,1624,31],[2060,26,1624,34,"credentials"],[2060,37,1624,45],[2060,38,1624,46,"options"],[2060,45,1624,53],[2060,51,1624,59],[2060,55,1624,63],[2060,59,1624,67,"_b"],[2060,61,1624,69],[2060,66,1624,74],[2060,71,1624,79],[2060,72,1624,80],[2060,75,1624,83],[2060,80,1624,88],[2060,81,1624,89],[2060,84,1624,92,"_b"],[2060,86,1624,94],[2060,87,1624,95,"scopes"],[2060,93,1624,101],[2061,12,1625,20,"queryParams"],[2061,23,1625,31],[2061,25,1625,33],[2061,26,1625,34,"_c"],[2061,28,1625,36],[2061,31,1625,39,"credentials"],[2061,42,1625,50],[2061,43,1625,51,"options"],[2061,50,1625,58],[2061,56,1625,64],[2061,60,1625,68],[2061,64,1625,72,"_c"],[2061,66,1625,74],[2061,71,1625,79],[2061,76,1625,84],[2061,77,1625,85],[2061,80,1625,88],[2061,85,1625,93],[2061,86,1625,94],[2061,89,1625,97,"_c"],[2061,91,1625,99],[2061,92,1625,100,"queryParams"],[2061,103,1625,111],[2062,12,1626,20,"skipBrowserRedirect"],[2062,31,1626,39],[2062,33,1626,41],[2063,10,1627,16],[2063,11,1627,17],[2063,12,1627,18],[2064,10,1628,16],[2064,17,1628,23],[2064,23,1628,29],[2064,27,1628,29,"_request"],[2064,36,1628,37],[2064,37,1628,37,"_request"],[2064,45,1628,37],[2064,47,1628,38],[2064,51,1628,42],[2064,52,1628,43,"fetch"],[2064,57,1628,48],[2064,59,1628,50],[2064,64,1628,55],[2064,66,1628,57,"url"],[2064,69,1628,60],[2064,71,1628,62],[2065,12,1629,20,"headers"],[2065,19,1629,27],[2065,21,1629,29],[2065,25,1629,33],[2065,26,1629,34,"headers"],[2065,33,1629,41],[2066,12,1630,20,"jwt"],[2066,15,1630,23],[2066,17,1630,25],[2066,18,1630,26,"_e"],[2066,20,1630,28],[2066,23,1630,31],[2066,24,1630,32,"_d"],[2066,26,1630,34],[2066,29,1630,37,"data"],[2066,33,1630,41],[2066,34,1630,42,"session"],[2066,41,1630,49],[2066,47,1630,55],[2066,51,1630,59],[2066,55,1630,63,"_d"],[2066,57,1630,65],[2066,62,1630,70],[2066,67,1630,75],[2066,68,1630,76],[2066,71,1630,79],[2066,76,1630,84],[2066,77,1630,85],[2066,80,1630,88,"_d"],[2066,82,1630,90],[2066,83,1630,91,"access_token"],[2066,95,1630,103],[2066,101,1630,109],[2066,105,1630,113],[2066,109,1630,117,"_e"],[2066,111,1630,119],[2066,116,1630,124],[2066,121,1630,129],[2066,122,1630,130],[2066,125,1630,133,"_e"],[2066,127,1630,135],[2066,130,1630,138,"undefined"],[2067,10,1631,16],[2067,11,1631,17],[2067,12,1631,18],[2068,8,1632,12],[2068,9,1632,13],[2068,10,1632,14],[2069,8,1633,12],[2069,12,1633,16,"error"],[2069,17,1633,21],[2069,19,1634,16],[2069,25,1634,22,"error"],[2069,30,1634,27],[2070,8,1635,12],[2070,12,1635,16],[2070,16,1635,16,"isBrowser"],[2070,27,1635,25],[2070,28,1635,25,"isBrowser"],[2070,37,1635,25],[2070,39,1635,26],[2070,40,1635,27],[2070,44,1635,31],[2070,46,1635,33],[2070,47,1635,34,"_a"],[2070,49,1635,36],[2070,52,1635,39,"credentials"],[2070,63,1635,50],[2070,64,1635,51,"options"],[2070,71,1635,58],[2070,77,1635,64],[2070,81,1635,68],[2070,85,1635,72,"_a"],[2070,87,1635,74],[2070,92,1635,79],[2070,97,1635,84],[2070,98,1635,85],[2070,101,1635,88],[2070,106,1635,93],[2070,107,1635,94],[2070,110,1635,97,"_a"],[2070,112,1635,99],[2070,113,1635,100,"skipBrowserRedirect"],[2070,132,1635,119],[2070,133,1635,120],[2070,135,1635,122],[2071,10,1636,16,"window"],[2071,16,1636,22],[2071,17,1636,23,"location"],[2071,25,1636,31],[2071,26,1636,32,"assign"],[2071,32,1636,38],[2071,33,1636,39,"data"],[2071,37,1636,43],[2071,42,1636,48],[2071,46,1636,52],[2071,50,1636,56,"data"],[2071,54,1636,60],[2071,59,1636,65],[2071,64,1636,70],[2071,65,1636,71],[2071,68,1636,74],[2071,73,1636,79],[2071,74,1636,80],[2071,77,1636,83,"data"],[2071,81,1636,87],[2071,82,1636,88,"url"],[2071,85,1636,91],[2071,86,1636,92],[2072,8,1637,12],[2073,8,1638,12],[2073,15,1638,19],[2074,10,1638,21,"data"],[2074,14,1638,25],[2074,16,1638,27],[2075,12,1638,29,"provider"],[2075,20,1638,37],[2075,22,1638,39,"credentials"],[2075,33,1638,50],[2075,34,1638,51,"provider"],[2075,42,1638,59],[2076,12,1638,61,"url"],[2076,15,1638,64],[2076,17,1638,66,"data"],[2076,21,1638,70],[2076,26,1638,75],[2076,30,1638,79],[2076,34,1638,83,"data"],[2076,38,1638,87],[2076,43,1638,92],[2076,48,1638,97],[2076,49,1638,98],[2076,52,1638,101],[2076,57,1638,106],[2076,58,1638,107],[2076,61,1638,110,"data"],[2076,65,1638,114],[2076,66,1638,115,"url"],[2077,10,1638,119],[2077,11,1638,120],[2078,10,1638,122,"error"],[2078,15,1638,127],[2078,17,1638,129],[2079,8,1638,134],[2079,9,1638,135],[2080,6,1639,8],[2080,7,1639,9],[2080,8,1640,8],[2080,15,1640,15,"error"],[2080,20,1640,20],[2080,22,1640,22],[2081,8,1641,12],[2081,12,1641,16],[2081,16,1641,16,"isAuthError"],[2081,26,1641,27],[2081,27,1641,27,"isAuthError"],[2081,38,1641,27],[2081,40,1641,28,"error"],[2081,45,1641,33],[2081,46,1641,34],[2081,48,1641,36],[2082,10,1642,16],[2082,17,1642,23],[2083,12,1642,25,"data"],[2083,16,1642,29],[2083,18,1642,31],[2084,14,1642,33,"provider"],[2084,22,1642,41],[2084,24,1642,43,"credentials"],[2084,35,1642,54],[2084,36,1642,55,"provider"],[2084,44,1642,63],[2085,14,1642,65,"url"],[2085,17,1642,68],[2085,19,1642,70],[2086,12,1642,75],[2086,13,1642,76],[2087,12,1642,78,"error"],[2088,10,1642,84],[2088,11,1642,85],[2089,8,1643,12],[2090,8,1644,12],[2090,14,1644,18,"error"],[2090,19,1644,23],[2091,6,1645,8],[2092,4,1646,4],[2093,4,1647,4],[2093,10,1647,10,"linkIdentityIdToken"],[2093,29,1647,29,"linkIdentityIdToken"],[2093,30,1647,30,"credentials"],[2093,41,1647,41],[2093,43,1647,43],[2094,6,1648,8],[2094,13,1648,15],[2094,19,1648,21],[2094,23,1648,25],[2094,24,1648,26,"_useSession"],[2094,35,1648,37],[2094,36,1648,38],[2094,42,1648,45,"result"],[2094,48,1648,51],[2094,52,1648,56],[2095,8,1649,12],[2095,12,1649,16,"_a"],[2095,14,1649,18],[2096,8,1650,12],[2096,12,1650,16],[2097,10,1651,16],[2097,16,1651,22],[2098,12,1651,24,"error"],[2098,17,1651,29],[2098,19,1651,31,"sessionError"],[2098,31,1651,43],[2099,12,1651,45,"data"],[2099,16,1651,49],[2099,18,1651,51],[2100,14,1651,53,"session"],[2101,12,1651,61],[2102,10,1651,64],[2102,11,1651,65],[2102,14,1651,68,"result"],[2102,20,1651,74],[2103,10,1652,16],[2103,14,1652,20,"sessionError"],[2103,26,1652,32],[2103,28,1653,20],[2103,34,1653,26,"sessionError"],[2103,46,1653,38],[2104,10,1654,16],[2104,16,1654,22],[2105,12,1654,24,"options"],[2105,19,1654,31],[2106,12,1654,33,"provider"],[2106,20,1654,41],[2107,12,1654,43,"token"],[2107,17,1654,48],[2108,12,1654,50,"access_token"],[2108,24,1654,62],[2109,12,1654,64,"nonce"],[2110,10,1654,70],[2110,11,1654,71],[2110,14,1654,74,"credentials"],[2110,25,1654,85],[2111,10,1655,16],[2111,16,1655,22,"res"],[2111,19,1655,25],[2111,22,1655,28],[2111,28,1655,34],[2111,32,1655,34,"_request"],[2111,41,1655,42],[2111,42,1655,42,"_request"],[2111,50,1655,42],[2111,52,1655,43],[2111,56,1655,47],[2111,57,1655,48,"fetch"],[2111,62,1655,53],[2111,64,1655,55],[2111,70,1655,61],[2111,72,1655,63],[2111,75,1655,66],[2111,79,1655,70],[2111,80,1655,71,"url"],[2111,83,1655,74],[2111,111,1655,102],[2111,113,1655,104],[2112,12,1656,20,"headers"],[2112,19,1656,27],[2112,21,1656,29],[2112,25,1656,33],[2112,26,1656,34,"headers"],[2112,33,1656,41],[2113,12,1657,20,"jwt"],[2113,15,1657,23],[2113,17,1657,25],[2113,18,1657,26,"_a"],[2113,20,1657,28],[2113,23,1657,31,"session"],[2113,30,1657,38],[2113,35,1657,43],[2113,39,1657,47],[2113,43,1657,51,"session"],[2113,50,1657,58],[2113,55,1657,63],[2113,60,1657,68],[2113,61,1657,69],[2113,64,1657,72],[2113,69,1657,77],[2113,70,1657,78],[2113,73,1657,81,"session"],[2113,80,1657,88],[2113,81,1657,89,"access_token"],[2113,93,1657,101],[2113,99,1657,107],[2113,103,1657,111],[2113,107,1657,115,"_a"],[2113,109,1657,117],[2113,114,1657,122],[2113,119,1657,127],[2113,120,1657,128],[2113,123,1657,131,"_a"],[2113,125,1657,133],[2113,128,1657,136,"undefined"],[2113,137,1657,145],[2114,12,1658,20,"body"],[2114,16,1658,24],[2114,18,1658,26],[2115,14,1659,24,"provider"],[2115,22,1659,32],[2116,14,1660,24,"id_token"],[2116,22,1660,32],[2116,24,1660,34,"token"],[2116,29,1660,39],[2117,14,1661,24,"access_token"],[2117,26,1661,36],[2118,14,1662,24,"nonce"],[2118,19,1662,29],[2119,14,1663,24,"link_identity"],[2119,27,1663,37],[2119,29,1663,39],[2119,33,1663,43],[2120,14,1664,24,"gotrue_meta_security"],[2120,34,1664,44],[2120,36,1664,46],[2121,16,1664,48,"captcha_token"],[2121,29,1664,61],[2121,31,1664,63,"options"],[2121,38,1664,70],[2121,43,1664,75],[2121,47,1664,79],[2121,51,1664,83,"options"],[2121,58,1664,90],[2121,63,1664,95],[2121,68,1664,100],[2121,69,1664,101],[2121,72,1664,104],[2121,77,1664,109],[2121,78,1664,110],[2121,81,1664,113,"options"],[2121,88,1664,120],[2121,89,1664,121,"captchaToken"],[2122,14,1664,134],[2123,12,1665,20],[2123,13,1665,21],[2124,12,1666,20,"xform"],[2124,17,1666,25],[2124,19,1666,27,"_sessionResponse"],[2124,28,1666,43],[2124,29,1666,43,"_sessionResponse"],[2125,10,1667,16],[2125,11,1667,17],[2125,12,1667,18],[2126,10,1668,16],[2126,16,1668,22],[2127,12,1668,24,"data"],[2127,16,1668,28],[2128,12,1668,30,"error"],[2129,10,1668,36],[2129,11,1668,37],[2129,14,1668,40,"res"],[2129,17,1668,43],[2130,10,1669,16],[2130,14,1669,20,"error"],[2130,19,1669,25],[2130,21,1669,27],[2131,12,1670,20],[2131,19,1670,27],[2132,14,1670,29,"data"],[2132,18,1670,33],[2132,20,1670,35],[2133,16,1670,37,"user"],[2133,20,1670,41],[2133,22,1670,43],[2133,26,1670,47],[2134,16,1670,49,"session"],[2134,23,1670,56],[2134,25,1670,58],[2135,14,1670,63],[2135,15,1670,64],[2136,14,1670,66,"error"],[2137,12,1670,72],[2137,13,1670,73],[2138,10,1671,16],[2138,11,1671,17],[2138,17,1672,21],[2138,21,1672,25],[2138,22,1672,26,"data"],[2138,26,1672,30],[2138,30,1672,34],[2138,31,1672,35,"data"],[2138,35,1672,39],[2138,36,1672,40,"session"],[2138,43,1672,47],[2138,47,1672,51],[2138,48,1672,52,"data"],[2138,52,1672,56],[2138,53,1672,57,"user"],[2138,57,1672,61],[2138,59,1672,63],[2139,12,1673,20],[2139,19,1673,27],[2140,14,1674,24,"data"],[2140,18,1674,28],[2140,20,1674,30],[2141,16,1674,32,"user"],[2141,20,1674,36],[2141,22,1674,38],[2141,26,1674,42],[2142,16,1674,44,"session"],[2142,23,1674,51],[2142,25,1674,53],[2143,14,1674,58],[2143,15,1674,59],[2144,14,1675,24,"error"],[2144,19,1675,29],[2144,21,1675,31],[2144,25,1675,35,"AuthInvalidTokenResponseError"],[2144,35,1675,64],[2144,36,1675,64,"AuthInvalidTokenResponseError"],[2144,65,1675,64],[2144,66,1675,65],[2145,12,1676,20],[2145,13,1676,21],[2146,10,1677,16],[2147,10,1678,16],[2147,14,1678,20,"data"],[2147,18,1678,24],[2147,19,1678,25,"session"],[2147,26,1678,32],[2147,28,1678,34],[2148,12,1679,20],[2148,18,1679,26],[2148,22,1679,30],[2148,23,1679,31,"_saveSession"],[2148,35,1679,43],[2148,36,1679,44,"data"],[2148,40,1679,48],[2148,41,1679,49,"session"],[2148,48,1679,56],[2148,49,1679,57],[2149,12,1680,20],[2149,18,1680,26],[2149,22,1680,30],[2149,23,1680,31,"_notifyAllSubscribers"],[2149,44,1680,52],[2149,45,1680,53],[2149,59,1680,67],[2149,61,1680,69,"data"],[2149,65,1680,73],[2149,66,1680,74,"session"],[2149,73,1680,81],[2149,74,1680,82],[2150,10,1681,16],[2151,10,1682,16],[2151,17,1682,23],[2152,12,1682,25,"data"],[2152,16,1682,29],[2153,12,1682,31,"error"],[2154,10,1682,37],[2154,11,1682,38],[2155,8,1683,12],[2155,9,1683,13],[2155,10,1684,12],[2155,17,1684,19,"error"],[2155,22,1684,24],[2155,24,1684,26],[2156,10,1685,16],[2156,14,1685,20],[2156,18,1685,20,"isAuthError"],[2156,28,1685,31],[2156,29,1685,31,"isAuthError"],[2156,40,1685,31],[2156,42,1685,32,"error"],[2156,47,1685,37],[2156,48,1685,38],[2156,50,1685,40],[2157,12,1686,20],[2157,19,1686,27],[2158,14,1686,29,"data"],[2158,18,1686,33],[2158,20,1686,35],[2159,16,1686,37,"user"],[2159,20,1686,41],[2159,22,1686,43],[2159,26,1686,47],[2160,16,1686,49,"session"],[2160,23,1686,56],[2160,25,1686,58],[2161,14,1686,63],[2161,15,1686,64],[2162,14,1686,66,"error"],[2163,12,1686,72],[2163,13,1686,73],[2164,10,1687,16],[2165,10,1688,16],[2165,16,1688,22,"error"],[2165,21,1688,27],[2166,8,1689,12],[2167,6,1690,8],[2167,7,1690,9],[2167,8,1690,10],[2168,4,1691,4],[2169,4,1692,4],[2170,0,1693,0],[2171,0,1694,0],[2172,4,1695,4],[2172,10,1695,10,"unlinkIdentity"],[2172,24,1695,24,"unlinkIdentity"],[2172,25,1695,25,"identity"],[2172,33,1695,33],[2172,35,1695,35],[2173,6,1696,8],[2173,10,1696,12],[2174,8,1697,12],[2174,15,1697,19],[2174,21,1697,25],[2174,25,1697,29],[2174,26,1697,30,"_useSession"],[2174,37,1697,41],[2174,38,1697,42],[2174,44,1697,49,"result"],[2174,50,1697,55],[2174,54,1697,60],[2175,10,1698,16],[2175,14,1698,20,"_a"],[2175,16,1698,22],[2175,18,1698,24,"_b"],[2175,20,1698,26],[2176,10,1699,16],[2176,16,1699,22],[2177,12,1699,24,"data"],[2177,16,1699,28],[2178,12,1699,30,"error"],[2179,10,1699,36],[2179,11,1699,37],[2179,14,1699,40,"result"],[2179,20,1699,46],[2180,10,1700,16],[2180,14,1700,20,"error"],[2180,19,1700,25],[2180,21,1700,27],[2181,12,1701,20],[2181,18,1701,26,"error"],[2181,23,1701,31],[2182,10,1702,16],[2183,10,1703,16],[2183,17,1703,23],[2183,23,1703,29],[2183,27,1703,29,"_request"],[2183,36,1703,37],[2183,37,1703,37,"_request"],[2183,45,1703,37],[2183,47,1703,38],[2183,51,1703,42],[2183,52,1703,43,"fetch"],[2183,57,1703,48],[2183,59,1703,50],[2183,67,1703,58],[2183,69,1703,60],[2183,72,1703,63],[2183,76,1703,67],[2183,77,1703,68,"url"],[2183,80,1703,71],[2183,100,1703,91,"identity"],[2183,108,1703,99],[2183,109,1703,100,"identity_id"],[2183,120,1703,111],[2183,122,1703,113],[2183,124,1703,115],[2184,12,1704,20,"headers"],[2184,19,1704,27],[2184,21,1704,29],[2184,25,1704,33],[2184,26,1704,34,"headers"],[2184,33,1704,41],[2185,12,1705,20,"jwt"],[2185,15,1705,23],[2185,17,1705,25],[2185,18,1705,26,"_b"],[2185,20,1705,28],[2185,23,1705,31],[2185,24,1705,32,"_a"],[2185,26,1705,34],[2185,29,1705,37,"data"],[2185,33,1705,41],[2185,34,1705,42,"session"],[2185,41,1705,49],[2185,47,1705,55],[2185,51,1705,59],[2185,55,1705,63,"_a"],[2185,57,1705,65],[2185,62,1705,70],[2185,67,1705,75],[2185,68,1705,76],[2185,71,1705,79],[2185,76,1705,84],[2185,77,1705,85],[2185,80,1705,88,"_a"],[2185,82,1705,90],[2185,83,1705,91,"access_token"],[2185,95,1705,103],[2185,101,1705,109],[2185,105,1705,113],[2185,109,1705,117,"_b"],[2185,111,1705,119],[2185,116,1705,124],[2185,121,1705,129],[2185,122,1705,130],[2185,125,1705,133,"_b"],[2185,127,1705,135],[2185,130,1705,138,"undefined"],[2186,10,1706,16],[2186,11,1706,17],[2186,12,1706,18],[2187,8,1707,12],[2187,9,1707,13],[2187,10,1707,14],[2188,6,1708,8],[2188,7,1708,9],[2188,8,1709,8],[2188,15,1709,15,"error"],[2188,20,1709,20],[2188,22,1709,22],[2189,8,1710,12],[2189,12,1710,16],[2189,16,1710,16,"isAuthError"],[2189,26,1710,27],[2189,27,1710,27,"isAuthError"],[2189,38,1710,27],[2189,40,1710,28,"error"],[2189,45,1710,33],[2189,46,1710,34],[2189,48,1710,36],[2190,10,1711,16],[2190,17,1711,23],[2191,12,1711,25,"data"],[2191,16,1711,29],[2191,18,1711,31],[2191,22,1711,35],[2192,12,1711,37,"error"],[2193,10,1711,43],[2193,11,1711,44],[2194,8,1712,12],[2195,8,1713,12],[2195,14,1713,18,"error"],[2195,19,1713,23],[2196,6,1714,8],[2197,4,1715,4],[2198,4,1716,4],[2199,0,1717,0],[2200,0,1718,0],[2201,0,1719,0],[2202,4,1720,4],[2202,10,1720,10,"_refreshAccessToken"],[2202,29,1720,29,"_refreshAccessToken"],[2202,30,1720,30,"refreshToken"],[2202,42,1720,42],[2202,44,1720,44],[2203,6,1721,8],[2203,12,1721,14,"debugName"],[2203,21,1721,23],[2203,24,1721,26],[2203,48,1721,50,"refreshToken"],[2203,60,1721,62],[2203,61,1721,63,"substring"],[2203,70,1721,72],[2203,71,1721,73],[2203,72,1721,74],[2203,74,1721,76],[2203,75,1721,77],[2203,76,1721,78],[2203,82,1721,84],[2204,6,1722,8],[2204,10,1722,12],[2204,11,1722,13,"_debug"],[2204,17,1722,19],[2204,18,1722,20,"debugName"],[2204,27,1722,29],[2204,29,1722,31],[2204,36,1722,38],[2204,37,1722,39],[2205,6,1723,8],[2205,10,1723,12],[2206,8,1724,12],[2206,14,1724,18,"startedAt"],[2206,23,1724,27],[2206,26,1724,30,"Date"],[2206,30,1724,34],[2206,31,1724,35,"now"],[2206,34,1724,38],[2206,35,1724,39],[2206,36,1724,40],[2207,8,1725,12],[2208,8,1726,12],[2208,15,1726,19],[2208,21,1726,25],[2208,25,1726,25,"retryable"],[2208,36,1726,34],[2208,37,1726,34,"retryable"],[2208,46,1726,34],[2208,48,1726,35],[2208,54,1726,42,"attempt"],[2208,61,1726,49],[2208,65,1726,54],[2209,10,1727,16],[2209,14,1727,20,"attempt"],[2209,21,1727,27],[2209,24,1727,30],[2209,25,1727,31],[2209,27,1727,33],[2210,12,1728,20],[2210,18,1728,26],[2210,22,1728,26,"sleep"],[2210,33,1728,31],[2210,34,1728,31,"sleep"],[2210,39,1728,31],[2210,41,1728,32],[2210,44,1728,35],[2210,47,1728,38,"Math"],[2210,51,1728,42],[2210,52,1728,43,"pow"],[2210,55,1728,46],[2210,56,1728,47],[2210,57,1728,48],[2210,59,1728,50,"attempt"],[2210,66,1728,57],[2210,69,1728,60],[2210,70,1728,61],[2210,71,1728,62],[2210,72,1728,63],[2210,73,1728,64],[2210,74,1728,65],[2211,10,1729,16],[2212,10,1730,16],[2212,14,1730,20],[2212,15,1730,21,"_debug"],[2212,21,1730,27],[2212,22,1730,28,"debugName"],[2212,31,1730,37],[2212,33,1730,39],[2212,53,1730,59],[2212,55,1730,61,"attempt"],[2212,62,1730,68],[2212,63,1730,69],[2213,10,1731,16],[2213,17,1731,23],[2213,23,1731,29],[2213,27,1731,29,"_request"],[2213,36,1731,37],[2213,37,1731,37,"_request"],[2213,45,1731,37],[2213,47,1731,38],[2213,51,1731,42],[2213,52,1731,43,"fetch"],[2213,57,1731,48],[2213,59,1731,50],[2213,65,1731,56],[2213,67,1731,58],[2213,70,1731,61],[2213,74,1731,65],[2213,75,1731,66,"url"],[2213,78,1731,69],[2213,111,1731,102],[2213,113,1731,104],[2214,12,1732,20,"body"],[2214,16,1732,24],[2214,18,1732,26],[2215,14,1732,28,"refresh_token"],[2215,27,1732,41],[2215,29,1732,43,"refreshToken"],[2216,12,1732,56],[2216,13,1732,57],[2217,12,1733,20,"headers"],[2217,19,1733,27],[2217,21,1733,29],[2217,25,1733,33],[2217,26,1733,34,"headers"],[2217,33,1733,41],[2218,12,1734,20,"xform"],[2218,17,1734,25],[2218,19,1734,27,"_sessionResponse"],[2218,28,1734,43],[2218,29,1734,43,"_sessionResponse"],[2219,10,1735,16],[2219,11,1735,17],[2219,12,1735,18],[2220,8,1736,12],[2220,9,1736,13],[2220,11,1736,15],[2220,12,1736,16,"attempt"],[2220,19,1736,23],[2220,21,1736,25,"error"],[2220,26,1736,30],[2220,31,1736,35],[2221,10,1737,16],[2221,16,1737,22,"nextBackOffInterval"],[2221,35,1737,41],[2221,38,1737,44],[2221,41,1737,47],[2221,44,1737,50,"Math"],[2221,48,1737,54],[2221,49,1737,55,"pow"],[2221,52,1737,58],[2221,53,1737,59],[2221,54,1737,60],[2221,56,1737,62,"attempt"],[2221,63,1737,69],[2221,64,1737,70],[2222,10,1738,16],[2222,17,1738,24,"error"],[2222,22,1738,29],[2222,26,1739,20],[2222,30,1739,20,"isAuthRetryableFetchError"],[2222,40,1739,45],[2222,41,1739,45,"isAuthRetryableFetchError"],[2222,66,1739,45],[2222,68,1739,46,"error"],[2222,73,1739,51],[2222,74,1739,52],[2223,10,1740,20],[2224,10,1741,20,"Date"],[2224,14,1741,24],[2224,15,1741,25,"now"],[2224,18,1741,28],[2224,19,1741,29],[2224,20,1741,30],[2224,23,1741,33,"nextBackOffInterval"],[2224,42,1741,52],[2224,45,1741,55,"startedAt"],[2224,54,1741,64],[2224,57,1741,67,"AUTO_REFRESH_TICK_DURATION_MS"],[2224,70,1741,96],[2224,71,1741,96,"AUTO_REFRESH_TICK_DURATION_MS"],[2224,100,1741,96],[2225,8,1742,12],[2225,9,1742,13],[2225,10,1742,14],[2226,6,1743,8],[2226,7,1743,9],[2226,8,1744,8],[2226,15,1744,15,"error"],[2226,20,1744,20],[2226,22,1744,22],[2227,8,1745,12],[2227,12,1745,16],[2227,13,1745,17,"_debug"],[2227,19,1745,23],[2227,20,1745,24,"debugName"],[2227,29,1745,33],[2227,31,1745,35],[2227,38,1745,42],[2227,40,1745,44,"error"],[2227,45,1745,49],[2227,46,1745,50],[2228,8,1746,12],[2228,12,1746,16],[2228,16,1746,16,"isAuthError"],[2228,26,1746,27],[2228,27,1746,27,"isAuthError"],[2228,38,1746,27],[2228,40,1746,28,"error"],[2228,45,1746,33],[2228,46,1746,34],[2228,48,1746,36],[2229,10,1747,16],[2229,17,1747,23],[2230,12,1747,25,"data"],[2230,16,1747,29],[2230,18,1747,31],[2231,14,1747,33,"session"],[2231,21,1747,40],[2231,23,1747,42],[2231,27,1747,46],[2232,14,1747,48,"user"],[2232,18,1747,52],[2232,20,1747,54],[2233,12,1747,59],[2233,13,1747,60],[2234,12,1747,62,"error"],[2235,10,1747,68],[2235,11,1747,69],[2236,8,1748,12],[2237,8,1749,12],[2237,14,1749,18,"error"],[2237,19,1749,23],[2238,6,1750,8],[2238,7,1750,9],[2238,16,1751,16],[2239,8,1752,12],[2239,12,1752,16],[2239,13,1752,17,"_debug"],[2239,19,1752,23],[2239,20,1752,24,"debugName"],[2239,29,1752,33],[2239,31,1752,35],[2239,36,1752,40],[2239,37,1752,41],[2240,6,1753,8],[2241,4,1754,4],[2242,4,1755,4,"_isValidSession"],[2242,19,1755,19,"_isValidSession"],[2242,20,1755,20,"maybeSession"],[2242,32,1755,32],[2242,34,1755,34],[2243,6,1756,8],[2243,12,1756,14,"isValidSession"],[2243,26,1756,28],[2243,29,1756,31],[2243,36,1756,38,"maybeSession"],[2243,48,1756,50],[2243,53,1756,55],[2243,61,1756,63],[2243,65,1757,12,"maybeSession"],[2243,77,1757,24],[2243,82,1757,29],[2243,86,1757,33],[2243,90,1758,12],[2243,104,1758,26],[2243,108,1758,30,"maybeSession"],[2243,120,1758,42],[2243,124,1759,12],[2243,139,1759,27],[2243,143,1759,31,"maybeSession"],[2243,155,1759,43],[2243,159,1760,12],[2243,171,1760,24],[2243,175,1760,28,"maybeSession"],[2243,187,1760,40],[2244,6,1761,8],[2244,13,1761,15,"isValidSession"],[2244,27,1761,29],[2245,4,1762,4],[2246,4,1763,4],[2246,10,1763,10,"_handleProviderSignIn"],[2246,31,1763,31,"_handleProviderSignIn"],[2246,32,1763,32,"provider"],[2246,40,1763,40],[2246,42,1763,42,"options"],[2246,49,1763,49],[2246,51,1763,51],[2247,6,1764,8],[2247,12,1764,14,"url"],[2247,15,1764,17],[2247,18,1764,20],[2247,24,1764,26],[2247,28,1764,30],[2247,29,1764,31,"_getUrlForProvider"],[2247,47,1764,49],[2247,48,1764,50],[2247,51,1764,53],[2247,55,1764,57],[2247,56,1764,58,"url"],[2247,59,1764,61],[2247,71,1764,73],[2247,73,1764,75,"provider"],[2247,81,1764,83],[2247,83,1764,85],[2248,8,1765,12,"redirectTo"],[2248,18,1765,22],[2248,20,1765,24,"options"],[2248,27,1765,31],[2248,28,1765,32,"redirectTo"],[2248,38,1765,42],[2249,8,1766,12,"scopes"],[2249,14,1766,18],[2249,16,1766,20,"options"],[2249,23,1766,27],[2249,24,1766,28,"scopes"],[2249,30,1766,34],[2250,8,1767,12,"queryParams"],[2250,19,1767,23],[2250,21,1767,25,"options"],[2250,28,1767,32],[2250,29,1767,33,"queryParams"],[2251,6,1768,8],[2251,7,1768,9],[2251,8,1768,10],[2252,6,1769,8],[2252,10,1769,12],[2252,11,1769,13,"_debug"],[2252,17,1769,19],[2252,18,1769,20],[2252,44,1769,46],[2252,46,1769,48],[2252,56,1769,58],[2252,58,1769,60,"provider"],[2252,66,1769,68],[2252,68,1769,70],[2252,77,1769,79],[2252,79,1769,81,"options"],[2252,86,1769,88],[2252,88,1769,90],[2252,93,1769,95],[2252,95,1769,97,"url"],[2252,98,1769,100],[2252,99,1769,101],[2253,6,1770,8],[2254,6,1771,8],[2254,10,1771,12],[2254,14,1771,12,"isBrowser"],[2254,25,1771,21],[2254,26,1771,21,"isBrowser"],[2254,35,1771,21],[2254,37,1771,22],[2254,38,1771,23],[2254,42,1771,27],[2254,43,1771,28,"options"],[2254,50,1771,35],[2254,51,1771,36,"skipBrowserRedirect"],[2254,70,1771,55],[2254,72,1771,57],[2255,8,1772,12,"window"],[2255,14,1772,18],[2255,15,1772,19,"location"],[2255,23,1772,27],[2255,24,1772,28,"assign"],[2255,30,1772,34],[2255,31,1772,35,"url"],[2255,34,1772,38],[2255,35,1772,39],[2256,6,1773,8],[2257,6,1774,8],[2257,13,1774,15],[2258,8,1774,17,"data"],[2258,12,1774,21],[2258,14,1774,23],[2259,10,1774,25,"provider"],[2259,18,1774,33],[2260,10,1774,35,"url"],[2261,8,1774,39],[2261,9,1774,40],[2262,8,1774,42,"error"],[2262,13,1774,47],[2262,15,1774,49],[2263,6,1774,54],[2263,7,1774,55],[2264,4,1775,4],[2265,4,1776,4],[2266,0,1777,0],[2267,0,1778,0],[2268,0,1779,0],[2269,4,1780,4],[2269,10,1780,10,"_recoverAndRefresh"],[2269,28,1780,28,"_recoverAndRefresh"],[2269,29,1780,28],[2269,31,1780,31],[2270,6,1781,8],[2270,10,1781,12,"_a"],[2270,12,1781,14],[2270,14,1781,16,"_b"],[2270,16,1781,18],[2271,6,1782,8],[2271,12,1782,14,"debugName"],[2271,21,1782,23],[2271,24,1782,26],[2271,47,1782,49],[2272,6,1783,8],[2272,10,1783,12],[2272,11,1783,13,"_debug"],[2272,17,1783,19],[2272,18,1783,20,"debugName"],[2272,27,1783,29],[2272,29,1783,31],[2272,36,1783,38],[2272,37,1783,39],[2273,6,1784,8],[2273,10,1784,12],[2274,8,1785,12],[2274,14,1785,18,"currentSession"],[2274,28,1785,32],[2274,31,1785,36],[2274,37,1785,42],[2274,41,1785,42,"getItemAsync"],[2274,52,1785,54],[2274,53,1785,54,"getItemAsync"],[2274,65,1785,54],[2274,67,1785,55],[2274,71,1785,59],[2274,72,1785,60,"storage"],[2274,79,1785,67],[2274,81,1785,69],[2274,85,1785,73],[2274,86,1785,74,"storageKey"],[2274,96,1785,84],[2274,97,1785,86],[2275,8,1786,12],[2275,12,1786,16,"currentSession"],[2275,26,1786,30],[2275,30,1786,34],[2275,34,1786,38],[2275,35,1786,39,"userStorage"],[2275,46,1786,50],[2275,48,1786,52],[2276,10,1787,16],[2276,14,1787,20,"maybeUser"],[2276,23,1787,29],[2276,26,1787,33],[2276,32,1787,39],[2276,36,1787,39,"getItemAsync"],[2276,47,1787,51],[2276,48,1787,51,"getItemAsync"],[2276,60,1787,51],[2276,62,1787,52],[2276,66,1787,56],[2276,67,1787,57,"userStorage"],[2276,78,1787,68],[2276,80,1787,70],[2276,84,1787,74],[2276,85,1787,75,"storageKey"],[2276,95,1787,85],[2276,98,1787,88],[2276,105,1787,95],[2276,106,1787,97],[2277,10,1788,16],[2277,14,1788,20],[2277,15,1788,21],[2277,19,1788,25],[2277,20,1788,26,"storage"],[2277,27,1788,33],[2277,28,1788,34,"isServer"],[2277,36,1788,42],[2277,40,1788,46,"Object"],[2277,46,1788,52],[2277,47,1788,53,"is"],[2277,49,1788,55],[2277,50,1788,56],[2277,54,1788,60],[2277,55,1788,61,"storage"],[2277,62,1788,68],[2277,64,1788,70],[2277,68,1788,74],[2277,69,1788,75,"userStorage"],[2277,80,1788,86],[2277,81,1788,87],[2277,85,1788,91],[2277,86,1788,92,"maybeUser"],[2277,95,1788,101],[2277,97,1788,103],[2278,12,1789,20],[2279,12,1790,20],[2280,12,1791,20],[2281,12,1792,20],[2282,12,1793,20,"maybeUser"],[2282,21,1793,29],[2282,24,1793,32],[2283,14,1793,34,"user"],[2283,18,1793,38],[2283,20,1793,40,"currentSession"],[2283,34,1793,54],[2283,35,1793,55,"user"],[2284,12,1793,60],[2284,13,1793,61],[2285,12,1794,20],[2285,18,1794,26],[2285,22,1794,26,"setItemAsync"],[2285,33,1794,38],[2285,34,1794,38,"setItemAsync"],[2285,46,1794,38],[2285,48,1794,39],[2285,52,1794,43],[2285,53,1794,44,"userStorage"],[2285,64,1794,55],[2285,66,1794,57],[2285,70,1794,61],[2285,71,1794,62,"storageKey"],[2285,81,1794,72],[2285,84,1794,75],[2285,91,1794,82],[2285,93,1794,84,"maybeUser"],[2285,102,1794,93],[2285,103,1794,94],[2286,10,1795,16],[2287,10,1796,16,"currentSession"],[2287,24,1796,30],[2287,25,1796,31,"user"],[2287,29,1796,35],[2287,32,1796,38],[2287,33,1796,39,"_a"],[2287,35,1796,41],[2287,38,1796,44,"maybeUser"],[2287,47,1796,53],[2287,52,1796,58],[2287,56,1796,62],[2287,60,1796,66,"maybeUser"],[2287,69,1796,75],[2287,74,1796,80],[2287,79,1796,85],[2287,80,1796,86],[2287,83,1796,89],[2287,88,1796,94],[2287,89,1796,95],[2287,92,1796,98,"maybeUser"],[2287,101,1796,107],[2287,102,1796,108,"user"],[2287,106,1796,112],[2287,112,1796,118],[2287,116,1796,122],[2287,120,1796,126,"_a"],[2287,122,1796,128],[2287,127,1796,133],[2287,132,1796,138],[2287,133,1796,139],[2287,136,1796,142,"_a"],[2287,138,1796,144],[2287,141,1796,147],[2287,145,1796,147,"userNotAvailableProxy"],[2287,156,1796,168],[2287,157,1796,168,"userNotAvailableProxy"],[2287,178,1796,168],[2287,180,1796,169],[2287,181,1796,170],[2288,8,1797,12],[2288,9,1797,13],[2288,15,1798,17],[2288,19,1798,21,"currentSession"],[2288,33,1798,35],[2288,37,1798,39],[2288,38,1798,40,"currentSession"],[2288,52,1798,54],[2288,53,1798,55,"user"],[2288,57,1798,59],[2288,59,1798,61],[2289,10,1799,16],[2290,10,1800,16],[2291,10,1801,16],[2291,14,1801,20],[2291,15,1801,21,"currentSession"],[2291,29,1801,35],[2291,30,1801,36,"user"],[2291,34,1801,40],[2291,36,1801,42],[2292,12,1802,20],[2293,12,1803,20],[2293,18,1803,26,"separateUser"],[2293,30,1803,38],[2293,33,1803,42],[2293,39,1803,48],[2293,43,1803,48,"getItemAsync"],[2293,54,1803,60],[2293,55,1803,60,"getItemAsync"],[2293,67,1803,60],[2293,69,1803,61],[2293,73,1803,65],[2293,74,1803,66,"storage"],[2293,81,1803,73],[2293,83,1803,75],[2293,87,1803,79],[2293,88,1803,80,"storageKey"],[2293,98,1803,90],[2293,101,1803,93],[2293,108,1803,100],[2293,109,1803,102],[2294,12,1804,20],[2294,16,1804,24,"separateUser"],[2294,28,1804,36],[2294,33,1804,41,"separateUser"],[2294,45,1804,53],[2294,50,1804,58],[2294,54,1804,62],[2294,58,1804,66,"separateUser"],[2294,70,1804,78],[2294,75,1804,83],[2294,80,1804,88],[2294,81,1804,89],[2294,84,1804,92],[2294,89,1804,97],[2294,90,1804,98],[2294,93,1804,101,"separateUser"],[2294,105,1804,113],[2294,106,1804,114,"user"],[2294,110,1804,118],[2294,111,1804,119],[2294,113,1804,121],[2295,14,1805,24,"currentSession"],[2295,28,1805,38],[2295,29,1805,39,"user"],[2295,33,1805,43],[2295,36,1805,46,"separateUser"],[2295,48,1805,58],[2295,49,1805,59,"user"],[2295,53,1805,63],[2296,14,1806,24],[2296,20,1806,30],[2296,24,1806,30,"removeItemAsync"],[2296,35,1806,45],[2296,36,1806,45,"removeItemAsync"],[2296,51,1806,45],[2296,53,1806,46],[2296,57,1806,50],[2296,58,1806,51,"storage"],[2296,65,1806,58],[2296,67,1806,60],[2296,71,1806,64],[2296,72,1806,65,"storageKey"],[2296,82,1806,75],[2296,85,1806,78],[2296,92,1806,85],[2296,93,1806,86],[2297,14,1807,24],[2297,20,1807,30],[2297,24,1807,30,"setItemAsync"],[2297,35,1807,42],[2297,36,1807,42,"setItemAsync"],[2297,48,1807,42],[2297,50,1807,43],[2297,54,1807,47],[2297,55,1807,48,"storage"],[2297,62,1807,55],[2297,64,1807,57],[2297,68,1807,61],[2297,69,1807,62,"storageKey"],[2297,79,1807,72],[2297,81,1807,74,"currentSession"],[2297,95,1807,88],[2297,96,1807,89],[2298,12,1808,20],[2298,13,1808,21],[2298,19,1809,25],[2299,14,1810,24,"currentSession"],[2299,28,1810,38],[2299,29,1810,39,"user"],[2299,33,1810,43],[2299,36,1810,46],[2299,40,1810,46,"userNotAvailableProxy"],[2299,51,1810,67],[2299,52,1810,67,"userNotAvailableProxy"],[2299,73,1810,67],[2299,75,1810,68],[2299,76,1810,69],[2300,12,1811,20],[2301,10,1812,16],[2302,8,1813,12],[2303,8,1814,12],[2303,12,1814,16],[2303,13,1814,17,"_debug"],[2303,19,1814,23],[2303,20,1814,24,"debugName"],[2303,29,1814,33],[2303,31,1814,35],[2303,53,1814,57],[2303,55,1814,59,"currentSession"],[2303,69,1814,73],[2303,70,1814,74],[2304,8,1815,12],[2304,12,1815,16],[2304,13,1815,17],[2304,17,1815,21],[2304,18,1815,22,"_isValidSession"],[2304,33,1815,37],[2304,34,1815,38,"currentSession"],[2304,48,1815,52],[2304,49,1815,53],[2304,51,1815,55],[2305,10,1816,16],[2305,14,1816,20],[2305,15,1816,21,"_debug"],[2305,21,1816,27],[2305,22,1816,28,"debugName"],[2305,31,1816,37],[2305,33,1816,39],[2305,55,1816,61],[2305,56,1816,62],[2306,10,1817,16],[2306,14,1817,20,"currentSession"],[2306,28,1817,34],[2306,33,1817,39],[2306,37,1817,43],[2306,39,1817,45],[2307,12,1818,20],[2307,18,1818,26],[2307,22,1818,30],[2307,23,1818,31,"_removeSession"],[2307,37,1818,45],[2307,38,1818,46],[2307,39,1818,47],[2308,10,1819,16],[2309,10,1820,16],[2310,8,1821,12],[2311,8,1822,12],[2311,14,1822,18,"expiresWithMargin"],[2311,31,1822,35],[2311,34,1822,38],[2311,35,1822,39],[2311,36,1822,40,"_b"],[2311,38,1822,42],[2311,41,1822,45,"currentSession"],[2311,55,1822,59],[2311,56,1822,60,"expires_at"],[2311,66,1822,70],[2311,72,1822,76],[2311,76,1822,80],[2311,80,1822,84,"_b"],[2311,82,1822,86],[2311,87,1822,91],[2311,92,1822,96],[2311,93,1822,97],[2311,96,1822,100,"_b"],[2311,98,1822,102],[2311,101,1822,105,"Infinity"],[2311,109,1822,113],[2311,113,1822,117],[2311,117,1822,121],[2311,120,1822,124,"Date"],[2311,124,1822,128],[2311,125,1822,129,"now"],[2311,128,1822,132],[2311,129,1822,133],[2311,130,1822,134],[2311,133,1822,137,"EXPIRY_MARGIN_MS"],[2311,146,1822,153],[2311,147,1822,153,"EXPIRY_MARGIN_MS"],[2311,163,1822,153],[2312,8,1823,12],[2312,12,1823,16],[2312,13,1823,17,"_debug"],[2312,19,1823,23],[2312,20,1823,24,"debugName"],[2312,29,1823,33],[2312,31,1823,35],[2312,45,1823,49,"expiresWithMargin"],[2312,62,1823,66],[2312,65,1823,69],[2312,67,1823,71],[2312,70,1823,74],[2312,76,1823,80],[2312,103,1823,107,"EXPIRY_MARGIN_MS"],[2312,116,1823,123],[2312,117,1823,123,"EXPIRY_MARGIN_MS"],[2312,133,1823,123],[2312,136,1823,126],[2312,137,1823,127],[2313,8,1824,12],[2313,12,1824,16,"expiresWithMargin"],[2313,29,1824,33],[2313,31,1824,35],[2314,10,1825,16],[2314,14,1825,20],[2314,18,1825,24],[2314,19,1825,25,"autoRefreshToken"],[2314,35,1825,41],[2314,39,1825,45,"currentSession"],[2314,53,1825,59],[2314,54,1825,60,"refresh_token"],[2314,67,1825,73],[2314,69,1825,75],[2315,12,1826,20],[2315,18,1826,26],[2316,14,1826,28,"error"],[2317,12,1826,34],[2317,13,1826,35],[2317,16,1826,38],[2317,22,1826,44],[2317,26,1826,48],[2317,27,1826,49,"_callRefreshToken"],[2317,44,1826,66],[2317,45,1826,67,"currentSession"],[2317,59,1826,81],[2317,60,1826,82,"refresh_token"],[2317,73,1826,95],[2317,74,1826,96],[2318,12,1827,20],[2318,16,1827,24,"error"],[2318,21,1827,29],[2318,23,1827,31],[2319,14,1828,24,"console"],[2319,21,1828,31],[2319,22,1828,32,"error"],[2319,27,1828,37],[2319,28,1828,38,"error"],[2319,33,1828,43],[2319,34,1828,44],[2320,14,1829,24],[2320,18,1829,28],[2320,19,1829,29],[2320,23,1829,29,"isAuthRetryableFetchError"],[2320,33,1829,54],[2320,34,1829,54,"isAuthRetryableFetchError"],[2320,59,1829,54],[2320,61,1829,55,"error"],[2320,66,1829,60],[2320,67,1829,61],[2320,69,1829,63],[2321,16,1830,28],[2321,20,1830,32],[2321,21,1830,33,"_debug"],[2321,27,1830,39],[2321,28,1830,40,"debugName"],[2321,37,1830,49],[2321,39,1830,51],[2321,104,1830,116],[2321,106,1830,118,"error"],[2321,111,1830,123],[2321,112,1830,124],[2322,16,1831,28],[2322,22,1831,34],[2322,26,1831,38],[2322,27,1831,39,"_removeSession"],[2322,41,1831,53],[2322,42,1831,54],[2322,43,1831,55],[2323,14,1832,24],[2324,12,1833,20],[2325,10,1834,16],[2326,8,1835,12],[2326,9,1835,13],[2326,15,1836,17],[2326,19,1836,21,"currentSession"],[2326,33,1836,35],[2326,34,1836,36,"user"],[2326,38,1836,40],[2326,42,1837,16,"currentSession"],[2326,56,1837,30],[2326,57,1837,31,"user"],[2326,61,1837,35],[2326,62,1837,36,"__isUserNotAvailableProxy"],[2326,87,1837,61],[2326,92,1837,66],[2326,96,1837,70],[2326,98,1837,72],[2327,10,1838,16],[2328,10,1839,16],[2328,14,1839,20],[2329,12,1840,20],[2329,18,1840,26],[2330,14,1840,28,"data"],[2330,18,1840,32],[2331,14,1840,34,"error"],[2331,19,1840,39],[2331,21,1840,41,"userError"],[2332,12,1840,51],[2332,13,1840,52],[2332,16,1840,55],[2332,22,1840,61],[2332,26,1840,65],[2332,27,1840,66,"_getUser"],[2332,35,1840,74],[2332,36,1840,75,"currentSession"],[2332,50,1840,89],[2332,51,1840,90,"access_token"],[2332,63,1840,102],[2332,64,1840,103],[2333,12,1841,20],[2333,16,1841,24],[2333,17,1841,25,"userError"],[2333,26,1841,34],[2333,31,1841,39,"data"],[2333,35,1841,43],[2333,40,1841,48],[2333,44,1841,52],[2333,48,1841,56,"data"],[2333,52,1841,60],[2333,57,1841,65],[2333,62,1841,70],[2333,63,1841,71],[2333,66,1841,74],[2333,71,1841,79],[2333,72,1841,80],[2333,75,1841,83,"data"],[2333,79,1841,87],[2333,80,1841,88,"user"],[2333,84,1841,92],[2333,85,1841,93],[2333,87,1841,95],[2334,14,1842,24,"currentSession"],[2334,28,1842,38],[2334,29,1842,39,"user"],[2334,33,1842,43],[2334,36,1842,46,"data"],[2334,40,1842,50],[2334,41,1842,51,"user"],[2334,45,1842,55],[2335,14,1843,24],[2335,20,1843,30],[2335,24,1843,34],[2335,25,1843,35,"_saveSession"],[2335,37,1843,47],[2335,38,1843,48,"currentSession"],[2335,52,1843,62],[2335,53,1843,63],[2336,14,1844,24],[2336,20,1844,30],[2336,24,1844,34],[2336,25,1844,35,"_notifyAllSubscribers"],[2336,46,1844,56],[2336,47,1844,57],[2336,58,1844,68],[2336,60,1844,70,"currentSession"],[2336,74,1844,84],[2336,75,1844,85],[2337,12,1845,20],[2337,13,1845,21],[2337,19,1846,25],[2338,14,1847,24],[2338,18,1847,28],[2338,19,1847,29,"_debug"],[2338,25,1847,35],[2338,26,1847,36,"debugName"],[2338,35,1847,45],[2338,37,1847,47],[2338,95,1847,105],[2338,96,1847,106],[2339,12,1848,20],[2340,10,1849,16],[2340,11,1849,17],[2340,12,1850,16],[2340,19,1850,23,"getUserError"],[2340,31,1850,35],[2340,33,1850,37],[2341,12,1851,20,"console"],[2341,19,1851,27],[2341,20,1851,28,"error"],[2341,25,1851,33],[2341,26,1851,34],[2341,52,1851,60],[2341,54,1851,62,"getUserError"],[2341,66,1851,74],[2341,67,1851,75],[2342,12,1852,20],[2342,16,1852,24],[2342,17,1852,25,"_debug"],[2342,23,1852,31],[2342,24,1852,32,"debugName"],[2342,33,1852,41],[2342,35,1852,43],[2342,93,1852,101],[2342,95,1852,103,"getUserError"],[2342,107,1852,115],[2342,108,1852,116],[2343,10,1853,16],[2344,8,1854,12],[2344,9,1854,13],[2344,15,1855,17],[2345,10,1856,16],[2346,10,1857,16],[2347,10,1858,16],[2348,10,1859,16],[2348,16,1859,22],[2348,20,1859,26],[2348,21,1859,27,"_notifyAllSubscribers"],[2348,42,1859,48],[2348,43,1859,49],[2348,54,1859,60],[2348,56,1859,62,"currentSession"],[2348,70,1859,76],[2348,71,1859,77],[2349,8,1860,12],[2350,6,1861,8],[2350,7,1861,9],[2350,8,1862,8],[2350,15,1862,15,"err"],[2350,18,1862,18],[2350,20,1862,20],[2351,8,1863,12],[2351,12,1863,16],[2351,13,1863,17,"_debug"],[2351,19,1863,23],[2351,20,1863,24,"debugName"],[2351,29,1863,33],[2351,31,1863,35],[2351,38,1863,42],[2351,40,1863,44,"err"],[2351,43,1863,47],[2351,44,1863,48],[2352,8,1864,12,"console"],[2352,15,1864,19],[2352,16,1864,20,"error"],[2352,21,1864,25],[2352,22,1864,26,"err"],[2352,25,1864,29],[2352,26,1864,30],[2353,8,1865,12],[2354,6,1866,8],[2354,7,1866,9],[2354,16,1867,16],[2355,8,1868,12],[2355,12,1868,16],[2355,13,1868,17,"_debug"],[2355,19,1868,23],[2355,20,1868,24,"debugName"],[2355,29,1868,33],[2355,31,1868,35],[2355,36,1868,40],[2355,37,1868,41],[2356,6,1869,8],[2357,4,1870,4],[2358,4,1871,4],[2358,10,1871,10,"_callRefreshToken"],[2358,27,1871,27,"_callRefreshToken"],[2358,28,1871,28,"refreshToken"],[2358,40,1871,40],[2358,42,1871,42],[2359,6,1872,8],[2359,10,1872,12,"_a"],[2359,12,1872,14],[2359,14,1872,16,"_b"],[2359,16,1872,18],[2360,6,1873,8],[2360,10,1873,12],[2360,11,1873,13,"refreshToken"],[2360,23,1873,25],[2360,25,1873,27],[2361,8,1874,12],[2361,14,1874,18],[2361,18,1874,22,"AuthSessionMissingError"],[2361,28,1874,45],[2361,29,1874,45,"AuthSessionMissingError"],[2361,52,1874,45],[2361,53,1874,46],[2361,54,1874,47],[2362,6,1875,8],[2363,6,1876,8],[2364,6,1877,8],[2364,10,1877,12],[2364,14,1877,16],[2364,15,1877,17,"refreshingDeferred"],[2364,33,1877,35],[2364,35,1877,37],[2365,8,1878,12],[2365,15,1878,19],[2365,19,1878,23],[2365,20,1878,24,"refreshingDeferred"],[2365,38,1878,42],[2365,39,1878,43,"promise"],[2365,46,1878,50],[2366,6,1879,8],[2367,6,1880,8],[2367,12,1880,14,"debugName"],[2367,21,1880,23],[2367,24,1880,26],[2367,46,1880,48,"refreshToken"],[2367,58,1880,60],[2367,59,1880,61,"substring"],[2367,68,1880,70],[2367,69,1880,71],[2367,70,1880,72],[2367,72,1880,74],[2367,73,1880,75],[2367,74,1880,76],[2367,80,1880,82],[2368,6,1881,8],[2368,10,1881,12],[2368,11,1881,13,"_debug"],[2368,17,1881,19],[2368,18,1881,20,"debugName"],[2368,27,1881,29],[2368,29,1881,31],[2368,36,1881,38],[2368,37,1881,39],[2369,6,1882,8],[2369,10,1882,12],[2370,8,1883,12],[2370,12,1883,16],[2370,13,1883,17,"refreshingDeferred"],[2370,31,1883,35],[2370,34,1883,38],[2370,38,1883,42,"Deferred"],[2370,49,1883,50],[2370,50,1883,50,"Deferred"],[2370,58,1883,50],[2370,59,1883,51],[2370,60,1883,52],[2371,8,1884,12],[2371,14,1884,18],[2372,10,1884,20,"data"],[2372,14,1884,24],[2373,10,1884,26,"error"],[2374,8,1884,32],[2374,9,1884,33],[2374,12,1884,36],[2374,18,1884,42],[2374,22,1884,46],[2374,23,1884,47,"_refreshAccessToken"],[2374,42,1884,66],[2374,43,1884,67,"refreshToken"],[2374,55,1884,79],[2374,56,1884,80],[2375,8,1885,12],[2375,12,1885,16,"error"],[2375,17,1885,21],[2375,19,1886,16],[2375,25,1886,22,"error"],[2375,30,1886,27],[2376,8,1887,12],[2376,12,1887,16],[2376,13,1887,17,"data"],[2376,17,1887,21],[2376,18,1887,22,"session"],[2376,25,1887,29],[2376,27,1888,16],[2376,33,1888,22],[2376,37,1888,26,"AuthSessionMissingError"],[2376,47,1888,49],[2376,48,1888,49,"AuthSessionMissingError"],[2376,71,1888,49],[2376,72,1888,50],[2376,73,1888,51],[2377,8,1889,12],[2377,14,1889,18],[2377,18,1889,22],[2377,19,1889,23,"_saveSession"],[2377,31,1889,35],[2377,32,1889,36,"data"],[2377,36,1889,40],[2377,37,1889,41,"session"],[2377,44,1889,48],[2377,45,1889,49],[2378,8,1890,12],[2378,14,1890,18],[2378,18,1890,22],[2378,19,1890,23,"_notifyAllSubscribers"],[2378,40,1890,44],[2378,41,1890,45],[2378,58,1890,62],[2378,60,1890,64,"data"],[2378,64,1890,68],[2378,65,1890,69,"session"],[2378,72,1890,76],[2378,73,1890,77],[2379,8,1891,12],[2379,14,1891,18,"result"],[2379,20,1891,24],[2379,23,1891,27],[2380,10,1891,29,"data"],[2380,14,1891,33],[2380,16,1891,35,"data"],[2380,20,1891,39],[2380,21,1891,40,"session"],[2380,28,1891,47],[2381,10,1891,49,"error"],[2381,15,1891,54],[2381,17,1891,56],[2382,8,1891,61],[2382,9,1891,62],[2383,8,1892,12],[2383,12,1892,16],[2383,13,1892,17,"refreshingDeferred"],[2383,31,1892,35],[2383,32,1892,36,"resolve"],[2383,39,1892,43],[2383,40,1892,44,"result"],[2383,46,1892,50],[2383,47,1892,51],[2384,8,1893,12],[2384,15,1893,19,"result"],[2384,21,1893,25],[2385,6,1894,8],[2385,7,1894,9],[2385,8,1895,8],[2385,15,1895,15,"error"],[2385,20,1895,20],[2385,22,1895,22],[2386,8,1896,12],[2386,12,1896,16],[2386,13,1896,17,"_debug"],[2386,19,1896,23],[2386,20,1896,24,"debugName"],[2386,29,1896,33],[2386,31,1896,35],[2386,38,1896,42],[2386,40,1896,44,"error"],[2386,45,1896,49],[2386,46,1896,50],[2387,8,1897,12],[2387,12,1897,16],[2387,16,1897,16,"isAuthError"],[2387,26,1897,27],[2387,27,1897,27,"isAuthError"],[2387,38,1897,27],[2387,40,1897,28,"error"],[2387,45,1897,33],[2387,46,1897,34],[2387,48,1897,36],[2388,10,1898,16],[2388,16,1898,22,"result"],[2388,22,1898,28],[2388,25,1898,31],[2389,12,1898,33,"data"],[2389,16,1898,37],[2389,18,1898,39],[2389,22,1898,43],[2390,12,1898,45,"error"],[2391,10,1898,51],[2391,11,1898,52],[2392,10,1899,16],[2392,14,1899,20],[2392,15,1899,21],[2392,19,1899,21,"isAuthRetryableFetchError"],[2392,29,1899,46],[2392,30,1899,46,"isAuthRetryableFetchError"],[2392,55,1899,46],[2392,57,1899,47,"error"],[2392,62,1899,52],[2392,63,1899,53],[2392,65,1899,55],[2393,12,1900,20],[2393,18,1900,26],[2393,22,1900,30],[2393,23,1900,31,"_removeSession"],[2393,37,1900,45],[2393,38,1900,46],[2393,39,1900,47],[2394,10,1901,16],[2395,10,1902,16],[2395,11,1902,17,"_a"],[2395,13,1902,19],[2395,16,1902,22],[2395,20,1902,26],[2395,21,1902,27,"refreshingDeferred"],[2395,39,1902,45],[2395,45,1902,51],[2395,49,1902,55],[2395,53,1902,59,"_a"],[2395,55,1902,61],[2395,60,1902,66],[2395,65,1902,71],[2395,66,1902,72],[2395,69,1902,75],[2395,74,1902,80],[2395,75,1902,81],[2395,78,1902,84,"_a"],[2395,80,1902,86],[2395,81,1902,87,"resolve"],[2395,88,1902,94],[2395,89,1902,95,"result"],[2395,95,1902,101],[2395,96,1902,102],[2396,10,1903,16],[2396,17,1903,23,"result"],[2396,23,1903,29],[2397,8,1904,12],[2398,8,1905,12],[2398,9,1905,13,"_b"],[2398,11,1905,15],[2398,14,1905,18],[2398,18,1905,22],[2398,19,1905,23,"refreshingDeferred"],[2398,37,1905,41],[2398,43,1905,47],[2398,47,1905,51],[2398,51,1905,55,"_b"],[2398,53,1905,57],[2398,58,1905,62],[2398,63,1905,67],[2398,64,1905,68],[2398,67,1905,71],[2398,72,1905,76],[2398,73,1905,77],[2398,76,1905,80,"_b"],[2398,78,1905,82],[2398,79,1905,83,"reject"],[2398,85,1905,89],[2398,86,1905,90,"error"],[2398,91,1905,95],[2398,92,1905,96],[2399,8,1906,12],[2399,14,1906,18,"error"],[2399,19,1906,23],[2400,6,1907,8],[2400,7,1907,9],[2400,16,1908,16],[2401,8,1909,12],[2401,12,1909,16],[2401,13,1909,17,"refreshingDeferred"],[2401,31,1909,35],[2401,34,1909,38],[2401,38,1909,42],[2402,8,1910,12],[2402,12,1910,16],[2402,13,1910,17,"_debug"],[2402,19,1910,23],[2402,20,1910,24,"debugName"],[2402,29,1910,33],[2402,31,1910,35],[2402,36,1910,40],[2402,37,1910,41],[2403,6,1911,8],[2404,4,1912,4],[2405,4,1913,4],[2405,10,1913,10,"_notifyAllSubscribers"],[2405,31,1913,31,"_notifyAllSubscribers"],[2405,32,1913,32,"event"],[2405,37,1913,37],[2405,39,1913,39,"session"],[2405,46,1913,46],[2405,48,1913,48,"broadcast"],[2405,57,1913,57],[2405,60,1913,60],[2405,64,1913,64],[2405,66,1913,66],[2406,6,1914,8],[2406,12,1914,14,"debugName"],[2406,21,1914,23],[2406,24,1914,26],[2406,50,1914,52,"event"],[2406,55,1914,57],[2406,58,1914,60],[2407,6,1915,8],[2407,10,1915,12],[2407,11,1915,13,"_debug"],[2407,17,1915,19],[2407,18,1915,20,"debugName"],[2407,27,1915,29],[2407,29,1915,31],[2407,36,1915,38],[2407,38,1915,40,"session"],[2407,45,1915,47],[2407,47,1915,49],[2407,62,1915,64,"broadcast"],[2407,71,1915,73],[2407,73,1915,75],[2407,74,1915,76],[2408,6,1916,8],[2408,10,1916,12],[2409,8,1917,12],[2409,12,1917,16],[2409,16,1917,20],[2409,17,1917,21,"broadcastChannel"],[2409,33,1917,37],[2409,37,1917,41,"broadcast"],[2409,46,1917,50],[2409,48,1917,52],[2410,10,1918,16],[2410,14,1918,20],[2410,15,1918,21,"broadcastChannel"],[2410,31,1918,37],[2410,32,1918,38,"postMessage"],[2410,43,1918,49],[2410,44,1918,50],[2411,12,1918,52,"event"],[2411,17,1918,57],[2412,12,1918,59,"session"],[2413,10,1918,67],[2413,11,1918,68],[2413,12,1918,69],[2414,8,1919,12],[2415,8,1920,12],[2415,14,1920,18,"errors"],[2415,20,1920,24],[2415,23,1920,27],[2415,25,1920,29],[2416,8,1921,12],[2416,14,1921,18,"promises"],[2416,22,1921,26],[2416,25,1921,29,"Array"],[2416,30,1921,34],[2416,31,1921,35,"from"],[2416,35,1921,39],[2416,36,1921,40],[2416,40,1921,44],[2416,41,1921,45,"stateChangeEmitters"],[2416,60,1921,64],[2416,61,1921,65,"values"],[2416,67,1921,71],[2416,68,1921,72],[2416,69,1921,73],[2416,70,1921,74],[2416,71,1921,75,"map"],[2416,74,1921,78],[2416,75,1921,79],[2416,81,1921,86,"x"],[2416,82,1921,87],[2416,86,1921,92],[2417,10,1922,16],[2417,14,1922,20],[2418,12,1923,20],[2418,18,1923,26,"x"],[2418,19,1923,27],[2418,20,1923,28,"callback"],[2418,28,1923,36],[2418,29,1923,37,"event"],[2418,34,1923,42],[2418,36,1923,44,"session"],[2418,43,1923,51],[2418,44,1923,52],[2419,10,1924,16],[2419,11,1924,17],[2419,12,1925,16],[2419,19,1925,23,"e"],[2419,20,1925,24],[2419,22,1925,26],[2420,12,1926,20,"errors"],[2420,18,1926,26],[2420,19,1926,27,"push"],[2420,23,1926,31],[2420,24,1926,32,"e"],[2420,25,1926,33],[2420,26,1926,34],[2421,10,1927,16],[2422,8,1928,12],[2422,9,1928,13],[2422,10,1928,14],[2423,8,1929,12],[2423,14,1929,18,"Promise"],[2423,21,1929,25],[2423,22,1929,26,"all"],[2423,25,1929,29],[2423,26,1929,30,"promises"],[2423,34,1929,38],[2423,35,1929,39],[2424,8,1930,12],[2424,12,1930,16,"errors"],[2424,18,1930,22],[2424,19,1930,23,"length"],[2424,25,1930,29],[2424,28,1930,32],[2424,29,1930,33],[2424,31,1930,35],[2425,10,1931,16],[2425,15,1931,21],[2425,19,1931,25,"i"],[2425,20,1931,26],[2425,23,1931,29],[2425,24,1931,30],[2425,26,1931,32,"i"],[2425,27,1931,33],[2425,30,1931,36,"errors"],[2425,36,1931,42],[2425,37,1931,43,"length"],[2425,43,1931,49],[2425,45,1931,51,"i"],[2425,46,1931,52],[2425,50,1931,56],[2425,51,1931,57],[2425,53,1931,59],[2426,12,1932,20,"console"],[2426,19,1932,27],[2426,20,1932,28,"error"],[2426,25,1932,33],[2426,26,1932,34,"errors"],[2426,32,1932,40],[2426,33,1932,41,"i"],[2426,34,1932,42],[2426,35,1932,43],[2426,36,1932,44],[2427,10,1933,16],[2428,10,1934,16],[2428,16,1934,22,"errors"],[2428,22,1934,28],[2428,23,1934,29],[2428,24,1934,30],[2428,25,1934,31],[2429,8,1935,12],[2430,6,1936,8],[2430,7,1936,9],[2430,16,1937,16],[2431,8,1938,12],[2431,12,1938,16],[2431,13,1938,17,"_debug"],[2431,19,1938,23],[2431,20,1938,24,"debugName"],[2431,29,1938,33],[2431,31,1938,35],[2431,36,1938,40],[2431,37,1938,41],[2432,6,1939,8],[2433,4,1940,4],[2434,4,1941,4],[2435,0,1942,0],[2436,0,1943,0],[2437,0,1944,0],[2438,4,1945,4],[2438,10,1945,10,"_saveSession"],[2438,22,1945,22,"_saveSession"],[2438,23,1945,23,"session"],[2438,30,1945,30],[2438,32,1945,32],[2439,6,1946,8],[2439,10,1946,12],[2439,11,1946,13,"_debug"],[2439,17,1946,19],[2439,18,1946,20],[2439,35,1946,37],[2439,37,1946,39,"session"],[2439,44,1946,46],[2439,45,1946,47],[2440,6,1947,8],[2441,6,1948,8],[2442,6,1949,8],[2442,10,1949,12],[2442,11,1949,13,"suppressGetSessionWarning"],[2442,36,1949,38],[2442,39,1949,41],[2442,43,1949,45],[2443,6,1950,8],[2444,6,1951,8],[2444,12,1951,14,"sessionToProcess"],[2444,28,1951,30],[2444,31,1951,33,"Object"],[2444,37,1951,39],[2444,38,1951,40,"assign"],[2444,44,1951,46],[2444,45,1951,47],[2444,46,1951,48],[2444,47,1951,49],[2444,49,1951,51,"session"],[2444,56,1951,58],[2444,57,1951,59],[2445,6,1952,8],[2445,12,1952,14,"userIsProxy"],[2445,23,1952,25],[2445,26,1952,28,"sessionToProcess"],[2445,42,1952,44],[2445,43,1952,45,"user"],[2445,47,1952,49],[2445,51,1952,53,"sessionToProcess"],[2445,67,1952,69],[2445,68,1952,70,"user"],[2445,72,1952,74],[2445,73,1952,75,"__isUserNotAvailableProxy"],[2445,98,1952,100],[2445,103,1952,105],[2445,107,1952,109],[2446,6,1953,8],[2446,10,1953,12],[2446,14,1953,16],[2446,15,1953,17,"userStorage"],[2446,26,1953,28],[2446,28,1953,30],[2447,8,1954,12],[2447,12,1954,16],[2447,13,1954,17,"userIsProxy"],[2447,24,1954,28],[2447,28,1954,32,"sessionToProcess"],[2447,44,1954,48],[2447,45,1954,49,"user"],[2447,49,1954,53],[2447,51,1954,55],[2448,10,1955,16],[2449,10,1956,16],[2449,16,1956,22],[2449,20,1956,22,"setItemAsync"],[2449,31,1956,34],[2449,32,1956,34,"setItemAsync"],[2449,44,1956,34],[2449,46,1956,35],[2449,50,1956,39],[2449,51,1956,40,"userStorage"],[2449,62,1956,51],[2449,64,1956,53],[2449,68,1956,57],[2449,69,1956,58,"storageKey"],[2449,79,1956,68],[2449,82,1956,71],[2449,89,1956,78],[2449,91,1956,80],[2450,12,1957,20,"user"],[2450,16,1957,24],[2450,18,1957,26,"sessionToProcess"],[2450,34,1957,42],[2450,35,1957,43,"user"],[2451,10,1958,16],[2451,11,1958,17],[2451,12,1958,18],[2452,8,1959,12],[2452,9,1959,13],[2452,15,1960,17],[2452,19,1960,21,"userIsProxy"],[2452,30,1960,32],[2452,32,1960,34],[2453,10,1961,16],[2454,10,1962,16],[2455,10,1963,16],[2456,10,1964,16],[2457,8,1964,16],[2458,8,1966,12],[2459,8,1967,12],[2460,8,1968,12],[2460,14,1968,18,"mainSessionData"],[2460,29,1968,33],[2460,32,1968,36,"Object"],[2460,38,1968,42],[2460,39,1968,43,"assign"],[2460,45,1968,49],[2460,46,1968,50],[2460,47,1968,51],[2460,48,1968,52],[2460,50,1968,54,"sessionToProcess"],[2460,66,1968,70],[2460,67,1968,71],[2461,8,1969,12],[2461,15,1969,19,"mainSessionData"],[2461,30,1969,34],[2461,31,1969,35,"user"],[2461,35,1969,39],[2461,36,1969,40],[2461,37,1969,41],[2462,8,1970,12],[2462,14,1970,18,"clonedMainSessionData"],[2462,35,1970,39],[2462,38,1970,42],[2462,42,1970,42,"deepClone"],[2462,53,1970,51],[2462,54,1970,51,"deepClone"],[2462,63,1970,51],[2462,65,1970,52,"mainSessionData"],[2462,80,1970,67],[2462,81,1970,68],[2463,8,1971,12],[2463,14,1971,18],[2463,18,1971,18,"setItemAsync"],[2463,29,1971,30],[2463,30,1971,30,"setItemAsync"],[2463,42,1971,30],[2463,44,1971,31],[2463,48,1971,35],[2463,49,1971,36,"storage"],[2463,56,1971,43],[2463,58,1971,45],[2463,62,1971,49],[2463,63,1971,50,"storageKey"],[2463,73,1971,60],[2463,75,1971,62,"clonedMainSessionData"],[2463,96,1971,83],[2463,97,1971,84],[2464,6,1972,8],[2464,7,1972,9],[2464,13,1973,13],[2465,8,1974,12],[2466,8,1975,12],[2467,8,1976,12],[2468,8,1977,12],[2468,14,1977,18,"clonedSession"],[2468,27,1977,31],[2468,30,1977,34],[2468,34,1977,34,"deepClone"],[2468,45,1977,43],[2468,46,1977,43,"deepClone"],[2468,55,1977,43],[2468,57,1977,44,"sessionToProcess"],[2468,73,1977,60],[2468,74,1977,61],[2468,75,1977,62],[2468,76,1977,63],[2469,8,1978,12],[2469,14,1978,18],[2469,18,1978,18,"setItemAsync"],[2469,29,1978,30],[2469,30,1978,30,"setItemAsync"],[2469,42,1978,30],[2469,44,1978,31],[2469,48,1978,35],[2469,49,1978,36,"storage"],[2469,56,1978,43],[2469,58,1978,45],[2469,62,1978,49],[2469,63,1978,50,"storageKey"],[2469,73,1978,60],[2469,75,1978,62,"clonedSession"],[2469,88,1978,75],[2469,89,1978,76],[2470,6,1979,8],[2471,4,1980,4],[2472,4,1981,4],[2472,10,1981,10,"_removeSession"],[2472,24,1981,24,"_removeSession"],[2472,25,1981,24],[2472,27,1981,27],[2473,6,1982,8],[2473,10,1982,12],[2473,11,1982,13,"_debug"],[2473,17,1982,19],[2473,18,1982,20],[2473,37,1982,39],[2473,38,1982,40],[2474,6,1983,8],[2474,12,1983,14],[2474,16,1983,14,"removeItemAsync"],[2474,27,1983,29],[2474,28,1983,29,"removeItemAsync"],[2474,43,1983,29],[2474,45,1983,30],[2474,49,1983,34],[2474,50,1983,35,"storage"],[2474,57,1983,42],[2474,59,1983,44],[2474,63,1983,48],[2474,64,1983,49,"storageKey"],[2474,74,1983,59],[2474,75,1983,60],[2475,6,1984,8],[2475,12,1984,14],[2475,16,1984,14,"removeItemAsync"],[2475,27,1984,29],[2475,28,1984,29,"removeItemAsync"],[2475,43,1984,29],[2475,45,1984,30],[2475,49,1984,34],[2475,50,1984,35,"storage"],[2475,57,1984,42],[2475,59,1984,44],[2475,63,1984,48],[2475,64,1984,49,"storageKey"],[2475,74,1984,59],[2475,77,1984,62],[2475,93,1984,78],[2475,94,1984,79],[2476,6,1985,8],[2476,12,1985,14],[2476,16,1985,14,"removeItemAsync"],[2476,27,1985,29],[2476,28,1985,29,"removeItemAsync"],[2476,43,1985,29],[2476,45,1985,30],[2476,49,1985,34],[2476,50,1985,35,"storage"],[2476,57,1985,42],[2476,59,1985,44],[2476,63,1985,48],[2476,64,1985,49,"storageKey"],[2476,74,1985,59],[2476,77,1985,62],[2476,84,1985,69],[2476,85,1985,70],[2477,6,1986,8],[2477,10,1986,12],[2477,14,1986,16],[2477,15,1986,17,"userStorage"],[2477,26,1986,28],[2477,28,1986,30],[2478,8,1987,12],[2478,14,1987,18],[2478,18,1987,18,"removeItemAsync"],[2478,29,1987,33],[2478,30,1987,33,"removeItemAsync"],[2478,45,1987,33],[2478,47,1987,34],[2478,51,1987,38],[2478,52,1987,39,"userStorage"],[2478,63,1987,50],[2478,65,1987,52],[2478,69,1987,56],[2478,70,1987,57,"storageKey"],[2478,80,1987,67],[2478,83,1987,70],[2478,90,1987,77],[2478,91,1987,78],[2479,6,1988,8],[2480,6,1989,8],[2480,12,1989,14],[2480,16,1989,18],[2480,17,1989,19,"_notifyAllSubscribers"],[2480,38,1989,40],[2480,39,1989,41],[2480,51,1989,53],[2480,53,1989,55],[2480,57,1989,59],[2480,58,1989,60],[2481,4,1990,4],[2482,4,1991,4],[2483,0,1992,0],[2484,0,1993,0],[2485,0,1994,0],[2486,0,1995,0],[2487,0,1996,0],[2488,4,1997,4,"_removeVisibilityChangedCallback"],[2488,36,1997,36,"_removeVisibilityChangedCallback"],[2488,37,1997,36],[2488,39,1997,39],[2489,6,1998,8],[2489,10,1998,12],[2489,11,1998,13,"_debug"],[2489,17,1998,19],[2489,18,1998,20],[2489,55,1998,57],[2489,56,1998,58],[2490,6,1999,8],[2490,12,1999,14,"callback"],[2490,20,1999,22],[2490,23,1999,25],[2490,27,1999,29],[2490,28,1999,30,"visibilityChangedCallback"],[2490,53,1999,55],[2491,6,2000,8],[2491,10,2000,12],[2491,11,2000,13,"visibilityChangedCallback"],[2491,36,2000,38],[2491,39,2000,41],[2491,43,2000,45],[2492,6,2001,8],[2492,10,2001,12],[2493,8,2002,12],[2493,12,2002,16,"callback"],[2493,20,2002,24],[2493,24,2002,28],[2493,28,2002,28,"isBrowser"],[2493,39,2002,37],[2493,40,2002,37,"isBrowser"],[2493,49,2002,37],[2493,51,2002,38],[2493,52,2002,39],[2493,57,2002,44,"window"],[2493,63,2002,50],[2493,68,2002,55],[2493,72,2002,59],[2493,76,2002,63,"window"],[2493,82,2002,69],[2493,87,2002,74],[2493,92,2002,79],[2493,93,2002,80],[2493,96,2002,83],[2493,101,2002,88],[2493,102,2002,89],[2493,105,2002,92,"window"],[2493,111,2002,98],[2493,112,2002,99,"removeEventListener"],[2493,131,2002,118],[2493,132,2002,119],[2493,134,2002,121],[2494,10,2003,16,"window"],[2494,16,2003,22],[2494,17,2003,23,"removeEventListener"],[2494,36,2003,42],[2494,37,2003,43],[2494,55,2003,61],[2494,57,2003,63,"callback"],[2494,65,2003,71],[2494,66,2003,72],[2495,8,2004,12],[2496,6,2005,8],[2496,7,2005,9],[2496,8,2006,8],[2496,15,2006,15,"e"],[2496,16,2006,16],[2496,18,2006,18],[2497,8,2007,12,"console"],[2497,15,2007,19],[2497,16,2007,20,"error"],[2497,21,2007,25],[2497,22,2007,26],[2497,65,2007,69],[2497,67,2007,71,"e"],[2497,68,2007,72],[2497,69,2007,73],[2498,6,2008,8],[2499,4,2009,4],[2500,4,2010,4],[2501,0,2011,0],[2502,0,2012,0],[2503,0,2013,0],[2504,4,2014,4],[2504,10,2014,10,"_startAutoRefresh"],[2504,27,2014,27,"_startAutoRefresh"],[2504,28,2014,27],[2504,30,2014,30],[2505,6,2015,8],[2505,12,2015,14],[2505,16,2015,18],[2505,17,2015,19,"_stopAutoRefresh"],[2505,33,2015,35],[2505,34,2015,36],[2505,35,2015,37],[2506,6,2016,8],[2506,10,2016,12],[2506,11,2016,13,"_debug"],[2506,17,2016,19],[2506,18,2016,20],[2506,40,2016,42],[2506,41,2016,43],[2507,6,2017,8],[2507,12,2017,14,"ticker"],[2507,18,2017,20],[2507,21,2017,23,"setInterval"],[2507,32,2017,34],[2507,33,2017,35],[2507,39,2017,41],[2507,43,2017,45],[2507,44,2017,46,"_autoRefreshTokenTick"],[2507,65,2017,67],[2507,66,2017,68],[2507,67,2017,69],[2507,69,2017,71,"AUTO_REFRESH_TICK_DURATION_MS"],[2507,82,2017,100],[2507,83,2017,100,"AUTO_REFRESH_TICK_DURATION_MS"],[2507,112,2017,100],[2507,113,2017,101],[2508,6,2018,8],[2508,10,2018,12],[2508,11,2018,13,"autoRefreshTicker"],[2508,28,2018,30],[2508,31,2018,33,"ticker"],[2508,37,2018,39],[2509,6,2019,8],[2509,10,2019,12,"ticker"],[2509,16,2019,18],[2509,20,2019,22],[2509,27,2019,29,"ticker"],[2509,33,2019,35],[2509,38,2019,40],[2509,46,2019,48],[2509,50,2019,52],[2509,57,2019,59,"ticker"],[2509,63,2019,65],[2509,64,2019,66,"unref"],[2509,69,2019,71],[2509,74,2019,76],[2509,84,2019,86],[2509,86,2019,88],[2510,8,2020,12],[2511,8,2021,12],[2512,8,2022,12],[2513,8,2023,12],[2514,8,2024,12],[2515,8,2025,12],[2516,8,2026,12,"ticker"],[2516,14,2026,18],[2516,15,2026,19,"unref"],[2516,20,2026,24],[2516,21,2026,25],[2516,22,2026,26],[2517,8,2027,12],[2518,6,2028,8],[2518,7,2028,9],[2518,13,2029,13],[2518,17,2029,17],[2518,24,2029,24,"Deno"],[2518,28,2029,28],[2518,33,2029,33],[2518,44,2029,44],[2518,48,2029,48],[2518,55,2029,55,"Deno"],[2518,59,2029,59],[2518,60,2029,60,"unrefTimer"],[2518,70,2029,70],[2518,75,2029,75],[2518,85,2029,85],[2518,87,2029,87],[2519,8,2030,12],[2520,8,2031,12],[2521,8,2032,12],[2522,8,2033,12,"Deno"],[2522,12,2033,16],[2522,13,2033,17,"unrefTimer"],[2522,23,2033,27],[2522,24,2033,28,"ticker"],[2522,30,2033,34],[2522,31,2033,35],[2523,6,2034,8],[2524,6,2035,8],[2525,6,2036,8],[2526,6,2037,8],[2527,6,2038,8,"setTimeout"],[2527,16,2038,18],[2527,17,2038,19],[2527,29,2038,31],[2528,8,2039,12],[2528,14,2039,18],[2528,18,2039,22],[2528,19,2039,23,"initializePromise"],[2528,36,2039,40],[2529,8,2040,12],[2529,14,2040,18],[2529,18,2040,22],[2529,19,2040,23,"_autoRefreshTokenTick"],[2529,40,2040,44],[2529,41,2040,45],[2529,42,2040,46],[2530,6,2041,8],[2530,7,2041,9],[2530,9,2041,11],[2530,10,2041,12],[2530,11,2041,13],[2531,4,2042,4],[2532,4,2043,4],[2533,0,2044,0],[2534,0,2045,0],[2535,0,2046,0],[2536,4,2047,4],[2536,10,2047,10,"_stopAutoRefresh"],[2536,26,2047,26,"_stopAutoRefresh"],[2536,27,2047,26],[2536,29,2047,29],[2537,6,2048,8],[2537,10,2048,12],[2537,11,2048,13,"_debug"],[2537,17,2048,19],[2537,18,2048,20],[2537,39,2048,41],[2537,40,2048,42],[2538,6,2049,8],[2538,12,2049,14,"ticker"],[2538,18,2049,20],[2538,21,2049,23],[2538,25,2049,27],[2538,26,2049,28,"autoRefreshTicker"],[2538,43,2049,45],[2539,6,2050,8],[2539,10,2050,12],[2539,11,2050,13,"autoRefreshTicker"],[2539,28,2050,30],[2539,31,2050,33],[2539,35,2050,37],[2540,6,2051,8],[2540,10,2051,12,"ticker"],[2540,16,2051,18],[2540,18,2051,20],[2541,8,2052,12,"clearInterval"],[2541,21,2052,25],[2541,22,2052,26,"ticker"],[2541,28,2052,32],[2541,29,2052,33],[2542,6,2053,8],[2543,4,2054,4],[2544,4,2055,4],[2545,0,2056,0],[2546,0,2057,0],[2547,0,2058,0],[2548,0,2059,0],[2549,0,2060,0],[2550,0,2061,0],[2551,0,2062,0],[2552,0,2063,0],[2553,0,2064,0],[2554,0,2065,0],[2555,0,2066,0],[2556,0,2067,0],[2557,0,2068,0],[2558,0,2069,0],[2559,0,2070,0],[2560,0,2071,0],[2561,0,2072,0],[2562,0,2073,0],[2563,0,2074,0],[2564,0,2075,0],[2565,0,2076,0],[2566,4,2077,4],[2566,10,2077,10,"startAutoRefresh"],[2566,26,2077,26,"startAutoRefresh"],[2566,27,2077,26],[2566,29,2077,29],[2567,6,2078,8],[2567,10,2078,12],[2567,11,2078,13,"_removeVisibilityChangedCallback"],[2567,43,2078,45],[2567,44,2078,46],[2567,45,2078,47],[2568,6,2079,8],[2568,12,2079,14],[2568,16,2079,18],[2568,17,2079,19,"_startAutoRefresh"],[2568,34,2079,36],[2568,35,2079,37],[2568,36,2079,38],[2569,4,2080,4],[2570,4,2081,4],[2571,0,2082,0],[2572,0,2083,0],[2573,0,2084,0],[2574,0,2085,0],[2575,0,2086,0],[2576,0,2087,0],[2577,0,2088,0],[2578,4,2089,4],[2578,10,2089,10,"stopAutoRefresh"],[2578,25,2089,25,"stopAutoRefresh"],[2578,26,2089,25],[2578,28,2089,28],[2579,6,2090,8],[2579,10,2090,12],[2579,11,2090,13,"_removeVisibilityChangedCallback"],[2579,43,2090,45],[2579,44,2090,46],[2579,45,2090,47],[2580,6,2091,8],[2580,12,2091,14],[2580,16,2091,18],[2580,17,2091,19,"_stopAutoRefresh"],[2580,33,2091,35],[2580,34,2091,36],[2580,35,2091,37],[2581,4,2092,4],[2582,4,2093,4],[2583,0,2094,0],[2584,0,2095,0],[2585,4,2096,4],[2585,10,2096,10,"_autoRefreshTokenTick"],[2585,31,2096,31,"_autoRefreshTokenTick"],[2585,32,2096,31],[2585,34,2096,34],[2586,6,2097,8],[2586,10,2097,12],[2586,11,2097,13,"_debug"],[2586,17,2097,19],[2586,18,2097,20],[2586,44,2097,46],[2586,46,2097,48],[2586,53,2097,55],[2586,54,2097,56],[2587,6,2098,8],[2587,10,2098,12],[2588,8,2099,12],[2588,14,2099,18],[2588,18,2099,22],[2588,19,2099,23,"_acquireLock"],[2588,31,2099,35],[2588,32,2099,36],[2588,33,2099,37],[2588,35,2099,39],[2588,47,2099,51],[2589,10,2100,16],[2589,14,2100,20],[2590,12,2101,20],[2590,18,2101,26,"now"],[2590,21,2101,29],[2590,24,2101,32,"Date"],[2590,28,2101,36],[2590,29,2101,37,"now"],[2590,32,2101,40],[2590,33,2101,41],[2590,34,2101,42],[2591,12,2102,20],[2591,16,2102,24],[2592,14,2103,24],[2592,21,2103,31],[2592,27,2103,37],[2592,31,2103,41],[2592,32,2103,42,"_useSession"],[2592,43,2103,53],[2592,44,2103,54],[2592,50,2103,61,"result"],[2592,56,2103,67],[2592,60,2103,72],[2593,16,2104,28],[2593,22,2104,34],[2594,18,2104,36,"data"],[2594,22,2104,40],[2594,24,2104,42],[2595,20,2104,44,"session"],[2596,18,2104,52],[2597,16,2104,55],[2597,17,2104,56],[2597,20,2104,59,"result"],[2597,26,2104,65],[2598,16,2105,28],[2598,20,2105,32],[2598,21,2105,33,"session"],[2598,28,2105,40],[2598,32,2105,44],[2598,33,2105,45,"session"],[2598,40,2105,52],[2598,41,2105,53,"refresh_token"],[2598,54,2105,66],[2598,58,2105,70],[2598,59,2105,71,"session"],[2598,66,2105,78],[2598,67,2105,79,"expires_at"],[2598,77,2105,89],[2598,79,2105,91],[2599,18,2106,32],[2599,22,2106,36],[2599,23,2106,37,"_debug"],[2599,29,2106,43],[2599,30,2106,44],[2599,56,2106,70],[2599,58,2106,72],[2599,70,2106,84],[2599,71,2106,85],[2600,18,2107,32],[2601,16,2108,28],[2602,16,2109,28],[2603,16,2110,28],[2603,22,2110,34,"expiresInTicks"],[2603,36,2110,48],[2603,39,2110,51,"Math"],[2603,43,2110,55],[2603,44,2110,56,"floor"],[2603,49,2110,61],[2603,50,2110,62],[2603,51,2110,63,"session"],[2603,58,2110,70],[2603,59,2110,71,"expires_at"],[2603,69,2110,81],[2603,72,2110,84],[2603,76,2110,88],[2603,79,2110,91,"now"],[2603,82,2110,94],[2603,86,2110,98,"AUTO_REFRESH_TICK_DURATION_MS"],[2603,99,2110,127],[2603,100,2110,127,"AUTO_REFRESH_TICK_DURATION_MS"],[2603,129,2110,127],[2603,130,2110,128],[2604,16,2111,28],[2604,20,2111,32],[2604,21,2111,33,"_debug"],[2604,27,2111,39],[2604,28,2111,40],[2604,54,2111,66],[2604,56,2111,68],[2604,83,2111,95,"expiresInTicks"],[2604,97,2111,109],[2604,121,2111,133,"AUTO_REFRESH_TICK_DURATION_MS"],[2604,134,2111,162],[2604,135,2111,162,"AUTO_REFRESH_TICK_DURATION_MS"],[2604,164,2111,162],[2604,192,2111,190,"AUTO_REFRESH_TICK_THRESHOLD"],[2604,205,2111,217],[2604,206,2111,217,"AUTO_REFRESH_TICK_THRESHOLD"],[2604,233,2111,217],[2604,241,2111,225],[2604,242,2111,226],[2605,16,2112,28],[2605,20,2112,32,"expiresInTicks"],[2605,34,2112,46],[2605,38,2112,50,"AUTO_REFRESH_TICK_THRESHOLD"],[2605,51,2112,77],[2605,52,2112,77,"AUTO_REFRESH_TICK_THRESHOLD"],[2605,79,2112,77],[2605,81,2112,79],[2606,18,2113,32],[2606,24,2113,38],[2606,28,2113,42],[2606,29,2113,43,"_callRefreshToken"],[2606,46,2113,60],[2606,47,2113,61,"session"],[2606,54,2113,68],[2606,55,2113,69,"refresh_token"],[2606,68,2113,82],[2606,69,2113,83],[2607,16,2114,28],[2608,14,2115,24],[2608,15,2115,25],[2608,16,2115,26],[2609,12,2116,20],[2609,13,2116,21],[2609,14,2117,20],[2609,21,2117,27,"e"],[2609,22,2117,28],[2609,24,2117,30],[2610,14,2118,24,"console"],[2610,21,2118,31],[2610,22,2118,32,"error"],[2610,27,2118,37],[2610,28,2118,38],[2610,100,2118,110],[2610,102,2118,112,"e"],[2610,103,2118,113],[2610,104,2118,114],[2611,12,2119,20],[2612,10,2120,16],[2612,11,2120,17],[2612,20,2121,24],[2613,12,2122,20],[2613,16,2122,24],[2613,17,2122,25,"_debug"],[2613,23,2122,31],[2613,24,2122,32],[2613,50,2122,58],[2613,52,2122,60],[2613,57,2122,65],[2613,58,2122,66],[2614,10,2123,16],[2615,8,2124,12],[2615,9,2124,13],[2615,10,2124,14],[2616,6,2125,8],[2616,7,2125,9],[2616,8,2126,8],[2616,15,2126,15,"e"],[2616,16,2126,16],[2616,18,2126,18],[2617,8,2127,12],[2617,12,2127,16,"e"],[2617,13,2127,17],[2617,14,2127,18,"isAcquireTimeout"],[2617,30,2127,34],[2617,34,2127,38,"e"],[2617,35,2127,39],[2617,47,2127,51,"LockAcquireTimeoutError"],[2617,56,2127,74],[2617,57,2127,74,"LockAcquireTimeoutError"],[2617,80,2127,74],[2617,82,2127,76],[2618,10,2128,16],[2618,14,2128,20],[2618,15,2128,21,"_debug"],[2618,21,2128,27],[2618,22,2128,28],[2618,66,2128,72],[2618,67,2128,73],[2619,8,2129,12],[2619,9,2129,13],[2619,15,2130,17],[2620,10,2131,16],[2620,16,2131,22,"e"],[2620,17,2131,23],[2621,8,2132,12],[2622,6,2133,8],[2623,4,2134,4],[2624,4,2135,4],[2625,0,2136,0],[2626,0,2137,0],[2627,0,2138,0],[2628,0,2139,0],[2629,4,2140,4],[2629,10,2140,10,"_handleVisibilityChange"],[2629,33,2140,33,"_handleVisibilityChange"],[2629,34,2140,33],[2629,36,2140,36],[2630,6,2141,8],[2630,10,2141,12],[2630,11,2141,13,"_debug"],[2630,17,2141,19],[2630,18,2141,20],[2630,46,2141,48],[2630,47,2141,49],[2631,6,2142,8],[2631,10,2142,12],[2631,11,2142,13],[2631,15,2142,13,"isBrowser"],[2631,26,2142,22],[2631,27,2142,22,"isBrowser"],[2631,36,2142,22],[2631,38,2142,23],[2631,39,2142,24],[2631,43,2142,28],[2631,45,2142,30,"window"],[2631,51,2142,36],[2631,56,2142,41],[2631,60,2142,45],[2631,64,2142,49,"window"],[2631,70,2142,55],[2631,75,2142,60],[2631,80,2142,65],[2631,81,2142,66],[2631,84,2142,69],[2631,89,2142,74],[2631,90,2142,75],[2631,93,2142,78,"window"],[2631,99,2142,84],[2631,100,2142,85,"addEventListener"],[2631,116,2142,101],[2631,117,2142,102],[2631,119,2142,104],[2632,8,2143,12],[2632,12,2143,16],[2632,16,2143,20],[2632,17,2143,21,"autoRefreshToken"],[2632,33,2143,37],[2632,35,2143,39],[2633,10,2144,16],[2634,10,2145,16],[2634,14,2145,20],[2634,15,2145,21,"startAutoRefresh"],[2634,31,2145,37],[2634,32,2145,38],[2634,33,2145,39],[2635,8,2146,12],[2636,8,2147,12],[2636,15,2147,19],[2636,20,2147,24],[2637,6,2148,8],[2638,6,2149,8],[2638,10,2149,12],[2639,8,2150,12],[2639,12,2150,16],[2639,13,2150,17,"visibilityChangedCallback"],[2639,38,2150,42],[2639,41,2150,45],[2639,53,2150,57],[2639,59,2150,63],[2639,63,2150,67],[2639,64,2150,68,"_onVisibilityChanged"],[2639,84,2150,88],[2639,85,2150,89],[2639,90,2150,94],[2639,91,2150,95],[2640,8,2151,12,"window"],[2640,14,2151,18],[2640,19,2151,23],[2640,23,2151,27],[2640,27,2151,31,"window"],[2640,33,2151,37],[2640,38,2151,42],[2640,43,2151,47],[2640,44,2151,48],[2640,47,2151,51],[2640,52,2151,56],[2640,53,2151,57],[2640,56,2151,60,"window"],[2640,62,2151,66],[2640,63,2151,67,"addEventListener"],[2640,79,2151,83],[2640,80,2151,84],[2640,98,2151,102],[2640,100,2151,104],[2640,104,2151,108],[2640,105,2151,109,"visibilityChangedCallback"],[2640,130,2151,134],[2640,131,2151,135],[2641,8,2152,12],[2642,8,2153,12],[2643,8,2154,12],[2643,14,2154,18],[2643,18,2154,22],[2643,19,2154,23,"_onVisibilityChanged"],[2643,39,2154,43],[2643,40,2154,44],[2643,44,2154,48],[2643,45,2154,49],[2643,46,2154,50],[2643,47,2154,51],[2644,6,2155,8],[2644,7,2155,9],[2644,8,2156,8],[2644,15,2156,15,"error"],[2644,20,2156,20],[2644,22,2156,22],[2645,8,2157,12,"console"],[2645,15,2157,19],[2645,16,2157,20,"error"],[2645,21,2157,25],[2645,22,2157,26],[2645,47,2157,51],[2645,49,2157,53,"error"],[2645,54,2157,58],[2645,55,2157,59],[2646,6,2158,8],[2647,4,2159,4],[2648,4,2160,4],[2649,0,2161,0],[2650,0,2162,0],[2651,4,2163,4],[2651,10,2163,10,"_onVisibilityChanged"],[2651,30,2163,30,"_onVisibilityChanged"],[2651,31,2163,31,"calledFromInitialize"],[2651,51,2163,51],[2651,53,2163,53],[2652,6,2164,8],[2652,12,2164,14,"methodName"],[2652,22,2164,24],[2652,25,2164,27],[2652,50,2164,52,"calledFromInitialize"],[2652,70,2164,72],[2652,73,2164,75],[2653,6,2165,8],[2653,10,2165,12],[2653,11,2165,13,"_debug"],[2653,17,2165,19],[2653,18,2165,20,"methodName"],[2653,28,2165,30],[2653,30,2165,32],[2653,47,2165,49],[2653,49,2165,51,"document"],[2653,57,2165,59],[2653,58,2165,60,"visibilityState"],[2653,73,2165,75],[2653,74,2165,76],[2654,6,2166,8],[2654,10,2166,12,"document"],[2654,18,2166,20],[2654,19,2166,21,"visibilityState"],[2654,34,2166,36],[2654,39,2166,41],[2654,48,2166,50],[2654,50,2166,52],[2655,8,2167,12],[2655,12,2167,16],[2655,16,2167,20],[2655,17,2167,21,"autoRefreshToken"],[2655,33,2167,37],[2655,35,2167,39],[2656,10,2168,16],[2657,10,2169,16],[2658,10,2170,16],[2658,14,2170,20],[2658,15,2170,21,"_startAutoRefresh"],[2658,32,2170,38],[2658,33,2170,39],[2658,34,2170,40],[2659,8,2171,12],[2660,8,2172,12],[2660,12,2172,16],[2660,13,2172,17,"calledFromInitialize"],[2660,33,2172,37],[2660,35,2172,39],[2661,10,2173,16],[2662,10,2174,16],[2663,10,2175,16],[2664,10,2176,16],[2665,10,2177,16],[2665,16,2177,22],[2665,20,2177,26],[2665,21,2177,27,"initializePromise"],[2665,38,2177,44],[2666,10,2178,16],[2666,16,2178,22],[2666,20,2178,26],[2666,21,2178,27,"_acquireLock"],[2666,33,2178,39],[2666,34,2178,40],[2666,35,2178,41],[2666,36,2178,42],[2666,38,2178,44],[2666,50,2178,56],[2667,12,2179,20],[2667,16,2179,24,"document"],[2667,24,2179,32],[2667,25,2179,33,"visibilityState"],[2667,40,2179,48],[2667,45,2179,53],[2667,54,2179,62],[2667,56,2179,64],[2668,14,2180,24],[2668,18,2180,28],[2668,19,2180,29,"_debug"],[2668,25,2180,35],[2668,26,2180,36,"methodName"],[2668,36,2180,46],[2668,38,2180,48],[2668,144,2180,154],[2668,145,2180,155],[2669,14,2181,24],[2670,14,2182,24],[2671,12,2183,20],[2672,12,2184,20],[2673,12,2185,20],[2673,18,2185,26],[2673,22,2185,30],[2673,23,2185,31,"_recoverAndRefresh"],[2673,41,2185,49],[2673,42,2185,50],[2673,43,2185,51],[2674,10,2186,16],[2674,11,2186,17],[2674,12,2186,18],[2675,8,2187,12],[2676,6,2188,8],[2676,7,2188,9],[2676,13,2189,13],[2676,17,2189,17,"document"],[2676,25,2189,25],[2676,26,2189,26,"visibilityState"],[2676,41,2189,41],[2676,46,2189,46],[2676,54,2189,54],[2676,56,2189,56],[2677,8,2190,12],[2677,12,2190,16],[2677,16,2190,20],[2677,17,2190,21,"autoRefreshToken"],[2677,33,2190,37],[2677,35,2190,39],[2678,10,2191,16],[2678,14,2191,20],[2678,15,2191,21,"_stopAutoRefresh"],[2678,31,2191,37],[2678,32,2191,38],[2678,33,2191,39],[2679,8,2192,12],[2680,6,2193,8],[2681,4,2194,4],[2682,4,2195,4],[2683,0,2196,0],[2684,0,2197,0],[2685,0,2198,0],[2686,0,2199,0],[2687,0,2200,0],[2688,4,2201,4],[2688,10,2201,10,"_getUrlForProvider"],[2688,28,2201,28,"_getUrlForProvider"],[2688,29,2201,29,"url"],[2688,32,2201,32],[2688,34,2201,34,"provider"],[2688,42,2201,42],[2688,44,2201,44,"options"],[2688,51,2201,51],[2688,53,2201,53],[2689,6,2202,8],[2689,12,2202,14,"urlParams"],[2689,21,2202,23],[2689,24,2202,26],[2689,25,2202,27],[2689,37,2202,39,"encodeURIComponent"],[2689,55,2202,57],[2689,56,2202,58,"provider"],[2689,64,2202,66],[2689,65,2202,67],[2689,67,2202,69],[2689,68,2202,70],[2690,6,2203,8],[2690,10,2203,12,"options"],[2690,17,2203,19],[2690,22,2203,24],[2690,26,2203,28],[2690,30,2203,32,"options"],[2690,37,2203,39],[2690,42,2203,44],[2690,47,2203,49],[2690,48,2203,50],[2690,51,2203,53],[2690,56,2203,58],[2690,57,2203,59],[2690,60,2203,62,"options"],[2690,67,2203,69],[2690,68,2203,70,"redirectTo"],[2690,78,2203,80],[2690,80,2203,82],[2691,8,2204,12,"urlParams"],[2691,17,2204,21],[2691,18,2204,22,"push"],[2691,22,2204,26],[2691,23,2204,27],[2691,38,2204,42,"encodeURIComponent"],[2691,56,2204,60],[2691,57,2204,61,"options"],[2691,64,2204,68],[2691,65,2204,69,"redirectTo"],[2691,75,2204,79],[2691,76,2204,80],[2691,78,2204,82],[2691,79,2204,83],[2692,6,2205,8],[2693,6,2206,8],[2693,10,2206,12,"options"],[2693,17,2206,19],[2693,22,2206,24],[2693,26,2206,28],[2693,30,2206,32,"options"],[2693,37,2206,39],[2693,42,2206,44],[2693,47,2206,49],[2693,48,2206,50],[2693,51,2206,53],[2693,56,2206,58],[2693,57,2206,59],[2693,60,2206,62,"options"],[2693,67,2206,69],[2693,68,2206,70,"scopes"],[2693,74,2206,76],[2693,76,2206,78],[2694,8,2207,12,"urlParams"],[2694,17,2207,21],[2694,18,2207,22,"push"],[2694,22,2207,26],[2694,23,2207,27],[2694,33,2207,37,"encodeURIComponent"],[2694,51,2207,55],[2694,52,2207,56,"options"],[2694,59,2207,63],[2694,60,2207,64,"scopes"],[2694,66,2207,70],[2694,67,2207,71],[2694,69,2207,73],[2694,70,2207,74],[2695,6,2208,8],[2696,6,2209,8],[2696,10,2209,12],[2696,14,2209,16],[2696,15,2209,17,"flowType"],[2696,23,2209,25],[2696,28,2209,30],[2696,34,2209,36],[2696,36,2209,38],[2697,8,2210,12],[2697,14,2210,18],[2697,15,2210,19,"codeChallenge"],[2697,28,2210,32],[2697,30,2210,34,"codeChallengeMethod"],[2697,49,2210,53],[2697,50,2210,54],[2697,53,2210,57],[2697,59,2210,63],[2697,63,2210,63,"getCodeChallengeAndMethod"],[2697,74,2210,88],[2697,75,2210,88,"getCodeChallengeAndMethod"],[2697,100,2210,88],[2697,102,2210,89],[2697,106,2210,93],[2697,107,2210,94,"storage"],[2697,114,2210,101],[2697,116,2210,103],[2697,120,2210,107],[2697,121,2210,108,"storageKey"],[2697,131,2210,118],[2697,132,2210,119],[2698,8,2211,12],[2698,14,2211,18,"flowParams"],[2698,24,2211,28],[2698,27,2211,31],[2698,31,2211,35,"URLSearchParams"],[2698,46,2211,50],[2698,47,2211,51],[2699,10,2212,16,"code_challenge"],[2699,24,2212,30],[2699,26,2212,32],[2699,29,2212,35,"encodeURIComponent"],[2699,47,2212,53],[2699,48,2212,54,"codeChallenge"],[2699,61,2212,67],[2699,62,2212,68],[2699,64,2212,70],[2700,10,2213,16,"code_challenge_method"],[2700,31,2213,37],[2700,33,2213,39],[2700,36,2213,42,"encodeURIComponent"],[2700,54,2213,60],[2700,55,2213,61,"codeChallengeMethod"],[2700,74,2213,80],[2700,75,2213,81],[2701,8,2214,12],[2701,9,2214,13],[2701,10,2214,14],[2702,8,2215,12,"urlParams"],[2702,17,2215,21],[2702,18,2215,22,"push"],[2702,22,2215,26],[2702,23,2215,27,"flowParams"],[2702,33,2215,37],[2702,34,2215,38,"toString"],[2702,42,2215,46],[2702,43,2215,47],[2702,44,2215,48],[2702,45,2215,49],[2703,6,2216,8],[2704,6,2217,8],[2704,10,2217,12,"options"],[2704,17,2217,19],[2704,22,2217,24],[2704,26,2217,28],[2704,30,2217,32,"options"],[2704,37,2217,39],[2704,42,2217,44],[2704,47,2217,49],[2704,48,2217,50],[2704,51,2217,53],[2704,56,2217,58],[2704,57,2217,59],[2704,60,2217,62,"options"],[2704,67,2217,69],[2704,68,2217,70,"queryParams"],[2704,79,2217,81],[2704,81,2217,83],[2705,8,2218,12],[2705,14,2218,18,"query"],[2705,19,2218,23],[2705,22,2218,26],[2705,26,2218,30,"URLSearchParams"],[2705,41,2218,45],[2705,42,2218,46,"options"],[2705,49,2218,53],[2705,50,2218,54,"queryParams"],[2705,61,2218,65],[2705,62,2218,66],[2706,8,2219,12,"urlParams"],[2706,17,2219,21],[2706,18,2219,22,"push"],[2706,22,2219,26],[2706,23,2219,27,"query"],[2706,28,2219,32],[2706,29,2219,33,"toString"],[2706,37,2219,41],[2706,38,2219,42],[2706,39,2219,43],[2706,40,2219,44],[2707,6,2220,8],[2708,6,2221,8],[2708,10,2221,12,"options"],[2708,17,2221,19],[2708,22,2221,24],[2708,26,2221,28],[2708,30,2221,32,"options"],[2708,37,2221,39],[2708,42,2221,44],[2708,47,2221,49],[2708,48,2221,50],[2708,51,2221,53],[2708,56,2221,58],[2708,57,2221,59],[2708,60,2221,62,"options"],[2708,67,2221,69],[2708,68,2221,70,"skipBrowserRedirect"],[2708,87,2221,89],[2708,89,2221,91],[2709,8,2222,12,"urlParams"],[2709,17,2222,21],[2709,18,2222,22,"push"],[2709,22,2222,26],[2709,23,2222,27],[2709,45,2222,49,"options"],[2709,52,2222,56],[2709,53,2222,57,"skipBrowserRedirect"],[2709,72,2222,76],[2709,74,2222,78],[2709,75,2222,79],[2710,6,2223,8],[2711,6,2224,8],[2711,13,2224,15],[2711,16,2224,18,"url"],[2711,19,2224,21],[2711,23,2224,25,"urlParams"],[2711,32,2224,34],[2711,33,2224,35,"join"],[2711,37,2224,39],[2711,38,2224,40],[2711,41,2224,43],[2711,42,2224,44],[2711,44,2224,46],[2712,4,2225,4],[2713,4,2226,4],[2713,10,2226,10,"_unenroll"],[2713,19,2226,19,"_unenroll"],[2713,20,2226,20,"params"],[2713,26,2226,26],[2713,28,2226,28],[2714,6,2227,8],[2714,10,2227,12],[2715,8,2228,12],[2715,15,2228,19],[2715,21,2228,25],[2715,25,2228,29],[2715,26,2228,30,"_useSession"],[2715,37,2228,41],[2715,38,2228,42],[2715,44,2228,49,"result"],[2715,50,2228,55],[2715,54,2228,60],[2716,10,2229,16],[2716,14,2229,20,"_a"],[2716,16,2229,22],[2717,10,2230,16],[2717,16,2230,22],[2718,12,2230,24,"data"],[2718,16,2230,28],[2718,18,2230,30,"sessionData"],[2718,29,2230,41],[2719,12,2230,43,"error"],[2719,17,2230,48],[2719,19,2230,50,"sessionError"],[2720,10,2230,63],[2720,11,2230,64],[2720,14,2230,67,"result"],[2720,20,2230,73],[2721,10,2231,16],[2721,14,2231,20,"sessionError"],[2721,26,2231,32],[2721,28,2231,34],[2722,12,2232,20],[2722,19,2232,27],[2723,14,2232,29,"data"],[2723,18,2232,33],[2723,20,2232,35],[2723,24,2232,39],[2724,14,2232,41,"error"],[2724,19,2232,46],[2724,21,2232,48,"sessionError"],[2725,12,2232,61],[2725,13,2232,62],[2726,10,2233,16],[2727,10,2234,16],[2727,17,2234,23],[2727,23,2234,29],[2727,27,2234,29,"_request"],[2727,36,2234,37],[2727,37,2234,37,"_request"],[2727,45,2234,37],[2727,47,2234,38],[2727,51,2234,42],[2727,52,2234,43,"fetch"],[2727,57,2234,48],[2727,59,2234,50],[2727,67,2234,58],[2727,69,2234,60],[2727,72,2234,63],[2727,76,2234,67],[2727,77,2234,68,"url"],[2727,80,2234,71],[2727,92,2234,83,"params"],[2727,98,2234,89],[2727,99,2234,90,"factorId"],[2727,107,2234,98],[2727,109,2234,100],[2727,111,2234,102],[2728,12,2235,20,"headers"],[2728,19,2235,27],[2728,21,2235,29],[2728,25,2235,33],[2728,26,2235,34,"headers"],[2728,33,2235,41],[2729,12,2236,20,"jwt"],[2729,15,2236,23],[2729,17,2236,25],[2729,18,2236,26,"_a"],[2729,20,2236,28],[2729,23,2236,31,"sessionData"],[2729,34,2236,42],[2729,39,2236,47],[2729,43,2236,51],[2729,47,2236,55,"sessionData"],[2729,58,2236,66],[2729,63,2236,71],[2729,68,2236,76],[2729,69,2236,77],[2729,72,2236,80],[2729,77,2236,85],[2729,78,2236,86],[2729,81,2236,89,"sessionData"],[2729,92,2236,100],[2729,93,2236,101,"session"],[2729,100,2236,108],[2729,106,2236,114],[2729,110,2236,118],[2729,114,2236,122,"_a"],[2729,116,2236,124],[2729,121,2236,129],[2729,126,2236,134],[2729,127,2236,135],[2729,130,2236,138],[2729,135,2236,143],[2729,136,2236,144],[2729,139,2236,147,"_a"],[2729,141,2236,149],[2729,142,2236,150,"access_token"],[2730,10,2237,16],[2730,11,2237,17],[2730,12,2237,18],[2731,8,2238,12],[2731,9,2238,13],[2731,10,2238,14],[2732,6,2239,8],[2732,7,2239,9],[2732,8,2240,8],[2732,15,2240,15,"error"],[2732,20,2240,20],[2732,22,2240,22],[2733,8,2241,12],[2733,12,2241,16],[2733,16,2241,16,"isAuthError"],[2733,26,2241,27],[2733,27,2241,27,"isAuthError"],[2733,38,2241,27],[2733,40,2241,28,"error"],[2733,45,2241,33],[2733,46,2241,34],[2733,48,2241,36],[2734,10,2242,16],[2734,17,2242,23],[2735,12,2242,25,"data"],[2735,16,2242,29],[2735,18,2242,31],[2735,22,2242,35],[2736,12,2242,37,"error"],[2737,10,2242,43],[2737,11,2242,44],[2738,8,2243,12],[2739,8,2244,12],[2739,14,2244,18,"error"],[2739,19,2244,23],[2740,6,2245,8],[2741,4,2246,4],[2742,4,2247,4],[2742,10,2247,10,"_enroll"],[2742,17,2247,17,"_enroll"],[2742,18,2247,18,"params"],[2742,24,2247,24],[2742,26,2247,26],[2743,6,2248,8],[2743,10,2248,12],[2744,8,2249,12],[2744,15,2249,19],[2744,21,2249,25],[2744,25,2249,29],[2744,26,2249,30,"_useSession"],[2744,37,2249,41],[2744,38,2249,42],[2744,44,2249,49,"result"],[2744,50,2249,55],[2744,54,2249,60],[2745,10,2250,16],[2745,14,2250,20,"_a"],[2745,16,2250,22],[2745,18,2250,24,"_b"],[2745,20,2250,26],[2746,10,2251,16],[2746,16,2251,22],[2747,12,2251,24,"data"],[2747,16,2251,28],[2747,18,2251,30,"sessionData"],[2747,29,2251,41],[2748,12,2251,43,"error"],[2748,17,2251,48],[2748,19,2251,50,"sessionError"],[2749,10,2251,63],[2749,11,2251,64],[2749,14,2251,67,"result"],[2749,20,2251,73],[2750,10,2252,16],[2750,14,2252,20,"sessionError"],[2750,26,2252,32],[2750,28,2252,34],[2751,12,2253,20],[2751,19,2253,27],[2752,14,2253,29,"data"],[2752,18,2253,33],[2752,20,2253,35],[2752,24,2253,39],[2753,14,2253,41,"error"],[2753,19,2253,46],[2753,21,2253,48,"sessionError"],[2754,12,2253,61],[2754,13,2253,62],[2755,10,2254,16],[2756,10,2255,16],[2756,16,2255,22,"body"],[2756,20,2255,26],[2756,23,2255,29,"Object"],[2756,29,2255,35],[2756,30,2255,36,"assign"],[2756,36,2255,42],[2756,37,2255,43],[2757,12,2255,45,"friendly_name"],[2757,25,2255,58],[2757,27,2255,60,"params"],[2757,33,2255,66],[2757,34,2255,67,"friendlyName"],[2757,46,2255,79],[2758,12,2255,81,"factor_type"],[2758,23,2255,92],[2758,25,2255,94,"params"],[2758,31,2255,100],[2758,32,2255,101,"factorType"],[2759,10,2255,112],[2759,11,2255,113],[2759,13,2255,116,"params"],[2759,19,2255,122],[2759,20,2255,123,"factorType"],[2759,30,2255,133],[2759,35,2255,138],[2759,42,2255,145],[2759,45,2256,22],[2760,12,2256,24,"phone"],[2760,17,2256,29],[2760,19,2256,31,"params"],[2760,25,2256,37],[2760,26,2256,38,"phone"],[2761,10,2256,44],[2761,11,2256,45],[2761,14,2257,22,"params"],[2761,20,2257,28],[2761,21,2257,29,"factorType"],[2761,31,2257,39],[2761,36,2257,44],[2761,42,2257,50],[2761,45,2258,26],[2762,12,2258,28,"issuer"],[2762,18,2258,34],[2762,20,2258,36,"params"],[2762,26,2258,42],[2762,27,2258,43,"issuer"],[2763,10,2258,50],[2763,11,2258,51],[2763,14,2259,26],[2763,15,2259,27],[2763,16,2259,29],[2763,17,2259,30],[2764,10,2260,16],[2764,16,2260,22],[2765,12,2260,24,"data"],[2765,16,2260,28],[2766,12,2260,30,"error"],[2767,10,2260,36],[2767,11,2260,37],[2767,14,2260,41],[2767,20,2260,47],[2767,24,2260,47,"_request"],[2767,33,2260,55],[2767,34,2260,55,"_request"],[2767,42,2260,55],[2767,44,2260,56],[2767,48,2260,60],[2767,49,2260,61,"fetch"],[2767,54,2260,66],[2767,56,2260,68],[2767,62,2260,74],[2767,64,2260,76],[2767,67,2260,79],[2767,71,2260,83],[2767,72,2260,84,"url"],[2767,75,2260,87],[2767,85,2260,97],[2767,87,2260,99],[2768,12,2261,20,"body"],[2768,16,2261,24],[2769,12,2262,20,"headers"],[2769,19,2262,27],[2769,21,2262,29],[2769,25,2262,33],[2769,26,2262,34,"headers"],[2769,33,2262,41],[2770,12,2263,20,"jwt"],[2770,15,2263,23],[2770,17,2263,25],[2770,18,2263,26,"_a"],[2770,20,2263,28],[2770,23,2263,31,"sessionData"],[2770,34,2263,42],[2770,39,2263,47],[2770,43,2263,51],[2770,47,2263,55,"sessionData"],[2770,58,2263,66],[2770,63,2263,71],[2770,68,2263,76],[2770,69,2263,77],[2770,72,2263,80],[2770,77,2263,85],[2770,78,2263,86],[2770,81,2263,89,"sessionData"],[2770,92,2263,100],[2770,93,2263,101,"session"],[2770,100,2263,108],[2770,106,2263,114],[2770,110,2263,118],[2770,114,2263,122,"_a"],[2770,116,2263,124],[2770,121,2263,129],[2770,126,2263,134],[2770,127,2263,135],[2770,130,2263,138],[2770,135,2263,143],[2770,136,2263,144],[2770,139,2263,147,"_a"],[2770,141,2263,149],[2770,142,2263,150,"access_token"],[2771,10,2264,16],[2771,11,2264,17],[2771,12,2264,19],[2772,10,2265,16],[2772,14,2265,20,"error"],[2772,19,2265,25],[2772,21,2265,27],[2773,12,2266,20],[2773,19,2266,27],[2774,14,2266,29,"data"],[2774,18,2266,33],[2774,20,2266,35],[2774,24,2266,39],[2775,14,2266,41,"error"],[2776,12,2266,47],[2776,13,2266,48],[2777,10,2267,16],[2778,10,2268,16],[2778,14,2268,20,"params"],[2778,20,2268,26],[2778,21,2268,27,"factorType"],[2778,31,2268,37],[2778,36,2268,42],[2778,42,2268,48],[2778,46,2268,52,"data"],[2778,50,2268,56],[2778,51,2268,57,"type"],[2778,55,2268,61],[2778,60,2268,66],[2778,66,2268,72],[2778,71,2268,77],[2778,72,2268,78,"_b"],[2778,74,2268,80],[2778,77,2268,83,"data"],[2778,81,2268,87],[2778,86,2268,92],[2778,90,2268,96],[2778,94,2268,100,"data"],[2778,98,2268,104],[2778,103,2268,109],[2778,108,2268,114],[2778,109,2268,115],[2778,112,2268,118],[2778,117,2268,123],[2778,118,2268,124],[2778,121,2268,127,"data"],[2778,125,2268,131],[2778,126,2268,132,"totp"],[2778,130,2268,136],[2778,136,2268,142],[2778,140,2268,146],[2778,144,2268,150,"_b"],[2778,146,2268,152],[2778,151,2268,157],[2778,156,2268,162],[2778,157,2268,163],[2778,160,2268,166],[2778,165,2268,171],[2778,166,2268,172],[2778,169,2268,175,"_b"],[2778,171,2268,177],[2778,172,2268,178,"qr_code"],[2778,179,2268,185],[2778,180,2268,186],[2778,182,2268,188],[2779,12,2269,20,"data"],[2779,16,2269,24],[2779,17,2269,25,"totp"],[2779,21,2269,29],[2779,22,2269,30,"qr_code"],[2779,29,2269,37],[2779,32,2269,40],[2779,60,2269,68,"data"],[2779,64,2269,72],[2779,65,2269,73,"totp"],[2779,69,2269,77],[2779,70,2269,78,"qr_code"],[2779,77,2269,85],[2779,79,2269,87],[2780,10,2270,16],[2781,10,2271,16],[2781,17,2271,23],[2782,12,2271,25,"data"],[2782,16,2271,29],[2783,12,2271,31,"error"],[2783,17,2271,36],[2783,19,2271,38],[2784,10,2271,43],[2784,11,2271,44],[2785,8,2272,12],[2785,9,2272,13],[2785,10,2272,14],[2786,6,2273,8],[2786,7,2273,9],[2786,8,2274,8],[2786,15,2274,15,"error"],[2786,20,2274,20],[2786,22,2274,22],[2787,8,2275,12],[2787,12,2275,16],[2787,16,2275,16,"isAuthError"],[2787,26,2275,27],[2787,27,2275,27,"isAuthError"],[2787,38,2275,27],[2787,40,2275,28,"error"],[2787,45,2275,33],[2787,46,2275,34],[2787,48,2275,36],[2788,10,2276,16],[2788,17,2276,23],[2789,12,2276,25,"data"],[2789,16,2276,29],[2789,18,2276,31],[2789,22,2276,35],[2790,12,2276,37,"error"],[2791,10,2276,43],[2791,11,2276,44],[2792,8,2277,12],[2793,8,2278,12],[2793,14,2278,18,"error"],[2793,19,2278,23],[2794,6,2279,8],[2795,4,2280,4],[2796,4,2281,4],[2796,10,2281,10,"_verify"],[2796,17,2281,17,"_verify"],[2796,18,2281,18,"params"],[2796,24,2281,24],[2796,26,2281,26],[2797,6,2282,8],[2797,13,2282,15],[2797,17,2282,19],[2797,18,2282,20,"_acquireLock"],[2797,30,2282,32],[2797,31,2282,33],[2797,32,2282,34],[2797,33,2282,35],[2797,35,2282,37],[2797,47,2282,49],[2798,8,2283,12],[2798,12,2283,16],[2799,10,2284,16],[2799,17,2284,23],[2799,23,2284,29],[2799,27,2284,33],[2799,28,2284,34,"_useSession"],[2799,39,2284,45],[2799,40,2284,46],[2799,46,2284,53,"result"],[2799,52,2284,59],[2799,56,2284,64],[2800,12,2285,20],[2800,16,2285,24,"_a"],[2800,18,2285,26],[2801,12,2286,20],[2801,18,2286,26],[2802,14,2286,28,"data"],[2802,18,2286,32],[2802,20,2286,34,"sessionData"],[2802,31,2286,45],[2803,14,2286,47,"error"],[2803,19,2286,52],[2803,21,2286,54,"sessionError"],[2804,12,2286,67],[2804,13,2286,68],[2804,16,2286,71,"result"],[2804,22,2286,77],[2805,12,2287,20],[2805,16,2287,24,"sessionError"],[2805,28,2287,36],[2805,30,2287,38],[2806,14,2288,24],[2806,21,2288,31],[2807,16,2288,33,"data"],[2807,20,2288,37],[2807,22,2288,39],[2807,26,2288,43],[2808,16,2288,45,"error"],[2808,21,2288,50],[2808,23,2288,52,"sessionError"],[2809,14,2288,65],[2809,15,2288,66],[2810,12,2289,20],[2811,12,2290,20],[2811,18,2290,26,"body"],[2811,22,2290,30],[2811,25,2290,33,"Object"],[2811,31,2290,39],[2811,32,2290,40,"assign"],[2811,38,2290,46],[2811,39,2290,47],[2812,14,2290,49,"challenge_id"],[2812,26,2290,61],[2812,28,2290,63,"params"],[2812,34,2290,69],[2812,35,2290,70,"challengeId"],[2813,12,2290,82],[2813,13,2290,83],[2813,15,2290,86],[2813,25,2290,96],[2813,29,2290,100,"params"],[2813,35,2290,106],[2813,38,2291,26],[2814,14,2292,28,"webauthn"],[2814,22,2292,36],[2814,24,2292,38,"Object"],[2814,30,2292,44],[2814,31,2292,45,"assign"],[2814,37,2292,51],[2814,38,2292,52,"Object"],[2814,44,2292,58],[2814,45,2292,59,"assign"],[2814,51,2292,65],[2814,52,2292,66],[2814,53,2292,67],[2814,54,2292,68],[2814,56,2292,70,"params"],[2814,62,2292,76],[2814,63,2292,77,"webauthn"],[2814,71,2292,85],[2814,72,2292,86],[2814,74,2292,88],[2815,16,2292,90,"credential_response"],[2815,35,2292,109],[2815,37,2292,111,"params"],[2815,43,2292,117],[2815,44,2292,118,"webauthn"],[2815,52,2292,126],[2815,53,2292,127,"type"],[2815,57,2292,131],[2815,62,2292,136],[2815,70,2292,144],[2815,73,2293,38],[2815,77,2293,38,"serializeCredentialCreationResponse"],[2815,89,2293,73],[2815,90,2293,73,"serializeCredentialCreationResponse"],[2815,125,2293,73],[2815,127,2293,74,"params"],[2815,133,2293,80],[2815,134,2293,81,"webauthn"],[2815,142,2293,89],[2815,143,2293,90,"credential_response"],[2815,162,2293,109],[2815,163,2293,110],[2815,166,2294,38],[2815,170,2294,38,"serializeCredentialRequestResponse"],[2815,182,2294,72],[2815,183,2294,72,"serializeCredentialRequestResponse"],[2815,217,2294,72],[2815,219,2294,73,"params"],[2815,225,2294,79],[2815,226,2294,80,"webauthn"],[2815,234,2294,88],[2815,235,2294,89,"credential_response"],[2815,254,2294,108],[2816,14,2294,110],[2816,15,2294,111],[2817,12,2295,24],[2817,13,2295,25],[2817,16,2296,26],[2818,14,2296,28,"code"],[2818,18,2296,32],[2818,20,2296,34,"params"],[2818,26,2296,40],[2818,27,2296,41,"code"],[2819,12,2296,46],[2819,13,2296,48],[2819,14,2296,49],[2820,12,2297,20],[2820,18,2297,26],[2821,14,2297,28,"data"],[2821,18,2297,32],[2822,14,2297,34,"error"],[2823,12,2297,40],[2823,13,2297,41],[2823,16,2297,44],[2823,22,2297,50],[2823,26,2297,50,"_request"],[2823,35,2297,58],[2823,36,2297,58,"_request"],[2823,44,2297,58],[2823,46,2297,59],[2823,50,2297,63],[2823,51,2297,64,"fetch"],[2823,56,2297,69],[2823,58,2297,71],[2823,64,2297,77],[2823,66,2297,79],[2823,69,2297,82],[2823,73,2297,86],[2823,74,2297,87,"url"],[2823,77,2297,90],[2823,89,2297,102,"params"],[2823,95,2297,108],[2823,96,2297,109,"factorId"],[2823,104,2297,117],[2823,113,2297,126],[2823,115,2297,128],[2824,14,2298,24,"body"],[2824,18,2298,28],[2825,14,2299,24,"headers"],[2825,21,2299,31],[2825,23,2299,33],[2825,27,2299,37],[2825,28,2299,38,"headers"],[2825,35,2299,45],[2826,14,2300,24,"jwt"],[2826,17,2300,27],[2826,19,2300,29],[2826,20,2300,30,"_a"],[2826,22,2300,32],[2826,25,2300,35,"sessionData"],[2826,36,2300,46],[2826,41,2300,51],[2826,45,2300,55],[2826,49,2300,59,"sessionData"],[2826,60,2300,70],[2826,65,2300,75],[2826,70,2300,80],[2826,71,2300,81],[2826,74,2300,84],[2826,79,2300,89],[2826,80,2300,90],[2826,83,2300,93,"sessionData"],[2826,94,2300,104],[2826,95,2300,105,"session"],[2826,102,2300,112],[2826,108,2300,118],[2826,112,2300,122],[2826,116,2300,126,"_a"],[2826,118,2300,128],[2826,123,2300,133],[2826,128,2300,138],[2826,129,2300,139],[2826,132,2300,142],[2826,137,2300,147],[2826,138,2300,148],[2826,141,2300,151,"_a"],[2826,143,2300,153],[2826,144,2300,154,"access_token"],[2827,12,2301,20],[2827,13,2301,21],[2827,14,2301,22],[2828,12,2302,20],[2828,16,2302,24,"error"],[2828,21,2302,29],[2828,23,2302,31],[2829,14,2303,24],[2829,21,2303,31],[2830,16,2303,33,"data"],[2830,20,2303,37],[2830,22,2303,39],[2830,26,2303,43],[2831,16,2303,45,"error"],[2832,14,2303,51],[2832,15,2303,52],[2833,12,2304,20],[2834,12,2305,20],[2834,18,2305,26],[2834,22,2305,30],[2834,23,2305,31,"_saveSession"],[2834,35,2305,43],[2834,36,2305,44,"Object"],[2834,42,2305,50],[2834,43,2305,51,"assign"],[2834,49,2305,57],[2834,50,2305,58],[2835,14,2305,60,"expires_at"],[2835,24,2305,70],[2835,26,2305,72,"Math"],[2835,30,2305,76],[2835,31,2305,77,"round"],[2835,36,2305,82],[2835,37,2305,83,"Date"],[2835,41,2305,87],[2835,42,2305,88,"now"],[2835,45,2305,91],[2835,46,2305,92],[2835,47,2305,93],[2835,50,2305,96],[2835,54,2305,100],[2835,55,2305,101],[2835,58,2305,104,"data"],[2835,62,2305,108],[2835,63,2305,109,"expires_in"],[2836,12,2305,120],[2836,13,2305,121],[2836,15,2305,123,"data"],[2836,19,2305,127],[2836,20,2305,128],[2836,21,2305,129],[2837,12,2306,20],[2837,18,2306,26],[2837,22,2306,30],[2837,23,2306,31,"_notifyAllSubscribers"],[2837,44,2306,52],[2837,45,2306,53],[2837,69,2306,77],[2837,71,2306,79,"data"],[2837,75,2306,83],[2837,76,2306,84],[2838,12,2307,20],[2838,19,2307,27],[2839,14,2307,29,"data"],[2839,18,2307,33],[2840,14,2307,35,"error"],[2841,12,2307,41],[2841,13,2307,42],[2842,10,2308,16],[2842,11,2308,17],[2842,12,2308,18],[2843,8,2309,12],[2843,9,2309,13],[2843,10,2310,12],[2843,17,2310,19,"error"],[2843,22,2310,24],[2843,24,2310,26],[2844,10,2311,16],[2844,14,2311,20],[2844,18,2311,20,"isAuthError"],[2844,28,2311,31],[2844,29,2311,31,"isAuthError"],[2844,40,2311,31],[2844,42,2311,32,"error"],[2844,47,2311,37],[2844,48,2311,38],[2844,50,2311,40],[2845,12,2312,20],[2845,19,2312,27],[2846,14,2312,29,"data"],[2846,18,2312,33],[2846,20,2312,35],[2846,24,2312,39],[2847,14,2312,41,"error"],[2848,12,2312,47],[2848,13,2312,48],[2849,10,2313,16],[2850,10,2314,16],[2850,16,2314,22,"error"],[2850,21,2314,27],[2851,8,2315,12],[2852,6,2316,8],[2852,7,2316,9],[2852,8,2316,10],[2853,4,2317,4],[2854,4,2318,4],[2854,10,2318,10,"_challenge"],[2854,20,2318,20,"_challenge"],[2854,21,2318,21,"params"],[2854,27,2318,27],[2854,29,2318,29],[2855,6,2319,8],[2855,13,2319,15],[2855,17,2319,19],[2855,18,2319,20,"_acquireLock"],[2855,30,2319,32],[2855,31,2319,33],[2855,32,2319,34],[2855,33,2319,35],[2855,35,2319,37],[2855,47,2319,49],[2856,8,2320,12],[2856,12,2320,16],[2857,10,2321,16],[2857,17,2321,23],[2857,23,2321,29],[2857,27,2321,33],[2857,28,2321,34,"_useSession"],[2857,39,2321,45],[2857,40,2321,46],[2857,46,2321,53,"result"],[2857,52,2321,59],[2857,56,2321,64],[2858,12,2322,20],[2858,16,2322,24,"_a"],[2858,18,2322,26],[2859,12,2323,20],[2859,18,2323,26],[2860,14,2323,28,"data"],[2860,18,2323,32],[2860,20,2323,34,"sessionData"],[2860,31,2323,45],[2861,14,2323,47,"error"],[2861,19,2323,52],[2861,21,2323,54,"sessionError"],[2862,12,2323,67],[2862,13,2323,68],[2862,16,2323,71,"result"],[2862,22,2323,77],[2863,12,2324,20],[2863,16,2324,24,"sessionError"],[2863,28,2324,36],[2863,30,2324,38],[2864,14,2325,24],[2864,21,2325,31],[2865,16,2325,33,"data"],[2865,20,2325,37],[2865,22,2325,39],[2865,26,2325,43],[2866,16,2325,45,"error"],[2866,21,2325,50],[2866,23,2325,52,"sessionError"],[2867,14,2325,65],[2867,15,2325,66],[2868,12,2326,20],[2869,12,2327,20],[2869,18,2327,26,"response"],[2869,26,2327,34],[2869,29,2327,38],[2869,35,2327,44],[2869,39,2327,44,"_request"],[2869,48,2327,52],[2869,49,2327,52,"_request"],[2869,57,2327,52],[2869,59,2327,53],[2869,63,2327,57],[2869,64,2327,58,"fetch"],[2869,69,2327,63],[2869,71,2327,65],[2869,77,2327,71],[2869,79,2327,73],[2869,82,2327,76],[2869,86,2327,80],[2869,87,2327,81,"url"],[2869,90,2327,84],[2869,102,2327,96,"params"],[2869,108,2327,102],[2869,109,2327,103,"factorId"],[2869,117,2327,111],[2869,129,2327,123],[2869,131,2327,125],[2870,14,2328,24,"body"],[2870,18,2328,28],[2870,20,2328,30,"params"],[2870,26,2328,36],[2871,14,2329,24,"headers"],[2871,21,2329,31],[2871,23,2329,33],[2871,27,2329,37],[2871,28,2329,38,"headers"],[2871,35,2329,45],[2872,14,2330,24,"jwt"],[2872,17,2330,27],[2872,19,2330,29],[2872,20,2330,30,"_a"],[2872,22,2330,32],[2872,25,2330,35,"sessionData"],[2872,36,2330,46],[2872,41,2330,51],[2872,45,2330,55],[2872,49,2330,59,"sessionData"],[2872,60,2330,70],[2872,65,2330,75],[2872,70,2330,80],[2872,71,2330,81],[2872,74,2330,84],[2872,79,2330,89],[2872,80,2330,90],[2872,83,2330,93,"sessionData"],[2872,94,2330,104],[2872,95,2330,105,"session"],[2872,102,2330,112],[2872,108,2330,118],[2872,112,2330,122],[2872,116,2330,126,"_a"],[2872,118,2330,128],[2872,123,2330,133],[2872,128,2330,138],[2872,129,2330,139],[2872,132,2330,142],[2872,137,2330,147],[2872,138,2330,148],[2872,141,2330,151,"_a"],[2872,143,2330,153],[2872,144,2330,154,"access_token"],[2873,12,2331,20],[2873,13,2331,21],[2873,14,2331,23],[2874,12,2332,20],[2874,16,2332,24,"response"],[2874,24,2332,32],[2874,25,2332,33,"error"],[2874,30,2332,38],[2874,32,2332,40],[2875,14,2333,24],[2875,21,2333,31,"response"],[2875,29,2333,39],[2876,12,2334,20],[2877,12,2335,20],[2877,18,2335,26],[2878,14,2335,28,"data"],[2879,12,2335,33],[2879,13,2335,34],[2879,16,2335,37,"response"],[2879,24,2335,45],[2880,12,2336,20],[2880,16,2336,24,"data"],[2880,20,2336,28],[2880,21,2336,29,"type"],[2880,25,2336,33],[2880,30,2336,38],[2880,40,2336,48],[2880,42,2336,50],[2881,14,2337,24],[2881,21,2337,31],[2882,16,2337,33,"data"],[2882,20,2337,37],[2883,16,2337,39,"error"],[2883,21,2337,44],[2883,23,2337,46],[2884,14,2337,51],[2884,15,2337,52],[2885,12,2338,20],[2886,12,2339,20],[2886,20,2339,28,"data"],[2886,24,2339,32],[2886,25,2339,33,"webauthn"],[2886,33,2339,41],[2886,34,2339,42,"type"],[2886,38,2339,46],[2887,14,2340,24],[2887,19,2340,29],[2887,27,2340,37],[2888,16,2341,28],[2888,23,2341,35],[2889,18,2342,32,"data"],[2889,22,2342,36],[2889,24,2342,38,"Object"],[2889,30,2342,44],[2889,31,2342,45,"assign"],[2889,37,2342,51],[2889,38,2342,52,"Object"],[2889,44,2342,58],[2889,45,2342,59,"assign"],[2889,51,2342,65],[2889,52,2342,66],[2889,53,2342,67],[2889,54,2342,68],[2889,56,2342,70,"data"],[2889,60,2342,74],[2889,61,2342,75],[2889,63,2342,77],[2890,20,2342,79,"webauthn"],[2890,28,2342,87],[2890,30,2342,89,"Object"],[2890,36,2342,95],[2890,37,2342,96,"assign"],[2890,43,2342,102],[2890,44,2342,103,"Object"],[2890,50,2342,109],[2890,51,2342,110,"assign"],[2890,57,2342,116],[2890,58,2342,117],[2890,59,2342,118],[2890,60,2342,119],[2890,62,2342,121,"data"],[2890,66,2342,125],[2890,67,2342,126,"webauthn"],[2890,75,2342,134],[2890,76,2342,135],[2890,78,2342,137],[2891,22,2342,139,"credential_options"],[2891,40,2342,157],[2891,42,2342,159,"Object"],[2891,48,2342,165],[2891,49,2342,166,"assign"],[2891,55,2342,172],[2891,56,2342,173,"Object"],[2891,62,2342,179],[2891,63,2342,180,"assign"],[2891,69,2342,186],[2891,70,2342,187],[2891,71,2342,188],[2891,72,2342,189],[2891,74,2342,191,"data"],[2891,78,2342,195],[2891,79,2342,196,"webauthn"],[2891,87,2342,204],[2891,88,2342,205,"credential_options"],[2891,106,2342,223],[2891,107,2342,224],[2891,109,2342,226],[2892,24,2342,228,"publicKey"],[2892,33,2342,237],[2892,35,2342,239],[2892,39,2342,239,"deserializeCredentialCreationOptions"],[2892,51,2342,275],[2892,52,2342,275,"deserializeCredentialCreationOptions"],[2892,88,2342,275],[2892,90,2342,276,"data"],[2892,94,2342,280],[2892,95,2342,281,"webauthn"],[2892,103,2342,289],[2892,104,2342,290,"credential_options"],[2892,122,2342,308],[2892,123,2342,309,"publicKey"],[2892,132,2342,318],[2893,22,2342,320],[2893,23,2342,321],[2894,20,2342,323],[2894,21,2342,324],[2895,18,2342,326],[2895,19,2342,327],[2895,20,2342,328],[2896,18,2343,32,"error"],[2896,23,2343,37],[2896,25,2343,39],[2897,16,2344,28],[2897,17,2344,29],[2898,14,2345,24],[2898,19,2345,29],[2898,28,2345,38],[2899,16,2346,28],[2899,23,2346,35],[2900,18,2347,32,"data"],[2900,22,2347,36],[2900,24,2347,38,"Object"],[2900,30,2347,44],[2900,31,2347,45,"assign"],[2900,37,2347,51],[2900,38,2347,52,"Object"],[2900,44,2347,58],[2900,45,2347,59,"assign"],[2900,51,2347,65],[2900,52,2347,66],[2900,53,2347,67],[2900,54,2347,68],[2900,56,2347,70,"data"],[2900,60,2347,74],[2900,61,2347,75],[2900,63,2347,77],[2901,20,2347,79,"webauthn"],[2901,28,2347,87],[2901,30,2347,89,"Object"],[2901,36,2347,95],[2901,37,2347,96,"assign"],[2901,43,2347,102],[2901,44,2347,103,"Object"],[2901,50,2347,109],[2901,51,2347,110,"assign"],[2901,57,2347,116],[2901,58,2347,117],[2901,59,2347,118],[2901,60,2347,119],[2901,62,2347,121,"data"],[2901,66,2347,125],[2901,67,2347,126,"webauthn"],[2901,75,2347,134],[2901,76,2347,135],[2901,78,2347,137],[2902,22,2347,139,"credential_options"],[2902,40,2347,157],[2902,42,2347,159,"Object"],[2902,48,2347,165],[2902,49,2347,166,"assign"],[2902,55,2347,172],[2902,56,2347,173,"Object"],[2902,62,2347,179],[2902,63,2347,180,"assign"],[2902,69,2347,186],[2902,70,2347,187],[2902,71,2347,188],[2902,72,2347,189],[2902,74,2347,191,"data"],[2902,78,2347,195],[2902,79,2347,196,"webauthn"],[2902,87,2347,204],[2902,88,2347,205,"credential_options"],[2902,106,2347,223],[2902,107,2347,224],[2902,109,2347,226],[2903,24,2347,228,"publicKey"],[2903,33,2347,237],[2903,35,2347,239],[2903,39,2347,239,"deserializeCredentialRequestOptions"],[2903,51,2347,274],[2903,52,2347,274,"deserializeCredentialRequestOptions"],[2903,87,2347,274],[2903,89,2347,275,"data"],[2903,93,2347,279],[2903,94,2347,280,"webauthn"],[2903,102,2347,288],[2903,103,2347,289,"credential_options"],[2903,121,2347,307],[2903,122,2347,308,"publicKey"],[2903,131,2347,317],[2904,22,2347,319],[2904,23,2347,320],[2905,20,2347,322],[2905,21,2347,323],[2906,18,2347,325],[2906,19,2347,326],[2906,20,2347,327],[2907,18,2348,32,"error"],[2907,23,2348,37],[2907,25,2348,39],[2908,16,2349,28],[2908,17,2349,29],[2909,12,2350,20],[2910,10,2351,16],[2910,11,2351,17],[2910,12,2351,18],[2911,8,2352,12],[2911,9,2352,13],[2911,10,2353,12],[2911,17,2353,19,"error"],[2911,22,2353,24],[2911,24,2353,26],[2912,10,2354,16],[2912,14,2354,20],[2912,18,2354,20,"isAuthError"],[2912,28,2354,31],[2912,29,2354,31,"isAuthError"],[2912,40,2354,31],[2912,42,2354,32,"error"],[2912,47,2354,37],[2912,48,2354,38],[2912,50,2354,40],[2913,12,2355,20],[2913,19,2355,27],[2914,14,2355,29,"data"],[2914,18,2355,33],[2914,20,2355,35],[2914,24,2355,39],[2915,14,2355,41,"error"],[2916,12,2355,47],[2916,13,2355,48],[2917,10,2356,16],[2918,10,2357,16],[2918,16,2357,22,"error"],[2918,21,2357,27],[2919,8,2358,12],[2920,6,2359,8],[2920,7,2359,9],[2920,8,2359,10],[2921,4,2360,4],[2922,4,2361,4],[2923,0,2362,0],[2924,0,2363,0],[2925,4,2364,4],[2925,10,2364,10,"_challengeAndVerify"],[2925,29,2364,29,"_challengeAndVerify"],[2925,30,2364,30,"params"],[2925,36,2364,36],[2925,38,2364,38],[2926,6,2365,8],[2927,6,2366,8],[2928,6,2367,8],[2928,12,2367,14],[2929,8,2367,16,"data"],[2929,12,2367,20],[2929,14,2367,22,"challengeData"],[2929,27,2367,35],[2930,8,2367,37,"error"],[2930,13,2367,42],[2930,15,2367,44,"challengeError"],[2931,6,2367,59],[2931,7,2367,60],[2931,10,2367,63],[2931,16,2367,69],[2931,20,2367,73],[2931,21,2367,74,"_challenge"],[2931,31,2367,84],[2931,32,2367,85],[2932,8,2368,12,"factorId"],[2932,16,2368,20],[2932,18,2368,22,"params"],[2932,24,2368,28],[2932,25,2368,29,"factorId"],[2933,6,2369,8],[2933,7,2369,9],[2933,8,2369,10],[2934,6,2370,8],[2934,10,2370,12,"challengeError"],[2934,24,2370,26],[2934,26,2370,28],[2935,8,2371,12],[2935,15,2371,19],[2936,10,2371,21,"data"],[2936,14,2371,25],[2936,16,2371,27],[2936,20,2371,31],[2937,10,2371,33,"error"],[2937,15,2371,38],[2937,17,2371,40,"challengeError"],[2938,8,2371,55],[2938,9,2371,56],[2939,6,2372,8],[2940,6,2373,8],[2940,13,2373,15],[2940,19,2373,21],[2940,23,2373,25],[2940,24,2373,26,"_verify"],[2940,31,2373,33],[2940,32,2373,34],[2941,8,2374,12,"factorId"],[2941,16,2374,20],[2941,18,2374,22,"params"],[2941,24,2374,28],[2941,25,2374,29,"factorId"],[2941,33,2374,37],[2942,8,2375,12,"challengeId"],[2942,19,2375,23],[2942,21,2375,25,"challengeData"],[2942,34,2375,38],[2942,35,2375,39,"id"],[2942,37,2375,41],[2943,8,2376,12,"code"],[2943,12,2376,16],[2943,14,2376,18,"params"],[2943,20,2376,24],[2943,21,2376,25,"code"],[2944,6,2377,8],[2944,7,2377,9],[2944,8,2377,10],[2945,4,2378,4],[2946,4,2379,4],[2947,0,2380,0],[2948,0,2381,0],[2949,4,2382,4],[2949,10,2382,10,"_listFactors"],[2949,22,2382,22,"_listFactors"],[2949,23,2382,22],[2949,25,2382,25],[2950,6,2383,8],[2950,10,2383,12,"_a"],[2950,12,2383,14],[2951,6,2384,8],[2952,6,2385,8],[2952,12,2385,14],[2953,8,2385,16,"data"],[2953,12,2385,20],[2953,14,2385,22],[2954,10,2385,24,"user"],[2955,8,2385,29],[2955,9,2385,30],[2956,8,2385,32,"error"],[2956,13,2385,37],[2956,15,2385,39,"userError"],[2957,6,2385,50],[2957,7,2385,51],[2957,10,2385,54],[2957,16,2385,60],[2957,20,2385,64],[2957,21,2385,65,"getUser"],[2957,28,2385,72],[2957,29,2385,73],[2957,30,2385,74],[2958,6,2386,8],[2958,10,2386,12,"userError"],[2958,19,2386,21],[2958,21,2386,23],[2959,8,2387,12],[2959,15,2387,19],[2960,10,2387,21,"data"],[2960,14,2387,25],[2960,16,2387,27],[2960,20,2387,31],[2961,10,2387,33,"error"],[2961,15,2387,38],[2961,17,2387,40,"userError"],[2962,8,2387,50],[2962,9,2387,51],[2963,6,2388,8],[2964,6,2389,8],[2964,12,2389,14,"data"],[2964,16,2389,18],[2964,19,2389,21],[2965,8,2390,12,"all"],[2965,11,2390,15],[2965,13,2390,17],[2965,15,2390,19],[2966,8,2391,12,"phone"],[2966,13,2391,17],[2966,15,2391,19],[2966,17,2391,21],[2967,8,2392,12,"totp"],[2967,12,2392,16],[2967,14,2392,18],[2967,16,2392,20],[2968,8,2393,12,"webauthn"],[2968,16,2393,20],[2968,18,2393,22],[2969,6,2394,8],[2969,7,2394,9],[2970,6,2395,8],[2971,6,2396,8],[2971,11,2396,13],[2971,17,2396,19,"factor"],[2971,23,2396,25],[2971,27,2396,29],[2971,28,2396,30,"_a"],[2971,30,2396,32],[2971,33,2396,35,"user"],[2971,37,2396,39],[2971,42,2396,44],[2971,46,2396,48],[2971,50,2396,52,"user"],[2971,54,2396,56],[2971,59,2396,61],[2971,64,2396,66],[2971,65,2396,67],[2971,68,2396,70],[2971,73,2396,75],[2971,74,2396,76],[2971,77,2396,79,"user"],[2971,81,2396,83],[2971,82,2396,84,"factors"],[2971,89,2396,91],[2971,95,2396,97],[2971,99,2396,101],[2971,103,2396,105,"_a"],[2971,105,2396,107],[2971,110,2396,112],[2971,115,2396,117],[2971,116,2396,118],[2971,119,2396,121,"_a"],[2971,121,2396,123],[2971,124,2396,126],[2971,126,2396,128],[2971,128,2396,130],[2972,8,2397,12,"data"],[2972,12,2397,16],[2972,13,2397,17,"all"],[2972,16,2397,20],[2972,17,2397,21,"push"],[2972,21,2397,25],[2972,22,2397,26,"factor"],[2972,28,2397,32],[2972,29,2397,33],[2973,8,2398,12],[2973,12,2398,16,"factor"],[2973,18,2398,22],[2973,19,2398,23,"status"],[2973,25,2398,29],[2973,30,2398,34],[2973,40,2398,44],[2973,42,2398,46],[2974,10,2399,16],[2975,10,2400,16,"data"],[2975,14,2400,20],[2975,15,2400,21,"factor"],[2975,21,2400,27],[2975,22,2400,28,"factor_type"],[2975,33,2400,39],[2975,34,2400,40],[2975,35,2400,41,"push"],[2975,39,2400,45],[2975,40,2400,46,"factor"],[2975,46,2400,52],[2975,47,2400,53],[2976,8,2401,12],[2977,6,2402,8],[2978,6,2403,8],[2978,13,2403,15],[2979,8,2404,12,"data"],[2979,12,2404,16],[2980,8,2405,12,"error"],[2980,13,2405,17],[2980,15,2405,19],[2981,6,2406,8],[2981,7,2406,9],[2982,4,2407,4],[2983,4,2408,4],[2984,0,2409,0],[2985,0,2410,0],[2986,4,2411,4],[2986,10,2411,10,"_getAuthenticatorAssuranceLevel"],[2986,41,2411,41,"_getAuthenticatorAssuranceLevel"],[2986,42,2411,41],[2986,44,2411,44],[2987,6,2412,8],[2987,13,2412,15],[2987,17,2412,19],[2987,18,2412,20,"_acquireLock"],[2987,30,2412,32],[2987,31,2412,33],[2987,32,2412,34],[2987,33,2412,35],[2987,35,2412,37],[2987,47,2412,49],[2988,8,2413,12],[2988,15,2413,19],[2988,21,2413,25],[2988,25,2413,29],[2988,26,2413,30,"_useSession"],[2988,37,2413,41],[2988,38,2413,42],[2988,44,2413,49,"result"],[2988,50,2413,55],[2988,54,2413,60],[2989,10,2414,16],[2989,14,2414,20,"_a"],[2989,16,2414,22],[2989,18,2414,24,"_b"],[2989,20,2414,26],[2990,10,2415,16],[2990,16,2415,22],[2991,12,2415,24,"data"],[2991,16,2415,28],[2991,18,2415,30],[2992,14,2415,32,"session"],[2993,12,2415,40],[2993,13,2415,41],[2994,12,2415,43,"error"],[2994,17,2415,48],[2994,19,2415,50,"sessionError"],[2995,10,2415,64],[2995,11,2415,65],[2995,14,2415,68,"result"],[2995,20,2415,74],[2996,10,2416,16],[2996,14,2416,20,"sessionError"],[2996,26,2416,32],[2996,28,2416,34],[2997,12,2417,20],[2997,19,2417,27],[2998,14,2417,29,"data"],[2998,18,2417,33],[2998,20,2417,35],[2998,24,2417,39],[2999,14,2417,41,"error"],[2999,19,2417,46],[2999,21,2417,48,"sessionError"],[3000,12,2417,61],[3000,13,2417,62],[3001,10,2418,16],[3002,10,2419,16],[3002,14,2419,20],[3002,15,2419,21,"session"],[3002,22,2419,28],[3002,24,2419,30],[3003,12,2420,20],[3003,19,2420,27],[3004,14,2421,24,"data"],[3004,18,2421,28],[3004,20,2421,30],[3005,16,2421,32,"currentLevel"],[3005,28,2421,44],[3005,30,2421,46],[3005,34,2421,50],[3006,16,2421,52,"nextLevel"],[3006,25,2421,61],[3006,27,2421,63],[3006,31,2421,67],[3007,16,2421,69,"currentAuthenticationMethods"],[3007,44,2421,97],[3007,46,2421,99],[3008,14,2421,102],[3008,15,2421,103],[3009,14,2422,24,"error"],[3009,19,2422,29],[3009,21,2422,31],[3010,12,2423,20],[3010,13,2423,21],[3011,10,2424,16],[3012,10,2425,16],[3012,16,2425,22],[3013,12,2425,24,"payload"],[3014,10,2425,32],[3014,11,2425,33],[3014,14,2425,36],[3014,18,2425,36,"decodeJWT"],[3014,29,2425,45],[3014,30,2425,45,"decodeJWT"],[3014,39,2425,45],[3014,41,2425,46,"session"],[3014,48,2425,53],[3014,49,2425,54,"access_token"],[3014,61,2425,66],[3014,62,2425,67],[3015,10,2426,16],[3015,14,2426,20,"currentLevel"],[3015,26,2426,32],[3015,29,2426,35],[3015,33,2426,39],[3016,10,2427,16],[3016,14,2427,20,"payload"],[3016,21,2427,27],[3016,22,2427,28,"aal"],[3016,25,2427,31],[3016,27,2427,33],[3017,12,2428,20,"currentLevel"],[3017,24,2428,32],[3017,27,2428,35,"payload"],[3017,34,2428,42],[3017,35,2428,43,"aal"],[3017,38,2428,46],[3018,10,2429,16],[3019,10,2430,16],[3019,14,2430,20,"nextLevel"],[3019,23,2430,29],[3019,26,2430,32,"currentLevel"],[3019,38,2430,44],[3020,10,2431,16],[3020,16,2431,22,"verifiedFactors"],[3020,31,2431,37],[3020,34,2431,40],[3020,35,2431,41,"_b"],[3020,37,2431,43],[3020,40,2431,46],[3020,41,2431,47,"_a"],[3020,43,2431,49],[3020,46,2431,52,"session"],[3020,53,2431,59],[3020,54,2431,60,"user"],[3020,58,2431,64],[3020,59,2431,65,"factors"],[3020,66,2431,72],[3020,72,2431,78],[3020,76,2431,82],[3020,80,2431,86,"_a"],[3020,82,2431,88],[3020,87,2431,93],[3020,92,2431,98],[3020,93,2431,99],[3020,96,2431,102],[3020,101,2431,107],[3020,102,2431,108],[3020,105,2431,111,"_a"],[3020,107,2431,113],[3020,108,2431,114,"filter"],[3020,114,2431,120],[3020,115,2431,122,"factor"],[3020,121,2431,128],[3020,125,2431,133,"factor"],[3020,131,2431,139],[3020,132,2431,140,"status"],[3020,138,2431,146],[3020,143,2431,151],[3020,153,2431,161],[3020,154,2431,162],[3020,160,2431,168],[3020,164,2431,172],[3020,168,2431,176,"_b"],[3020,170,2431,178],[3020,175,2431,183],[3020,180,2431,188],[3020,181,2431,189],[3020,184,2431,192,"_b"],[3020,186,2431,194],[3020,189,2431,197],[3020,191,2431,199],[3021,10,2432,16],[3021,14,2432,20,"verifiedFactors"],[3021,29,2432,35],[3021,30,2432,36,"length"],[3021,36,2432,42],[3021,39,2432,45],[3021,40,2432,46],[3021,42,2432,48],[3022,12,2433,20,"nextLevel"],[3022,21,2433,29],[3022,24,2433,32],[3022,30,2433,38],[3023,10,2434,16],[3024,10,2435,16],[3024,16,2435,22,"currentAuthenticationMethods"],[3024,44,2435,50],[3024,47,2435,53,"payload"],[3024,54,2435,60],[3024,55,2435,61,"amr"],[3024,58,2435,64],[3024,62,2435,68],[3024,64,2435,70],[3025,10,2436,16],[3025,17,2436,23],[3026,12,2436,25,"data"],[3026,16,2436,29],[3026,18,2436,31],[3027,14,2436,33,"currentLevel"],[3027,26,2436,45],[3028,14,2436,47,"nextLevel"],[3028,23,2436,56],[3029,14,2436,58,"currentAuthenticationMethods"],[3030,12,2436,87],[3030,13,2436,88],[3031,12,2436,90,"error"],[3031,17,2436,95],[3031,19,2436,97],[3032,10,2436,102],[3032,11,2436,103],[3033,8,2437,12],[3033,9,2437,13],[3033,10,2437,14],[3034,6,2438,8],[3034,7,2438,9],[3034,8,2438,10],[3035,4,2439,4],[3036,4,2440,4],[3036,10,2440,10,"fetchJwk"],[3036,18,2440,18,"fetchJwk"],[3036,19,2440,19,"kid"],[3036,22,2440,22],[3036,24,2440,24,"jwks"],[3036,28,2440,28],[3036,31,2440,31],[3037,6,2440,33,"keys"],[3037,10,2440,37],[3037,12,2440,39],[3038,4,2440,42],[3038,5,2440,43],[3038,7,2440,45],[3039,6,2441,8],[3040,6,2442,8],[3040,10,2442,12,"jwk"],[3040,13,2442,15],[3040,16,2442,18,"jwks"],[3040,20,2442,22],[3040,21,2442,23,"keys"],[3040,25,2442,27],[3040,26,2442,28,"find"],[3040,30,2442,32],[3040,31,2442,34,"key"],[3040,34,2442,37],[3040,38,2442,42,"key"],[3040,41,2442,45],[3040,42,2442,46,"kid"],[3040,45,2442,49],[3040,50,2442,54,"kid"],[3040,53,2442,57],[3040,54,2442,58],[3041,6,2443,8],[3041,10,2443,12,"jwk"],[3041,13,2443,15],[3041,15,2443,17],[3042,8,2444,12],[3042,15,2444,19,"jwk"],[3042,18,2444,22],[3043,6,2445,8],[3044,6,2446,8],[3044,12,2446,14,"now"],[3044,15,2446,17],[3044,18,2446,20,"Date"],[3044,22,2446,24],[3044,23,2446,25,"now"],[3044,26,2446,28],[3044,27,2446,29],[3044,28,2446,30],[3045,6,2447,8],[3046,6,2448,8,"jwk"],[3046,9,2448,11],[3046,12,2448,14],[3046,16,2448,18],[3046,17,2448,19,"jwks"],[3046,21,2448,23],[3046,22,2448,24,"keys"],[3046,26,2448,28],[3046,27,2448,29,"find"],[3046,31,2448,33],[3046,32,2448,35,"key"],[3046,35,2448,38],[3046,39,2448,43,"key"],[3046,42,2448,46],[3046,43,2448,47,"kid"],[3046,46,2448,50],[3046,51,2448,55,"kid"],[3046,54,2448,58],[3046,55,2448,59],[3047,6,2449,8],[3048,6,2450,8],[3048,10,2450,12,"jwk"],[3048,13,2450,15],[3048,17,2450,19],[3048,21,2450,23],[3048,22,2450,24,"jwks_cached_at"],[3048,36,2450,38],[3048,39,2450,41,"JWKS_TTL"],[3048,52,2450,49],[3048,53,2450,49,"JWKS_TTL"],[3048,61,2450,49],[3048,64,2450,52,"now"],[3048,67,2450,55],[3048,69,2450,57],[3049,8,2451,12],[3049,15,2451,19,"jwk"],[3049,18,2451,22],[3050,6,2452,8],[3051,6,2453,8],[3052,6,2454,8],[3052,12,2454,14],[3053,8,2454,16,"data"],[3053,12,2454,20],[3054,8,2454,22,"error"],[3055,6,2454,28],[3055,7,2454,29],[3055,10,2454,32],[3055,16,2454,38],[3055,20,2454,38,"_request"],[3055,29,2454,46],[3055,30,2454,46,"_request"],[3055,38,2454,46],[3055,40,2454,47],[3055,44,2454,51],[3055,45,2454,52,"fetch"],[3055,50,2454,57],[3055,52,2454,59],[3055,57,2454,64],[3055,59,2454,66],[3055,62,2454,69],[3055,66,2454,73],[3055,67,2454,74,"url"],[3055,70,2454,77],[3055,94,2454,101],[3055,96,2454,103],[3056,8,2455,12,"headers"],[3056,15,2455,19],[3056,17,2455,21],[3056,21,2455,25],[3056,22,2455,26,"headers"],[3057,6,2456,8],[3057,7,2456,9],[3057,8,2456,10],[3058,6,2457,8],[3058,10,2457,12,"error"],[3058,15,2457,17],[3058,17,2457,19],[3059,8,2458,12],[3059,14,2458,18,"error"],[3059,19,2458,23],[3060,6,2459,8],[3061,6,2460,8],[3061,10,2460,12],[3061,11,2460,13,"data"],[3061,15,2460,17],[3061,16,2460,18,"keys"],[3061,20,2460,22],[3061,24,2460,26,"data"],[3061,28,2460,30],[3061,29,2460,31,"keys"],[3061,33,2460,35],[3061,34,2460,36,"length"],[3061,40,2460,42],[3061,45,2460,47],[3061,46,2460,48],[3061,48,2460,50],[3062,8,2461,12],[3062,15,2461,19],[3062,19,2461,23],[3063,6,2462,8],[3064,6,2463,8],[3064,10,2463,12],[3064,11,2463,13,"jwks"],[3064,15,2463,17],[3064,18,2463,20,"data"],[3064,22,2463,24],[3065,6,2464,8],[3065,10,2464,12],[3065,11,2464,13,"jwks_cached_at"],[3065,25,2464,27],[3065,28,2464,30,"now"],[3065,31,2464,33],[3066,6,2465,8],[3067,6,2466,8,"jwk"],[3067,9,2466,11],[3067,12,2466,14,"data"],[3067,16,2466,18],[3067,17,2466,19,"keys"],[3067,21,2466,23],[3067,22,2466,24,"find"],[3067,26,2466,28],[3067,27,2466,30,"key"],[3067,30,2466,33],[3067,34,2466,38,"key"],[3067,37,2466,41],[3067,38,2466,42,"kid"],[3067,41,2466,45],[3067,46,2466,50,"kid"],[3067,49,2466,53],[3067,50,2466,54],[3068,6,2467,8],[3068,10,2467,12],[3068,11,2467,13,"jwk"],[3068,14,2467,16],[3068,16,2467,18],[3069,8,2468,12],[3069,15,2468,19],[3069,19,2468,23],[3070,6,2469,8],[3071,6,2470,8],[3071,13,2470,15,"jwk"],[3071,16,2470,18],[3072,4,2471,4],[3073,4,2472,4],[3074,0,2473,0],[3075,0,2474,0],[3076,0,2475,0],[3077,0,2476,0],[3078,0,2477,0],[3079,0,2478,0],[3080,0,2479,0],[3081,0,2480,0],[3082,0,2481,0],[3083,0,2482,0],[3084,0,2483,0],[3085,0,2484,0],[3086,0,2485,0],[3087,0,2486,0],[3088,0,2487,0],[3089,4,2488,4],[3089,10,2488,10,"getClaims"],[3089,19,2488,19,"getClaims"],[3089,20,2488,20,"jwt"],[3089,23,2488,23],[3089,25,2488,25,"options"],[3089,32,2488,32],[3089,35,2488,35],[3089,36,2488,36],[3089,37,2488,37],[3089,39,2488,39],[3090,6,2489,8],[3090,10,2489,12],[3091,8,2490,12],[3091,12,2490,16,"token"],[3091,17,2490,21],[3091,20,2490,24,"jwt"],[3091,23,2490,27],[3092,8,2491,12],[3092,12,2491,16],[3092,13,2491,17,"token"],[3092,18,2491,22],[3092,20,2491,24],[3093,10,2492,16],[3093,16,2492,22],[3094,12,2492,24,"data"],[3094,16,2492,28],[3095,12,2492,30,"error"],[3096,10,2492,36],[3096,11,2492,37],[3096,14,2492,40],[3096,20,2492,46],[3096,24,2492,50],[3096,25,2492,51,"getSession"],[3096,35,2492,61],[3096,36,2492,62],[3096,37,2492,63],[3097,10,2493,16],[3097,14,2493,20,"error"],[3097,19,2493,25],[3097,23,2493,29],[3097,24,2493,30,"data"],[3097,28,2493,34],[3097,29,2493,35,"session"],[3097,36,2493,42],[3097,38,2493,44],[3098,12,2494,20],[3098,19,2494,27],[3099,14,2494,29,"data"],[3099,18,2494,33],[3099,20,2494,35],[3099,24,2494,39],[3100,14,2494,41,"error"],[3101,12,2494,47],[3101,13,2494,48],[3102,10,2495,16],[3103,10,2496,16,"token"],[3103,15,2496,21],[3103,18,2496,24,"data"],[3103,22,2496,28],[3103,23,2496,29,"session"],[3103,30,2496,36],[3103,31,2496,37,"access_token"],[3103,43,2496,49],[3104,8,2497,12],[3105,8,2498,12],[3105,14,2498,18],[3106,10,2498,20,"header"],[3106,16,2498,26],[3107,10,2498,28,"payload"],[3107,17,2498,35],[3108,10,2498,37,"signature"],[3108,19,2498,46],[3109,10,2498,48,"raw"],[3109,13,2498,51],[3109,15,2498,53],[3110,12,2498,55,"header"],[3110,18,2498,61],[3110,20,2498,63,"rawHeader"],[3110,29,2498,72],[3111,12,2498,74,"payload"],[3111,19,2498,81],[3111,21,2498,83,"rawPayload"],[3112,10,2498,94],[3113,8,2498,97],[3113,9,2498,98],[3113,12,2498,101],[3113,16,2498,101,"decodeJWT"],[3113,27,2498,110],[3113,28,2498,110,"decodeJWT"],[3113,37,2498,110],[3113,39,2498,111,"token"],[3113,44,2498,116],[3113,45,2498,117],[3114,8,2499,12],[3114,12,2499,16],[3114,14,2499,18,"options"],[3114,21,2499,25],[3114,26,2499,30],[3114,30,2499,34],[3114,34,2499,38,"options"],[3114,41,2499,45],[3114,46,2499,50],[3114,51,2499,55],[3114,52,2499,56],[3114,55,2499,59],[3114,60,2499,64],[3114,61,2499,65],[3114,64,2499,68,"options"],[3114,71,2499,75],[3114,72,2499,76,"allowExpired"],[3114,84,2499,88],[3114,85,2499,89],[3114,87,2499,91],[3115,10,2500,16],[3116,10,2501,16],[3116,14,2501,16,"validateExp"],[3116,25,2501,27],[3116,26,2501,27,"validateExp"],[3116,37,2501,27],[3116,39,2501,28,"payload"],[3116,46,2501,35],[3116,47,2501,36,"exp"],[3116,50,2501,39],[3116,51,2501,40],[3117,8,2502,12],[3118,8,2503,12],[3118,14,2503,18,"signingKey"],[3118,24,2503,28],[3118,27,2503,31],[3118,28,2503,32,"header"],[3118,34,2503,38],[3118,35,2503,39,"alg"],[3118,38,2503,42],[3118,42,2504,16,"header"],[3118,48,2504,22],[3118,49,2504,23,"alg"],[3118,52,2504,26],[3118,53,2504,27,"startsWith"],[3118,63,2504,37],[3118,64,2504,38],[3118,68,2504,42],[3118,69,2504,43],[3118,73,2505,16],[3118,74,2505,17,"header"],[3118,80,2505,23],[3118,81,2505,24,"kid"],[3118,84,2505,27],[3118,88,2506,16],[3118,90,2506,18],[3118,98,2506,26],[3118,102,2506,30,"globalThis"],[3118,112,2506,40],[3118,116,2506,44],[3118,124,2506,52],[3118,128,2506,56,"globalThis"],[3118,138,2506,66],[3118,139,2506,67,"crypto"],[3118,145,2506,73],[3118,146,2506,74],[3118,149,2507,18],[3118,153,2507,22],[3118,156,2508,18],[3118,162,2508,24],[3118,166,2508,28],[3118,167,2508,29,"fetchJwk"],[3118,175,2508,37],[3118,176,2508,38,"header"],[3118,182,2508,44],[3118,183,2508,45,"kid"],[3118,186,2508,48],[3118,188,2508,50],[3118,189,2508,51,"options"],[3118,196,2508,58],[3118,201,2508,63],[3118,205,2508,67],[3118,209,2508,71,"options"],[3118,216,2508,78],[3118,221,2508,83],[3118,226,2508,88],[3118,227,2508,89],[3118,230,2508,92],[3118,235,2508,97],[3118,236,2508,98],[3118,239,2508,101,"options"],[3118,246,2508,108],[3118,247,2508,109,"keys"],[3118,251,2508,113],[3118,255,2508,117],[3119,10,2508,119,"keys"],[3119,14,2508,123],[3119,16,2508,125,"options"],[3119,23,2508,132],[3119,24,2508,133,"keys"],[3120,8,2508,138],[3120,9,2508,139],[3120,12,2508,142,"options"],[3120,19,2508,149],[3120,24,2508,154],[3120,28,2508,158],[3120,32,2508,162,"options"],[3120,39,2508,169],[3120,44,2508,174],[3120,49,2508,179],[3120,50,2508,180],[3120,53,2508,183],[3120,58,2508,188],[3120,59,2508,189],[3120,62,2508,192,"options"],[3120,69,2508,199],[3120,70,2508,200,"jwks"],[3120,74,2508,204],[3120,75,2508,205],[3121,8,2509,12],[3122,8,2510,12],[3122,12,2510,16],[3122,13,2510,17,"signingKey"],[3122,23,2510,27],[3122,25,2510,29],[3123,10,2511,16],[3123,16,2511,22],[3124,12,2511,24,"error"],[3125,10,2511,30],[3125,11,2511,31],[3125,14,2511,34],[3125,20,2511,40],[3125,24,2511,44],[3125,25,2511,45,"getUser"],[3125,32,2511,52],[3125,33,2511,53,"token"],[3125,38,2511,58],[3125,39,2511,59],[3126,10,2512,16],[3126,14,2512,20,"error"],[3126,19,2512,25],[3126,21,2512,27],[3127,12,2513,20],[3127,18,2513,26,"error"],[3127,23,2513,31],[3128,10,2514,16],[3129,10,2515,16],[3130,10,2516,16],[3130,17,2516,23],[3131,12,2517,20,"data"],[3131,16,2517,24],[3131,18,2517,26],[3132,14,2518,24,"claims"],[3132,20,2518,30],[3132,22,2518,32,"payload"],[3132,29,2518,39],[3133,14,2519,24,"header"],[3133,20,2519,30],[3134,14,2520,24,"signature"],[3135,12,2521,20],[3135,13,2521,21],[3136,12,2522,20,"error"],[3136,17,2522,25],[3136,19,2522,27],[3137,10,2523,16],[3137,11,2523,17],[3138,8,2524,12],[3139,8,2525,12],[3139,14,2525,18,"algorithm"],[3139,23,2525,27],[3139,26,2525,30],[3139,30,2525,30,"getAlgorithm"],[3139,41,2525,42],[3139,42,2525,42,"getAlgorithm"],[3139,54,2525,42],[3139,56,2525,43,"header"],[3139,62,2525,49],[3139,63,2525,50,"alg"],[3139,66,2525,53],[3139,67,2525,54],[3140,8,2526,12],[3141,8,2527,12],[3141,14,2527,18,"publicKey"],[3141,23,2527,27],[3141,26,2527,30],[3141,32,2527,36,"crypto"],[3141,38,2527,42],[3141,39,2527,43,"subtle"],[3141,45,2527,49],[3141,46,2527,50,"importKey"],[3141,55,2527,59],[3141,56,2527,60],[3141,61,2527,65],[3141,63,2527,67,"signingKey"],[3141,73,2527,77],[3141,75,2527,79,"algorithm"],[3141,84,2527,88],[3141,86,2527,90],[3141,90,2527,94],[3141,92,2527,96],[3141,93,2528,16],[3141,101,2528,24],[3141,102,2529,13],[3141,103,2529,14],[3142,8,2530,12],[3143,8,2531,12],[3143,14,2531,18,"isValid"],[3143,21,2531,25],[3143,24,2531,28],[3143,30,2531,34,"crypto"],[3143,36,2531,40],[3143,37,2531,41,"subtle"],[3143,43,2531,47],[3143,44,2531,48,"verify"],[3143,50,2531,54],[3143,51,2531,55,"algorithm"],[3143,60,2531,64],[3143,62,2531,66,"publicKey"],[3143,71,2531,75],[3143,73,2531,77,"signature"],[3143,82,2531,86],[3143,84,2531,88],[3143,88,2531,88,"stringToUint8Array"],[3143,101,2531,106],[3143,102,2531,106,"stringToUint8Array"],[3143,120,2531,106],[3143,122,2531,107],[3143,125,2531,110,"rawHeader"],[3143,134,2531,119],[3143,138,2531,123,"rawPayload"],[3143,148,2531,133],[3143,150,2531,135],[3143,151,2531,136],[3143,152,2531,137],[3144,8,2532,12],[3144,12,2532,16],[3144,13,2532,17,"isValid"],[3144,20,2532,24],[3144,22,2532,26],[3145,10,2533,16],[3145,16,2533,22],[3145,20,2533,26,"AuthInvalidJwtError"],[3145,30,2533,45],[3145,31,2533,45,"AuthInvalidJwtError"],[3145,50,2533,45],[3145,51,2533,46],[3145,74,2533,69],[3145,75,2533,70],[3146,8,2534,12],[3147,8,2535,12],[3148,8,2536,12],[3148,15,2536,19],[3149,10,2537,16,"data"],[3149,14,2537,20],[3149,16,2537,22],[3150,12,2538,20,"claims"],[3150,18,2538,26],[3150,20,2538,28,"payload"],[3150,27,2538,35],[3151,12,2539,20,"header"],[3151,18,2539,26],[3152,12,2540,20,"signature"],[3153,10,2541,16],[3153,11,2541,17],[3154,10,2542,16,"error"],[3154,15,2542,21],[3154,17,2542,23],[3155,8,2543,12],[3155,9,2543,13],[3156,6,2544,8],[3156,7,2544,9],[3156,8,2545,8],[3156,15,2545,15,"error"],[3156,20,2545,20],[3156,22,2545,22],[3157,8,2546,12],[3157,12,2546,16],[3157,16,2546,16,"isAuthError"],[3157,26,2546,27],[3157,27,2546,27,"isAuthError"],[3157,38,2546,27],[3157,40,2546,28,"error"],[3157,45,2546,33],[3157,46,2546,34],[3157,48,2546,36],[3158,10,2547,16],[3158,17,2547,23],[3159,12,2547,25,"data"],[3159,16,2547,29],[3159,18,2547,31],[3159,22,2547,35],[3160,12,2547,37,"error"],[3161,10,2547,43],[3161,11,2547,44],[3162,8,2548,12],[3163,8,2549,12],[3163,14,2549,18,"error"],[3163,19,2549,23],[3164,6,2550,8],[3165,4,2551,4],[3166,2,2552,0],[3167,2,2553,0,"GoTrueClient"],[3167,14,2553,12],[3167,15,2553,13,"nextInstanceID"],[3167,29,2553,27],[3167,32,2553,30],[3167,33,2553,31],[3168,2,2554,0],[3168,6,2554,0,"_default"],[3168,14,2554,0],[3168,17,2554,15,"GoTrueClient"],[3168,29,2554,27],[3169,0,2554,28],[3169,3]],"functionMap":{"names":["<global>","lockNoOp","GoTrueClient","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","constructor","_b.addEventListener$argument_1","_debug","initialize","<anonymous>","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","linkIdentityOAuth","linkIdentityIdToken","unlinkIdentity","_refreshAccessToken","retryable$argument_0","retryable$argument_1","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;ACwB;CDE;AEU;ICI;KDG;IEC;KFE;IGC;KHG;IIC;KJE;IKI;6GCwG;aDG;KLG;IOC;KPK;IQM;kCCI;+CCC;aDE;SDC;KRE;IWO;2BCqC;iBDO;KXmB;IaM;Kb6B;IcW;Kd6D;IeS;KfoD;IgBK;KhBQ;IiBI;qCPE;SOE;KjBC;IkBQ;KlBU;ImBC;sBCsC,cD;uBEC;aFE;KnB+D;IsBC;sECmG,6BD;KtBwC;IwBC;KxBkC;IyBK;KzBoC;I0BkB;K1B+C;I2BI;K3BmC;I4Be;K5BuB;I6BK;2CnBE;SmBE;K7BC;I8BC;0CCE;aDW;K9BQ;IgCI;KhCoC;IiCY;mDvBE;oCqBC;arBE;SuBC;KjCE;IkCI;gCzBO;iByBG;yCzBC;iByBO;8ECG;6C1BK;qB0BO;aDc;KlCK;IoCO;KpCU;IqCM;6BC2C;yBDQ;KrCe;IuCQ;mD7BK;S6BE;KvCE;IwCC;0CTS;aSe;KxCc;IyCI;2C/BE;S+BE;KzCC;I0CC;0CXE;aW4B;K1CQ;I2CM;2CjCE;SiCE;K3CC;I4CC;K5CgD;I6CO;2CnCE;SmCE;K7CC;I8CC;0CfE;aeoB;K9CQ;I+CI;K/CsF;IgDI;KhDE;IiDI;KjDG;IkDS;2CxCE;SwCE;KlDC;ImDC;sCpBC;SoBuB;KnDC;IoDC;yBCK;aDG;S3CI;wCCE;aDE;S2CC;KpDE;IsDC;sCvBC;SuBc;KtDC;IuDQ;KvD0B;IwDI;KxDc;IyDC;KzDK;I0DC;2D3BG;a2Be;K1Dc;I2DC;sC5BC;S4B0C;K3DC;I4DI;0C7BE;a6BU;K5DQ;I6DK;mCCM;aDU,EE;aFM;K7DY;IgEC;KhEO;IiEC;KjEY;IkEK;KlE0F;ImEC;KnEyC;IoEC;+ECQ;aDO;KpEY;IsEK;KtEmC;IuEC;KvES;IwEO;KxEY;IyEK;mCCG,kCD;mB7DqB;S6DG;KzEC;I2EK;K3EO;I4EuB;K5EG;I6ES;K7EG;I8EI;uCpEG;sDqBI;yBrBY;aoES;K9EU;I+EM;6CCU,kDD;K/ES;IiFI;4CvEe;iBuEQ;KjFQ;IkFO;KlFwB;ImFC;0CpDE;aoDU;KnFQ;IoFC;0CrDE;aqDuB;KpFQ;IqFC;qC3EC;8CqBE;iBrBwB;S2EQ;KrFC;IsFC;qC5EC;8CqBE;iBrB8B;S4EQ;KtFC;IuFI;KvFc;IwFI;KxFyB;IyFI;qC/EC;0CqBC;yH2DkB,wC3D;arBM;S+EC;KzFC;I2FC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;K3FK;I8FiB;K9F+D;CFC"},"hasCjsExports":false},"type":"js/module"}]}