{"dependencies":[{"name":"@supabase/functions-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":681},"end":{"line":10,"column":57,"index":738}}],"key":"bFF9i9v9PHzg4reSkp9Ix2vEb4A=","exportNames":["*"],"imports":1}},{"name":"@supabase/postgrest-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":739},"end":{"line":11,"column":58,"index":797}}],"key":"9r31ILQlZN/EOl6yvuI3h2t2+dQ=","exportNames":["*"],"imports":1}},{"name":"@supabase/realtime-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":798},"end":{"line":12,"column":56,"index":854}}],"key":"kdH69C/RlxmAE/977A+Mvf+TYX0=","exportNames":["*"],"imports":1}},{"name":"@supabase/storage-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":855},"end":{"line":13,"column":78,"index":933}}],"key":"a4VMVj+nnYNe9AEBUb88ORxNJj8=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":934},"end":{"line":14,"column":126,"index":1060}}],"key":"heoF0ph3MRKcRke4Rxium863E4Y=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":1061},"end":{"line":15,"column":44,"index":1105}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":1106},"end":{"line":16,"column":74,"index":1180}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"],"imports":1}},{"name":"./lib/SupabaseAuthClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1181},"end":{"line":17,"column":62,"index":1243}}],"key":"NO3M1VFczHHXVBxRcQ04Co3jeTA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return SupabaseClient;\n    }\n  });\n  var _supabaseFunctionsJs = require(_dependencyMap[0], \"@supabase/functions-js\");\n  var _supabasePostgrestJs = require(_dependencyMap[1], \"@supabase/postgrest-js\");\n  var _supabaseRealtimeJs = require(_dependencyMap[2], \"@supabase/realtime-js\");\n  var _supabaseStorageJs = require(_dependencyMap[3], \"@supabase/storage-js\");\n  var _libConstants = require(_dependencyMap[4], \"./lib/constants\");\n  var _libFetch = require(_dependencyMap[5], \"./lib/fetch\");\n  var _libHelpers = require(_dependencyMap[6], \"./lib/helpers\");\n  var _libSupabaseAuthClient = require(_dependencyMap[7], \"./lib/SupabaseAuthClient\");\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  /**\n   * Supabase Client.\n   *\n   * An isomorphic Javascript client for interacting with Postgres.\n   */\n  class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n      var _a, _b, _c;\n      this.supabaseUrl = supabaseUrl;\n      this.supabaseKey = supabaseKey;\n      const baseUrl = (0, _libHelpers.validateSupabaseUrl)(supabaseUrl);\n      if (!supabaseKey) throw new Error('supabaseKey is required.');\n      this.realtimeUrl = new URL('realtime/v1', baseUrl);\n      this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n      this.authUrl = new URL('auth/v1', baseUrl);\n      this.storageUrl = new URL('storage/v1', baseUrl);\n      this.functionsUrl = new URL('functions/v1', baseUrl);\n      // default storage key uses the supabase project ref as a namespace\n      const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n      const DEFAULTS = {\n        db: _libConstants.DEFAULT_DB_OPTIONS,\n        realtime: _libConstants.DEFAULT_REALTIME_OPTIONS,\n        auth: Object.assign(Object.assign({}, _libConstants.DEFAULT_AUTH_OPTIONS), {\n          storageKey: defaultStorageKey\n        }),\n        global: _libConstants.DEFAULT_GLOBAL_OPTIONS\n      };\n      const settings = (0, _libHelpers.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n      if (!settings.accessToken) {\n        this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n      } else {\n        this.accessToken = settings.accessToken;\n        this.auth = new Proxy({}, {\n          get: (_, prop) => {\n            throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n          }\n        });\n      }\n      this.fetch = (0, _libFetch.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n      this.realtime = this._initRealtimeClient(Object.assign({\n        headers: this.headers,\n        accessToken: this._getAccessToken.bind(this)\n      }, settings.realtime));\n      this.rest = new _supabasePostgrestJs.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n        headers: this.headers,\n        schema: settings.db.schema,\n        fetch: this.fetch\n      });\n      this.storage = new _supabaseStorageJs.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n      if (!settings.accessToken) {\n        this._listenForAuthEvents();\n      }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n      return new _supabaseFunctionsJs.FunctionsClient(this.functionsUrl.href, {\n        headers: this.headers,\n        customFetch: this.fetch\n      });\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n      return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n      return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {\n      head: false,\n      get: false,\n      count: undefined\n    }) {\n      return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = {\n      config: {}\n    }) {\n      return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n      return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n      return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n      return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n      return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        if (this.accessToken) {\n          return yield this.accessToken();\n        }\n        const {\n          data\n        } = yield this.auth.getSession();\n        return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n      });\n    }\n    _initSupabaseAuthClient({\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      storageKey,\n      flowType,\n      lock,\n      debug\n    }, headers, fetch) {\n      const authHeaders = {\n        Authorization: `Bearer ${this.supabaseKey}`,\n        apikey: `${this.supabaseKey}`\n      };\n      return new _libSupabaseAuthClient.SupabaseAuthClient({\n        url: this.authUrl.href,\n        headers: Object.assign(Object.assign({}, authHeaders), headers),\n        storageKey: storageKey,\n        autoRefreshToken,\n        persistSession,\n        detectSessionInUrl,\n        storage,\n        userStorage,\n        flowType,\n        lock,\n        debug,\n        fetch,\n        // auth checks if there is a custom authorizaiton header using this flag\n        // so it knows whether to return an error when getUser is called with no session\n        hasCustomAuthorizationHeader: Object.keys(this.headers).some(key => key.toLowerCase() === 'authorization')\n      });\n    }\n    _initRealtimeClient(options) {\n      return new _supabaseRealtimeJs.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), {\n        params: Object.assign({\n          apikey: this.supabaseKey\n        }, options === null || options === void 0 ? void 0 : options.params)\n      }));\n    }\n    _listenForAuthEvents() {\n      const data = this.auth.onAuthStateChange((event, session) => {\n        this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n      });\n      return data;\n    }\n    _handleTokenChanged(event, source, token) {\n      if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n        this.changedAccessToken = token;\n        this.realtime.setAuth(token);\n      } else if (event === 'SIGNED_OUT') {\n        this.realtime.setAuth();\n        if (source == 'STORAGE') this.auth.signOut();\n        this.changedAccessToken = undefined;\n      }\n    }\n  }\n});","lineCount":277,"map":[[7,2,23,15,"Object"],[7,8,23,15],[7,9,23,15,"defineProperty"],[7,23,23,15],[7,24,23,15,"exports"],[7,31,23,15],[8,4,23,15,"enumerable"],[8,14,23,15],[9,4,23,15,"get"],[9,7,23,15],[9,18,23,15,"get"],[9,19,23,15],[10,6,23,15],[10,13,23,15,"SupabaseClient"],[10,27,23,15],[11,4,23,15],[12,2,23,15],[13,2,10,0],[13,6,10,0,"_supabaseFunctionsJs"],[13,26,10,0],[13,29,10,0,"require"],[13,36,10,0],[13,37,10,0,"_dependencyMap"],[13,51,10,0],[14,2,11,0],[14,6,11,0,"_supabasePostgrestJs"],[14,26,11,0],[14,29,11,0,"require"],[14,36,11,0],[14,37,11,0,"_dependencyMap"],[14,51,11,0],[15,2,12,0],[15,6,12,0,"_supabaseRealtimeJs"],[15,25,12,0],[15,28,12,0,"require"],[15,35,12,0],[15,36,12,0,"_dependencyMap"],[15,50,12,0],[16,2,13,0],[16,6,13,0,"_supabaseStorageJs"],[16,24,13,0],[16,27,13,0,"require"],[16,34,13,0],[16,35,13,0,"_dependencyMap"],[16,49,13,0],[17,2,14,0],[17,6,14,0,"_libConstants"],[17,19,14,0],[17,22,14,0,"require"],[17,29,14,0],[17,30,14,0,"_dependencyMap"],[17,44,14,0],[18,2,15,0],[18,6,15,0,"_libFetch"],[18,15,15,0],[18,18,15,0,"require"],[18,25,15,0],[18,26,15,0,"_dependencyMap"],[18,40,15,0],[19,2,16,0],[19,6,16,0,"_libHelpers"],[19,17,16,0],[19,20,16,0,"require"],[19,27,16,0],[19,28,16,0,"_dependencyMap"],[19,42,16,0],[20,2,17,0],[20,6,17,0,"_libSupabaseAuthClient"],[20,28,17,0],[20,31,17,0,"require"],[20,38,17,0],[20,39,17,0,"_dependencyMap"],[20,53,17,0],[21,2,1,0],[21,6,1,4,"__awaiter"],[21,15,1,13],[21,18,1,17],[21,22,1,21],[21,26,1,25],[21,30,1,29],[21,31,1,30,"__awaiter"],[21,40,1,39],[21,44,1,44],[21,54,1,54,"thisArg"],[21,61,1,61],[21,63,1,63,"_arguments"],[21,73,1,73],[21,75,1,75,"P"],[21,76,1,76],[21,78,1,78,"generator"],[21,87,1,87],[21,89,1,89],[22,4,2,4],[22,13,2,13,"adopt"],[22,18,2,18,"adopt"],[22,19,2,19,"value"],[22,24,2,24],[22,26,2,26],[23,6,2,28],[23,13,2,35,"value"],[23,18,2,40],[23,30,2,52,"P"],[23,31,2,53],[23,34,2,56,"value"],[23,39,2,61],[23,42,2,64],[23,46,2,68,"P"],[23,47,2,69],[23,48,2,70],[23,58,2,80,"resolve"],[23,65,2,87],[23,67,2,89],[24,8,2,91,"resolve"],[24,15,2,98],[24,16,2,99,"value"],[24,21,2,104],[24,22,2,105],[25,6,2,107],[25,7,2,108],[25,8,2,109],[26,4,2,111],[27,4,3,4],[27,11,3,11],[27,16,3,16,"P"],[27,17,3,17],[27,22,3,22,"P"],[27,23,3,23],[27,26,3,26,"Promise"],[27,33,3,33],[27,34,3,34],[27,36,3,36],[27,46,3,46,"resolve"],[27,53,3,53],[27,55,3,55,"reject"],[27,61,3,61],[27,63,3,63],[28,6,4,8],[28,15,4,17,"fulfilled"],[28,24,4,26,"fulfilled"],[28,25,4,27,"value"],[28,30,4,32],[28,32,4,34],[29,8,4,36],[29,12,4,40],[30,10,4,42,"step"],[30,14,4,46],[30,15,4,47,"generator"],[30,24,4,56],[30,25,4,57,"next"],[30,29,4,61],[30,30,4,62,"value"],[30,35,4,67],[30,36,4,68],[30,37,4,69],[31,8,4,71],[31,9,4,72],[31,10,4,73],[31,17,4,80,"e"],[31,18,4,81],[31,20,4,83],[32,10,4,85,"reject"],[32,16,4,91],[32,17,4,92,"e"],[32,18,4,93],[32,19,4,94],[33,8,4,96],[34,6,4,98],[35,6,5,8],[35,15,5,17,"rejected"],[35,23,5,25,"rejected"],[35,24,5,26,"value"],[35,29,5,31],[35,31,5,33],[36,8,5,35],[36,12,5,39],[37,10,5,41,"step"],[37,14,5,45],[37,15,5,46,"generator"],[37,24,5,55],[37,25,5,56],[37,32,5,63],[37,33,5,64],[37,34,5,65,"value"],[37,39,5,70],[37,40,5,71],[37,41,5,72],[38,8,5,74],[38,9,5,75],[38,10,5,76],[38,17,5,83,"e"],[38,18,5,84],[38,20,5,86],[39,10,5,88,"reject"],[39,16,5,94],[39,17,5,95,"e"],[39,18,5,96],[39,19,5,97],[40,8,5,99],[41,6,5,101],[42,6,6,8],[42,15,6,17,"step"],[42,19,6,21,"step"],[42,20,6,22,"result"],[42,26,6,28],[42,28,6,30],[43,8,6,32,"result"],[43,14,6,38],[43,15,6,39,"done"],[43,19,6,43],[43,22,6,46,"resolve"],[43,29,6,53],[43,30,6,54,"result"],[43,36,6,60],[43,37,6,61,"value"],[43,42,6,66],[43,43,6,67],[43,46,6,70,"adopt"],[43,51,6,75],[43,52,6,76,"result"],[43,58,6,82],[43,59,6,83,"value"],[43,64,6,88],[43,65,6,89],[43,66,6,90,"then"],[43,70,6,94],[43,71,6,95,"fulfilled"],[43,80,6,104],[43,82,6,106,"rejected"],[43,90,6,114],[43,91,6,115],[44,6,6,117],[45,6,7,8,"step"],[45,10,7,12],[45,11,7,13],[45,12,7,14,"generator"],[45,21,7,23],[45,24,7,26,"generator"],[45,33,7,35],[45,34,7,36,"apply"],[45,39,7,41],[45,40,7,42,"thisArg"],[45,47,7,49],[45,49,7,51,"_arguments"],[45,59,7,61],[45,63,7,65],[45,65,7,67],[45,66,7,68],[45,68,7,70,"next"],[45,72,7,74],[45,73,7,75],[45,74,7,76],[45,75,7,77],[46,4,8,4],[46,5,8,5],[46,6,8,6],[47,2,9,0],[47,3,9,1],[48,2,18,0],[49,0,19,0],[50,0,20,0],[51,0,21,0],[52,0,22,0],[53,2,23,15],[53,8,23,21,"SupabaseClient"],[53,22,23,35],[53,23,23,36],[54,4,24,4],[55,0,25,0],[56,0,26,0],[57,0,27,0],[58,0,28,0],[59,0,29,0],[60,0,30,0],[61,0,31,0],[62,0,32,0],[63,0,33,0],[64,0,34,0],[65,0,35,0],[66,0,36,0],[67,4,37,4,"constructor"],[67,15,37,15,"constructor"],[67,16,37,16,"supabaseUrl"],[67,27,37,27],[67,29,37,29,"supabaseKey"],[67,40,37,40],[67,42,37,42,"options"],[67,49,37,49],[67,51,37,51],[68,6,38,8],[68,10,38,12,"_a"],[68,12,38,14],[68,14,38,16,"_b"],[68,16,38,18],[68,18,38,20,"_c"],[68,20,38,22],[69,6,39,8],[69,10,39,12],[69,11,39,13,"supabaseUrl"],[69,22,39,24],[69,25,39,27,"supabaseUrl"],[69,36,39,38],[70,6,40,8],[70,10,40,12],[70,11,40,13,"supabaseKey"],[70,22,40,24],[70,25,40,27,"supabaseKey"],[70,36,40,38],[71,6,41,8],[71,12,41,14,"baseUrl"],[71,19,41,21],[71,22,41,24],[71,26,41,24,"validateSupabaseUrl"],[71,37,41,43],[71,38,41,43,"validateSupabaseUrl"],[71,57,41,43],[71,59,41,44,"supabaseUrl"],[71,70,41,55],[71,71,41,56],[72,6,42,8],[72,10,42,12],[72,11,42,13,"supabaseKey"],[72,22,42,24],[72,24,43,12],[72,30,43,18],[72,34,43,22,"Error"],[72,39,43,27],[72,40,43,28],[72,66,43,54],[72,67,43,55],[73,6,44,8],[73,10,44,12],[73,11,44,13,"realtimeUrl"],[73,22,44,24],[73,25,44,27],[73,29,44,31,"URL"],[73,32,44,34],[73,33,44,35],[73,46,44,48],[73,48,44,50,"baseUrl"],[73,55,44,57],[73,56,44,58],[74,6,45,8],[74,10,45,12],[74,11,45,13,"realtimeUrl"],[74,22,45,24],[74,23,45,25,"protocol"],[74,31,45,33],[74,34,45,36],[74,38,45,40],[74,39,45,41,"realtimeUrl"],[74,50,45,52],[74,51,45,53,"protocol"],[74,59,45,61],[74,60,45,62,"replace"],[74,67,45,69],[74,68,45,70],[74,74,45,76],[74,76,45,78],[74,80,45,82],[74,81,45,83],[75,6,46,8],[75,10,46,12],[75,11,46,13,"authUrl"],[75,18,46,20],[75,21,46,23],[75,25,46,27,"URL"],[75,28,46,30],[75,29,46,31],[75,38,46,40],[75,40,46,42,"baseUrl"],[75,47,46,49],[75,48,46,50],[76,6,47,8],[76,10,47,12],[76,11,47,13,"storageUrl"],[76,21,47,23],[76,24,47,26],[76,28,47,30,"URL"],[76,31,47,33],[76,32,47,34],[76,44,47,46],[76,46,47,48,"baseUrl"],[76,53,47,55],[76,54,47,56],[77,6,48,8],[77,10,48,12],[77,11,48,13,"functionsUrl"],[77,23,48,25],[77,26,48,28],[77,30,48,32,"URL"],[77,33,48,35],[77,34,48,36],[77,48,48,50],[77,50,48,52,"baseUrl"],[77,57,48,59],[77,58,48,60],[78,6,49,8],[79,6,50,8],[79,12,50,14,"defaultStorageKey"],[79,29,50,31],[79,32,50,34],[79,38,50,40,"baseUrl"],[79,45,50,47],[79,46,50,48,"hostname"],[79,54,50,56],[79,55,50,57,"split"],[79,60,50,62],[79,61,50,63],[79,64,50,66],[79,65,50,67],[79,66,50,68],[79,67,50,69],[79,68,50,70],[79,81,50,83],[80,6,51,8],[80,12,51,14,"DEFAULTS"],[80,20,51,22],[80,23,51,25],[81,8,52,12,"db"],[81,10,52,14],[81,12,52,16,"DEFAULT_DB_OPTIONS"],[81,25,52,34],[81,26,52,34,"DEFAULT_DB_OPTIONS"],[81,44,52,34],[82,8,53,12,"realtime"],[82,16,53,20],[82,18,53,22,"DEFAULT_REALTIME_OPTIONS"],[82,31,53,46],[82,32,53,46,"DEFAULT_REALTIME_OPTIONS"],[82,56,53,46],[83,8,54,12,"auth"],[83,12,54,16],[83,14,54,18,"Object"],[83,20,54,24],[83,21,54,25,"assign"],[83,27,54,31],[83,28,54,32,"Object"],[83,34,54,38],[83,35,54,39,"assign"],[83,41,54,45],[83,42,54,46],[83,43,54,47],[83,44,54,48],[83,46,54,50,"DEFAULT_AUTH_OPTIONS"],[83,59,54,70],[83,60,54,70,"DEFAULT_AUTH_OPTIONS"],[83,80,54,70],[83,81,54,71],[83,83,54,73],[84,10,54,75,"storageKey"],[84,20,54,85],[84,22,54,87,"defaultStorageKey"],[85,8,54,105],[85,9,54,106],[85,10,54,107],[86,8,55,12,"global"],[86,14,55,18],[86,16,55,20,"DEFAULT_GLOBAL_OPTIONS"],[86,29,55,42],[86,30,55,42,"DEFAULT_GLOBAL_OPTIONS"],[87,6,56,8],[87,7,56,9],[88,6,57,8],[88,12,57,14,"settings"],[88,20,57,22],[88,23,57,25],[88,27,57,25,"applySettingDefaults"],[88,38,57,45],[88,39,57,45,"applySettingDefaults"],[88,59,57,45],[88,61,57,46,"options"],[88,68,57,53],[88,73,57,58],[88,77,57,62],[88,81,57,66,"options"],[88,88,57,73],[88,93,57,78],[88,98,57,83],[88,99,57,84],[88,102,57,87,"options"],[88,109,57,94],[88,112,57,97],[88,113,57,98],[88,114,57,99],[88,116,57,101,"DEFAULTS"],[88,124,57,109],[88,125,57,110],[89,6,58,8],[89,10,58,12],[89,11,58,13,"storageKey"],[89,21,58,23],[89,24,58,26],[89,25,58,27,"_a"],[89,27,58,29],[89,30,58,32,"settings"],[89,38,58,40],[89,39,58,41,"auth"],[89,43,58,45],[89,44,58,46,"storageKey"],[89,54,58,56],[89,60,58,62],[89,64,58,66],[89,68,58,70,"_a"],[89,70,58,72],[89,75,58,77],[89,80,58,82],[89,81,58,83],[89,84,58,86,"_a"],[89,86,58,88],[89,89,58,91],[89,91,58,93],[90,6,59,8],[90,10,59,12],[90,11,59,13,"headers"],[90,18,59,20],[90,21,59,23],[90,22,59,24,"_b"],[90,24,59,26],[90,27,59,29,"settings"],[90,35,59,37],[90,36,59,38,"global"],[90,42,59,44],[90,43,59,45,"headers"],[90,50,59,52],[90,56,59,58],[90,60,59,62],[90,64,59,66,"_b"],[90,66,59,68],[90,71,59,73],[90,76,59,78],[90,77,59,79],[90,80,59,82,"_b"],[90,82,59,84],[90,85,59,87],[90,86,59,88],[90,87,59,89],[91,6,60,8],[91,10,60,12],[91,11,60,13,"settings"],[91,19,60,21],[91,20,60,22,"accessToken"],[91,31,60,33],[91,33,60,35],[92,8,61,12],[92,12,61,16],[92,13,61,17,"auth"],[92,17,61,21],[92,20,61,24],[92,24,61,28],[92,25,61,29,"_initSupabaseAuthClient"],[92,48,61,52],[92,49,61,53],[92,50,61,54,"_c"],[92,52,61,56],[92,55,61,59,"settings"],[92,63,61,67],[92,64,61,68,"auth"],[92,68,61,72],[92,74,61,78],[92,78,61,82],[92,82,61,86,"_c"],[92,84,61,88],[92,89,61,93],[92,94,61,98],[92,95,61,99],[92,98,61,102,"_c"],[92,100,61,104],[92,103,61,107],[92,104,61,108],[92,105,61,109],[92,107,61,111],[92,111,61,115],[92,112,61,116,"headers"],[92,119,61,123],[92,121,61,125,"settings"],[92,129,61,133],[92,130,61,134,"global"],[92,136,61,140],[92,137,61,141,"fetch"],[92,142,61,146],[92,143,61,147],[93,6,62,8],[93,7,62,9],[93,13,63,13],[94,8,64,12],[94,12,64,16],[94,13,64,17,"accessToken"],[94,24,64,28],[94,27,64,31,"settings"],[94,35,64,39],[94,36,64,40,"accessToken"],[94,47,64,51],[95,8,65,12],[95,12,65,16],[95,13,65,17,"auth"],[95,17,65,21],[95,20,65,24],[95,24,65,28,"Proxy"],[95,29,65,33],[95,30,65,34],[95,31,65,35],[95,32,65,36],[95,34,65,38],[96,10,66,16,"get"],[96,13,66,19],[96,15,66,21,"get"],[96,16,66,22,"_"],[96,17,66,23],[96,19,66,25,"prop"],[96,23,66,29],[96,28,66,34],[97,12,67,20],[97,18,67,26],[97,22,67,30,"Error"],[97,27,67,35],[97,28,67,36],[97,137,67,145,"String"],[97,143,67,151],[97,144,67,152,"prop"],[97,148,67,156],[97,149,67,157],[97,167,67,175],[97,168,67,176],[98,10,68,16],[99,8,69,12],[99,9,69,13],[99,10,69,14],[100,6,70,8],[101,6,71,8],[101,10,71,12],[101,11,71,13,"fetch"],[101,16,71,18],[101,19,71,21],[101,23,71,21,"fetchWithAuth"],[101,32,71,34],[101,33,71,34,"fetchWithAuth"],[101,46,71,34],[101,48,71,35,"supabaseKey"],[101,59,71,46],[101,61,71,48],[101,65,71,52],[101,66,71,53,"_getAccessToken"],[101,81,71,68],[101,82,71,69,"bind"],[101,86,71,73],[101,87,71,74],[101,91,71,78],[101,92,71,79],[101,94,71,81,"settings"],[101,102,71,89],[101,103,71,90,"global"],[101,109,71,96],[101,110,71,97,"fetch"],[101,115,71,102],[101,116,71,103],[102,6,72,8],[102,10,72,12],[102,11,72,13,"realtime"],[102,19,72,21],[102,22,72,24],[102,26,72,28],[102,27,72,29,"_initRealtimeClient"],[102,46,72,48],[102,47,72,49,"Object"],[102,53,72,55],[102,54,72,56,"assign"],[102,60,72,62],[102,61,72,63],[103,8,72,65,"headers"],[103,15,72,72],[103,17,72,74],[103,21,72,78],[103,22,72,79,"headers"],[103,29,72,86],[104,8,72,88,"accessToken"],[104,19,72,99],[104,21,72,101],[104,25,72,105],[104,26,72,106,"_getAccessToken"],[104,41,72,121],[104,42,72,122,"bind"],[104,46,72,126],[104,47,72,127],[104,51,72,131],[105,6,72,133],[105,7,72,134],[105,9,72,136,"settings"],[105,17,72,144],[105,18,72,145,"realtime"],[105,26,72,153],[105,27,72,154],[105,28,72,155],[106,6,73,8],[106,10,73,12],[106,11,73,13,"rest"],[106,15,73,17],[106,18,73,20],[106,22,73,24,"PostgrestClient"],[106,42,73,39],[106,43,73,39,"PostgrestClient"],[106,58,73,39],[106,59,73,40],[106,63,73,44,"URL"],[106,66,73,47],[106,67,73,48],[106,76,73,57],[106,78,73,59,"baseUrl"],[106,85,73,66],[106,86,73,67],[106,87,73,68,"href"],[106,91,73,72],[106,93,73,74],[107,8,74,12,"headers"],[107,15,74,19],[107,17,74,21],[107,21,74,25],[107,22,74,26,"headers"],[107,29,74,33],[108,8,75,12,"schema"],[108,14,75,18],[108,16,75,20,"settings"],[108,24,75,28],[108,25,75,29,"db"],[108,27,75,31],[108,28,75,32,"schema"],[108,34,75,38],[109,8,76,12,"fetch"],[109,13,76,17],[109,15,76,19],[109,19,76,23],[109,20,76,24,"fetch"],[110,6,77,8],[110,7,77,9],[110,8,77,10],[111,6,78,8],[111,10,78,12],[111,11,78,13,"storage"],[111,18,78,20],[111,21,78,23],[111,25,78,27,"SupabaseStorageClient"],[111,43,78,48],[111,44,78,48,"StorageClient"],[111,57,78,48],[111,58,78,49],[111,62,78,53],[111,63,78,54,"storageUrl"],[111,73,78,64],[111,74,78,65,"href"],[111,78,78,69],[111,80,78,71],[111,84,78,75],[111,85,78,76,"headers"],[111,92,78,83],[111,94,78,85],[111,98,78,89],[111,99,78,90,"fetch"],[111,104,78,95],[111,106,78,97,"options"],[111,113,78,104],[111,118,78,109],[111,122,78,113],[111,126,78,117,"options"],[111,133,78,124],[111,138,78,129],[111,143,78,134],[111,144,78,135],[111,147,78,138],[111,152,78,143],[111,153,78,144],[111,156,78,147,"options"],[111,163,78,154],[111,164,78,155,"storage"],[111,171,78,162],[111,172,78,163],[112,6,79,8],[112,10,79,12],[112,11,79,13,"settings"],[112,19,79,21],[112,20,79,22,"accessToken"],[112,31,79,33],[112,33,79,35],[113,8,80,12],[113,12,80,16],[113,13,80,17,"_listenForAuthEvents"],[113,33,80,37],[113,34,80,38],[113,35,80,39],[114,6,81,8],[115,4,82,4],[116,4,83,4],[117,0,84,0],[118,0,85,0],[119,4,86,4],[119,8,86,8,"functions"],[119,17,86,17,"functions"],[119,18,86,17],[119,20,86,20],[120,6,87,8],[120,13,87,15],[120,17,87,19,"FunctionsClient"],[120,37,87,34],[120,38,87,34,"FunctionsClient"],[120,53,87,34],[120,54,87,35],[120,58,87,39],[120,59,87,40,"functionsUrl"],[120,71,87,52],[120,72,87,53,"href"],[120,76,87,57],[120,78,87,59],[121,8,88,12,"headers"],[121,15,88,19],[121,17,88,21],[121,21,88,25],[121,22,88,26,"headers"],[121,29,88,33],[122,8,89,12,"customFetch"],[122,19,89,23],[122,21,89,25],[122,25,89,29],[122,26,89,30,"fetch"],[123,6,90,8],[123,7,90,9],[123,8,90,10],[124,4,91,4],[125,4,92,4],[126,0,93,0],[127,0,94,0],[128,0,95,0],[129,0,96,0],[130,4,97,4,"from"],[130,8,97,8,"from"],[130,9,97,9,"relation"],[130,17,97,17],[130,19,97,19],[131,6,98,8],[131,13,98,15],[131,17,98,19],[131,18,98,20,"rest"],[131,22,98,24],[131,23,98,25,"from"],[131,27,98,29],[131,28,98,30,"relation"],[131,36,98,38],[131,37,98,39],[132,4,99,4],[133,4,100,4],[134,4,101,4],[135,0,102,0],[136,0,103,0],[137,0,104,0],[138,0,105,0],[139,0,106,0],[140,0,107,0],[141,4,108,4,"schema"],[141,10,108,10,"schema"],[141,11,108,11,"schema"],[141,17,108,17],[141,19,108,19],[142,6,109,8],[142,13,109,15],[142,17,109,19],[142,18,109,20,"rest"],[142,22,109,24],[142,23,109,25,"schema"],[142,29,109,31],[142,30,109,32,"schema"],[142,36,109,38],[142,37,109,39],[143,4,110,4],[144,4,111,4],[145,4,112,4],[146,0,113,0],[147,0,114,0],[148,0,115,0],[149,0,116,0],[150,0,117,0],[151,0,118,0],[152,0,119,0],[153,0,120,0],[154,0,121,0],[155,0,122,0],[156,0,123,0],[157,0,124,0],[158,0,125,0],[159,0,126,0],[160,0,127,0],[161,0,128,0],[162,0,129,0],[163,0,130,0],[164,0,131,0],[165,0,132,0],[166,0,133,0],[167,0,134,0],[168,4,135,4,"rpc"],[168,7,135,7,"rpc"],[168,8,135,8,"fn"],[168,10,135,10],[168,12,135,12,"args"],[168,16,135,16],[168,19,135,19],[168,20,135,20],[168,21,135,21],[168,23,135,23,"options"],[168,30,135,30],[168,33,135,33],[169,6,136,8,"head"],[169,10,136,12],[169,12,136,14],[169,17,136,19],[170,6,137,8,"get"],[170,9,137,11],[170,11,137,13],[170,16,137,18],[171,6,138,8,"count"],[171,11,138,13],[171,13,138,15,"undefined"],[172,4,139,4],[172,5,139,5],[172,7,139,7],[173,6,140,8],[173,13,140,15],[173,17,140,19],[173,18,140,20,"rest"],[173,22,140,24],[173,23,140,25,"rpc"],[173,26,140,28],[173,27,140,29,"fn"],[173,29,140,31],[173,31,140,33,"args"],[173,35,140,37],[173,37,140,39,"options"],[173,44,140,46],[173,45,140,47],[174,4,141,4],[175,4,142,4],[176,0,143,0],[177,0,144,0],[178,0,145,0],[179,0,146,0],[180,0,147,0],[181,0,148,0],[182,4,149,4,"channel"],[182,11,149,11,"channel"],[182,12,149,12,"name"],[182,16,149,16],[182,18,149,18,"opts"],[182,22,149,22],[182,25,149,25],[183,6,149,27,"config"],[183,12,149,33],[183,14,149,35],[183,15,149,36],[184,4,149,38],[184,5,149,39],[184,7,149,41],[185,6,150,8],[185,13,150,15],[185,17,150,19],[185,18,150,20,"realtime"],[185,26,150,28],[185,27,150,29,"channel"],[185,34,150,36],[185,35,150,37,"name"],[185,39,150,41],[185,41,150,43,"opts"],[185,45,150,47],[185,46,150,48],[186,4,151,4],[187,4,152,4],[188,0,153,0],[189,0,154,0],[190,4,155,4,"getChannels"],[190,15,155,15,"getChannels"],[190,16,155,15],[190,18,155,18],[191,6,156,8],[191,13,156,15],[191,17,156,19],[191,18,156,20,"realtime"],[191,26,156,28],[191,27,156,29,"getChannels"],[191,38,156,40],[191,39,156,41],[191,40,156,42],[192,4,157,4],[193,4,158,4],[194,0,159,0],[195,0,160,0],[196,0,161,0],[197,0,162,0],[198,0,163,0],[199,4,164,4,"removeChannel"],[199,17,164,17,"removeChannel"],[199,18,164,18,"channel"],[199,25,164,25],[199,27,164,27],[200,6,165,8],[200,13,165,15],[200,17,165,19],[200,18,165,20,"realtime"],[200,26,165,28],[200,27,165,29,"removeChannel"],[200,40,165,42],[200,41,165,43,"channel"],[200,48,165,50],[200,49,165,51],[201,4,166,4],[202,4,167,4],[203,0,168,0],[204,0,169,0],[205,4,170,4,"removeAllChannels"],[205,21,170,21,"removeAllChannels"],[205,22,170,21],[205,24,170,24],[206,6,171,8],[206,13,171,15],[206,17,171,19],[206,18,171,20,"realtime"],[206,26,171,28],[206,27,171,29,"removeAllChannels"],[206,44,171,46],[206,45,171,47],[206,46,171,48],[207,4,172,4],[208,4,173,4,"_getAccessToken"],[208,19,173,19,"_getAccessToken"],[208,20,173,19],[208,22,173,22],[209,6,174,8],[209,13,174,15,"__awaiter"],[209,22,174,24],[209,23,174,25],[209,27,174,29],[209,29,174,31],[209,34,174,36],[209,35,174,37],[209,37,174,39],[209,42,174,44],[209,43,174,45],[209,45,174,47],[209,58,174,60],[210,8,175,12],[210,12,175,16,"_a"],[210,14,175,18],[210,16,175,20,"_b"],[210,18,175,22],[211,8,176,12],[211,12,176,16],[211,16,176,20],[211,17,176,21,"accessToken"],[211,28,176,32],[211,30,176,34],[212,10,177,16],[212,17,177,23],[212,23,177,29],[212,27,177,33],[212,28,177,34,"accessToken"],[212,39,177,45],[212,40,177,46],[212,41,177,47],[213,8,178,12],[214,8,179,12],[214,14,179,18],[215,10,179,20,"data"],[216,8,179,25],[216,9,179,26],[216,12,179,29],[216,18,179,35],[216,22,179,39],[216,23,179,40,"auth"],[216,27,179,44],[216,28,179,45,"getSession"],[216,38,179,55],[216,39,179,56],[216,40,179,57],[217,8,180,12],[217,15,180,19],[217,16,180,20,"_b"],[217,18,180,22],[217,21,180,25],[217,22,180,26,"_a"],[217,24,180,28],[217,27,180,31,"data"],[217,31,180,35],[217,32,180,36,"session"],[217,39,180,43],[217,45,180,49],[217,49,180,53],[217,53,180,57,"_a"],[217,55,180,59],[217,60,180,64],[217,65,180,69],[217,66,180,70],[217,69,180,73],[217,74,180,78],[217,75,180,79],[217,78,180,82,"_a"],[217,80,180,84],[217,81,180,85,"access_token"],[217,93,180,97],[217,99,180,103],[217,103,180,107],[217,107,180,111,"_b"],[217,109,180,113],[217,114,180,118],[217,119,180,123],[217,120,180,124],[217,123,180,127,"_b"],[217,125,180,129],[217,128,180,132],[217,132,180,136],[217,133,180,137,"supabaseKey"],[217,144,180,148],[218,6,181,8],[218,7,181,9],[218,8,181,10],[219,4,182,4],[220,4,183,4,"_initSupabaseAuthClient"],[220,27,183,27,"_initSupabaseAuthClient"],[220,28,183,28],[221,6,183,30,"autoRefreshToken"],[221,22,183,46],[222,6,183,48,"persistSession"],[222,20,183,62],[223,6,183,64,"detectSessionInUrl"],[223,24,183,82],[224,6,183,84,"storage"],[224,13,183,91],[225,6,183,93,"userStorage"],[225,17,183,104],[226,6,183,106,"storageKey"],[226,16,183,116],[227,6,183,118,"flowType"],[227,14,183,126],[228,6,183,128,"lock"],[228,10,183,132],[229,6,183,134,"debug"],[230,4,183,141],[230,5,183,142],[230,7,183,144,"headers"],[230,14,183,151],[230,16,183,153,"fetch"],[230,21,183,158],[230,23,183,160],[231,6,184,8],[231,12,184,14,"authHeaders"],[231,23,184,25],[231,26,184,28],[232,8,185,12,"Authorization"],[232,21,185,25],[232,23,185,27],[232,33,185,37],[232,37,185,41],[232,38,185,42,"supabaseKey"],[232,49,185,53],[232,51,185,55],[233,8,186,12,"apikey"],[233,14,186,18],[233,16,186,20],[233,19,186,23],[233,23,186,27],[233,24,186,28,"supabaseKey"],[233,35,186,39],[234,6,187,8],[234,7,187,9],[235,6,188,8],[235,13,188,15],[235,17,188,19,"SupabaseAuthClient"],[235,39,188,37],[235,40,188,37,"SupabaseAuthClient"],[235,58,188,37],[235,59,188,38],[236,8,189,12,"url"],[236,11,189,15],[236,13,189,17],[236,17,189,21],[236,18,189,22,"authUrl"],[236,25,189,29],[236,26,189,30,"href"],[236,30,189,34],[237,8,190,12,"headers"],[237,15,190,19],[237,17,190,21,"Object"],[237,23,190,27],[237,24,190,28,"assign"],[237,30,190,34],[237,31,190,35,"Object"],[237,37,190,41],[237,38,190,42,"assign"],[237,44,190,48],[237,45,190,49],[237,46,190,50],[237,47,190,51],[237,49,190,53,"authHeaders"],[237,60,190,64],[237,61,190,65],[237,63,190,67,"headers"],[237,70,190,74],[237,71,190,75],[238,8,191,12,"storageKey"],[238,18,191,22],[238,20,191,24,"storageKey"],[238,30,191,34],[239,8,192,12,"autoRefreshToken"],[239,24,192,28],[240,8,193,12,"persistSession"],[240,22,193,26],[241,8,194,12,"detectSessionInUrl"],[241,26,194,30],[242,8,195,12,"storage"],[242,15,195,19],[243,8,196,12,"userStorage"],[243,19,196,23],[244,8,197,12,"flowType"],[244,16,197,20],[245,8,198,12,"lock"],[245,12,198,16],[246,8,199,12,"debug"],[246,13,199,17],[247,8,200,12,"fetch"],[247,13,200,17],[248,8,201,12],[249,8,202,12],[250,8,203,12,"hasCustomAuthorizationHeader"],[250,36,203,40],[250,38,203,42,"Object"],[250,44,203,48],[250,45,203,49,"keys"],[250,49,203,53],[250,50,203,54],[250,54,203,58],[250,55,203,59,"headers"],[250,62,203,66],[250,63,203,67],[250,64,203,68,"some"],[250,68,203,72],[250,69,203,74,"key"],[250,72,203,77],[250,76,203,82,"key"],[250,79,203,85],[250,80,203,86,"toLowerCase"],[250,91,203,97],[250,92,203,98],[250,93,203,99],[250,98,203,104],[250,113,203,119],[251,6,204,8],[251,7,204,9],[251,8,204,10],[252,4,205,4],[253,4,206,4,"_initRealtimeClient"],[253,23,206,23,"_initRealtimeClient"],[253,24,206,24,"options"],[253,31,206,31],[253,33,206,33],[254,6,207,8],[254,13,207,15],[254,17,207,19,"RealtimeClient"],[254,36,207,33],[254,37,207,33,"RealtimeClient"],[254,51,207,33],[254,52,207,34],[254,56,207,38],[254,57,207,39,"realtimeUrl"],[254,68,207,50],[254,69,207,51,"href"],[254,73,207,55],[254,75,207,57,"Object"],[254,81,207,63],[254,82,207,64,"assign"],[254,88,207,70],[254,89,207,71,"Object"],[254,95,207,77],[254,96,207,78,"assign"],[254,102,207,84],[254,103,207,85],[254,104,207,86],[254,105,207,87],[254,107,207,89,"options"],[254,114,207,96],[254,115,207,97],[254,117,207,99],[255,8,207,101,"params"],[255,14,207,107],[255,16,207,109,"Object"],[255,22,207,115],[255,23,207,116,"assign"],[255,29,207,122],[255,30,207,123],[256,10,207,125,"apikey"],[256,16,207,131],[256,18,207,133],[256,22,207,137],[256,23,207,138,"supabaseKey"],[257,8,207,150],[257,9,207,151],[257,11,207,153,"options"],[257,18,207,160],[257,23,207,165],[257,27,207,169],[257,31,207,173,"options"],[257,38,207,180],[257,43,207,185],[257,48,207,190],[257,49,207,191],[257,52,207,194],[257,57,207,199],[257,58,207,200],[257,61,207,203,"options"],[257,68,207,210],[257,69,207,211,"params"],[257,75,207,217],[258,6,207,219],[258,7,207,220],[258,8,207,221],[258,9,207,222],[259,4,208,4],[260,4,209,4,"_listenForAuthEvents"],[260,24,209,24,"_listenForAuthEvents"],[260,25,209,24],[260,27,209,27],[261,6,210,8],[261,12,210,14,"data"],[261,16,210,18],[261,19,210,21],[261,23,210,25],[261,24,210,26,"auth"],[261,28,210,30],[261,29,210,31,"onAuthStateChange"],[261,46,210,48],[261,47,210,49],[261,48,210,50,"event"],[261,53,210,55],[261,55,210,57,"session"],[261,62,210,64],[261,67,210,69],[262,8,211,12],[262,12,211,16],[262,13,211,17,"_handleTokenChanged"],[262,32,211,36],[262,33,211,37,"event"],[262,38,211,42],[262,40,211,44],[262,48,211,52],[262,50,211,54,"session"],[262,57,211,61],[262,62,211,66],[262,66,211,70],[262,70,211,74,"session"],[262,77,211,81],[262,82,211,86],[262,87,211,91],[262,88,211,92],[262,91,211,95],[262,96,211,100],[262,97,211,101],[262,100,211,104,"session"],[262,107,211,111],[262,108,211,112,"access_token"],[262,120,211,124],[262,121,211,125],[263,6,212,8],[263,7,212,9],[263,8,212,10],[264,6,213,8],[264,13,213,15,"data"],[264,17,213,19],[265,4,214,4],[266,4,215,4,"_handleTokenChanged"],[266,23,215,23,"_handleTokenChanged"],[266,24,215,24,"event"],[266,29,215,29],[266,31,215,31,"source"],[266,37,215,37],[266,39,215,39,"token"],[266,44,215,44],[266,46,215,46],[267,6,216,8],[267,10,216,12],[267,11,216,13,"event"],[267,16,216,18],[267,21,216,23],[267,38,216,40],[267,42,216,44,"event"],[267,47,216,49],[267,52,216,54],[267,63,216,65],[267,68,217,12],[267,72,217,16],[267,73,217,17,"changedAccessToken"],[267,91,217,35],[267,96,217,40,"token"],[267,101,217,45],[267,103,217,47],[268,8,218,12],[268,12,218,16],[268,13,218,17,"changedAccessToken"],[268,31,218,35],[268,34,218,38,"token"],[268,39,218,43],[269,8,219,12],[269,12,219,16],[269,13,219,17,"realtime"],[269,21,219,25],[269,22,219,26,"setAuth"],[269,29,219,33],[269,30,219,34,"token"],[269,35,219,39],[269,36,219,40],[270,6,220,8],[270,7,220,9],[270,13,221,13],[270,17,221,17,"event"],[270,22,221,22],[270,27,221,27],[270,39,221,39],[270,41,221,41],[271,8,222,12],[271,12,222,16],[271,13,222,17,"realtime"],[271,21,222,25],[271,22,222,26,"setAuth"],[271,29,222,33],[271,30,222,34],[271,31,222,35],[272,8,223,12],[272,12,223,16,"source"],[272,18,223,22],[272,22,223,26],[272,31,223,35],[272,33,224,16],[272,37,224,20],[272,38,224,21,"auth"],[272,42,224,25],[272,43,224,26,"signOut"],[272,50,224,33],[272,51,224,34],[272,52,224,35],[273,8,225,12],[273,12,225,16],[273,13,225,17,"changedAccessToken"],[273,31,225,35],[273,34,225,38,"undefined"],[273,43,225,47],[274,6,226,8],[275,4,227,4],[276,2,228,0],[277,0,228,1],[277,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","SupabaseClient","constructor","Proxy$argument_1.get","get__functions","from","schema","rpc","channel","getChannels","removeChannel","removeAllChannels","_getAccessToken","__awaiter$argument_3","_initSupabaseAuthClient","Object.keys.some$argument_0","_initRealtimeClient","_listenForAuthEvents","auth.onAuthStateChange$argument_0","_handleTokenChanged"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;eOc;ICc;qBC6B;iBDE;KDc;IGI;KHK;IIM;KJE;IKS;KLE;IMyB;KNM;IOQ;KPE;IQI;KRE;ISO;KTE;IUI;KVE;IWC;+CCC;SDO;KXC;IaC;yECoB,8CD;KbE;IeC;KfE;IgBC;iDCC;SDE;KhBE;IkBC;KlBY;CPC"},"hasCjsExports":false},"type":"js/module"}]}