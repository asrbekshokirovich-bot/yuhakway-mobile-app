{"dependencies":[{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":491},"end":{"line":12,"column":102,"index":593}}],"key":"mfxfw+TXFuuoirEoeTmeetM0zAE=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":594},"end":{"line":13,"column":59,"index":653}}],"key":"xyb/Bi1HyEtpUX+YnhWJXXRPw1E=","exportNames":["*"],"imports":1}},{"name":"./lib/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":654},"end":{"line":14,"column":47,"index":701}}],"key":"/AcZmnf3UE0mJ4XdwdiNNzammrg=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":702},"end":{"line":15,"column":43,"index":745}}],"key":"NUE3c/K+JVzkrn4COE7BqSQ6w3g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return GoTrueAdminApi;\n    }\n  });\n  var _libFetch = require(_dependencyMap[0], \"./lib/fetch\");\n  var _libHelpers = require(_dependencyMap[1], \"./lib/helpers\");\n  var _libTypes = require(_dependencyMap[2], \"./lib/types\");\n  var _libErrors = require(_dependencyMap[3], \"./lib/errors\");\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  class GoTrueAdminApi {\n    constructor({\n      url = '',\n      headers = {},\n      fetch\n    }) {\n      this.url = url;\n      this.headers = headers;\n      this.fetch = (0, _libHelpers.resolveFetch)(fetch);\n      this.mfa = {\n        listFactors: this._listFactors.bind(this),\n        deleteFactor: this._deleteFactor.bind(this)\n      };\n      this.oauth = {\n        listClients: this._listOAuthClients.bind(this),\n        createClient: this._createOAuthClient.bind(this),\n        getClient: this._getOAuthClient.bind(this),\n        deleteClient: this._deleteOAuthClient.bind(this),\n        regenerateClientSecret: this._regenerateOAuthClientSecret.bind(this)\n      };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = _libTypes.SIGN_OUT_SCOPES[0]) {\n      if (_libTypes.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n        throw new Error(`@supabase/auth-js: Parameter scope must be one of ${_libTypes.SIGN_OUT_SCOPES.join(', ')}`);\n      }\n      try {\n        await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          data: null,\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: _libFetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n      try {\n        const {\n            options\n          } = params,\n          rest = __rest(params, [\"options\"]);\n        const body = Object.assign(Object.assign({}, rest), options);\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: _libFetch._generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _libFetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: _libFetch._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const users = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, users), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n      (0, _libHelpers.validateUUID)(uid);\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: _libFetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n      (0, _libHelpers.validateUUID)(uid);\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _libFetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n      (0, _libHelpers.validateUUID)(id);\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          body: {\n            should_soft_delete: shouldSoftDelete\n          },\n          xform: _libFetch._userResponse\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _listFactors(params) {\n      (0, _libHelpers.validateUUID)(params.userId);\n      try {\n        const {\n          data,\n          error\n        } = await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n          headers: this.headers,\n          xform: factors => {\n            return {\n              data: {\n                factors\n              },\n              error: null\n            };\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _deleteFactor(params) {\n      (0, _libHelpers.validateUUID)(params.userId);\n      (0, _libHelpers.validateUUID)(params.id);\n      try {\n        const data = await (0, _libFetch._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Lists all OAuth clients with optional pagination.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _listOAuthClients(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/admin/oauth/clients`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: _libFetch._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const clients = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, clients), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: {\n              clients: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _createOAuthClient(params) {\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/admin/oauth/clients`, {\n          body: params,\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets details of a specific OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _getOAuthClient(clientId) {\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'GET', `${this.url}/admin/oauth/clients/${clientId}`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Deletes an OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _deleteOAuthClient(clientId) {\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'DELETE', `${this.url}/admin/oauth/clients/${clientId}`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Regenerates the secret for an OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _regenerateOAuthClientSecret(clientId) {\n      try {\n        return await (0, _libFetch._request)(this.fetch, 'POST', `${this.url}/admin/oauth/clients/${clientId}/regenerate_secret`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, _libErrors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n});","lineCount":513,"map":[[7,2,16,15,"Object"],[7,8,16,15],[7,9,16,15,"defineProperty"],[7,23,16,15],[7,24,16,15,"exports"],[7,31,16,15],[8,4,16,15,"enumerable"],[8,14,16,15],[9,4,16,15,"get"],[9,7,16,15],[9,18,16,15,"get"],[9,19,16,15],[10,6,16,15],[10,13,16,15,"GoTrueAdminApi"],[10,27,16,15],[11,4,16,15],[12,2,16,15],[13,2,12,0],[13,6,12,0,"_libFetch"],[13,15,12,0],[13,18,12,0,"require"],[13,25,12,0],[13,26,12,0,"_dependencyMap"],[13,40,12,0],[14,2,13,0],[14,6,13,0,"_libHelpers"],[14,17,13,0],[14,20,13,0,"require"],[14,27,13,0],[14,28,13,0,"_dependencyMap"],[14,42,13,0],[15,2,14,0],[15,6,14,0,"_libTypes"],[15,15,14,0],[15,18,14,0,"require"],[15,25,14,0],[15,26,14,0,"_dependencyMap"],[15,40,14,0],[16,2,15,0],[16,6,15,0,"_libErrors"],[16,16,15,0],[16,19,15,0,"require"],[16,26,15,0],[16,27,15,0,"_dependencyMap"],[16,41,15,0],[17,2,1,0],[17,6,1,4,"__rest"],[17,12,1,10],[17,15,1,14],[17,19,1,18],[17,23,1,22],[17,27,1,26],[17,28,1,27,"__rest"],[17,34,1,33],[17,38,1,38],[17,48,1,48,"s"],[17,49,1,49],[17,51,1,51,"e"],[17,52,1,52],[17,54,1,54],[18,4,2,4],[18,8,2,8,"t"],[18,9,2,9],[18,12,2,12],[18,13,2,13],[18,14,2,14],[19,4,3,4],[19,9,3,9],[19,13,3,13,"p"],[19,14,3,14],[19,18,3,18,"s"],[19,19,3,19],[19,21,3,21],[19,25,3,25,"Object"],[19,31,3,31],[19,32,3,32,"prototype"],[19,41,3,41],[19,42,3,42,"hasOwnProperty"],[19,56,3,56],[19,57,3,57,"call"],[19,61,3,61],[19,62,3,62,"s"],[19,63,3,63],[19,65,3,65,"p"],[19,66,3,66],[19,67,3,67],[19,71,3,71,"e"],[19,72,3,72],[19,73,3,73,"indexOf"],[19,80,3,80],[19,81,3,81,"p"],[19,82,3,82],[19,83,3,83],[19,86,3,86],[19,87,3,87],[19,89,4,8,"t"],[19,90,4,9],[19,91,4,10,"p"],[19,92,4,11],[19,93,4,12],[19,96,4,15,"s"],[19,97,4,16],[19,98,4,17,"p"],[19,99,4,18],[19,100,4,19],[20,4,5,4],[20,8,5,8,"s"],[20,9,5,9],[20,13,5,13],[20,17,5,17],[20,21,5,21],[20,28,5,28,"Object"],[20,34,5,34],[20,35,5,35,"getOwnPropertySymbols"],[20,56,5,56],[20,61,5,61],[20,71,5,71],[20,73,6,8],[20,78,6,13],[20,82,6,17,"i"],[20,83,6,18],[20,86,6,21],[20,87,6,22],[20,89,6,24,"p"],[20,90,6,25],[20,93,6,28,"Object"],[20,99,6,34],[20,100,6,35,"getOwnPropertySymbols"],[20,121,6,56],[20,122,6,57,"s"],[20,123,6,58],[20,124,6,59],[20,126,6,61,"i"],[20,127,6,62],[20,130,6,65,"p"],[20,131,6,66],[20,132,6,67,"length"],[20,138,6,73],[20,140,6,75,"i"],[20,141,6,76],[20,143,6,78],[20,145,6,80],[21,6,7,12],[21,10,7,16,"e"],[21,11,7,17],[21,12,7,18,"indexOf"],[21,19,7,25],[21,20,7,26,"p"],[21,21,7,27],[21,22,7,28,"i"],[21,23,7,29],[21,24,7,30],[21,25,7,31],[21,28,7,34],[21,29,7,35],[21,33,7,39,"Object"],[21,39,7,45],[21,40,7,46,"prototype"],[21,49,7,55],[21,50,7,56,"propertyIsEnumerable"],[21,70,7,76],[21,71,7,77,"call"],[21,75,7,81],[21,76,7,82,"s"],[21,77,7,83],[21,79,7,85,"p"],[21,80,7,86],[21,81,7,87,"i"],[21,82,7,88],[21,83,7,89],[21,84,7,90],[21,86,8,16,"t"],[21,87,8,17],[21,88,8,18,"p"],[21,89,8,19],[21,90,8,20,"i"],[21,91,8,21],[21,92,8,22],[21,93,8,23],[21,96,8,26,"s"],[21,97,8,27],[21,98,8,28,"p"],[21,99,8,29],[21,100,8,30,"i"],[21,101,8,31],[21,102,8,32],[21,103,8,33],[22,4,9,8],[23,4,10,4],[23,11,10,11,"t"],[23,12,10,12],[24,2,11,0],[24,3,11,1],[25,2,16,15],[25,8,16,21,"GoTrueAdminApi"],[25,22,16,35],[25,23,16,36],[26,4,17,4,"constructor"],[26,15,17,15,"constructor"],[26,16,17,16],[27,6,17,18,"url"],[27,9,17,21],[27,12,17,24],[27,14,17,26],[28,6,17,28,"headers"],[28,13,17,35],[28,16,17,38],[28,17,17,39],[28,18,17,40],[29,6,17,42,"fetch"],[30,4,17,49],[30,5,17,50],[30,7,17,52],[31,6,18,8],[31,10,18,12],[31,11,18,13,"url"],[31,14,18,16],[31,17,18,19,"url"],[31,20,18,22],[32,6,19,8],[32,10,19,12],[32,11,19,13,"headers"],[32,18,19,20],[32,21,19,23,"headers"],[32,28,19,30],[33,6,20,8],[33,10,20,12],[33,11,20,13,"fetch"],[33,16,20,18],[33,19,20,21],[33,23,20,21,"resolveFetch"],[33,34,20,33],[33,35,20,33,"resolveFetch"],[33,47,20,33],[33,49,20,34,"fetch"],[33,54,20,39],[33,55,20,40],[34,6,21,8],[34,10,21,12],[34,11,21,13,"mfa"],[34,14,21,16],[34,17,21,19],[35,8,22,12,"listFactors"],[35,19,22,23],[35,21,22,25],[35,25,22,29],[35,26,22,30,"_listFactors"],[35,38,22,42],[35,39,22,43,"bind"],[35,43,22,47],[35,44,22,48],[35,48,22,52],[35,49,22,53],[36,8,23,12,"deleteFactor"],[36,20,23,24],[36,22,23,26],[36,26,23,30],[36,27,23,31,"_deleteFactor"],[36,40,23,44],[36,41,23,45,"bind"],[36,45,23,49],[36,46,23,50],[36,50,23,54],[37,6,24,8],[37,7,24,9],[38,6,25,8],[38,10,25,12],[38,11,25,13,"oauth"],[38,16,25,18],[38,19,25,21],[39,8,26,12,"listClients"],[39,19,26,23],[39,21,26,25],[39,25,26,29],[39,26,26,30,"_listOAuthClients"],[39,43,26,47],[39,44,26,48,"bind"],[39,48,26,52],[39,49,26,53],[39,53,26,57],[39,54,26,58],[40,8,27,12,"createClient"],[40,20,27,24],[40,22,27,26],[40,26,27,30],[40,27,27,31,"_createOAuthClient"],[40,45,27,49],[40,46,27,50,"bind"],[40,50,27,54],[40,51,27,55],[40,55,27,59],[40,56,27,60],[41,8,28,12,"getClient"],[41,17,28,21],[41,19,28,23],[41,23,28,27],[41,24,28,28,"_getOAuthClient"],[41,39,28,43],[41,40,28,44,"bind"],[41,44,28,48],[41,45,28,49],[41,49,28,53],[41,50,28,54],[42,8,29,12,"deleteClient"],[42,20,29,24],[42,22,29,26],[42,26,29,30],[42,27,29,31,"_deleteOAuthClient"],[42,45,29,49],[42,46,29,50,"bind"],[42,50,29,54],[42,51,29,55],[42,55,29,59],[42,56,29,60],[43,8,30,12,"regenerateClientSecret"],[43,30,30,34],[43,32,30,36],[43,36,30,40],[43,37,30,41,"_regenerateOAuthClientSecret"],[43,65,30,69],[43,66,30,70,"bind"],[43,70,30,74],[43,71,30,75],[43,75,30,79],[44,6,31,8],[44,7,31,9],[45,4,32,4],[46,4,33,4],[47,0,34,0],[48,0,35,0],[49,0,36,0],[50,0,37,0],[51,4,38,4],[51,10,38,10,"signOut"],[51,17,38,17,"signOut"],[51,18,38,18,"jwt"],[51,21,38,21],[51,23,38,23,"scope"],[51,28,38,28],[51,31,38,31,"SIGN_OUT_SCOPES"],[51,40,38,46],[51,41,38,46,"SIGN_OUT_SCOPES"],[51,56,38,46],[51,57,38,47],[51,58,38,48],[51,59,38,49],[51,61,38,51],[52,6,39,8],[52,10,39,12,"SIGN_OUT_SCOPES"],[52,19,39,27],[52,20,39,27,"SIGN_OUT_SCOPES"],[52,35,39,27],[52,36,39,28,"indexOf"],[52,43,39,35],[52,44,39,36,"scope"],[52,49,39,41],[52,50,39,42],[52,53,39,45],[52,54,39,46],[52,56,39,48],[53,8,40,12],[53,14,40,18],[53,18,40,22,"Error"],[53,23,40,27],[53,24,40,28],[53,77,40,81,"SIGN_OUT_SCOPES"],[53,86,40,96],[53,87,40,96,"SIGN_OUT_SCOPES"],[53,102,40,96],[53,103,40,97,"join"],[53,107,40,101],[53,108,40,102],[53,112,40,106],[53,113,40,107],[53,115,40,109],[53,116,40,110],[54,6,41,8],[55,6,42,8],[55,10,42,12],[56,8,43,12],[56,14,43,18],[56,18,43,18,"_request"],[56,27,43,26],[56,28,43,26,"_request"],[56,36,43,26],[56,38,43,27],[56,42,43,31],[56,43,43,32,"fetch"],[56,48,43,37],[56,50,43,39],[56,56,43,45],[56,58,43,47],[56,61,43,50],[56,65,43,54],[56,66,43,55,"url"],[56,69,43,58],[56,86,43,75,"scope"],[56,91,43,80],[56,93,43,82],[56,95,43,84],[57,10,44,16,"headers"],[57,17,44,23],[57,19,44,25],[57,23,44,29],[57,24,44,30,"headers"],[57,31,44,37],[58,10,45,16,"jwt"],[58,13,45,19],[59,10,46,16,"noResolveJson"],[59,23,46,29],[59,25,46,31],[60,8,47,12],[60,9,47,13],[60,10,47,14],[61,8,48,12],[61,15,48,19],[62,10,48,21,"data"],[62,14,48,25],[62,16,48,27],[62,20,48,31],[63,10,48,33,"error"],[63,15,48,38],[63,17,48,40],[64,8,48,45],[64,9,48,46],[65,6,49,8],[65,7,49,9],[65,8,50,8],[65,15,50,15,"error"],[65,20,50,20],[65,22,50,22],[66,8,51,12],[66,12,51,16],[66,16,51,16,"isAuthError"],[66,26,51,27],[66,27,51,27,"isAuthError"],[66,38,51,27],[66,40,51,28,"error"],[66,45,51,33],[66,46,51,34],[66,48,51,36],[67,10,52,16],[67,17,52,23],[68,12,52,25,"data"],[68,16,52,29],[68,18,52,31],[68,22,52,35],[69,12,52,37,"error"],[70,10,52,43],[70,11,52,44],[71,8,53,12],[72,8,54,12],[72,14,54,18,"error"],[72,19,54,23],[73,6,55,8],[74,4,56,4],[75,4,57,4],[76,0,58,0],[77,0,59,0],[78,0,60,0],[79,0,61,0],[80,4,62,4],[80,10,62,10,"inviteUserByEmail"],[80,27,62,27,"inviteUserByEmail"],[80,28,62,28,"email"],[80,33,62,33],[80,35,62,35,"options"],[80,42,62,42],[80,45,62,45],[80,46,62,46],[80,47,62,47],[80,49,62,49],[81,6,63,8],[81,10,63,12],[82,8,64,12],[82,15,64,19],[82,21,64,25],[82,25,64,25,"_request"],[82,34,64,33],[82,35,64,33,"_request"],[82,43,64,33],[82,45,64,34],[82,49,64,38],[82,50,64,39,"fetch"],[82,55,64,44],[82,57,64,46],[82,63,64,52],[82,65,64,54],[82,68,64,57],[82,72,64,61],[82,73,64,62,"url"],[82,76,64,65],[82,85,64,74],[82,87,64,76],[83,10,65,16,"body"],[83,14,65,20],[83,16,65,22],[84,12,65,24,"email"],[84,17,65,29],[85,12,65,31,"data"],[85,16,65,35],[85,18,65,37,"options"],[85,25,65,44],[85,26,65,45,"data"],[86,10,65,50],[86,11,65,51],[87,10,66,16,"headers"],[87,17,66,23],[87,19,66,25],[87,23,66,29],[87,24,66,30,"headers"],[87,31,66,37],[88,10,67,16,"redirectTo"],[88,20,67,26],[88,22,67,28,"options"],[88,29,67,35],[88,30,67,36,"redirectTo"],[88,40,67,46],[89,10,68,16,"xform"],[89,15,68,21],[89,17,68,23,"_userResponse"],[89,26,68,36],[89,27,68,36,"_userResponse"],[90,8,69,12],[90,9,69,13],[90,10,69,14],[91,6,70,8],[91,7,70,9],[91,8,71,8],[91,15,71,15,"error"],[91,20,71,20],[91,22,71,22],[92,8,72,12],[92,12,72,16],[92,16,72,16,"isAuthError"],[92,26,72,27],[92,27,72,27,"isAuthError"],[92,38,72,27],[92,40,72,28,"error"],[92,45,72,33],[92,46,72,34],[92,48,72,36],[93,10,73,16],[93,17,73,23],[94,12,73,25,"data"],[94,16,73,29],[94,18,73,31],[95,14,73,33,"user"],[95,18,73,37],[95,20,73,39],[96,12,73,44],[96,13,73,45],[97,12,73,47,"error"],[98,10,73,53],[98,11,73,54],[99,8,74,12],[100,8,75,12],[100,14,75,18,"error"],[100,19,75,23],[101,6,76,8],[102,4,77,4],[103,4,78,4],[104,0,79,0],[105,0,80,0],[106,0,81,0],[107,0,82,0],[108,0,83,0],[109,0,84,0],[110,4,85,4],[110,10,85,10,"generateLink"],[110,22,85,22,"generateLink"],[110,23,85,23,"params"],[110,29,85,29],[110,31,85,31],[111,6,86,8],[111,10,86,12],[112,8,87,12],[112,14,87,18],[113,12,87,20,"options"],[114,10,87,28],[114,11,87,29],[114,14,87,32,"params"],[114,20,87,38],[115,10,87,40,"rest"],[115,14,87,44],[115,17,87,47,"__rest"],[115,23,87,53],[115,24,87,54,"params"],[115,30,87,60],[115,32,87,62],[115,33,87,63],[115,42,87,72],[115,43,87,73],[115,44,87,74],[116,8,88,12],[116,14,88,18,"body"],[116,18,88,22],[116,21,88,25,"Object"],[116,27,88,31],[116,28,88,32,"assign"],[116,34,88,38],[116,35,88,39,"Object"],[116,41,88,45],[116,42,88,46,"assign"],[116,48,88,52],[116,49,88,53],[116,50,88,54],[116,51,88,55],[116,53,88,57,"rest"],[116,57,88,61],[116,58,88,62],[116,60,88,64,"options"],[116,67,88,71],[116,68,88,72],[117,8,89,12],[117,12,89,16],[117,22,89,26],[117,26,89,30,"rest"],[117,30,89,34],[117,32,89,36],[118,10,90,16],[119,10,91,16,"body"],[119,14,91,20],[119,15,91,21,"new_email"],[119,24,91,30],[119,27,91,33,"rest"],[119,31,91,37],[119,36,91,42],[119,40,91,46],[119,44,91,50,"rest"],[119,48,91,54],[119,53,91,59],[119,58,91,64],[119,59,91,65],[119,62,91,68],[119,67,91,73],[119,68,91,74],[119,71,91,77,"rest"],[119,75,91,81],[119,76,91,82,"newEmail"],[119,84,91,90],[120,10,92,16],[120,17,92,23,"body"],[120,21,92,27],[120,22,92,28],[120,32,92,38],[120,33,92,39],[121,8,93,12],[122,8,94,12],[122,15,94,19],[122,21,94,25],[122,25,94,25,"_request"],[122,34,94,33],[122,35,94,33,"_request"],[122,43,94,33],[122,45,94,34],[122,49,94,38],[122,50,94,39,"fetch"],[122,55,94,44],[122,57,94,46],[122,63,94,52],[122,65,94,54],[122,68,94,57],[122,72,94,61],[122,73,94,62,"url"],[122,76,94,65],[122,98,94,87],[122,100,94,89],[123,10,95,16,"body"],[123,14,95,20],[123,16,95,22,"body"],[123,20,95,26],[124,10,96,16,"headers"],[124,17,96,23],[124,19,96,25],[124,23,96,29],[124,24,96,30,"headers"],[124,31,96,37],[125,10,97,16,"xform"],[125,15,97,21],[125,17,97,23,"_generateLinkResponse"],[125,26,97,44],[125,27,97,44,"_generateLinkResponse"],[125,48,97,44],[126,10,98,16,"redirectTo"],[126,20,98,26],[126,22,98,28,"options"],[126,29,98,35],[126,34,98,40],[126,38,98,44],[126,42,98,48,"options"],[126,49,98,55],[126,54,98,60],[126,59,98,65],[126,60,98,66],[126,63,98,69],[126,68,98,74],[126,69,98,75],[126,72,98,78,"options"],[126,79,98,85],[126,80,98,86,"redirectTo"],[127,8,99,12],[127,9,99,13],[127,10,99,14],[128,6,100,8],[128,7,100,9],[128,8,101,8],[128,15,101,15,"error"],[128,20,101,20],[128,22,101,22],[129,8,102,12],[129,12,102,16],[129,16,102,16,"isAuthError"],[129,26,102,27],[129,27,102,27,"isAuthError"],[129,38,102,27],[129,40,102,28,"error"],[129,45,102,33],[129,46,102,34],[129,48,102,36],[130,10,103,16],[130,17,103,23],[131,12,104,20,"data"],[131,16,104,24],[131,18,104,26],[132,14,105,24,"properties"],[132,24,105,34],[132,26,105,36],[132,30,105,40],[133,14,106,24,"user"],[133,18,106,28],[133,20,106,30],[134,12,107,20],[134,13,107,21],[135,12,108,20,"error"],[136,10,109,16],[136,11,109,17],[137,8,110,12],[138,8,111,12],[138,14,111,18,"error"],[138,19,111,23],[139,6,112,8],[140,4,113,4],[141,4,114,4],[142,4,115,4],[143,0,116,0],[144,0,117,0],[145,0,118,0],[146,4,119,4],[146,10,119,10,"createUser"],[146,20,119,20,"createUser"],[146,21,119,21,"attributes"],[146,31,119,31],[146,33,119,33],[147,6,120,8],[147,10,120,12],[148,8,121,12],[148,15,121,19],[148,21,121,25],[148,25,121,25,"_request"],[148,34,121,33],[148,35,121,33,"_request"],[148,43,121,33],[148,45,121,34],[148,49,121,38],[148,50,121,39,"fetch"],[148,55,121,44],[148,57,121,46],[148,63,121,52],[148,65,121,54],[148,68,121,57],[148,72,121,61],[148,73,121,62,"url"],[148,76,121,65],[148,90,121,79],[148,92,121,81],[149,10,122,16,"body"],[149,14,122,20],[149,16,122,22,"attributes"],[149,26,122,32],[150,10,123,16,"headers"],[150,17,123,23],[150,19,123,25],[150,23,123,29],[150,24,123,30,"headers"],[150,31,123,37],[151,10,124,16,"xform"],[151,15,124,21],[151,17,124,23,"_userResponse"],[151,26,124,36],[151,27,124,36,"_userResponse"],[152,8,125,12],[152,9,125,13],[152,10,125,14],[153,6,126,8],[153,7,126,9],[153,8,127,8],[153,15,127,15,"error"],[153,20,127,20],[153,22,127,22],[154,8,128,12],[154,12,128,16],[154,16,128,16,"isAuthError"],[154,26,128,27],[154,27,128,27,"isAuthError"],[154,38,128,27],[154,40,128,28,"error"],[154,45,128,33],[154,46,128,34],[154,48,128,36],[155,10,129,16],[155,17,129,23],[156,12,129,25,"data"],[156,16,129,29],[156,18,129,31],[157,14,129,33,"user"],[157,18,129,37],[157,20,129,39],[158,12,129,44],[158,13,129,45],[159,12,129,47,"error"],[160,10,129,53],[160,11,129,54],[161,8,130,12],[162,8,131,12],[162,14,131,18,"error"],[162,19,131,23],[163,6,132,8],[164,4,133,4],[165,4,134,4],[166,0,135,0],[167,0,136,0],[168,0,137,0],[169,0,138,0],[170,0,139,0],[171,4,140,4],[171,10,140,10,"listUsers"],[171,19,140,19,"listUsers"],[171,20,140,20,"params"],[171,26,140,26],[171,28,140,28],[172,6,141,8],[172,10,141,12,"_a"],[172,12,141,14],[172,14,141,16,"_b"],[172,16,141,18],[172,18,141,20,"_c"],[172,20,141,22],[172,22,141,24,"_d"],[172,24,141,26],[172,26,141,28,"_e"],[172,28,141,30],[172,30,141,32,"_f"],[172,32,141,34],[172,34,141,36,"_g"],[172,36,141,38],[173,6,142,8],[173,10,142,12],[174,8,143,12],[174,14,143,18,"pagination"],[174,24,143,28],[174,27,143,31],[175,10,143,33,"nextPage"],[175,18,143,41],[175,20,143,43],[175,24,143,47],[176,10,143,49,"lastPage"],[176,18,143,57],[176,20,143,59],[176,21,143,60],[177,10,143,62,"total"],[177,15,143,67],[177,17,143,69],[178,8,143,71],[178,9,143,72],[179,8,144,12],[179,14,144,18,"response"],[179,22,144,26],[179,25,144,29],[179,31,144,35],[179,35,144,35,"_request"],[179,44,144,43],[179,45,144,43,"_request"],[179,53,144,43],[179,55,144,44],[179,59,144,48],[179,60,144,49,"fetch"],[179,65,144,54],[179,67,144,56],[179,72,144,61],[179,74,144,63],[179,77,144,66],[179,81,144,70],[179,82,144,71,"url"],[179,85,144,74],[179,99,144,88],[179,101,144,90],[180,10,145,16,"headers"],[180,17,145,23],[180,19,145,25],[180,23,145,29],[180,24,145,30,"headers"],[180,31,145,37],[181,10,146,16,"noResolveJson"],[181,23,146,29],[181,25,146,31],[181,29,146,35],[182,10,147,16,"query"],[182,15,147,21],[182,17,147,23],[183,12,148,20,"page"],[183,16,148,24],[183,18,148,26],[183,19,148,27,"_b"],[183,21,148,29],[183,24,148,32],[183,25,148,33,"_a"],[183,27,148,35],[183,30,148,38,"params"],[183,36,148,44],[183,41,148,49],[183,45,148,53],[183,49,148,57,"params"],[183,55,148,63],[183,60,148,68],[183,65,148,73],[183,66,148,74],[183,69,148,77],[183,74,148,82],[183,75,148,83],[183,78,148,86,"params"],[183,84,148,92],[183,85,148,93,"page"],[183,89,148,97],[183,95,148,103],[183,99,148,107],[183,103,148,111,"_a"],[183,105,148,113],[183,110,148,118],[183,115,148,123],[183,116,148,124],[183,119,148,127],[183,124,148,132],[183,125,148,133],[183,128,148,136,"_a"],[183,130,148,138],[183,131,148,139,"toString"],[183,139,148,147],[183,140,148,148],[183,141,148,149],[183,147,148,155],[183,151,148,159],[183,155,148,163,"_b"],[183,157,148,165],[183,162,148,170],[183,167,148,175],[183,168,148,176],[183,171,148,179,"_b"],[183,173,148,181],[183,176,148,184],[183,178,148,186],[184,12,149,20,"per_page"],[184,20,149,28],[184,22,149,30],[184,23,149,31,"_d"],[184,25,149,33],[184,28,149,36],[184,29,149,37,"_c"],[184,31,149,39],[184,34,149,42,"params"],[184,40,149,48],[184,45,149,53],[184,49,149,57],[184,53,149,61,"params"],[184,59,149,67],[184,64,149,72],[184,69,149,77],[184,70,149,78],[184,73,149,81],[184,78,149,86],[184,79,149,87],[184,82,149,90,"params"],[184,88,149,96],[184,89,149,97,"perPage"],[184,96,149,104],[184,102,149,110],[184,106,149,114],[184,110,149,118,"_c"],[184,112,149,120],[184,117,149,125],[184,122,149,130],[184,123,149,131],[184,126,149,134],[184,131,149,139],[184,132,149,140],[184,135,149,143,"_c"],[184,137,149,145],[184,138,149,146,"toString"],[184,146,149,154],[184,147,149,155],[184,148,149,156],[184,154,149,162],[184,158,149,166],[184,162,149,170,"_d"],[184,164,149,172],[184,169,149,177],[184,174,149,182],[184,175,149,183],[184,178,149,186,"_d"],[184,180,149,188],[184,183,149,191],[185,10,150,16],[185,11,150,17],[186,10,151,16,"xform"],[186,15,151,21],[186,17,151,23,"_noResolveJsonResponse"],[186,26,151,45],[186,27,151,45,"_noResolveJsonResponse"],[187,8,152,12],[187,9,152,13],[187,10,152,14],[188,8,153,12],[188,12,153,16,"response"],[188,20,153,24],[188,21,153,25,"error"],[188,26,153,30],[188,28,154,16],[188,34,154,22,"response"],[188,42,154,30],[188,43,154,31,"error"],[188,48,154,36],[189,8,155,12],[189,14,155,18,"users"],[189,19,155,23],[189,22,155,26],[189,28,155,32,"response"],[189,36,155,40],[189,37,155,41,"json"],[189,41,155,45],[189,42,155,46],[189,43,155,47],[190,8,156,12],[190,14,156,18,"total"],[190,19,156,23],[190,22,156,26],[190,23,156,27,"_e"],[190,25,156,29],[190,28,156,32,"response"],[190,36,156,40],[190,37,156,41,"headers"],[190,44,156,48],[190,45,156,49,"get"],[190,48,156,52],[190,49,156,53],[190,64,156,68],[190,65,156,69],[190,71,156,75],[190,75,156,79],[190,79,156,83,"_e"],[190,81,156,85],[190,86,156,90],[190,91,156,95],[190,92,156,96],[190,95,156,99,"_e"],[190,97,156,101],[190,100,156,104],[190,101,156,105],[191,8,157,12],[191,14,157,18,"links"],[191,19,157,23],[191,22,157,26],[191,23,157,27,"_g"],[191,25,157,29],[191,28,157,32],[191,29,157,33,"_f"],[191,31,157,35],[191,34,157,38,"response"],[191,42,157,46],[191,43,157,47,"headers"],[191,50,157,54],[191,51,157,55,"get"],[191,54,157,58],[191,55,157,59],[191,61,157,65],[191,62,157,66],[191,68,157,72],[191,72,157,76],[191,76,157,80,"_f"],[191,78,157,82],[191,83,157,87],[191,88,157,92],[191,89,157,93],[191,92,157,96],[191,97,157,101],[191,98,157,102],[191,101,157,105,"_f"],[191,103,157,107],[191,104,157,108,"split"],[191,109,157,113],[191,110,157,114],[191,113,157,117],[191,114,157,118],[191,120,157,124],[191,124,157,128],[191,128,157,132,"_g"],[191,130,157,134],[191,135,157,139],[191,140,157,144],[191,141,157,145],[191,144,157,148,"_g"],[191,146,157,150],[191,149,157,153],[191,151,157,155],[192,8,158,12],[192,12,158,16,"links"],[192,17,158,21],[192,18,158,22,"length"],[192,24,158,28],[192,27,158,31],[192,28,158,32],[192,30,158,34],[193,10,159,16,"links"],[193,15,159,21],[193,16,159,22,"forEach"],[193,23,159,29],[193,24,159,31,"link"],[193,28,159,35],[193,32,159,40],[194,12,160,20],[194,18,160,26,"page"],[194,22,160,30],[194,25,160,33,"parseInt"],[194,33,160,41],[194,34,160,42,"link"],[194,38,160,46],[194,39,160,47,"split"],[194,44,160,52],[194,45,160,53],[194,48,160,56],[194,49,160,57],[194,50,160,58],[194,51,160,59],[194,52,160,60],[194,53,160,61,"split"],[194,58,160,66],[194,59,160,67],[194,62,160,70],[194,63,160,71],[194,64,160,72],[194,65,160,73],[194,66,160,74],[194,67,160,75,"substring"],[194,76,160,84],[194,77,160,85],[194,78,160,86],[194,80,160,88],[194,81,160,89],[194,82,160,90],[194,83,160,91],[195,12,161,20],[195,18,161,26,"rel"],[195,21,161,29],[195,24,161,32,"JSON"],[195,28,161,36],[195,29,161,37,"parse"],[195,34,161,42],[195,35,161,43,"link"],[195,39,161,47],[195,40,161,48,"split"],[195,45,161,53],[195,46,161,54],[195,49,161,57],[195,50,161,58],[195,51,161,59],[195,52,161,60],[195,53,161,61],[195,54,161,62,"split"],[195,59,161,67],[195,60,161,68],[195,63,161,71],[195,64,161,72],[195,65,161,73],[195,66,161,74],[195,67,161,75],[195,68,161,76],[196,12,162,20,"pagination"],[196,22,162,30],[196,23,162,31],[196,26,162,34,"rel"],[196,29,162,37],[196,35,162,43],[196,36,162,44],[196,39,162,47,"page"],[196,43,162,51],[197,10,163,16],[197,11,163,17],[197,12,163,18],[198,10,164,16,"pagination"],[198,20,164,26],[198,21,164,27,"total"],[198,26,164,32],[198,29,164,35,"parseInt"],[198,37,164,43],[198,38,164,44,"total"],[198,43,164,49],[198,44,164,50],[199,8,165,12],[200,8,166,12],[200,15,166,19],[201,10,166,21,"data"],[201,14,166,25],[201,16,166,27,"Object"],[201,22,166,33],[201,23,166,34,"assign"],[201,29,166,40],[201,30,166,41,"Object"],[201,36,166,47],[201,37,166,48,"assign"],[201,43,166,54],[201,44,166,55],[201,45,166,56],[201,46,166,57],[201,48,166,59,"users"],[201,53,166,64],[201,54,166,65],[201,56,166,67,"pagination"],[201,66,166,77],[201,67,166,78],[202,10,166,80,"error"],[202,15,166,85],[202,17,166,87],[203,8,166,92],[203,9,166,93],[204,6,167,8],[204,7,167,9],[204,8,168,8],[204,15,168,15,"error"],[204,20,168,20],[204,22,168,22],[205,8,169,12],[205,12,169,16],[205,16,169,16,"isAuthError"],[205,26,169,27],[205,27,169,27,"isAuthError"],[205,38,169,27],[205,40,169,28,"error"],[205,45,169,33],[205,46,169,34],[205,48,169,36],[206,10,170,16],[206,17,170,23],[207,12,170,25,"data"],[207,16,170,29],[207,18,170,31],[208,14,170,33,"users"],[208,19,170,38],[208,21,170,40],[209,12,170,43],[209,13,170,44],[210,12,170,46,"error"],[211,10,170,52],[211,11,170,53],[212,8,171,12],[213,8,172,12],[213,14,172,18,"error"],[213,19,172,23],[214,6,173,8],[215,4,174,4],[216,4,175,4],[217,0,176,0],[218,0,177,0],[219,0,178,0],[220,0,179,0],[221,0,180,0],[222,0,181,0],[223,4,182,4],[223,10,182,10,"getUserById"],[223,21,182,21,"getUserById"],[223,22,182,22,"uid"],[223,25,182,25],[223,27,182,27],[224,6,183,8],[224,10,183,8,"validateUUID"],[224,21,183,20],[224,22,183,20,"validateUUID"],[224,34,183,20],[224,36,183,21,"uid"],[224,39,183,24],[224,40,183,25],[225,6,184,8],[225,10,184,12],[226,8,185,12],[226,15,185,19],[226,21,185,25],[226,25,185,25,"_request"],[226,34,185,33],[226,35,185,33,"_request"],[226,43,185,33],[226,45,185,34],[226,49,185,38],[226,50,185,39,"fetch"],[226,55,185,44],[226,57,185,46],[226,62,185,51],[226,64,185,53],[226,67,185,56],[226,71,185,60],[226,72,185,61,"url"],[226,75,185,64],[226,91,185,80,"uid"],[226,94,185,83],[226,96,185,85],[226,98,185,87],[227,10,186,16,"headers"],[227,17,186,23],[227,19,186,25],[227,23,186,29],[227,24,186,30,"headers"],[227,31,186,37],[228,10,187,16,"xform"],[228,15,187,21],[228,17,187,23,"_userResponse"],[228,26,187,36],[228,27,187,36,"_userResponse"],[229,8,188,12],[229,9,188,13],[229,10,188,14],[230,6,189,8],[230,7,189,9],[230,8,190,8],[230,15,190,15,"error"],[230,20,190,20],[230,22,190,22],[231,8,191,12],[231,12,191,16],[231,16,191,16,"isAuthError"],[231,26,191,27],[231,27,191,27,"isAuthError"],[231,38,191,27],[231,40,191,28,"error"],[231,45,191,33],[231,46,191,34],[231,48,191,36],[232,10,192,16],[232,17,192,23],[233,12,192,25,"data"],[233,16,192,29],[233,18,192,31],[234,14,192,33,"user"],[234,18,192,37],[234,20,192,39],[235,12,192,44],[235,13,192,45],[236,12,192,47,"error"],[237,10,192,53],[237,11,192,54],[238,8,193,12],[239,8,194,12],[239,14,194,18,"error"],[239,19,194,23],[240,6,195,8],[241,4,196,4],[242,4,197,4],[243,0,198,0],[244,0,199,0],[245,0,200,0],[246,0,201,0],[247,0,202,0],[248,0,203,0],[249,4,204,4],[249,10,204,10,"updateUserById"],[249,24,204,24,"updateUserById"],[249,25,204,25,"uid"],[249,28,204,28],[249,30,204,30,"attributes"],[249,40,204,40],[249,42,204,42],[250,6,205,8],[250,10,205,8,"validateUUID"],[250,21,205,20],[250,22,205,20,"validateUUID"],[250,34,205,20],[250,36,205,21,"uid"],[250,39,205,24],[250,40,205,25],[251,6,206,8],[251,10,206,12],[252,8,207,12],[252,15,207,19],[252,21,207,25],[252,25,207,25,"_request"],[252,34,207,33],[252,35,207,33,"_request"],[252,43,207,33],[252,45,207,34],[252,49,207,38],[252,50,207,39,"fetch"],[252,55,207,44],[252,57,207,46],[252,62,207,51],[252,64,207,53],[252,67,207,56],[252,71,207,60],[252,72,207,61,"url"],[252,75,207,64],[252,91,207,80,"uid"],[252,94,207,83],[252,96,207,85],[252,98,207,87],[253,10,208,16,"body"],[253,14,208,20],[253,16,208,22,"attributes"],[253,26,208,32],[254,10,209,16,"headers"],[254,17,209,23],[254,19,209,25],[254,23,209,29],[254,24,209,30,"headers"],[254,31,209,37],[255,10,210,16,"xform"],[255,15,210,21],[255,17,210,23,"_userResponse"],[255,26,210,36],[255,27,210,36,"_userResponse"],[256,8,211,12],[256,9,211,13],[256,10,211,14],[257,6,212,8],[257,7,212,9],[257,8,213,8],[257,15,213,15,"error"],[257,20,213,20],[257,22,213,22],[258,8,214,12],[258,12,214,16],[258,16,214,16,"isAuthError"],[258,26,214,27],[258,27,214,27,"isAuthError"],[258,38,214,27],[258,40,214,28,"error"],[258,45,214,33],[258,46,214,34],[258,48,214,36],[259,10,215,16],[259,17,215,23],[260,12,215,25,"data"],[260,16,215,29],[260,18,215,31],[261,14,215,33,"user"],[261,18,215,37],[261,20,215,39],[262,12,215,44],[262,13,215,45],[263,12,215,47,"error"],[264,10,215,53],[264,11,215,54],[265,8,216,12],[266,8,217,12],[266,14,217,18,"error"],[266,19,217,23],[267,6,218,8],[268,4,219,4],[269,4,220,4],[270,0,221,0],[271,0,222,0],[272,0,223,0],[273,0,224,0],[274,0,225,0],[275,0,226,0],[276,0,227,0],[277,0,228,0],[278,4,229,4],[278,10,229,10,"deleteUser"],[278,20,229,20,"deleteUser"],[278,21,229,21,"id"],[278,23,229,23],[278,25,229,25,"shouldSoftDelete"],[278,41,229,41],[278,44,229,44],[278,49,229,49],[278,51,229,51],[279,6,230,8],[279,10,230,8,"validateUUID"],[279,21,230,20],[279,22,230,20,"validateUUID"],[279,34,230,20],[279,36,230,21,"id"],[279,38,230,23],[279,39,230,24],[280,6,231,8],[280,10,231,12],[281,8,232,12],[281,15,232,19],[281,21,232,25],[281,25,232,25,"_request"],[281,34,232,33],[281,35,232,33,"_request"],[281,43,232,33],[281,45,232,34],[281,49,232,38],[281,50,232,39,"fetch"],[281,55,232,44],[281,57,232,46],[281,65,232,54],[281,67,232,56],[281,70,232,59],[281,74,232,63],[281,75,232,64,"url"],[281,78,232,67],[281,94,232,83,"id"],[281,96,232,85],[281,98,232,87],[281,100,232,89],[282,10,233,16,"headers"],[282,17,233,23],[282,19,233,25],[282,23,233,29],[282,24,233,30,"headers"],[282,31,233,37],[283,10,234,16,"body"],[283,14,234,20],[283,16,234,22],[284,12,235,20,"should_soft_delete"],[284,30,235,38],[284,32,235,40,"shouldSoftDelete"],[285,10,236,16],[285,11,236,17],[286,10,237,16,"xform"],[286,15,237,21],[286,17,237,23,"_userResponse"],[286,26,237,36],[286,27,237,36,"_userResponse"],[287,8,238,12],[287,9,238,13],[287,10,238,14],[288,6,239,8],[288,7,239,9],[288,8,240,8],[288,15,240,15,"error"],[288,20,240,20],[288,22,240,22],[289,8,241,12],[289,12,241,16],[289,16,241,16,"isAuthError"],[289,26,241,27],[289,27,241,27,"isAuthError"],[289,38,241,27],[289,40,241,28,"error"],[289,45,241,33],[289,46,241,34],[289,48,241,36],[290,10,242,16],[290,17,242,23],[291,12,242,25,"data"],[291,16,242,29],[291,18,242,31],[292,14,242,33,"user"],[292,18,242,37],[292,20,242,39],[293,12,242,44],[293,13,242,45],[294,12,242,47,"error"],[295,10,242,53],[295,11,242,54],[296,8,243,12],[297,8,244,12],[297,14,244,18,"error"],[297,19,244,23],[298,6,245,8],[299,4,246,4],[300,4,247,4],[300,10,247,10,"_listFactors"],[300,22,247,22,"_listFactors"],[300,23,247,23,"params"],[300,29,247,29],[300,31,247,31],[301,6,248,8],[301,10,248,8,"validateUUID"],[301,21,248,20],[301,22,248,20,"validateUUID"],[301,34,248,20],[301,36,248,21,"params"],[301,42,248,27],[301,43,248,28,"userId"],[301,49,248,34],[301,50,248,35],[302,6,249,8],[302,10,249,12],[303,8,250,12],[303,14,250,18],[304,10,250,20,"data"],[304,14,250,24],[305,10,250,26,"error"],[306,8,250,32],[306,9,250,33],[306,12,250,36],[306,18,250,42],[306,22,250,42,"_request"],[306,31,250,50],[306,32,250,50,"_request"],[306,40,250,50],[306,42,250,51],[306,46,250,55],[306,47,250,56,"fetch"],[306,52,250,61],[306,54,250,63],[306,59,250,68],[306,61,250,70],[306,64,250,73],[306,68,250,77],[306,69,250,78,"url"],[306,72,250,81],[306,88,250,97,"params"],[306,94,250,103],[306,95,250,104,"userId"],[306,101,250,110],[306,111,250,120],[306,113,250,122],[307,10,251,16,"headers"],[307,17,251,23],[307,19,251,25],[307,23,251,29],[307,24,251,30,"headers"],[307,31,251,37],[308,10,252,16,"xform"],[308,15,252,21],[308,17,252,24,"factors"],[308,24,252,31],[308,28,252,36],[309,12,253,20],[309,19,253,27],[310,14,253,29,"data"],[310,18,253,33],[310,20,253,35],[311,16,253,37,"factors"],[312,14,253,45],[312,15,253,46],[313,14,253,48,"error"],[313,19,253,53],[313,21,253,55],[314,12,253,60],[314,13,253,61],[315,10,254,16],[316,8,255,12],[316,9,255,13],[316,10,255,14],[317,8,256,12],[317,15,256,19],[318,10,256,21,"data"],[318,14,256,25],[319,10,256,27,"error"],[320,8,256,33],[320,9,256,34],[321,6,257,8],[321,7,257,9],[321,8,258,8],[321,15,258,15,"error"],[321,20,258,20],[321,22,258,22],[322,8,259,12],[322,12,259,16],[322,16,259,16,"isAuthError"],[322,26,259,27],[322,27,259,27,"isAuthError"],[322,38,259,27],[322,40,259,28,"error"],[322,45,259,33],[322,46,259,34],[322,48,259,36],[323,10,260,16],[323,17,260,23],[324,12,260,25,"data"],[324,16,260,29],[324,18,260,31],[324,22,260,35],[325,12,260,37,"error"],[326,10,260,43],[326,11,260,44],[327,8,261,12],[328,8,262,12],[328,14,262,18,"error"],[328,19,262,23],[329,6,263,8],[330,4,264,4],[331,4,265,4],[331,10,265,10,"_deleteFactor"],[331,23,265,23,"_deleteFactor"],[331,24,265,24,"params"],[331,30,265,30],[331,32,265,32],[332,6,266,8],[332,10,266,8,"validateUUID"],[332,21,266,20],[332,22,266,20,"validateUUID"],[332,34,266,20],[332,36,266,21,"params"],[332,42,266,27],[332,43,266,28,"userId"],[332,49,266,34],[332,50,266,35],[333,6,267,8],[333,10,267,8,"validateUUID"],[333,21,267,20],[333,22,267,20,"validateUUID"],[333,34,267,20],[333,36,267,21,"params"],[333,42,267,27],[333,43,267,28,"id"],[333,45,267,30],[333,46,267,31],[334,6,268,8],[334,10,268,12],[335,8,269,12],[335,14,269,18,"data"],[335,18,269,22],[335,21,269,25],[335,27,269,31],[335,31,269,31,"_request"],[335,40,269,39],[335,41,269,39,"_request"],[335,49,269,39],[335,51,269,40],[335,55,269,44],[335,56,269,45,"fetch"],[335,61,269,50],[335,63,269,52],[335,71,269,60],[335,73,269,62],[335,76,269,65],[335,80,269,69],[335,81,269,70,"url"],[335,84,269,73],[335,100,269,89,"params"],[335,106,269,95],[335,107,269,96,"userId"],[335,113,269,102],[335,125,269,114,"params"],[335,131,269,120],[335,132,269,121,"id"],[335,134,269,123],[335,136,269,125],[335,138,269,127],[336,10,270,16,"headers"],[336,17,270,23],[336,19,270,25],[336,23,270,29],[336,24,270,30,"headers"],[337,8,271,12],[337,9,271,13],[337,10,271,14],[338,8,272,12],[338,15,272,19],[339,10,272,21,"data"],[339,14,272,25],[340,10,272,27,"error"],[340,15,272,32],[340,17,272,34],[341,8,272,39],[341,9,272,40],[342,6,273,8],[342,7,273,9],[342,8,274,8],[342,15,274,15,"error"],[342,20,274,20],[342,22,274,22],[343,8,275,12],[343,12,275,16],[343,16,275,16,"isAuthError"],[343,26,275,27],[343,27,275,27,"isAuthError"],[343,38,275,27],[343,40,275,28,"error"],[343,45,275,33],[343,46,275,34],[343,48,275,36],[344,10,276,16],[344,17,276,23],[345,12,276,25,"data"],[345,16,276,29],[345,18,276,31],[345,22,276,35],[346,12,276,37,"error"],[347,10,276,43],[347,11,276,44],[348,8,277,12],[349,8,278,12],[349,14,278,18,"error"],[349,19,278,23],[350,6,279,8],[351,4,280,4],[352,4,281,4],[353,0,282,0],[354,0,283,0],[355,0,284,0],[356,0,285,0],[357,0,286,0],[358,4,287,4],[358,10,287,10,"_listOAuthClients"],[358,27,287,27,"_listOAuthClients"],[358,28,287,28,"params"],[358,34,287,34],[358,36,287,36],[359,6,288,8],[359,10,288,12,"_a"],[359,12,288,14],[359,14,288,16,"_b"],[359,16,288,18],[359,18,288,20,"_c"],[359,20,288,22],[359,22,288,24,"_d"],[359,24,288,26],[359,26,288,28,"_e"],[359,28,288,30],[359,30,288,32,"_f"],[359,32,288,34],[359,34,288,36,"_g"],[359,36,288,38],[360,6,289,8],[360,10,289,12],[361,8,290,12],[361,14,290,18,"pagination"],[361,24,290,28],[361,27,290,31],[362,10,290,33,"nextPage"],[362,18,290,41],[362,20,290,43],[362,24,290,47],[363,10,290,49,"lastPage"],[363,18,290,57],[363,20,290,59],[363,21,290,60],[364,10,290,62,"total"],[364,15,290,67],[364,17,290,69],[365,8,290,71],[365,9,290,72],[366,8,291,12],[366,14,291,18,"response"],[366,22,291,26],[366,25,291,29],[366,31,291,35],[366,35,291,35,"_request"],[366,44,291,43],[366,45,291,43,"_request"],[366,53,291,43],[366,55,291,44],[366,59,291,48],[366,60,291,49,"fetch"],[366,65,291,54],[366,67,291,56],[366,72,291,61],[366,74,291,63],[366,77,291,66],[366,81,291,70],[366,82,291,71,"url"],[366,85,291,74],[366,107,291,96],[366,109,291,98],[367,10,292,16,"headers"],[367,17,292,23],[367,19,292,25],[367,23,292,29],[367,24,292,30,"headers"],[367,31,292,37],[368,10,293,16,"noResolveJson"],[368,23,293,29],[368,25,293,31],[368,29,293,35],[369,10,294,16,"query"],[369,15,294,21],[369,17,294,23],[370,12,295,20,"page"],[370,16,295,24],[370,18,295,26],[370,19,295,27,"_b"],[370,21,295,29],[370,24,295,32],[370,25,295,33,"_a"],[370,27,295,35],[370,30,295,38,"params"],[370,36,295,44],[370,41,295,49],[370,45,295,53],[370,49,295,57,"params"],[370,55,295,63],[370,60,295,68],[370,65,295,73],[370,66,295,74],[370,69,295,77],[370,74,295,82],[370,75,295,83],[370,78,295,86,"params"],[370,84,295,92],[370,85,295,93,"page"],[370,89,295,97],[370,95,295,103],[370,99,295,107],[370,103,295,111,"_a"],[370,105,295,113],[370,110,295,118],[370,115,295,123],[370,116,295,124],[370,119,295,127],[370,124,295,132],[370,125,295,133],[370,128,295,136,"_a"],[370,130,295,138],[370,131,295,139,"toString"],[370,139,295,147],[370,140,295,148],[370,141,295,149],[370,147,295,155],[370,151,295,159],[370,155,295,163,"_b"],[370,157,295,165],[370,162,295,170],[370,167,295,175],[370,168,295,176],[370,171,295,179,"_b"],[370,173,295,181],[370,176,295,184],[370,178,295,186],[371,12,296,20,"per_page"],[371,20,296,28],[371,22,296,30],[371,23,296,31,"_d"],[371,25,296,33],[371,28,296,36],[371,29,296,37,"_c"],[371,31,296,39],[371,34,296,42,"params"],[371,40,296,48],[371,45,296,53],[371,49,296,57],[371,53,296,61,"params"],[371,59,296,67],[371,64,296,72],[371,69,296,77],[371,70,296,78],[371,73,296,81],[371,78,296,86],[371,79,296,87],[371,82,296,90,"params"],[371,88,296,96],[371,89,296,97,"perPage"],[371,96,296,104],[371,102,296,110],[371,106,296,114],[371,110,296,118,"_c"],[371,112,296,120],[371,117,296,125],[371,122,296,130],[371,123,296,131],[371,126,296,134],[371,131,296,139],[371,132,296,140],[371,135,296,143,"_c"],[371,137,296,145],[371,138,296,146,"toString"],[371,146,296,154],[371,147,296,155],[371,148,296,156],[371,154,296,162],[371,158,296,166],[371,162,296,170,"_d"],[371,164,296,172],[371,169,296,177],[371,174,296,182],[371,175,296,183],[371,178,296,186,"_d"],[371,180,296,188],[371,183,296,191],[372,10,297,16],[372,11,297,17],[373,10,298,16,"xform"],[373,15,298,21],[373,17,298,23,"_noResolveJsonResponse"],[373,26,298,45],[373,27,298,45,"_noResolveJsonResponse"],[374,8,299,12],[374,9,299,13],[374,10,299,14],[375,8,300,12],[375,12,300,16,"response"],[375,20,300,24],[375,21,300,25,"error"],[375,26,300,30],[375,28,301,16],[375,34,301,22,"response"],[375,42,301,30],[375,43,301,31,"error"],[375,48,301,36],[376,8,302,12],[376,14,302,18,"clients"],[376,21,302,25],[376,24,302,28],[376,30,302,34,"response"],[376,38,302,42],[376,39,302,43,"json"],[376,43,302,47],[376,44,302,48],[376,45,302,49],[377,8,303,12],[377,14,303,18,"total"],[377,19,303,23],[377,22,303,26],[377,23,303,27,"_e"],[377,25,303,29],[377,28,303,32,"response"],[377,36,303,40],[377,37,303,41,"headers"],[377,44,303,48],[377,45,303,49,"get"],[377,48,303,52],[377,49,303,53],[377,64,303,68],[377,65,303,69],[377,71,303,75],[377,75,303,79],[377,79,303,83,"_e"],[377,81,303,85],[377,86,303,90],[377,91,303,95],[377,92,303,96],[377,95,303,99,"_e"],[377,97,303,101],[377,100,303,104],[377,101,303,105],[378,8,304,12],[378,14,304,18,"links"],[378,19,304,23],[378,22,304,26],[378,23,304,27,"_g"],[378,25,304,29],[378,28,304,32],[378,29,304,33,"_f"],[378,31,304,35],[378,34,304,38,"response"],[378,42,304,46],[378,43,304,47,"headers"],[378,50,304,54],[378,51,304,55,"get"],[378,54,304,58],[378,55,304,59],[378,61,304,65],[378,62,304,66],[378,68,304,72],[378,72,304,76],[378,76,304,80,"_f"],[378,78,304,82],[378,83,304,87],[378,88,304,92],[378,89,304,93],[378,92,304,96],[378,97,304,101],[378,98,304,102],[378,101,304,105,"_f"],[378,103,304,107],[378,104,304,108,"split"],[378,109,304,113],[378,110,304,114],[378,113,304,117],[378,114,304,118],[378,120,304,124],[378,124,304,128],[378,128,304,132,"_g"],[378,130,304,134],[378,135,304,139],[378,140,304,144],[378,141,304,145],[378,144,304,148,"_g"],[378,146,304,150],[378,149,304,153],[378,151,304,155],[379,8,305,12],[379,12,305,16,"links"],[379,17,305,21],[379,18,305,22,"length"],[379,24,305,28],[379,27,305,31],[379,28,305,32],[379,30,305,34],[380,10,306,16,"links"],[380,15,306,21],[380,16,306,22,"forEach"],[380,23,306,29],[380,24,306,31,"link"],[380,28,306,35],[380,32,306,40],[381,12,307,20],[381,18,307,26,"page"],[381,22,307,30],[381,25,307,33,"parseInt"],[381,33,307,41],[381,34,307,42,"link"],[381,38,307,46],[381,39,307,47,"split"],[381,44,307,52],[381,45,307,53],[381,48,307,56],[381,49,307,57],[381,50,307,58],[381,51,307,59],[381,52,307,60],[381,53,307,61,"split"],[381,58,307,66],[381,59,307,67],[381,62,307,70],[381,63,307,71],[381,64,307,72],[381,65,307,73],[381,66,307,74],[381,67,307,75,"substring"],[381,76,307,84],[381,77,307,85],[381,78,307,86],[381,80,307,88],[381,81,307,89],[381,82,307,90],[381,83,307,91],[382,12,308,20],[382,18,308,26,"rel"],[382,21,308,29],[382,24,308,32,"JSON"],[382,28,308,36],[382,29,308,37,"parse"],[382,34,308,42],[382,35,308,43,"link"],[382,39,308,47],[382,40,308,48,"split"],[382,45,308,53],[382,46,308,54],[382,49,308,57],[382,50,308,58],[382,51,308,59],[382,52,308,60],[382,53,308,61],[382,54,308,62,"split"],[382,59,308,67],[382,60,308,68],[382,63,308,71],[382,64,308,72],[382,65,308,73],[382,66,308,74],[382,67,308,75],[382,68,308,76],[383,12,309,20,"pagination"],[383,22,309,30],[383,23,309,31],[383,26,309,34,"rel"],[383,29,309,37],[383,35,309,43],[383,36,309,44],[383,39,309,47,"page"],[383,43,309,51],[384,10,310,16],[384,11,310,17],[384,12,310,18],[385,10,311,16,"pagination"],[385,20,311,26],[385,21,311,27,"total"],[385,26,311,32],[385,29,311,35,"parseInt"],[385,37,311,43],[385,38,311,44,"total"],[385,43,311,49],[385,44,311,50],[386,8,312,12],[387,8,313,12],[387,15,313,19],[388,10,313,21,"data"],[388,14,313,25],[388,16,313,27,"Object"],[388,22,313,33],[388,23,313,34,"assign"],[388,29,313,40],[388,30,313,41,"Object"],[388,36,313,47],[388,37,313,48,"assign"],[388,43,313,54],[388,44,313,55],[388,45,313,56],[388,46,313,57],[388,48,313,59,"clients"],[388,55,313,66],[388,56,313,67],[388,58,313,69,"pagination"],[388,68,313,79],[388,69,313,80],[389,10,313,82,"error"],[389,15,313,87],[389,17,313,89],[390,8,313,94],[390,9,313,95],[391,6,314,8],[391,7,314,9],[391,8,315,8],[391,15,315,15,"error"],[391,20,315,20],[391,22,315,22],[392,8,316,12],[392,12,316,16],[392,16,316,16,"isAuthError"],[392,26,316,27],[392,27,316,27,"isAuthError"],[392,38,316,27],[392,40,316,28,"error"],[392,45,316,33],[392,46,316,34],[392,48,316,36],[393,10,317,16],[393,17,317,23],[394,12,317,25,"data"],[394,16,317,29],[394,18,317,31],[395,14,317,33,"clients"],[395,21,317,40],[395,23,317,42],[396,12,317,45],[396,13,317,46],[397,12,317,48,"error"],[398,10,317,54],[398,11,317,55],[399,8,318,12],[400,8,319,12],[400,14,319,18,"error"],[400,19,319,23],[401,6,320,8],[402,4,321,4],[403,4,322,4],[404,0,323,0],[405,0,324,0],[406,0,325,0],[407,0,326,0],[408,0,327,0],[409,4,328,4],[409,10,328,10,"_createOAuthClient"],[409,28,328,28,"_createOAuthClient"],[409,29,328,29,"params"],[409,35,328,35],[409,37,328,37],[410,6,329,8],[410,10,329,12],[411,8,330,12],[411,15,330,19],[411,21,330,25],[411,25,330,25,"_request"],[411,34,330,33],[411,35,330,33,"_request"],[411,43,330,33],[411,45,330,34],[411,49,330,38],[411,50,330,39,"fetch"],[411,55,330,44],[411,57,330,46],[411,63,330,52],[411,65,330,54],[411,68,330,57],[411,72,330,61],[411,73,330,62,"url"],[411,76,330,65],[411,98,330,87],[411,100,330,89],[412,10,331,16,"body"],[412,14,331,20],[412,16,331,22,"params"],[412,22,331,28],[413,10,332,16,"headers"],[413,17,332,23],[413,19,332,25],[413,23,332,29],[413,24,332,30,"headers"],[413,31,332,37],[414,10,333,16,"xform"],[414,15,333,21],[414,17,333,24,"client"],[414,23,333,30],[414,27,333,35],[415,12,334,20],[415,19,334,27],[416,14,334,29,"data"],[416,18,334,33],[416,20,334,35,"client"],[416,26,334,41],[417,14,334,43,"error"],[417,19,334,48],[417,21,334,50],[418,12,334,55],[418,13,334,56],[419,10,335,16],[420,8,336,12],[420,9,336,13],[420,10,336,14],[421,6,337,8],[421,7,337,9],[421,8,338,8],[421,15,338,15,"error"],[421,20,338,20],[421,22,338,22],[422,8,339,12],[422,12,339,16],[422,16,339,16,"isAuthError"],[422,26,339,27],[422,27,339,27,"isAuthError"],[422,38,339,27],[422,40,339,28,"error"],[422,45,339,33],[422,46,339,34],[422,48,339,36],[423,10,340,16],[423,17,340,23],[424,12,340,25,"data"],[424,16,340,29],[424,18,340,31],[424,22,340,35],[425,12,340,37,"error"],[426,10,340,43],[426,11,340,44],[427,8,341,12],[428,8,342,12],[428,14,342,18,"error"],[428,19,342,23],[429,6,343,8],[430,4,344,4],[431,4,345,4],[432,0,346,0],[433,0,347,0],[434,0,348,0],[435,0,349,0],[436,0,350,0],[437,4,351,4],[437,10,351,10,"_getOAuthClient"],[437,25,351,25,"_getOAuthClient"],[437,26,351,26,"clientId"],[437,34,351,34],[437,36,351,36],[438,6,352,8],[438,10,352,12],[439,8,353,12],[439,15,353,19],[439,21,353,25],[439,25,353,25,"_request"],[439,34,353,33],[439,35,353,33,"_request"],[439,43,353,33],[439,45,353,34],[439,49,353,38],[439,50,353,39,"fetch"],[439,55,353,44],[439,57,353,46],[439,62,353,51],[439,64,353,53],[439,67,353,56],[439,71,353,60],[439,72,353,61,"url"],[439,75,353,64],[439,99,353,88,"clientId"],[439,107,353,96],[439,109,353,98],[439,111,353,100],[440,10,354,16,"headers"],[440,17,354,23],[440,19,354,25],[440,23,354,29],[440,24,354,30,"headers"],[440,31,354,37],[441,10,355,16,"xform"],[441,15,355,21],[441,17,355,24,"client"],[441,23,355,30],[441,27,355,35],[442,12,356,20],[442,19,356,27],[443,14,356,29,"data"],[443,18,356,33],[443,20,356,35,"client"],[443,26,356,41],[444,14,356,43,"error"],[444,19,356,48],[444,21,356,50],[445,12,356,55],[445,13,356,56],[446,10,357,16],[447,8,358,12],[447,9,358,13],[447,10,358,14],[448,6,359,8],[448,7,359,9],[448,8,360,8],[448,15,360,15,"error"],[448,20,360,20],[448,22,360,22],[449,8,361,12],[449,12,361,16],[449,16,361,16,"isAuthError"],[449,26,361,27],[449,27,361,27,"isAuthError"],[449,38,361,27],[449,40,361,28,"error"],[449,45,361,33],[449,46,361,34],[449,48,361,36],[450,10,362,16],[450,17,362,23],[451,12,362,25,"data"],[451,16,362,29],[451,18,362,31],[451,22,362,35],[452,12,362,37,"error"],[453,10,362,43],[453,11,362,44],[454,8,363,12],[455,8,364,12],[455,14,364,18,"error"],[455,19,364,23],[456,6,365,8],[457,4,366,4],[458,4,367,4],[459,0,368,0],[460,0,369,0],[461,0,370,0],[462,0,371,0],[463,0,372,0],[464,4,373,4],[464,10,373,10,"_deleteOAuthClient"],[464,28,373,28,"_deleteOAuthClient"],[464,29,373,29,"clientId"],[464,37,373,37],[464,39,373,39],[465,6,374,8],[465,10,374,12],[466,8,375,12],[466,15,375,19],[466,21,375,25],[466,25,375,25,"_request"],[466,34,375,33],[466,35,375,33,"_request"],[466,43,375,33],[466,45,375,34],[466,49,375,38],[466,50,375,39,"fetch"],[466,55,375,44],[466,57,375,46],[466,65,375,54],[466,67,375,56],[466,70,375,59],[466,74,375,63],[466,75,375,64,"url"],[466,78,375,67],[466,102,375,91,"clientId"],[466,110,375,99],[466,112,375,101],[466,114,375,103],[467,10,376,16,"headers"],[467,17,376,23],[467,19,376,25],[467,23,376,29],[467,24,376,30,"headers"],[467,31,376,37],[468,10,377,16,"xform"],[468,15,377,21],[468,17,377,24,"client"],[468,23,377,30],[468,27,377,35],[469,12,378,20],[469,19,378,27],[470,14,378,29,"data"],[470,18,378,33],[470,20,378,35,"client"],[470,26,378,41],[471,14,378,43,"error"],[471,19,378,48],[471,21,378,50],[472,12,378,55],[472,13,378,56],[473,10,379,16],[474,8,380,12],[474,9,380,13],[474,10,380,14],[475,6,381,8],[475,7,381,9],[475,8,382,8],[475,15,382,15,"error"],[475,20,382,20],[475,22,382,22],[476,8,383,12],[476,12,383,16],[476,16,383,16,"isAuthError"],[476,26,383,27],[476,27,383,27,"isAuthError"],[476,38,383,27],[476,40,383,28,"error"],[476,45,383,33],[476,46,383,34],[476,48,383,36],[477,10,384,16],[477,17,384,23],[478,12,384,25,"data"],[478,16,384,29],[478,18,384,31],[478,22,384,35],[479,12,384,37,"error"],[480,10,384,43],[480,11,384,44],[481,8,385,12],[482,8,386,12],[482,14,386,18,"error"],[482,19,386,23],[483,6,387,8],[484,4,388,4],[485,4,389,4],[486,0,390,0],[487,0,391,0],[488,0,392,0],[489,0,393,0],[490,0,394,0],[491,4,395,4],[491,10,395,10,"_regenerateOAuthClientSecret"],[491,38,395,38,"_regenerateOAuthClientSecret"],[491,39,395,39,"clientId"],[491,47,395,47],[491,49,395,49],[492,6,396,8],[492,10,396,12],[493,8,397,12],[493,15,397,19],[493,21,397,25],[493,25,397,25,"_request"],[493,34,397,33],[493,35,397,33,"_request"],[493,43,397,33],[493,45,397,34],[493,49,397,38],[493,50,397,39,"fetch"],[493,55,397,44],[493,57,397,46],[493,63,397,52],[493,65,397,54],[493,68,397,57],[493,72,397,61],[493,73,397,62,"url"],[493,76,397,65],[493,100,397,89,"clientId"],[493,108,397,97],[493,128,397,117],[493,130,397,119],[494,10,398,16,"headers"],[494,17,398,23],[494,19,398,25],[494,23,398,29],[494,24,398,30,"headers"],[494,31,398,37],[495,10,399,16,"xform"],[495,15,399,21],[495,17,399,24,"client"],[495,23,399,30],[495,27,399,35],[496,12,400,20],[496,19,400,27],[497,14,400,29,"data"],[497,18,400,33],[497,20,400,35,"client"],[497,26,400,41],[498,14,400,43,"error"],[498,19,400,48],[498,21,400,50],[499,12,400,55],[499,13,400,56],[500,10,401,16],[501,8,402,12],[501,9,402,13],[501,10,402,14],[502,6,403,8],[502,7,403,9],[502,8,404,8],[502,15,404,15,"error"],[502,20,404,20],[502,22,404,22],[503,8,405,12],[503,12,405,16],[503,16,405,16,"isAuthError"],[503,26,405,27],[503,27,405,27,"isAuthError"],[503,38,405,27],[503,40,405,28,"error"],[503,45,405,33],[503,46,405,34],[503,48,405,36],[504,10,406,16],[504,17,406,23],[505,12,406,25,"data"],[505,16,406,29],[505,18,406,31],[505,22,406,35],[506,12,406,37,"error"],[507,10,406,43],[507,11,406,44],[508,8,407,12],[509,8,408,12],[509,14,408,18,"error"],[509,19,408,23],[510,6,409,8],[511,4,410,4],[512,2,411,0],[513,0,411,1],[513,3]],"functionMap":{"names":["<global>","<anonymous>","GoTrueAdminApi","constructor","signOut","inviteUserByEmail","generateLink","createUser","listUsers","links.forEach$argument_0","getUserById","updateUserById","deleteUser","_listFactors","_request$argument_3.xform","_deleteFactor","_listOAuthClients","_createOAuthClient","_getOAuthClient","_deleteOAuthClient","_regenerateOAuthClientSecret"],"mappings":"AAA,sCC;CDU;eEK;ICC;KDe;IEM;KFkB;IGM;KHe;IIQ;KJ4B;IKM;KLc;IMO;8BCmB;iBDI;KNW;IQQ;KRc;ISQ;KTe;IUU;KViB;IWC;uBCK;iBDE;KXU;IaC;Kbe;IcO;8BPmB;iBOI;KdW;IeO;uBHK;iBGE;KfS;IgBO;uBJI;iBIE;KhBS;IiBO;uBLI;iBKE;KjBS;IkBO;uBNI;iBME;KlBS;CFC"},"hasCjsExports":false},"type":"js/module"}]}