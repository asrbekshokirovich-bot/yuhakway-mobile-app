{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":20,"index":1472},"end":{"line":24,"column":42,"index":1494}}],"key":"8aRCc7KtRb910uq7kUp1PxOPUfw=","exportNames":["*"],"imports":1}},{"name":"./errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":17,"index":1513},"end":{"line":25,"column":36,"index":1532}}],"key":"GlkDztMSsNRYmp31iO+V/Albin8=","exportNames":["*"],"imports":1}},{"name":"./helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":18,"index":1552},"end":{"line":26,"column":38,"index":1572}}],"key":"f1qS3jT0PALHpwfgOy1Ia0GaJzk=","exportNames":["*"],"imports":1}},{"name":"./webauthn.errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":26,"index":1600},"end":{"line":27,"column":54,"index":1628}}],"key":"Y47Pher0qG9OS81lddHOxsGqyeo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WebAuthnApi = exports.DEFAULT_REQUEST_OPTIONS = exports.DEFAULT_CREATION_OPTIONS = exports.webAuthnAbortService = exports.WebAuthnAbortService = exports.identifyAuthenticationError = exports.identifyRegistrationError = exports.isWebAuthnError = exports.WebAuthnError = void 0;\n  exports.deserializeCredentialCreationOptions = deserializeCredentialCreationOptions;\n  exports.deserializeCredentialRequestOptions = deserializeCredentialRequestOptions;\n  exports.serializeCredentialCreationResponse = serializeCredentialCreationResponse;\n  exports.serializeCredentialRequestResponse = serializeCredentialRequestResponse;\n  exports.isValidDomain = isValidDomain;\n  exports.createCredential = createCredential;\n  exports.getCredential = getCredential;\n  exports.mergeCredentialCreationOptions = mergeCredentialCreationOptions;\n  exports.mergeCredentialRequestOptions = mergeCredentialRequestOptions;\n  var base64url_1 = require(_dependencyMap[3], \"./base64url\");\n  var errors_1 = require(_dependencyMap[4], \"./errors\");\n  var helpers_1 = require(_dependencyMap[5], \"./helpers\");\n  var webauthn_errors_1 = require(_dependencyMap[6], \"./webauthn.errors\");\n  Object.defineProperty(exports, \"identifyAuthenticationError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.identifyAuthenticationError;\n    }\n  });\n  Object.defineProperty(exports, \"identifyRegistrationError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.identifyRegistrationError;\n    }\n  });\n  Object.defineProperty(exports, \"isWebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.isWebAuthnError;\n    }\n  });\n  Object.defineProperty(exports, \"WebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.WebAuthnError;\n    }\n  });\n  /**\n   * WebAuthn abort service to manage ceremony cancellation.\n   * Ensures only one WebAuthn ceremony is active at a time to prevent \"operation already in progress\" errors.\n   *\n   * @experimental This class is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/#sctn-automation-webdriver-capability W3C WebAuthn Spec - Aborting Ceremonies}\n   */\n  var WebAuthnAbortService = /*#__PURE__*/function () {\n    function WebAuthnAbortService() {\n      _classCallCheck(this, WebAuthnAbortService);\n    }\n    return _createClass(WebAuthnAbortService, [{\n      key: \"createNewAbortSignal\",\n      value:\n      /**\n       * Create an abort signal for a new WebAuthn operation.\n       * Automatically cancels any existing operation.\n       *\n       * @returns {AbortSignal} Signal to pass to navigator.credentials.create() or .get()\n       * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal MDN - AbortSignal}\n       */\n      function createNewAbortSignal() {\n        // Abort any existing calls to navigator.credentials.create() or navigator.credentials.get()\n        if (this.controller) {\n          var abortError = new Error('Cancelling existing WebAuthn API call for new one');\n          abortError.name = 'AbortError';\n          this.controller.abort(abortError);\n        }\n        var newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n      }\n      /**\n       * Manually cancel the current WebAuthn operation.\n       * Useful for cleaning up when user cancels or navigates away.\n       *\n       * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort MDN - AbortController.abort}\n       */\n    }, {\n      key: \"cancelCeremony\",\n      value: function cancelCeremony() {\n        if (this.controller) {\n          var abortError = new Error('Manually cancelling existing WebAuthn API call');\n          abortError.name = 'AbortError';\n          this.controller.abort(abortError);\n          this.controller = undefined;\n        }\n      }\n    }]);\n  }();\n  exports.WebAuthnAbortService = WebAuthnAbortService;\n  /**\n   * Singleton instance to ensure only one WebAuthn ceremony is active at a time.\n   * This prevents \"operation already in progress\" errors when retrying WebAuthn operations.\n   *\n   * @experimental This instance is experimental and may change in future releases\n   */\n  exports.webAuthnAbortService = new WebAuthnAbortService();\n  /**\n   * Convert base64url encoded strings in WebAuthn credential creation options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseCreationOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialCreationOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Options ready for navigator.credentials.create()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseCreationOptionsFromJSON W3C WebAuthn Spec - parseCreationOptionsFromJSON}\n   */\n  function deserializeCredentialCreationOptions(options) {\n    if (!options) {\n      throw new Error('Credential creation options are required');\n    }\n    // Check if the native parseCreationOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseCreationOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseCreationOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseCreationOptionsFromJSON(/** we assert the options here as typescript still doesn't know about future webauthn types */\n      options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    var challengeStr = options.challenge,\n      userOpts = options.user,\n      excludeCredentials = options.excludeCredentials,\n      restOptions = __rest(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"user\", \"excludeCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    var challenge = (0, base64url_1.base64UrlToUint8Array)(challengeStr).buffer;\n    // Convert user.id from base64url to ArrayBuffer\n    var user = Object.assign(Object.assign({}, userOpts), {\n      id: (0, base64url_1.base64UrlToUint8Array)(userOpts.id).buffer\n    });\n    // Build the result object\n    var result = Object.assign(Object.assign({}, restOptions), {\n      challenge,\n      user\n    });\n    // Only add excludeCredentials if it exists\n    if (excludeCredentials && excludeCredentials.length > 0) {\n      result.excludeCredentials = new Array(excludeCredentials.length);\n      for (var i = 0; i < excludeCredentials.length; i++) {\n        var cred = excludeCredentials[i];\n        result.excludeCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, base64url_1.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert base64url encoded strings in WebAuthn credential request options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseRequestOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialRequestOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Options ready for navigator.credentials.get()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseRequestOptionsFromJSON W3C WebAuthn Spec - parseRequestOptionsFromJSON}\n   */\n  function deserializeCredentialRequestOptions(options) {\n    if (!options) {\n      throw new Error('Credential request options are required');\n    }\n    // Check if the native parseRequestOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseRequestOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseRequestOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseRequestOptionsFromJSON(options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    var challengeStr = options.challenge,\n      allowCredentials = options.allowCredentials,\n      restOptions = __rest(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"allowCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    var challenge = (0, base64url_1.base64UrlToUint8Array)(challengeStr).buffer;\n    // Build the result object\n    var result = Object.assign(Object.assign({}, restOptions), {\n      challenge\n    });\n    // Only add allowCredentials if it exists\n    if (allowCredentials && allowCredentials.length > 0) {\n      result.allowCredentials = new Array(allowCredentials.length);\n      for (var i = 0; i < allowCredentials.length; i++) {\n        var cred = allowCredentials[i];\n        result.allowCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, base64url_1.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert a registration/enrollment credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {RegistrationCredential} credential - Credential from navigator.credentials.create()\n   * @returns {RegistrationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialCreationResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    var credentialWithAttachment = credential;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      response: {\n        attestationObject: (0, base64url_1.bytesToBase64URL)(new Uint8Array(credential.response.attestationObject)),\n        clientDataJSON: (0, base64url_1.bytesToBase64URL)(new Uint8Array(credential.response.clientDataJSON))\n      },\n      type: 'public-key',\n      clientExtensionResults: credential.getClientExtensionResults(),\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * Convert an authentication/verification credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {AuthenticationCredential} credential - Credential from navigator.credentials.get()\n   * @returns {AuthenticationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialRequestResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    // Fallback to manual conversion for browsers that don't support toJSON\n    // Access authenticatorAttachment via type assertion to handle TypeScript version differences\n    // @simplewebauthn/types includes this property but base TypeScript 4.7.4 doesn't\n    var credentialWithAttachment = credential;\n    var clientExtensionResults = credential.getClientExtensionResults();\n    var assertionResponse = credential.response;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      // W3C spec expects rawId to match id for JSON format\n      response: {\n        authenticatorData: (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.authenticatorData)),\n        clientDataJSON: (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.clientDataJSON)),\n        signature: (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.signature)),\n        userHandle: assertionResponse.userHandle ? (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.userHandle)) : undefined\n      },\n      type: 'public-key',\n      clientExtensionResults,\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * A simple test to determine if a hostname is a properly-formatted domain name.\n   * Considers localhost valid for development environments.\n   *\n   * A \"valid domain\" is defined here: https://url.spec.whatwg.org/#valid-domain\n   *\n   * Regex sourced from here:\n   * https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n   *\n   * @param {string} hostname - The hostname to validate\n   * @returns {boolean} True if valid domain or localhost\n   * @see {@link https://url.spec.whatwg.org/#valid-domain WHATWG URL Spec - Valid Domain}\n   */\n  function isValidDomain(hostname) {\n    return (\n      // Consider localhost valid as well since it's okay wrt Secure Contexts\n      hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname)\n    );\n  }\n  /**\n   * Determine if the browser is capable of WebAuthn.\n   * Checks for necessary Web APIs: PublicKeyCredential and Credential Management.\n   *\n   * @returns {boolean} True if browser supports WebAuthn\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential#browser_compatibility MDN - PublicKeyCredential Browser Compatibility}\n   */\n  function browserSupportsWebAuthn() {\n    var _a, _b;\n    return !!((0, helpers_1.isBrowser)() && 'PublicKeyCredential' in window && window.PublicKeyCredential && 'credentials' in navigator && typeof ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _a === void 0 ? void 0 : _a.create) === 'function' && typeof ((_b = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _b === void 0 ? void 0 : _b.get) === 'function');\n  }\n  /**\n   * Create a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.create() with error handling.\n   *\n   * @param {CredentialCreationOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<RegistrationCredential, WebAuthnError>>} Created credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create MDN - credentials.create}\n   */\n  function createCredential(_x) {\n    return _createCredential.apply(this, arguments);\n  }\n  /**\n   * Get a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.get() with error handling.\n   *\n   * @param {CredentialRequestOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<AuthenticationCredential, WebAuthnError>>} Retrieved credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get MDN - credentials.get}\n   */\n  function _createCredential() {\n    _createCredential = _asyncToGenerator(function* (options) {\n      try {\n        var response = yield navigator.credentials.create(/** we assert the type here until typescript types are updated */\n        options);\n        if (!response) {\n          return {\n            data: null,\n            error: new webauthn_errors_1.WebAuthnUnknownError('Empty credential response', response)\n          };\n        }\n        if (!(response instanceof PublicKeyCredential)) {\n          return {\n            data: null,\n            error: new webauthn_errors_1.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n          };\n        }\n        return {\n          data: response,\n          error: null\n        };\n      } catch (err) {\n        return {\n          data: null,\n          error: (0, webauthn_errors_1.identifyRegistrationError)({\n            error: err,\n            options\n          })\n        };\n      }\n    });\n    return _createCredential.apply(this, arguments);\n  }\n  function getCredential(_x2) {\n    return _getCredential.apply(this, arguments);\n  }\n  function _getCredential() {\n    _getCredential = _asyncToGenerator(function* (options) {\n      try {\n        var response = yield navigator.credentials.get(/** we assert the type here until typescript types are updated */\n        options);\n        if (!response) {\n          return {\n            data: null,\n            error: new webauthn_errors_1.WebAuthnUnknownError('Empty credential response', response)\n          };\n        }\n        if (!(response instanceof PublicKeyCredential)) {\n          return {\n            data: null,\n            error: new webauthn_errors_1.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n          };\n        }\n        return {\n          data: response,\n          error: null\n        };\n      } catch (err) {\n        return {\n          data: null,\n          error: (0, webauthn_errors_1.identifyAuthenticationError)({\n            error: err,\n            options\n          })\n        };\n      }\n    });\n    return _getCredential.apply(this, arguments);\n  }\n  exports.DEFAULT_CREATION_OPTIONS = {\n    hints: ['security-key'],\n    authenticatorSelection: {\n      authenticatorAttachment: 'cross-platform',\n      requireResidentKey: false,\n      /** set to preferred because older yubikeys don't have PIN/Biometric */\n      userVerification: 'preferred',\n      residentKey: 'discouraged'\n    },\n    attestation: 'none'\n  };\n  exports.DEFAULT_REQUEST_OPTIONS = {\n    /** set to preferred because older yubikeys don't have PIN/Biometric */\n    userVerification: 'preferred',\n    hints: ['security-key']\n  };\n  function deepMerge() {\n    var isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n    var isArrayBufferLike = val => val instanceof ArrayBuffer || ArrayBuffer.isView(val);\n    var result = {};\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n    for (var source of sources) {\n      if (!source) continue;\n      for (var key in source) {\n        var value = source[key];\n        if (value === undefined) continue;\n        if (Array.isArray(value)) {\n          // preserve array reference, including unions like AuthenticatorTransport[]\n          result[key] = value;\n        } else if (isArrayBufferLike(value)) {\n          result[key] = value;\n        } else if (isObject(value)) {\n          var existing = result[key];\n          if (isObject(existing)) {\n            result[key] = deepMerge(existing, value);\n          } else {\n            result[key] = deepMerge(value);\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Merges WebAuthn credential creation options with overrides.\n   * Sets sensible defaults for authenticator selection and extensions.\n   *\n   * @param {PublicKeyCredentialCreationOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Optional overrides to apply\n   * @param {string} friendlyName - Optional friendly name for the credential\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Merged credential creation options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-authenticatorselectioncriteria W3C WebAuthn Spec - AuthenticatorSelectionCriteria}\n   */\n  function mergeCredentialCreationOptions(baseOptions, overrides) {\n    return deepMerge(exports.DEFAULT_CREATION_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * Merges WebAuthn credential request options with overrides.\n   * Sets sensible defaults for user verification and hints.\n   *\n   * @param {PublicKeyCredentialRequestOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Optional overrides to apply\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Merged credential request options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-publickeycredentialrequestoptions W3C WebAuthn Spec - PublicKeyCredentialRequestOptions}\n   */\n  function mergeCredentialRequestOptions(baseOptions, overrides) {\n    return deepMerge(exports.DEFAULT_REQUEST_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * WebAuthn API wrapper for Supabase Auth.\n   * Provides methods for enrolling, challenging, verifying, authenticating, and registering WebAuthn credentials.\n   *\n   * @experimental This API is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/ W3C WebAuthn Specification}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API MDN - Web Authentication API}\n   */\n  var WebAuthnApi = /*#__PURE__*/function () {\n    function WebAuthnApi(client) {\n      _classCallCheck(this, WebAuthnApi);\n      this.client = client;\n      // Bind all methods so they can be destructured\n      this.enroll = this._enroll.bind(this);\n      this.challenge = this._challenge.bind(this);\n      this.verify = this._verify.bind(this);\n      this.authenticate = this._authenticate.bind(this);\n      this.register = this._register.bind(this);\n    }\n    /**\n     * Enroll a new WebAuthn factor.\n     * Creates an unverified WebAuthn factor that must be verified with a credential.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Omit<MFAEnrollWebauthnParams, 'factorType'>} params - Enrollment parameters (friendlyName required)\n     * @returns {Promise<AuthMFAEnrollWebauthnResponse>} Enrolled factor details or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n     */\n    return _createClass(WebAuthnApi, [{\n      key: \"_enroll\",\n      value: (function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          return this.client.mfa.enroll(Object.assign(Object.assign({}, params), {\n            factorType: 'webauthn'\n          }));\n        });\n        function _enroll(_x3) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n      /**\n       * Challenge for WebAuthn credential creation or authentication.\n       * Combines server challenge with browser credential operations.\n       * Handles both registration (create) and authentication (request) flows.\n       *\n       * @experimental This method is experimental and may change in future releases\n       * @param {MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal }} params - Challenge parameters including factorId\n       * @param {Object} overrides - Allows you to override the parameters passed to navigator.credentials\n       * @param {PublicKeyCredentialCreationOptionsFuture} overrides.create - Override options for credential creation\n       * @param {PublicKeyCredentialRequestOptionsFuture} overrides.request - Override options for credential request\n       * @returns {Promise<RequestResult>} Challenge response with credential or error\n       * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}\n       * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying Assertion}\n       */\n      )\n    }, {\n      key: \"_challenge\",\n      value: (function () {\n        var _challenge2 = _asyncToGenerator(function* (_ref, overrides) {\n          var factorId = _ref.factorId,\n            webauthn = _ref.webauthn,\n            friendlyName = _ref.friendlyName,\n            signal = _ref.signal;\n          try {\n            // Get challenge from server using the client's MFA methods\n            var _yield$this$client$mf = yield this.client.mfa.challenge({\n                factorId,\n                webauthn\n              }),\n              challengeResponse = _yield$this$client$mf.data,\n              challengeError = _yield$this$client$mf.error;\n            if (!challengeResponse) {\n              return {\n                data: null,\n                error: challengeError\n              };\n            }\n            var abortSignal = signal !== null && signal !== void 0 ? signal : exports.webAuthnAbortService.createNewAbortSignal();\n            /** webauthn will fail if either of the name/displayname are blank */\n            if (challengeResponse.webauthn.type === 'create') {\n              var user = challengeResponse.webauthn.credential_options.publicKey.user;\n              if (!user.name) {\n                user.name = `${user.id}:${friendlyName}`;\n              }\n              if (!user.displayName) {\n                user.displayName = user.name;\n              }\n            }\n            switch (challengeResponse.webauthn.type) {\n              case 'create':\n                {\n                  var options = mergeCredentialCreationOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.create);\n                  var _yield$createCredenti = yield createCredential({\n                      publicKey: options,\n                      signal: abortSignal\n                    }),\n                    data = _yield$createCredenti.data,\n                    error = _yield$createCredenti.error;\n                  if (data) {\n                    return {\n                      data: {\n                        factorId,\n                        challengeId: challengeResponse.id,\n                        webauthn: {\n                          type: challengeResponse.webauthn.type,\n                          credential_response: data\n                        }\n                      },\n                      error: null\n                    };\n                  }\n                  return {\n                    data: null,\n                    error\n                  };\n                }\n              case 'request':\n                {\n                  var _options = mergeCredentialRequestOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.request);\n                  var _yield$getCredential = yield getCredential(Object.assign(Object.assign({}, challengeResponse.webauthn.credential_options), {\n                      publicKey: _options,\n                      signal: abortSignal\n                    })),\n                    _data = _yield$getCredential.data,\n                    _error = _yield$getCredential.error;\n                  if (_data) {\n                    return {\n                      data: {\n                        factorId,\n                        challengeId: challengeResponse.id,\n                        webauthn: {\n                          type: challengeResponse.webauthn.type,\n                          credential_response: _data\n                        }\n                      },\n                      error: null\n                    };\n                  }\n                  return {\n                    data: null,\n                    error: _error\n                  };\n                }\n            }\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            return {\n              data: null,\n              error: new errors_1.AuthUnknownError('Unexpected error in challenge', error)\n            };\n          }\n        });\n        function _challenge(_x4, _x5) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * Verify a WebAuthn credential with the server.\n       * Completes the WebAuthn ceremony by sending the credential to the server for verification.\n       *\n       * @experimental This method is experimental and may change in future releases\n       * @param {Object} params - Verification parameters\n       * @param {string} params.challengeId - ID of the challenge being verified\n       * @param {string} params.factorId - ID of the WebAuthn factor\n       * @param {MFAVerifyWebauthnParams<T>['webauthn']} params.webauthn - WebAuthn credential response\n       * @returns {Promise<AuthMFAVerifyResponse>} Verification result with session or error\n       * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}\n       * */\n      )\n    }, {\n      key: \"_verify\",\n      value: (function () {\n        var _verify2 = _asyncToGenerator(function* (_ref2) {\n          var challengeId = _ref2.challengeId,\n            factorId = _ref2.factorId,\n            webauthn = _ref2.webauthn;\n          return this.client.mfa.verify({\n            factorId,\n            challengeId,\n            webauthn: webauthn\n          });\n        });\n        function _verify(_x6) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n      /**\n       * Complete WebAuthn authentication flow.\n       * Performs challenge and verification in a single operation for existing credentials.\n       *\n       * @experimental This method is experimental and may change in future releases\n       * @param {Object} params - Authentication parameters\n       * @param {string} params.factorId - ID of the WebAuthn factor to authenticate with\n       * @param {Object} params.webauthn - WebAuthn configuration\n       * @param {string} params.webauthn.rpId - Relying Party ID (defaults to current hostname)\n       * @param {string[]} params.webauthn.rpOrigins - Allowed origins (defaults to current origin)\n       * @param {AbortSignal} params.webauthn.signal - Optional abort signal\n       * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Override options for navigator.credentials.get\n       * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Authentication result\n       * @see {@link https://w3c.github.io/webauthn/#sctn-authentication W3C WebAuthn Spec - Authentication Ceremony}\n       * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions MDN - PublicKeyCredentialRequestOptions}\n       */\n      )\n    }, {\n      key: \"_authenticate\",\n      value: (function () {\n        var _authenticate2 = _asyncToGenerator(function* (_ref3, overrides) {\n          var factorId = _ref3.factorId,\n            _ref3$webauthn = _ref3.webauthn,\n            _ref3$webauthn$rpId = _ref3$webauthn.rpId,\n            rpId = _ref3$webauthn$rpId === void 0 ? typeof window !== 'undefined' ? window.location.hostname : undefined : _ref3$webauthn$rpId,\n            _ref3$webauthn$rpOrig = _ref3$webauthn.rpOrigins,\n            rpOrigins = _ref3$webauthn$rpOrig === void 0 ? typeof window !== 'undefined' ? [window.location.origin] : undefined : _ref3$webauthn$rpOrig,\n            signal = _ref3$webauthn.signal;\n          if (!rpId) {\n            return {\n              data: null,\n              error: new errors_1.AuthError('rpId is required for WebAuthn authentication')\n            };\n          }\n          try {\n            if (!browserSupportsWebAuthn()) {\n              return {\n                data: null,\n                error: new errors_1.AuthUnknownError('Browser does not support WebAuthn', null)\n              };\n            }\n            // Get challenge and credential\n            var _yield$this$challenge = yield this.challenge({\n                factorId,\n                webauthn: {\n                  rpId,\n                  rpOrigins\n                },\n                signal\n              }, {\n                request: overrides\n              }),\n              challengeResponse = _yield$this$challenge.data,\n              challengeError = _yield$this$challenge.error;\n            if (!challengeResponse) {\n              return {\n                data: null,\n                error: challengeError\n              };\n            }\n            var webauthn = challengeResponse.webauthn;\n            // Verify credential\n            return this._verify({\n              factorId,\n              challengeId: challengeResponse.challengeId,\n              webauthn: {\n                type: webauthn.type,\n                rpId,\n                rpOrigins,\n                credential_response: webauthn.credential_response\n              }\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            return {\n              data: null,\n              error: new errors_1.AuthUnknownError('Unexpected error in authenticate', error)\n            };\n          }\n        });\n        function _authenticate(_x7, _x8) {\n          return _authenticate2.apply(this, arguments);\n        }\n        return _authenticate;\n      }()\n      /**\n       * Complete WebAuthn registration flow.\n       * Performs enrollment, challenge, and verification in a single operation for new credentials.\n       *\n       * @experimental This method is experimental and may change in future releases\n       * @param {Object} params - Registration parameters\n       * @param {string} params.friendlyName - User-friendly name for the credential\n       * @param {string} params.rpId - Relying Party ID (defaults to current hostname)\n       * @param {string[]} params.rpOrigins - Allowed origins (defaults to current origin)\n       * @param {AbortSignal} params.signal - Optional abort signal\n       * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Override options for navigator.credentials.create\n       * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Registration result\n       * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registration Ceremony}\n       * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions MDN - PublicKeyCredentialCreationOptions}\n       */\n      )\n    }, {\n      key: \"_register\",\n      value: (function () {\n        var _register2 = _asyncToGenerator(function* (_ref4, overrides) {\n          var friendlyName = _ref4.friendlyName,\n            _ref4$rpId = _ref4.rpId,\n            rpId = _ref4$rpId === void 0 ? typeof window !== 'undefined' ? window.location.hostname : undefined : _ref4$rpId,\n            _ref4$rpOrigins = _ref4.rpOrigins,\n            rpOrigins = _ref4$rpOrigins === void 0 ? typeof window !== 'undefined' ? [window.location.origin] : undefined : _ref4$rpOrigins,\n            signal = _ref4.signal;\n          if (!rpId) {\n            return {\n              data: null,\n              error: new errors_1.AuthError('rpId is required for WebAuthn registration')\n            };\n          }\n          try {\n            if (!browserSupportsWebAuthn()) {\n              return {\n                data: null,\n                error: new errors_1.AuthUnknownError('Browser does not support WebAuthn', null)\n              };\n            }\n            // Enroll factor\n            var _yield$this$_enroll = yield this._enroll({\n                friendlyName\n              }),\n              factor = _yield$this$_enroll.data,\n              enrollError = _yield$this$_enroll.error;\n            if (!factor) {\n              yield this.client.mfa.listFactors().then(factors => {\n                var _a;\n                return (_a = factors.data) === null || _a === void 0 ? void 0 : _a.all.find(v => v.factor_type === 'webauthn' && v.friendly_name === friendlyName && v.status !== 'unverified');\n              }).then(factor => factor ? this.client.mfa.unenroll({\n                factorId: factor === null || factor === void 0 ? void 0 : factor.id\n              }) : void 0);\n              return {\n                data: null,\n                error: enrollError\n              };\n            }\n            // Get challenge and create credential\n            var _yield$this$_challeng = yield this._challenge({\n                factorId: factor.id,\n                friendlyName: factor.friendly_name,\n                webauthn: {\n                  rpId,\n                  rpOrigins\n                },\n                signal\n              }, {\n                create: overrides\n              }),\n              challengeResponse = _yield$this$_challeng.data,\n              challengeError = _yield$this$_challeng.error;\n            if (!challengeResponse) {\n              return {\n                data: null,\n                error: challengeError\n              };\n            }\n            return this._verify({\n              factorId: factor.id,\n              challengeId: challengeResponse.challengeId,\n              webauthn: {\n                rpId,\n                rpOrigins,\n                type: challengeResponse.webauthn.type,\n                credential_response: challengeResponse.webauthn.credential_response\n              }\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            return {\n              data: null,\n              error: new errors_1.AuthUnknownError('Unexpected error in register', error)\n            };\n          }\n        });\n        function _register(_x9, _x0) {\n          return _register2.apply(this, arguments);\n        }\n        return _register;\n      }())\n    }]);\n  }();\n  exports.WebAuthnApi = WebAuthnApi;\n});","lineCount":865,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[4,96,1,13,"default"],[4,103,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,2,0],[7,6,2,4,"__rest"],[7,12,2,10],[7,15,2,14],[7,19,2,18],[7,23,2,22],[7,27,2,26],[7,28,2,27,"__rest"],[7,34,2,33],[7,38,2,38],[7,48,2,48,"s"],[7,49,2,49],[7,51,2,51,"e"],[7,52,2,52],[7,54,2,54],[8,4,3,4],[8,8,3,8,"t"],[8,9,3,9],[8,12,3,12],[8,13,3,13],[8,14,3,14],[9,4,4,4],[9,9,4,9],[9,13,4,13,"p"],[9,14,4,14],[9,18,4,18,"s"],[9,19,4,19],[9,21,4,21],[9,25,4,25,"Object"],[9,31,4,31],[9,32,4,32,"prototype"],[9,41,4,41],[9,42,4,42,"hasOwnProperty"],[9,56,4,56],[9,57,4,57,"call"],[9,61,4,61],[9,62,4,62,"s"],[9,63,4,63],[9,65,4,65,"p"],[9,66,4,66],[9,67,4,67],[9,71,4,71,"e"],[9,72,4,72],[9,73,4,73,"indexOf"],[9,80,4,80],[9,81,4,81,"p"],[9,82,4,82],[9,83,4,83],[9,86,4,86],[9,87,4,87],[9,89,5,8,"t"],[9,90,5,9],[9,91,5,10,"p"],[9,92,5,11],[9,93,5,12],[9,96,5,15,"s"],[9,97,5,16],[9,98,5,17,"p"],[9,99,5,18],[9,100,5,19],[10,4,6,4],[10,8,6,8,"s"],[10,9,6,9],[10,13,6,13],[10,17,6,17],[10,21,6,21],[10,28,6,28,"Object"],[10,34,6,34],[10,35,6,35,"getOwnPropertySymbols"],[10,56,6,56],[10,61,6,61],[10,71,6,71],[10,73,7,8],[10,78,7,13],[10,82,7,17,"i"],[10,83,7,18],[10,86,7,21],[10,87,7,22],[10,89,7,24,"p"],[10,90,7,25],[10,93,7,28,"Object"],[10,99,7,34],[10,100,7,35,"getOwnPropertySymbols"],[10,121,7,56],[10,122,7,57,"s"],[10,123,7,58],[10,124,7,59],[10,126,7,61,"i"],[10,127,7,62],[10,130,7,65,"p"],[10,131,7,66],[10,132,7,67,"length"],[10,138,7,73],[10,140,7,75,"i"],[10,141,7,76],[10,143,7,78],[10,145,7,80],[11,6,8,12],[11,10,8,16,"e"],[11,11,8,17],[11,12,8,18,"indexOf"],[11,19,8,25],[11,20,8,26,"p"],[11,21,8,27],[11,22,8,28,"i"],[11,23,8,29],[11,24,8,30],[11,25,8,31],[11,28,8,34],[11,29,8,35],[11,33,8,39,"Object"],[11,39,8,45],[11,40,8,46,"prototype"],[11,49,8,55],[11,50,8,56,"propertyIsEnumerable"],[11,70,8,76],[11,71,8,77,"call"],[11,75,8,81],[11,76,8,82,"s"],[11,77,8,83],[11,79,8,85,"p"],[11,80,8,86],[11,81,8,87,"i"],[11,82,8,88],[11,83,8,89],[11,84,8,90],[11,86,9,16,"t"],[11,87,9,17],[11,88,9,18,"p"],[11,89,9,19],[11,90,9,20,"i"],[11,91,9,21],[11,92,9,22],[11,93,9,23],[11,96,9,26,"s"],[11,97,9,27],[11,98,9,28,"p"],[11,99,9,29],[11,100,9,30,"i"],[11,101,9,31],[11,102,9,32],[11,103,9,33],[12,4,10,8],[13,4,11,4],[13,11,11,11,"t"],[13,12,11,12],[14,2,12,0],[14,3,12,1],[15,2,13,0,"Object"],[15,8,13,6],[15,9,13,7,"defineProperty"],[15,23,13,21],[15,24,13,22,"exports"],[15,31,13,29],[15,33,13,31],[15,45,13,43],[15,47,13,45],[16,4,13,47,"value"],[16,9,13,52],[16,11,13,54],[17,2,13,59],[17,3,13,60],[17,4,13,61],[18,2,14,0,"exports"],[18,9,14,7],[18,10,14,8,"WebAuthnApi"],[18,21,14,19],[18,24,14,22,"exports"],[18,31,14,29],[18,32,14,30,"DEFAULT_REQUEST_OPTIONS"],[18,55,14,53],[18,58,14,56,"exports"],[18,65,14,63],[18,66,14,64,"DEFAULT_CREATION_OPTIONS"],[18,90,14,88],[18,93,14,91,"exports"],[18,100,14,98],[18,101,14,99,"webAuthnAbortService"],[18,121,14,119],[18,124,14,122,"exports"],[18,131,14,129],[18,132,14,130,"WebAuthnAbortService"],[18,152,14,150],[18,155,14,153,"exports"],[18,162,14,160],[18,163,14,161,"identifyAuthenticationError"],[18,190,14,188],[18,193,14,191,"exports"],[18,200,14,198],[18,201,14,199,"identifyRegistrationError"],[18,226,14,224],[18,229,14,227,"exports"],[18,236,14,234],[18,237,14,235,"isWebAuthnError"],[18,252,14,250],[18,255,14,253,"exports"],[18,262,14,260],[18,263,14,261,"WebAuthnError"],[18,276,14,274],[18,279,14,277],[18,284,14,282],[18,285,14,283],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"deserializeCredentialCreationOptions"],[19,46,15,44],[19,49,15,47,"deserializeCredentialCreationOptions"],[19,85,15,83],[20,2,16,0,"exports"],[20,9,16,7],[20,10,16,8,"deserializeCredentialRequestOptions"],[20,45,16,43],[20,48,16,46,"deserializeCredentialRequestOptions"],[20,83,16,81],[21,2,17,0,"exports"],[21,9,17,7],[21,10,17,8,"serializeCredentialCreationResponse"],[21,45,17,43],[21,48,17,46,"serializeCredentialCreationResponse"],[21,83,17,81],[22,2,18,0,"exports"],[22,9,18,7],[22,10,18,8,"serializeCredentialRequestResponse"],[22,44,18,42],[22,47,18,45,"serializeCredentialRequestResponse"],[22,81,18,79],[23,2,19,0,"exports"],[23,9,19,7],[23,10,19,8,"isValidDomain"],[23,23,19,21],[23,26,19,24,"isValidDomain"],[23,39,19,37],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"createCredential"],[24,26,20,24],[24,29,20,27,"createCredential"],[24,45,20,43],[25,2,21,0,"exports"],[25,9,21,7],[25,10,21,8,"getCredential"],[25,23,21,21],[25,26,21,24,"getCredential"],[25,39,21,37],[26,2,22,0,"exports"],[26,9,22,7],[26,10,22,8,"mergeCredentialCreationOptions"],[26,40,22,38],[26,43,22,41,"mergeCredentialCreationOptions"],[26,73,22,71],[27,2,23,0,"exports"],[27,9,23,7],[27,10,23,8,"mergeCredentialRequestOptions"],[27,39,23,37],[27,42,23,40,"mergeCredentialRequestOptions"],[27,71,23,69],[28,2,24,0],[28,6,24,6,"base64url_1"],[28,17,24,17],[28,20,24,20,"require"],[28,27,24,27],[28,28,24,27,"_dependencyMap"],[28,42,24,27],[28,60,24,41],[28,61,24,42],[29,2,25,0],[29,6,25,6,"errors_1"],[29,14,25,14],[29,17,25,17,"require"],[29,24,25,24],[29,25,25,24,"_dependencyMap"],[29,39,25,24],[29,54,25,35],[29,55,25,36],[30,2,26,0],[30,6,26,6,"helpers_1"],[30,15,26,15],[30,18,26,18,"require"],[30,25,26,25],[30,26,26,25,"_dependencyMap"],[30,40,26,25],[30,56,26,37],[30,57,26,38],[31,2,27,0],[31,6,27,6,"webauthn_errors_1"],[31,23,27,23],[31,26,27,26,"require"],[31,33,27,33],[31,34,27,33,"_dependencyMap"],[31,48,27,33],[31,72,27,53],[31,73,27,54],[32,2,28,0,"Object"],[32,8,28,6],[32,9,28,7,"defineProperty"],[32,23,28,21],[32,24,28,22,"exports"],[32,31,28,29],[32,33,28,31],[32,62,28,60],[32,64,28,62],[33,4,28,64,"enumerable"],[33,14,28,74],[33,16,28,76],[33,20,28,80],[34,4,28,82,"get"],[34,7,28,85],[34,9,28,87],[34,18,28,87,"get"],[34,19,28,87],[34,21,28,99],[35,6,28,101],[35,13,28,108,"webauthn_errors_1"],[35,30,28,125],[35,31,28,126,"identifyAuthenticationError"],[35,58,28,153],[36,4,28,155],[37,2,28,157],[37,3,28,158],[37,4,28,159],[38,2,29,0,"Object"],[38,8,29,6],[38,9,29,7,"defineProperty"],[38,23,29,21],[38,24,29,22,"exports"],[38,31,29,29],[38,33,29,31],[38,60,29,58],[38,62,29,60],[39,4,29,62,"enumerable"],[39,14,29,72],[39,16,29,74],[39,20,29,78],[40,4,29,80,"get"],[40,7,29,83],[40,9,29,85],[40,18,29,85,"get"],[40,19,29,85],[40,21,29,97],[41,6,29,99],[41,13,29,106,"webauthn_errors_1"],[41,30,29,123],[41,31,29,124,"identifyRegistrationError"],[41,56,29,149],[42,4,29,151],[43,2,29,153],[43,3,29,154],[43,4,29,155],[44,2,30,0,"Object"],[44,8,30,6],[44,9,30,7,"defineProperty"],[44,23,30,21],[44,24,30,22,"exports"],[44,31,30,29],[44,33,30,31],[44,50,30,48],[44,52,30,50],[45,4,30,52,"enumerable"],[45,14,30,62],[45,16,30,64],[45,20,30,68],[46,4,30,70,"get"],[46,7,30,73],[46,9,30,75],[46,18,30,75,"get"],[46,19,30,75],[46,21,30,87],[47,6,30,89],[47,13,30,96,"webauthn_errors_1"],[47,30,30,113],[47,31,30,114,"isWebAuthnError"],[47,46,30,129],[48,4,30,131],[49,2,30,133],[49,3,30,134],[49,4,30,135],[50,2,31,0,"Object"],[50,8,31,6],[50,9,31,7,"defineProperty"],[50,23,31,21],[50,24,31,22,"exports"],[50,31,31,29],[50,33,31,31],[50,48,31,46],[50,50,31,48],[51,4,31,50,"enumerable"],[51,14,31,60],[51,16,31,62],[51,20,31,66],[52,4,31,68,"get"],[52,7,31,71],[52,9,31,73],[52,18,31,73,"get"],[52,19,31,73],[52,21,31,85],[53,6,31,87],[53,13,31,94,"webauthn_errors_1"],[53,30,31,111],[53,31,31,112,"WebAuthnError"],[53,44,31,125],[54,4,31,127],[55,2,31,129],[55,3,31,130],[55,4,31,131],[56,2,32,0],[57,0,33,0],[58,0,34,0],[59,0,35,0],[60,0,36,0],[61,0,37,0],[62,0,38,0],[63,2,32,0],[63,6,39,6,"WebAuthnAbortService"],[63,26,39,26],[64,4,39,26],[64,13,39,26,"WebAuthnAbortService"],[64,34,39,26],[65,6,39,26,"_classCallCheck"],[65,21,39,26],[65,28,39,26,"WebAuthnAbortService"],[65,48,39,26],[66,4,39,26],[67,4,39,26],[67,11,39,26,"_createClass"],[67,23,39,26],[67,24,39,26,"WebAuthnAbortService"],[67,44,39,26],[68,6,39,26,"key"],[68,9,39,26],[69,6,39,26,"value"],[69,11,39,26],[70,6,40,4],[71,0,41,0],[72,0,42,0],[73,0,43,0],[74,0,44,0],[75,0,45,0],[76,0,46,0],[77,6,47,4],[77,15,47,4,"createNewAbortSignal"],[77,35,47,24,"createNewAbortSignal"],[77,36,47,24],[77,38,47,27],[78,8,48,8],[79,8,49,8],[79,12,49,12],[79,16,49,16],[79,17,49,17,"controller"],[79,27,49,27],[79,29,49,29],[80,10,50,12],[80,14,50,18,"abortError"],[80,24,50,28],[80,27,50,31],[80,31,50,35,"Error"],[80,36,50,40],[80,37,50,41],[80,88,50,92],[80,89,50,93],[81,10,51,12,"abortError"],[81,20,51,22],[81,21,51,23,"name"],[81,25,51,27],[81,28,51,30],[81,40,51,42],[82,10,52,12],[82,14,52,16],[82,15,52,17,"controller"],[82,25,52,27],[82,26,52,28,"abort"],[82,31,52,33],[82,32,52,34,"abortError"],[82,42,52,44],[82,43,52,45],[83,8,53,8],[84,8,54,8],[84,12,54,14,"newController"],[84,25,54,27],[84,28,54,30],[84,32,54,34,"AbortController"],[84,47,54,49],[84,48,54,50],[84,49,54,51],[85,8,55,8],[85,12,55,12],[85,13,55,13,"controller"],[85,23,55,23],[85,26,55,26,"newController"],[85,39,55,39],[86,8,56,8],[86,15,56,15,"newController"],[86,28,56,28],[86,29,56,29,"signal"],[86,35,56,35],[87,6,57,4],[88,6,58,4],[89,0,59,0],[90,0,60,0],[91,0,61,0],[92,0,62,0],[93,0,63,0],[94,4,58,4],[95,6,58,4,"key"],[95,9,58,4],[96,6,58,4,"value"],[96,11,58,4],[96,13,64,4],[96,22,64,4,"cancelCeremony"],[96,36,64,18,"cancelCeremony"],[96,37,64,18],[96,39,64,21],[97,8,65,8],[97,12,65,12],[97,16,65,16],[97,17,65,17,"controller"],[97,27,65,27],[97,29,65,29],[98,10,66,12],[98,14,66,18,"abortError"],[98,24,66,28],[98,27,66,31],[98,31,66,35,"Error"],[98,36,66,40],[98,37,66,41],[98,85,66,89],[98,86,66,90],[99,10,67,12,"abortError"],[99,20,67,22],[99,21,67,23,"name"],[99,25,67,27],[99,28,67,30],[99,40,67,42],[100,10,68,12],[100,14,68,16],[100,15,68,17,"controller"],[100,25,68,27],[100,26,68,28,"abort"],[100,31,68,33],[100,32,68,34,"abortError"],[100,42,68,44],[100,43,68,45],[101,10,69,12],[101,14,69,16],[101,15,69,17,"controller"],[101,25,69,27],[101,28,69,30,"undefined"],[101,37,69,39],[102,8,70,8],[103,6,71,4],[104,4,71,5],[105,2,71,5],[106,2,73,0,"exports"],[106,9,73,7],[106,10,73,8,"WebAuthnAbortService"],[106,30,73,28],[106,33,73,31,"WebAuthnAbortService"],[106,53,73,51],[107,2,74,0],[108,0,75,0],[109,0,76,0],[110,0,77,0],[111,0,78,0],[112,0,79,0],[113,2,80,0,"exports"],[113,9,80,7],[113,10,80,8,"webAuthnAbortService"],[113,30,80,28],[113,33,80,31],[113,37,80,35,"WebAuthnAbortService"],[113,57,80,55],[113,58,80,56],[113,59,80,57],[114,2,81,0],[115,0,82,0],[116,0,83,0],[117,0,84,0],[118,0,85,0],[119,0,86,0],[120,0,87,0],[121,0,88,0],[122,0,89,0],[123,2,90,0],[123,11,90,9,"deserializeCredentialCreationOptions"],[123,47,90,45,"deserializeCredentialCreationOptions"],[123,48,90,46,"options"],[123,55,90,53],[123,57,90,55],[124,4,91,4],[124,8,91,8],[124,9,91,9,"options"],[124,16,91,16],[124,18,91,18],[125,6,92,8],[125,12,92,14],[125,16,92,18,"Error"],[125,21,92,23],[125,22,92,24],[125,64,92,66],[125,65,92,67],[126,4,93,4],[127,4,94,4],[128,4,95,4],[128,8,95,8],[128,15,95,15,"PublicKeyCredential"],[128,34,95,34],[128,39,95,39],[128,50,95,50],[128,54,96,8],[128,84,96,38],[128,88,96,42,"PublicKeyCredential"],[128,107,96,61],[128,111,97,8],[128,118,97,15,"PublicKeyCredential"],[128,137,97,34],[128,138,98,13,"parseCreationOptionsFromJSON"],[128,166,98,41],[128,171,98,46],[128,181,98,56],[128,183,98,58],[129,6,99,8],[130,6,100,8],[130,13,100,15,"PublicKeyCredential"],[130,32,100,34],[130,33,100,35,"parseCreationOptionsFromJSON"],[130,61,100,63],[130,62,101,8],[131,6,102,8,"options"],[131,13,102,15],[131,14,102,16],[132,4,103,4],[133,4,104,4],[134,4,105,4],[135,4,106,4],[135,8,106,23,"challengeStr"],[135,20,106,35],[135,23,106,76,"options"],[135,30,106,83],[135,31,106,12,"challenge"],[135,40,106,21],[136,6,106,43,"userOpts"],[136,14,106,51],[136,17,106,76,"options"],[136,24,106,83],[136,25,106,37,"user"],[136,29,106,41],[137,6,106,53,"excludeCredentials"],[137,24,106,71],[137,27,106,76,"options"],[137,34,106,83],[137,35,106,53,"excludeCredentials"],[137,53,106,71],[138,6,106,85,"restOptions"],[138,17,106,96],[138,20,106,99,"__rest"],[138,26,106,105],[138,27,106,106,"options"],[139,6,107,4],[140,6,107,4],[140,8,108,6],[140,9,108,7],[140,20,108,18],[140,22,108,20],[140,28,108,26],[140,30,108,28],[140,50,108,48],[140,51,108,49],[140,52,108,50],[141,4,109,4],[142,4,110,4],[142,8,110,10,"challenge"],[142,17,110,19],[142,20,110,22],[142,21,110,23],[142,22,110,24],[142,24,110,26,"base64url_1"],[142,35,110,37],[142,36,110,38,"base64UrlToUint8Array"],[142,57,110,59],[142,59,110,61,"challengeStr"],[142,71,110,73],[142,72,110,74],[142,73,110,75,"buffer"],[142,79,110,81],[143,4,111,4],[144,4,112,4],[144,8,112,10,"user"],[144,12,112,14],[144,15,112,17,"Object"],[144,21,112,23],[144,22,112,24,"assign"],[144,28,112,30],[144,29,112,31,"Object"],[144,35,112,37],[144,36,112,38,"assign"],[144,42,112,44],[144,43,112,45],[144,44,112,46],[144,45,112,47],[144,47,112,49,"userOpts"],[144,55,112,57],[144,56,112,58],[144,58,112,60],[145,6,112,62,"id"],[145,8,112,64],[145,10,112,66],[145,11,112,67],[145,12,112,68],[145,14,112,70,"base64url_1"],[145,25,112,81],[145,26,112,82,"base64UrlToUint8Array"],[145,47,112,103],[145,49,112,105,"userOpts"],[145,57,112,113],[145,58,112,114,"id"],[145,60,112,116],[145,61,112,117],[145,62,112,118,"buffer"],[146,4,112,125],[146,5,112,126],[146,6,112,127],[147,4,113,4],[148,4,114,4],[148,8,114,10,"result"],[148,14,114,16],[148,17,114,19,"Object"],[148,23,114,25],[148,24,114,26,"assign"],[148,30,114,32],[148,31,114,33,"Object"],[148,37,114,39],[148,38,114,40,"assign"],[148,44,114,46],[148,45,114,47],[148,46,114,48],[148,47,114,49],[148,49,114,51,"restOptions"],[148,60,114,62],[148,61,114,63],[148,63,114,65],[149,6,114,67,"challenge"],[149,15,114,76],[150,6,115,8,"user"],[151,4,115,13],[151,5,115,14],[151,6,115,15],[152,4,116,4],[153,4,117,4],[153,8,117,8,"excludeCredentials"],[153,26,117,26],[153,30,117,30,"excludeCredentials"],[153,48,117,48],[153,49,117,49,"length"],[153,55,117,55],[153,58,117,58],[153,59,117,59],[153,61,117,61],[154,6,118,8,"result"],[154,12,118,14],[154,13,118,15,"excludeCredentials"],[154,31,118,33],[154,34,118,36],[154,38,118,40,"Array"],[154,43,118,45],[154,44,118,46,"excludeCredentials"],[154,62,118,64],[154,63,118,65,"length"],[154,69,118,71],[154,70,118,72],[155,6,119,8],[155,11,119,13],[155,15,119,17,"i"],[155,16,119,18],[155,19,119,21],[155,20,119,22],[155,22,119,24,"i"],[155,23,119,25],[155,26,119,28,"excludeCredentials"],[155,44,119,46],[155,45,119,47,"length"],[155,51,119,53],[155,53,119,55,"i"],[155,54,119,56],[155,56,119,58],[155,58,119,60],[156,8,120,12],[156,12,120,18,"cred"],[156,16,120,22],[156,19,120,25,"excludeCredentials"],[156,37,120,43],[156,38,120,44,"i"],[156,39,120,45],[156,40,120,46],[157,8,121,12,"result"],[157,14,121,18],[157,15,121,19,"excludeCredentials"],[157,33,121,37],[157,34,121,38,"i"],[157,35,121,39],[157,36,121,40],[157,39,121,43,"Object"],[157,45,121,49],[157,46,121,50,"assign"],[157,52,121,56],[157,53,121,57,"Object"],[157,59,121,63],[157,60,121,64,"assign"],[157,66,121,70],[157,67,121,71],[157,68,121,72],[157,69,121,73],[157,71,121,75,"cred"],[157,75,121,79],[157,76,121,80],[157,78,121,82],[158,10,121,84,"id"],[158,12,121,86],[158,14,121,88],[158,15,121,89],[158,16,121,90],[158,18,121,92,"base64url_1"],[158,29,121,103],[158,30,121,104,"base64UrlToUint8Array"],[158,51,121,125],[158,53,121,127,"cred"],[158,57,121,131],[158,58,121,132,"id"],[158,60,121,134],[158,61,121,135],[158,62,121,136,"buffer"],[158,68,121,142],[159,10,121,144,"type"],[159,14,121,148],[159,16,121,150,"cred"],[159,20,121,154],[159,21,121,155,"type"],[159,25,121,159],[159,29,121,163],[159,41,121,175],[160,10,122,16],[161,10,123,16,"transports"],[161,20,123,26],[161,22,123,28,"cred"],[161,26,123,32],[161,27,123,33,"transports"],[162,8,123,44],[162,9,123,45],[162,10,123,46],[163,6,124,8],[164,4,125,4],[165,4,126,4],[165,11,126,11,"result"],[165,17,126,17],[166,2,127,0],[167,2,128,0],[168,0,129,0],[169,0,130,0],[170,0,131,0],[171,0,132,0],[172,0,133,0],[173,0,134,0],[174,0,135,0],[175,0,136,0],[176,2,137,0],[176,11,137,9,"deserializeCredentialRequestOptions"],[176,46,137,44,"deserializeCredentialRequestOptions"],[176,47,137,45,"options"],[176,54,137,52],[176,56,137,54],[177,4,138,4],[177,8,138,8],[177,9,138,9,"options"],[177,16,138,16],[177,18,138,18],[178,6,139,8],[178,12,139,14],[178,16,139,18,"Error"],[178,21,139,23],[178,22,139,24],[178,63,139,65],[178,64,139,66],[179,4,140,4],[180,4,141,4],[181,4,142,4],[181,8,142,8],[181,15,142,15,"PublicKeyCredential"],[181,34,142,34],[181,39,142,39],[181,50,142,50],[181,54,143,8],[181,83,143,37],[181,87,143,41,"PublicKeyCredential"],[181,106,143,60],[181,110,144,8],[181,117,144,15,"PublicKeyCredential"],[181,136,144,34],[181,137,145,13,"parseRequestOptionsFromJSON"],[181,164,145,40],[181,169,145,45],[181,179,145,55],[181,181,145,57],[182,6,146,8],[183,6,147,8],[183,13,147,15,"PublicKeyCredential"],[183,32,147,34],[183,33,147,35,"parseRequestOptionsFromJSON"],[183,60,147,62],[183,61,147,63,"options"],[183,68,147,70],[183,69,147,71],[184,4,148,4],[185,4,149,4],[186,4,150,4],[187,4,151,4],[187,8,151,23,"challengeStr"],[187,20,151,35],[187,23,151,58,"options"],[187,30,151,65],[187,31,151,12,"challenge"],[187,40,151,21],[188,6,151,37,"allowCredentials"],[188,22,151,53],[188,25,151,58,"options"],[188,32,151,65],[188,33,151,37,"allowCredentials"],[188,49,151,53],[189,6,151,67,"restOptions"],[189,17,151,78],[189,20,151,81,"__rest"],[189,26,151,87],[189,27,151,88,"options"],[190,6,152,4],[191,6,152,4],[191,8,153,6],[191,9,153,7],[191,20,153,18],[191,22,153,20],[191,40,153,38],[191,41,153,39],[191,42,153,40],[192,4,154,4],[193,4,155,4],[193,8,155,10,"challenge"],[193,17,155,19],[193,20,155,22],[193,21,155,23],[193,22,155,24],[193,24,155,26,"base64url_1"],[193,35,155,37],[193,36,155,38,"base64UrlToUint8Array"],[193,57,155,59],[193,59,155,61,"challengeStr"],[193,71,155,73],[193,72,155,74],[193,73,155,75,"buffer"],[193,79,155,81],[194,4,156,4],[195,4,157,4],[195,8,157,10,"result"],[195,14,157,16],[195,17,157,19,"Object"],[195,23,157,25],[195,24,157,26,"assign"],[195,30,157,32],[195,31,157,33,"Object"],[195,37,157,39],[195,38,157,40,"assign"],[195,44,157,46],[195,45,157,47],[195,46,157,48],[195,47,157,49],[195,49,157,51,"restOptions"],[195,60,157,62],[195,61,157,63],[195,63,157,65],[196,6,157,67,"challenge"],[197,4,157,77],[197,5,157,78],[197,6,157,79],[198,4,158,4],[199,4,159,4],[199,8,159,8,"allowCredentials"],[199,24,159,24],[199,28,159,28,"allowCredentials"],[199,44,159,44],[199,45,159,45,"length"],[199,51,159,51],[199,54,159,54],[199,55,159,55],[199,57,159,57],[200,6,160,8,"result"],[200,12,160,14],[200,13,160,15,"allowCredentials"],[200,29,160,31],[200,32,160,34],[200,36,160,38,"Array"],[200,41,160,43],[200,42,160,44,"allowCredentials"],[200,58,160,60],[200,59,160,61,"length"],[200,65,160,67],[200,66,160,68],[201,6,161,8],[201,11,161,13],[201,15,161,17,"i"],[201,16,161,18],[201,19,161,21],[201,20,161,22],[201,22,161,24,"i"],[201,23,161,25],[201,26,161,28,"allowCredentials"],[201,42,161,44],[201,43,161,45,"length"],[201,49,161,51],[201,51,161,53,"i"],[201,52,161,54],[201,54,161,56],[201,56,161,58],[202,8,162,12],[202,12,162,18,"cred"],[202,16,162,22],[202,19,162,25,"allowCredentials"],[202,35,162,41],[202,36,162,42,"i"],[202,37,162,43],[202,38,162,44],[203,8,163,12,"result"],[203,14,163,18],[203,15,163,19,"allowCredentials"],[203,31,163,35],[203,32,163,36,"i"],[203,33,163,37],[203,34,163,38],[203,37,163,41,"Object"],[203,43,163,47],[203,44,163,48,"assign"],[203,50,163,54],[203,51,163,55,"Object"],[203,57,163,61],[203,58,163,62,"assign"],[203,64,163,68],[203,65,163,69],[203,66,163,70],[203,67,163,71],[203,69,163,73,"cred"],[203,73,163,77],[203,74,163,78],[203,76,163,80],[204,10,163,82,"id"],[204,12,163,84],[204,14,163,86],[204,15,163,87],[204,16,163,88],[204,18,163,90,"base64url_1"],[204,29,163,101],[204,30,163,102,"base64UrlToUint8Array"],[204,51,163,123],[204,53,163,125,"cred"],[204,57,163,129],[204,58,163,130,"id"],[204,60,163,132],[204,61,163,133],[204,62,163,134,"buffer"],[204,68,163,140],[205,10,163,142,"type"],[205,14,163,146],[205,16,163,148,"cred"],[205,20,163,152],[205,21,163,153,"type"],[205,25,163,157],[205,29,163,161],[205,41,163,173],[206,10,164,16],[207,10,165,16,"transports"],[207,20,165,26],[207,22,165,28,"cred"],[207,26,165,32],[207,27,165,33,"transports"],[208,8,165,44],[208,9,165,45],[208,10,165,46],[209,6,166,8],[210,4,167,4],[211,4,168,4],[211,11,168,11,"result"],[211,17,168,17],[212,2,169,0],[213,2,170,0],[214,0,171,0],[215,0,172,0],[216,0,173,0],[217,0,174,0],[218,0,175,0],[219,0,176,0],[220,0,177,0],[221,0,178,0],[222,2,179,0],[222,11,179,9,"serializeCredentialCreationResponse"],[222,46,179,44,"serializeCredentialCreationResponse"],[222,47,179,45,"credential"],[222,57,179,55],[222,59,179,57],[223,4,180,4],[223,8,180,8,"_a"],[223,10,180,10],[224,4,181,4],[225,4,182,4],[225,8,182,8],[225,16,182,16],[225,20,182,20,"credential"],[225,30,182,30],[225,34,182,34],[225,41,182,41,"credential"],[225,51,182,51],[225,52,182,52,"toJSON"],[225,58,182,58],[225,63,182,63],[225,73,182,73],[225,75,182,75],[226,6,183,8],[227,6,184,8],[227,13,184,15,"credential"],[227,23,184,25],[227,24,184,26,"toJSON"],[227,30,184,32],[227,31,184,33],[227,32,184,34],[228,4,185,4],[229,4,186,4],[229,8,186,10,"credentialWithAttachment"],[229,32,186,34],[229,35,186,37,"credential"],[229,45,186,47],[230,4,187,4],[230,11,187,11],[231,6,188,8,"id"],[231,8,188,10],[231,10,188,12,"credential"],[231,20,188,22],[231,21,188,23,"id"],[231,23,188,25],[232,6,189,8,"rawId"],[232,11,189,13],[232,13,189,15,"credential"],[232,23,189,25],[232,24,189,26,"id"],[232,26,189,28],[233,6,190,8,"response"],[233,14,190,16],[233,16,190,18],[234,8,191,12,"attestationObject"],[234,25,191,29],[234,27,191,31],[234,28,191,32],[234,29,191,33],[234,31,191,35,"base64url_1"],[234,42,191,46],[234,43,191,47,"bytesToBase64URL"],[234,59,191,63],[234,61,191,65],[234,65,191,69,"Uint8Array"],[234,75,191,79],[234,76,191,80,"credential"],[234,86,191,90],[234,87,191,91,"response"],[234,95,191,99],[234,96,191,100,"attestationObject"],[234,113,191,117],[234,114,191,118],[234,115,191,119],[235,8,192,12,"clientDataJSON"],[235,22,192,26],[235,24,192,28],[235,25,192,29],[235,26,192,30],[235,28,192,32,"base64url_1"],[235,39,192,43],[235,40,192,44,"bytesToBase64URL"],[235,56,192,60],[235,58,192,62],[235,62,192,66,"Uint8Array"],[235,72,192,76],[235,73,192,77,"credential"],[235,83,192,87],[235,84,192,88,"response"],[235,92,192,96],[235,93,192,97,"clientDataJSON"],[235,107,192,111],[235,108,192,112],[236,6,193,8],[236,7,193,9],[237,6,194,8,"type"],[237,10,194,12],[237,12,194,14],[237,24,194,26],[238,6,195,8,"clientExtensionResults"],[238,28,195,30],[238,30,195,32,"credential"],[238,40,195,42],[238,41,195,43,"getClientExtensionResults"],[238,66,195,68],[238,67,195,69],[238,68,195,70],[239,6,196,8],[240,6,197,8,"authenticatorAttachment"],[240,29,197,31],[240,31,197,34],[240,32,197,35,"_a"],[240,34,197,37],[240,37,197,40,"credentialWithAttachment"],[240,61,197,64],[240,62,197,65,"authenticatorAttachment"],[240,85,197,88],[240,91,197,94],[240,95,197,98],[240,99,197,102,"_a"],[240,101,197,104],[240,106,197,109],[240,111,197,114],[240,112,197,115],[240,115,197,118,"_a"],[240,117,197,120],[240,120,197,123,"undefined"],[241,4,198,4],[241,5,198,5],[242,2,199,0],[243,2,200,0],[244,0,201,0],[245,0,202,0],[246,0,203,0],[247,0,204,0],[248,0,205,0],[249,0,206,0],[250,0,207,0],[251,0,208,0],[252,2,209,0],[252,11,209,9,"serializeCredentialRequestResponse"],[252,45,209,43,"serializeCredentialRequestResponse"],[252,46,209,44,"credential"],[252,56,209,54],[252,58,209,56],[253,4,210,4],[253,8,210,8,"_a"],[253,10,210,10],[254,4,211,4],[255,4,212,4],[255,8,212,8],[255,16,212,16],[255,20,212,20,"credential"],[255,30,212,30],[255,34,212,34],[255,41,212,41,"credential"],[255,51,212,51],[255,52,212,52,"toJSON"],[255,58,212,58],[255,63,212,63],[255,73,212,73],[255,75,212,75],[256,6,213,8],[257,6,214,8],[257,13,214,15,"credential"],[257,23,214,25],[257,24,214,26,"toJSON"],[257,30,214,32],[257,31,214,33],[257,32,214,34],[258,4,215,4],[259,4,216,4],[260,4,217,4],[261,4,218,4],[262,4,219,4],[262,8,219,10,"credentialWithAttachment"],[262,32,219,34],[262,35,219,37,"credential"],[262,45,219,47],[263,4,220,4],[263,8,220,10,"clientExtensionResults"],[263,30,220,32],[263,33,220,35,"credential"],[263,43,220,45],[263,44,220,46,"getClientExtensionResults"],[263,69,220,71],[263,70,220,72],[263,71,220,73],[264,4,221,4],[264,8,221,10,"assertionResponse"],[264,25,221,27],[264,28,221,30,"credential"],[264,38,221,40],[264,39,221,41,"response"],[264,47,221,49],[265,4,222,4],[265,11,222,11],[266,6,223,8,"id"],[266,8,223,10],[266,10,223,12,"credential"],[266,20,223,22],[266,21,223,23,"id"],[266,23,223,25],[267,6,224,8,"rawId"],[267,11,224,13],[267,13,224,15,"credential"],[267,23,224,25],[267,24,224,26,"id"],[267,26,224,28],[268,6,224,30],[269,6,225,8,"response"],[269,14,225,16],[269,16,225,18],[270,8,226,12,"authenticatorData"],[270,25,226,29],[270,27,226,31],[270,28,226,32],[270,29,226,33],[270,31,226,35,"base64url_1"],[270,42,226,46],[270,43,226,47,"bytesToBase64URL"],[270,59,226,63],[270,61,226,65],[270,65,226,69,"Uint8Array"],[270,75,226,79],[270,76,226,80,"assertionResponse"],[270,93,226,97],[270,94,226,98,"authenticatorData"],[270,111,226,115],[270,112,226,116],[270,113,226,117],[271,8,227,12,"clientDataJSON"],[271,22,227,26],[271,24,227,28],[271,25,227,29],[271,26,227,30],[271,28,227,32,"base64url_1"],[271,39,227,43],[271,40,227,44,"bytesToBase64URL"],[271,56,227,60],[271,58,227,62],[271,62,227,66,"Uint8Array"],[271,72,227,76],[271,73,227,77,"assertionResponse"],[271,90,227,94],[271,91,227,95,"clientDataJSON"],[271,105,227,109],[271,106,227,110],[271,107,227,111],[272,8,228,12,"signature"],[272,17,228,21],[272,19,228,23],[272,20,228,24],[272,21,228,25],[272,23,228,27,"base64url_1"],[272,34,228,38],[272,35,228,39,"bytesToBase64URL"],[272,51,228,55],[272,53,228,57],[272,57,228,61,"Uint8Array"],[272,67,228,71],[272,68,228,72,"assertionResponse"],[272,85,228,89],[272,86,228,90,"signature"],[272,95,228,99],[272,96,228,100],[272,97,228,101],[273,8,229,12,"userHandle"],[273,18,229,22],[273,20,229,24,"assertionResponse"],[273,37,229,41],[273,38,229,42,"userHandle"],[273,48,229,52],[273,51,230,18],[273,52,230,19],[273,53,230,20],[273,55,230,22,"base64url_1"],[273,66,230,33],[273,67,230,34,"bytesToBase64URL"],[273,83,230,50],[273,85,230,52],[273,89,230,56,"Uint8Array"],[273,99,230,66],[273,100,230,67,"assertionResponse"],[273,117,230,84],[273,118,230,85,"userHandle"],[273,128,230,95],[273,129,230,96],[273,130,230,97],[273,133,231,18,"undefined"],[274,6,232,8],[274,7,232,9],[275,6,233,8,"type"],[275,10,233,12],[275,12,233,14],[275,24,233,26],[276,6,234,8,"clientExtensionResults"],[276,28,234,30],[277,6,235,8],[278,6,236,8,"authenticatorAttachment"],[278,29,236,31],[278,31,236,34],[278,32,236,35,"_a"],[278,34,236,37],[278,37,236,40,"credentialWithAttachment"],[278,61,236,64],[278,62,236,65,"authenticatorAttachment"],[278,85,236,88],[278,91,236,94],[278,95,236,98],[278,99,236,102,"_a"],[278,101,236,104],[278,106,236,109],[278,111,236,114],[278,112,236,115],[278,115,236,118,"_a"],[278,117,236,120],[278,120,236,123,"undefined"],[279,4,237,4],[279,5,237,5],[280,2,238,0],[281,2,239,0],[282,0,240,0],[283,0,241,0],[284,0,242,0],[285,0,243,0],[286,0,244,0],[287,0,245,0],[288,0,246,0],[289,0,247,0],[290,0,248,0],[291,0,249,0],[292,0,250,0],[293,0,251,0],[294,2,252,0],[294,11,252,9,"isValidDomain"],[294,24,252,22,"isValidDomain"],[294,25,252,23,"hostname"],[294,33,252,31],[294,35,252,33],[295,4,253,4],[296,6,254,4],[297,6,255,4,"hostname"],[297,14,255,12],[297,19,255,17],[297,30,255,28],[297,34,255,32],[297,75,255,73],[297,76,255,74,"test"],[297,80,255,78],[297,81,255,79,"hostname"],[297,89,255,87],[298,4,255,88],[299,2,256,0],[300,2,257,0],[301,0,258,0],[302,0,259,0],[303,0,260,0],[304,0,261,0],[305,0,262,0],[306,0,263,0],[307,2,264,0],[307,11,264,9,"browserSupportsWebAuthn"],[307,34,264,32,"browserSupportsWebAuthn"],[307,35,264,32],[307,37,264,35],[308,4,265,4],[308,8,265,8,"_a"],[308,10,265,10],[308,12,265,12,"_b"],[308,14,265,14],[309,4,266,4],[309,11,266,11],[309,12,266,12],[309,14,266,14],[309,15,266,15],[309,16,266,16],[309,18,266,18,"helpers_1"],[309,27,266,27],[309,28,266,28,"isBrowser"],[309,37,266,37],[309,39,266,39],[309,40,266,40],[309,44,267,8],[309,65,267,29],[309,69,267,33,"window"],[309,75,267,39],[309,79,268,8,"window"],[309,85,268,14],[309,86,268,15,"PublicKeyCredential"],[309,105,268,34],[309,109,269,8],[309,122,269,21],[309,126,269,25,"navigator"],[309,135,269,34],[309,139,270,8],[309,147,270,16],[309,148,270,17,"_a"],[309,150,270,19],[309,153,270,22,"navigator"],[309,162,270,31],[309,167,270,36],[309,171,270,40],[309,175,270,44,"navigator"],[309,184,270,53],[309,189,270,58],[309,194,270,63],[309,195,270,64],[309,198,270,67],[309,203,270,72],[309,204,270,73],[309,207,270,76,"navigator"],[309,216,270,85],[309,217,270,86,"credentials"],[309,228,270,97],[309,234,270,103],[309,238,270,107],[309,242,270,111,"_a"],[309,244,270,113],[309,249,270,118],[309,254,270,123],[309,255,270,124],[309,258,270,127],[309,263,270,132],[309,264,270,133],[309,267,270,136,"_a"],[309,269,270,138],[309,270,270,139,"create"],[309,276,270,145],[309,277,270,146],[309,282,270,151],[309,292,270,161],[309,296,271,8],[309,304,271,16],[309,305,271,17,"_b"],[309,307,271,19],[309,310,271,22,"navigator"],[309,319,271,31],[309,324,271,36],[309,328,271,40],[309,332,271,44,"navigator"],[309,341,271,53],[309,346,271,58],[309,351,271,63],[309,352,271,64],[309,355,271,67],[309,360,271,72],[309,361,271,73],[309,364,271,76,"navigator"],[309,373,271,85],[309,374,271,86,"credentials"],[309,385,271,97],[309,391,271,103],[309,395,271,107],[309,399,271,111,"_b"],[309,401,271,113],[309,406,271,118],[309,411,271,123],[309,412,271,124],[309,415,271,127],[309,420,271,132],[309,421,271,133],[309,424,271,136,"_b"],[309,426,271,138],[309,427,271,139,"get"],[309,430,271,142],[309,431,271,143],[309,436,271,148],[309,446,271,158],[309,447,271,159],[310,2,272,0],[311,2,273,0],[312,0,274,0],[313,0,275,0],[314,0,276,0],[315,0,277,0],[316,0,278,0],[317,0,279,0],[318,0,280,0],[319,0,281,0],[320,2,273,0],[320,11,282,15,"createCredential"],[320,27,282,31,"createCredential"],[320,28,282,31,"_x"],[320,30,282,31],[321,4,282,31],[321,11,282,31,"_createCredential"],[321,28,282,31],[321,29,282,31,"apply"],[321,34,282,31],[321,41,282,31,"arguments"],[321,50,282,31],[322,2,282,31],[323,2,311,0],[324,0,312,0],[325,0,313,0],[326,0,314,0],[327,0,315,0],[328,0,316,0],[329,0,317,0],[330,0,318,0],[331,0,319,0],[332,2,311,0],[332,11,311,0,"_createCredential"],[332,29,311,0],[333,4,311,0,"_createCredential"],[333,21,311,0],[333,24,311,0,"_asyncToGenerator"],[333,41,311,0],[333,42,282,0],[333,53,282,32,"options"],[333,60,282,39],[333,62,282,41],[334,6,283,4],[334,10,283,8],[335,8,284,8],[335,12,284,14,"response"],[335,20,284,22],[335,29,284,31,"navigator"],[335,38,284,40],[335,39,284,41,"credentials"],[335,50,284,52],[335,51,284,53,"create"],[335,57,284,59],[335,58,285,8],[336,8,286,8,"options"],[336,15,286,15],[336,16,286,16],[337,8,287,8],[337,12,287,12],[337,13,287,13,"response"],[337,21,287,21],[337,23,287,23],[338,10,288,12],[338,17,288,19],[339,12,289,16,"data"],[339,16,289,20],[339,18,289,22],[339,22,289,26],[340,12,290,16,"error"],[340,17,290,21],[340,19,290,23],[340,23,290,27,"webauthn_errors_1"],[340,40,290,44],[340,41,290,45,"WebAuthnUnknownError"],[340,61,290,65],[340,62,290,66],[340,89,290,93],[340,91,290,95,"response"],[340,99,290,103],[341,10,291,12],[341,11,291,13],[342,8,292,8],[343,8,293,8],[343,12,293,12],[343,14,293,14,"response"],[343,22,293,22],[343,34,293,34,"PublicKeyCredential"],[343,53,293,53],[343,54,293,54],[343,56,293,56],[344,10,294,12],[344,17,294,19],[345,12,295,16,"data"],[345,16,295,20],[345,18,295,22],[345,22,295,26],[346,12,296,16,"error"],[346,17,296,21],[346,19,296,23],[346,23,296,27,"webauthn_errors_1"],[346,40,296,44],[346,41,296,45,"WebAuthnUnknownError"],[346,61,296,65],[346,62,296,66],[346,107,296,111],[346,109,296,113,"response"],[346,117,296,121],[347,10,297,12],[347,11,297,13],[348,8,298,8],[349,8,299,8],[349,15,299,15],[350,10,299,17,"data"],[350,14,299,21],[350,16,299,23,"response"],[350,24,299,31],[351,10,299,33,"error"],[351,15,299,38],[351,17,299,40],[352,8,299,45],[352,9,299,46],[353,6,300,4],[353,7,300,5],[353,8,301,4],[353,15,301,11,"err"],[353,18,301,14],[353,20,301,16],[354,8,302,8],[354,15,302,15],[355,10,303,12,"data"],[355,14,303,16],[355,16,303,18],[355,20,303,22],[356,10,304,12,"error"],[356,15,304,17],[356,17,304,19],[356,18,304,20],[356,19,304,21],[356,21,304,23,"webauthn_errors_1"],[356,38,304,40],[356,39,304,41,"identifyRegistrationError"],[356,64,304,66],[356,66,304,68],[357,12,305,16,"error"],[357,17,305,21],[357,19,305,23,"err"],[357,22,305,26],[358,12,306,16,"options"],[359,10,307,12],[359,11,307,13],[360,8,308,8],[360,9,308,9],[361,6,309,4],[362,4,310,0],[362,5,310,1],[363,4,310,1],[363,11,310,1,"_createCredential"],[363,28,310,1],[363,29,310,1,"apply"],[363,34,310,1],[363,41,310,1,"arguments"],[363,50,310,1],[364,2,310,1],[365,2,310,1],[365,11,320,15,"getCredential"],[365,24,320,28,"getCredential"],[365,25,320,28,"_x2"],[365,28,320,28],[366,4,320,28],[366,11,320,28,"_getCredential"],[366,25,320,28],[366,26,320,28,"apply"],[366,31,320,28],[366,38,320,28,"arguments"],[366,47,320,28],[367,2,320,28],[368,2,320,28],[368,11,320,28,"_getCredential"],[368,26,320,28],[369,4,320,28,"_getCredential"],[369,18,320,28],[369,21,320,28,"_asyncToGenerator"],[369,38,320,28],[369,39,320,0],[369,50,320,29,"options"],[369,57,320,36],[369,59,320,38],[370,6,321,4],[370,10,321,8],[371,8,322,8],[371,12,322,14,"response"],[371,20,322,22],[371,29,322,31,"navigator"],[371,38,322,40],[371,39,322,41,"credentials"],[371,50,322,52],[371,51,322,53,"get"],[371,54,322,56],[371,55,323,8],[372,8,324,8,"options"],[372,15,324,15],[372,16,324,16],[373,8,325,8],[373,12,325,12],[373,13,325,13,"response"],[373,21,325,21],[373,23,325,23],[374,10,326,12],[374,17,326,19],[375,12,327,16,"data"],[375,16,327,20],[375,18,327,22],[375,22,327,26],[376,12,328,16,"error"],[376,17,328,21],[376,19,328,23],[376,23,328,27,"webauthn_errors_1"],[376,40,328,44],[376,41,328,45,"WebAuthnUnknownError"],[376,61,328,65],[376,62,328,66],[376,89,328,93],[376,91,328,95,"response"],[376,99,328,103],[377,10,329,12],[377,11,329,13],[378,8,330,8],[379,8,331,8],[379,12,331,12],[379,14,331,14,"response"],[379,22,331,22],[379,34,331,34,"PublicKeyCredential"],[379,53,331,53],[379,54,331,54],[379,56,331,56],[380,10,332,12],[380,17,332,19],[381,12,333,16,"data"],[381,16,333,20],[381,18,333,22],[381,22,333,26],[382,12,334,16,"error"],[382,17,334,21],[382,19,334,23],[382,23,334,27,"webauthn_errors_1"],[382,40,334,44],[382,41,334,45,"WebAuthnUnknownError"],[382,61,334,65],[382,62,334,66],[382,107,334,111],[382,109,334,113,"response"],[382,117,334,121],[383,10,335,12],[383,11,335,13],[384,8,336,8],[385,8,337,8],[385,15,337,15],[386,10,337,17,"data"],[386,14,337,21],[386,16,337,23,"response"],[386,24,337,31],[387,10,337,33,"error"],[387,15,337,38],[387,17,337,40],[388,8,337,45],[388,9,337,46],[389,6,338,4],[389,7,338,5],[389,8,339,4],[389,15,339,11,"err"],[389,18,339,14],[389,20,339,16],[390,8,340,8],[390,15,340,15],[391,10,341,12,"data"],[391,14,341,16],[391,16,341,18],[391,20,341,22],[392,10,342,12,"error"],[392,15,342,17],[392,17,342,19],[392,18,342,20],[392,19,342,21],[392,21,342,23,"webauthn_errors_1"],[392,38,342,40],[392,39,342,41,"identifyAuthenticationError"],[392,66,342,68],[392,68,342,70],[393,12,343,16,"error"],[393,17,343,21],[393,19,343,23,"err"],[393,22,343,26],[394,12,344,16,"options"],[395,10,345,12],[395,11,345,13],[396,8,346,8],[396,9,346,9],[397,6,347,4],[398,4,348,0],[398,5,348,1],[399,4,348,1],[399,11,348,1,"_getCredential"],[399,25,348,1],[399,26,348,1,"apply"],[399,31,348,1],[399,38,348,1,"arguments"],[399,47,348,1],[400,2,348,1],[401,2,349,0,"exports"],[401,9,349,7],[401,10,349,8,"DEFAULT_CREATION_OPTIONS"],[401,34,349,32],[401,37,349,35],[402,4,350,4,"hints"],[402,9,350,9],[402,11,350,11],[402,12,350,12],[402,26,350,26],[402,27,350,27],[403,4,351,4,"authenticatorSelection"],[403,26,351,26],[403,28,351,28],[404,6,352,8,"authenticatorAttachment"],[404,29,352,31],[404,31,352,33],[404,47,352,49],[405,6,353,8,"requireResidentKey"],[405,24,353,26],[405,26,353,28],[405,31,353,33],[406,6,354,8],[407,6,355,8,"userVerification"],[407,22,355,24],[407,24,355,26],[407,35,355,37],[408,6,356,8,"residentKey"],[408,17,356,19],[408,19,356,21],[409,4,357,4],[409,5,357,5],[410,4,358,4,"attestation"],[410,15,358,15],[410,17,358,17],[411,2,359,0],[411,3,359,1],[412,2,360,0,"exports"],[412,9,360,7],[412,10,360,8,"DEFAULT_REQUEST_OPTIONS"],[412,33,360,31],[412,36,360,34],[413,4,361,4],[414,4,362,4,"userVerification"],[414,20,362,20],[414,22,362,22],[414,33,362,33],[415,4,363,4,"hints"],[415,9,363,9],[415,11,363,11],[415,12,363,12],[415,26,363,26],[416,2,364,0],[416,3,364,1],[417,2,365,0],[417,11,365,9,"deepMerge"],[417,20,365,18,"deepMerge"],[417,21,365,18],[417,23,365,31],[418,4,366,4],[418,8,366,10,"isObject"],[418,16,366,18],[418,19,366,22,"val"],[418,22,366,25],[418,26,366,30,"val"],[418,29,366,33],[418,34,366,38],[418,38,366,42],[418,42,366,46],[418,49,366,53,"val"],[418,52,366,56],[418,57,366,61],[418,65,366,69],[418,69,366,73],[418,70,366,74,"Array"],[418,75,366,79],[418,76,366,80,"isArray"],[418,83,366,87],[418,84,366,88,"val"],[418,87,366,91],[418,88,366,92],[419,4,367,4],[419,8,367,10,"isArrayBufferLike"],[419,25,367,27],[419,28,367,31,"val"],[419,31,367,34],[419,35,367,39,"val"],[419,38,367,42],[419,50,367,54,"ArrayBuffer"],[419,61,367,65],[419,65,367,69,"ArrayBuffer"],[419,76,367,80],[419,77,367,81,"isView"],[419,83,367,87],[419,84,367,88,"val"],[419,87,367,91],[419,88,367,92],[420,4,368,4],[420,8,368,10,"result"],[420,14,368,16],[420,17,368,19],[420,18,368,20],[420,19,368,21],[421,4,368,22],[421,13,368,22,"_len"],[421,17,368,22],[421,20,368,22,"arguments"],[421,29,368,22],[421,30,368,22,"length"],[421,36,368,22],[421,38,365,22,"sources"],[421,45,365,29],[421,52,365,29,"Array"],[421,57,365,29],[421,58,365,29,"_len"],[421,62,365,29],[421,65,365,29,"_key"],[421,69,365,29],[421,75,365,29,"_key"],[421,79,365,29],[421,82,365,29,"_len"],[421,86,365,29],[421,88,365,29,"_key"],[421,92,365,29],[422,6,365,22,"sources"],[422,13,365,29],[422,14,365,29,"_key"],[422,18,365,29],[422,22,365,29,"arguments"],[422,31,365,29],[422,32,365,29,"_key"],[422,36,365,29],[423,4,365,29],[424,4,369,4],[424,9,369,9],[424,13,369,15,"source"],[424,19,369,21],[424,23,369,25,"sources"],[424,30,369,32],[424,32,369,34],[425,6,370,8],[425,10,370,12],[425,11,370,13,"source"],[425,17,370,19],[425,19,371,12],[426,6,372,8],[426,11,372,13],[426,15,372,19,"key"],[426,18,372,22],[426,22,372,26,"source"],[426,28,372,32],[426,30,372,34],[427,8,373,12],[427,12,373,18,"value"],[427,17,373,23],[427,20,373,26,"source"],[427,26,373,32],[427,27,373,33,"key"],[427,30,373,36],[427,31,373,37],[428,8,374,12],[428,12,374,16,"value"],[428,17,374,21],[428,22,374,26,"undefined"],[428,31,374,35],[428,33,375,16],[429,8,376,12],[429,12,376,16,"Array"],[429,17,376,21],[429,18,376,22,"isArray"],[429,25,376,29],[429,26,376,30,"value"],[429,31,376,35],[429,32,376,36],[429,34,376,38],[430,10,377,16],[431,10,378,16,"result"],[431,16,378,22],[431,17,378,23,"key"],[431,20,378,26],[431,21,378,27],[431,24,378,30,"value"],[431,29,378,35],[432,8,379,12],[432,9,379,13],[432,15,380,17],[432,19,380,21,"isArrayBufferLike"],[432,36,380,38],[432,37,380,39,"value"],[432,42,380,44],[432,43,380,45],[432,45,380,47],[433,10,381,16,"result"],[433,16,381,22],[433,17,381,23,"key"],[433,20,381,26],[433,21,381,27],[433,24,381,30,"value"],[433,29,381,35],[434,8,382,12],[434,9,382,13],[434,15,383,17],[434,19,383,21,"isObject"],[434,27,383,29],[434,28,383,30,"value"],[434,33,383,35],[434,34,383,36],[434,36,383,38],[435,10,384,16],[435,14,384,22,"existing"],[435,22,384,30],[435,25,384,33,"result"],[435,31,384,39],[435,32,384,40,"key"],[435,35,384,43],[435,36,384,44],[436,10,385,16],[436,14,385,20,"isObject"],[436,22,385,28],[436,23,385,29,"existing"],[436,31,385,37],[436,32,385,38],[436,34,385,40],[437,12,386,20,"result"],[437,18,386,26],[437,19,386,27,"key"],[437,22,386,30],[437,23,386,31],[437,26,386,34,"deepMerge"],[437,35,386,43],[437,36,386,44,"existing"],[437,44,386,52],[437,46,386,54,"value"],[437,51,386,59],[437,52,386,60],[438,10,387,16],[438,11,387,17],[438,17,388,21],[439,12,389,20,"result"],[439,18,389,26],[439,19,389,27,"key"],[439,22,389,30],[439,23,389,31],[439,26,389,34,"deepMerge"],[439,35,389,43],[439,36,389,44,"value"],[439,41,389,49],[439,42,389,50],[440,10,390,16],[441,8,391,12],[441,9,391,13],[441,15,392,17],[442,10,393,16,"result"],[442,16,393,22],[442,17,393,23,"key"],[442,20,393,26],[442,21,393,27],[442,24,393,30,"value"],[442,29,393,35],[443,8,394,12],[444,6,395,8],[445,4,396,4],[446,4,397,4],[446,11,397,11,"result"],[446,17,397,17],[447,2,398,0],[448,2,399,0],[449,0,400,0],[450,0,401,0],[451,0,402,0],[452,0,403,0],[453,0,404,0],[454,0,405,0],[455,0,406,0],[456,0,407,0],[457,0,408,0],[458,2,409,0],[458,11,409,9,"mergeCredentialCreationOptions"],[458,41,409,39,"mergeCredentialCreationOptions"],[458,42,409,40,"baseOptions"],[458,53,409,51],[458,55,409,53,"overrides"],[458,64,409,62],[458,66,409,64],[459,4,410,4],[459,11,410,11,"deepMerge"],[459,20,410,20],[459,21,410,21,"exports"],[459,28,410,28],[459,29,410,29,"DEFAULT_CREATION_OPTIONS"],[459,53,410,53],[459,55,410,55,"baseOptions"],[459,66,410,66],[459,68,410,68,"overrides"],[459,77,410,77],[459,81,410,81],[459,82,410,82],[459,83,410,83],[459,84,410,84],[460,2,411,0],[461,2,412,0],[462,0,413,0],[463,0,414,0],[464,0,415,0],[465,0,416,0],[466,0,417,0],[467,0,418,0],[468,0,419,0],[469,0,420,0],[470,2,421,0],[470,11,421,9,"mergeCredentialRequestOptions"],[470,40,421,38,"mergeCredentialRequestOptions"],[470,41,421,39,"baseOptions"],[470,52,421,50],[470,54,421,52,"overrides"],[470,63,421,61],[470,65,421,63],[471,4,422,4],[471,11,422,11,"deepMerge"],[471,20,422,20],[471,21,422,21,"exports"],[471,28,422,28],[471,29,422,29,"DEFAULT_REQUEST_OPTIONS"],[471,52,422,52],[471,54,422,54,"baseOptions"],[471,65,422,65],[471,67,422,67,"overrides"],[471,76,422,76],[471,80,422,80],[471,81,422,81],[471,82,422,82],[471,83,422,83],[472,2,423,0],[473,2,424,0],[474,0,425,0],[475,0,426,0],[476,0,427,0],[477,0,428,0],[478,0,429,0],[479,0,430,0],[480,0,431,0],[481,2,424,0],[481,6,432,6,"WebAuthnApi"],[481,17,432,17],[482,4,433,4],[482,13,433,4,"WebAuthnApi"],[482,25,433,16,"client"],[482,31,433,22],[482,33,433,24],[483,6,433,24,"_classCallCheck"],[483,21,433,24],[483,28,433,24,"WebAuthnApi"],[483,39,433,24],[484,6,434,8],[484,10,434,12],[484,11,434,13,"client"],[484,17,434,19],[484,20,434,22,"client"],[484,26,434,28],[485,6,435,8],[486,6,436,8],[486,10,436,12],[486,11,436,13,"enroll"],[486,17,436,19],[486,20,436,22],[486,24,436,26],[486,25,436,27,"_enroll"],[486,32,436,34],[486,33,436,35,"bind"],[486,37,436,39],[486,38,436,40],[486,42,436,44],[486,43,436,45],[487,6,437,8],[487,10,437,12],[487,11,437,13,"challenge"],[487,20,437,22],[487,23,437,25],[487,27,437,29],[487,28,437,30,"_challenge"],[487,38,437,40],[487,39,437,41,"bind"],[487,43,437,45],[487,44,437,46],[487,48,437,50],[487,49,437,51],[488,6,438,8],[488,10,438,12],[488,11,438,13,"verify"],[488,17,438,19],[488,20,438,22],[488,24,438,26],[488,25,438,27,"_verify"],[488,32,438,34],[488,33,438,35,"bind"],[488,37,438,39],[488,38,438,40],[488,42,438,44],[488,43,438,45],[489,6,439,8],[489,10,439,12],[489,11,439,13,"authenticate"],[489,23,439,25],[489,26,439,28],[489,30,439,32],[489,31,439,33,"_authenticate"],[489,44,439,46],[489,45,439,47,"bind"],[489,49,439,51],[489,50,439,52],[489,54,439,56],[489,55,439,57],[490,6,440,8],[490,10,440,12],[490,11,440,13,"register"],[490,19,440,21],[490,22,440,24],[490,26,440,28],[490,27,440,29,"_register"],[490,36,440,38],[490,37,440,39,"bind"],[490,41,440,43],[490,42,440,44],[490,46,440,48],[490,47,440,49],[491,4,441,4],[492,4,442,4],[493,0,443,0],[494,0,444,0],[495,0,445,0],[496,0,446,0],[497,0,447,0],[498,0,448,0],[499,0,449,0],[500,0,450,0],[501,4,442,4],[501,11,442,4,"_createClass"],[501,23,442,4],[501,24,442,4,"WebAuthnApi"],[501,35,442,4],[502,6,442,4,"key"],[502,9,442,4],[503,6,442,4,"value"],[503,11,442,4],[504,8,442,4],[504,12,442,4,"_enroll2"],[504,20,442,4],[504,23,442,4,"_asyncToGenerator"],[504,40,442,4],[504,41,451,4],[504,52,451,18,"params"],[504,58,451,24],[504,60,451,26],[505,10,452,8],[505,17,452,15],[505,21,452,19],[505,22,452,20,"client"],[505,28,452,26],[505,29,452,27,"mfa"],[505,32,452,30],[505,33,452,31,"enroll"],[505,39,452,37],[505,40,452,38,"Object"],[505,46,452,44],[505,47,452,45,"assign"],[505,53,452,51],[505,54,452,52,"Object"],[505,60,452,58],[505,61,452,59,"assign"],[505,67,452,65],[505,68,452,66],[505,69,452,67],[505,70,452,68],[505,72,452,70,"params"],[505,78,452,76],[505,79,452,77],[505,81,452,79],[506,12,452,81,"factorType"],[506,22,452,91],[506,24,452,93],[507,10,452,104],[507,11,452,105],[507,12,452,106],[507,13,452,107],[508,8,453,4],[508,9,453,5],[509,8,453,5],[509,17,451,10,"_enroll"],[509,24,451,17,"_enroll"],[509,25,451,17,"_x3"],[509,28,451,17],[510,10,451,17],[510,17,451,17,"_enroll2"],[510,25,451,17],[510,26,451,17,"apply"],[510,31,451,17],[510,38,451,17,"arguments"],[510,47,451,17],[511,8,451,17],[512,8,451,17],[512,15,451,10,"_enroll"],[512,22,451,17],[513,6,451,17],[514,6,454,4],[515,0,455,0],[516,0,456,0],[517,0,457,0],[518,0,458,0],[519,0,459,0],[520,0,460,0],[521,0,461,0],[522,0,462,0],[523,0,463,0],[524,0,464,0],[525,0,465,0],[526,0,466,0],[527,0,467,0],[528,6,454,4],[529,4,454,4],[530,6,454,4,"key"],[530,9,454,4],[531,6,454,4,"value"],[531,11,454,4],[532,8,454,4],[532,12,454,4,"_challenge2"],[532,23,454,4],[532,26,454,4,"_asyncToGenerator"],[532,43,454,4],[532,44,468,4],[532,55,468,4,"_ref"],[532,59,468,4],[532,61,468,68,"overrides"],[532,70,468,77],[532,72,468,79],[533,10,468,79],[533,14,468,23,"factorId"],[533,22,468,31],[533,25,468,31,"_ref"],[533,29,468,31],[533,30,468,23,"factorId"],[533,38,468,31],[534,12,468,33,"webauthn"],[534,20,468,41],[534,23,468,41,"_ref"],[534,27,468,41],[534,28,468,33,"webauthn"],[534,36,468,41],[535,12,468,43,"friendlyName"],[535,24,468,55],[535,27,468,55,"_ref"],[535,31,468,55],[535,32,468,43,"friendlyName"],[535,44,468,55],[536,12,468,57,"signal"],[536,18,468,63],[536,21,468,63,"_ref"],[536,25,468,63],[536,26,468,57,"signal"],[536,32,468,63],[537,10,469,8],[537,14,469,12],[538,12,470,12],[539,12,471,12],[539,16,471,12,"_yield$this$client$mf"],[539,37,471,12],[539,46,471,77],[539,50,471,81],[539,51,471,82,"client"],[539,57,471,88],[539,58,471,89,"mfa"],[539,61,471,92],[539,62,471,93,"challenge"],[539,71,471,102],[539,72,471,103],[540,16,472,16,"factorId"],[540,24,472,24],[541,16,473,16,"webauthn"],[542,14,474,12],[542,15,474,13],[542,16,474,14],[543,14,471,26,"challengeResponse"],[543,31,471,43],[543,34,471,43,"_yield$this$client$mf"],[543,55,471,43],[543,56,471,20,"data"],[543,60,471,24],[544,14,471,52,"challengeError"],[544,28,471,66],[544,31,471,66,"_yield$this$client$mf"],[544,52,471,66],[544,53,471,45,"error"],[544,58,471,50],[545,12,475,12],[545,16,475,16],[545,17,475,17,"challengeResponse"],[545,34,475,34],[545,36,475,36],[546,14,476,16],[546,21,476,23],[547,16,476,25,"data"],[547,20,476,29],[547,22,476,31],[547,26,476,35],[548,16,476,37,"error"],[548,21,476,42],[548,23,476,44,"challengeError"],[549,14,476,59],[549,15,476,60],[550,12,477,12],[551,12,478,12],[551,16,478,18,"abortSignal"],[551,27,478,29],[551,30,478,32,"signal"],[551,36,478,38],[551,41,478,43],[551,45,478,47],[551,49,478,51,"signal"],[551,55,478,57],[551,60,478,62],[551,65,478,67],[551,66,478,68],[551,69,478,71,"signal"],[551,75,478,77],[551,78,478,80,"exports"],[551,85,478,87],[551,86,478,88,"webAuthnAbortService"],[551,106,478,108],[551,107,478,109,"createNewAbortSignal"],[551,127,478,129],[551,128,478,130],[551,129,478,131],[552,12,479,12],[553,12,480,12],[553,16,480,16,"challengeResponse"],[553,33,480,33],[553,34,480,34,"webauthn"],[553,42,480,42],[553,43,480,43,"type"],[553,47,480,47],[553,52,480,52],[553,60,480,60],[553,62,480,62],[554,14,481,16],[554,18,481,24,"user"],[554,22,481,28],[554,25,481,33,"challengeResponse"],[554,42,481,50],[554,43,481,51,"webauthn"],[554,51,481,59],[554,52,481,60,"credential_options"],[554,70,481,78],[554,71,481,79,"publicKey"],[554,80,481,88],[554,81,481,24,"user"],[554,85,481,28],[555,14,482,16],[555,18,482,20],[555,19,482,21,"user"],[555,23,482,25],[555,24,482,26,"name"],[555,28,482,30],[555,30,482,32],[556,16,483,20,"user"],[556,20,483,24],[556,21,483,25,"name"],[556,25,483,29],[556,28,483,32],[556,31,483,35,"user"],[556,35,483,39],[556,36,483,40,"id"],[556,38,483,42],[556,42,483,46,"friendlyName"],[556,54,483,58],[556,56,483,60],[557,14,484,16],[558,14,485,16],[558,18,485,20],[558,19,485,21,"user"],[558,23,485,25],[558,24,485,26,"displayName"],[558,35,485,37],[558,37,485,39],[559,16,486,20,"user"],[559,20,486,24],[559,21,486,25,"displayName"],[559,32,486,36],[559,35,486,39,"user"],[559,39,486,43],[559,40,486,44,"name"],[559,44,486,48],[560,14,487,16],[561,12,488,12],[562,12,489,12],[562,20,489,20,"challengeResponse"],[562,37,489,37],[562,38,489,38,"webauthn"],[562,46,489,46],[562,47,489,47,"type"],[562,51,489,51],[563,14,490,16],[563,19,490,21],[563,27,490,29],[564,16,490,31],[565,18,491,20],[565,22,491,26,"options"],[565,29,491,33],[565,32,491,36,"mergeCredentialCreationOptions"],[565,62,491,66],[565,63,491,67,"challengeResponse"],[565,80,491,84],[565,81,491,85,"webauthn"],[565,89,491,93],[565,90,491,94,"credential_options"],[565,108,491,112],[565,109,491,113,"publicKey"],[565,118,491,122],[565,120,491,124,"overrides"],[565,129,491,133],[565,134,491,138],[565,138,491,142],[565,142,491,146,"overrides"],[565,151,491,155],[565,156,491,160],[565,161,491,165],[565,162,491,166],[565,165,491,169],[565,170,491,174],[565,171,491,175],[565,174,491,178,"overrides"],[565,183,491,187],[565,184,491,188,"create"],[565,190,491,194],[565,191,491,195],[566,18,492,20],[566,22,492,20,"_yield$createCredenti"],[566,43,492,20],[566,52,492,50,"createCredential"],[566,68,492,66],[566,69,492,67],[567,22,493,24,"publicKey"],[567,31,493,33],[567,33,493,35,"options"],[567,40,493,42],[568,22,494,24,"signal"],[568,28,494,30],[568,30,494,32,"abortSignal"],[569,20,495,20],[569,21,495,21],[569,22,495,22],[570,20,492,28,"data"],[570,24,492,32],[570,27,492,32,"_yield$createCredenti"],[570,48,492,32],[570,49,492,28,"data"],[570,53,492,32],[571,20,492,34,"error"],[571,25,492,39],[571,28,492,39,"_yield$createCredenti"],[571,49,492,39],[571,50,492,34,"error"],[571,55,492,39],[572,18,496,20],[572,22,496,24,"data"],[572,26,496,28],[572,28,496,30],[573,20,497,24],[573,27,497,31],[574,22,498,28,"data"],[574,26,498,32],[574,28,498,34],[575,24,499,32,"factorId"],[575,32,499,40],[576,24,500,32,"challengeId"],[576,35,500,43],[576,37,500,45,"challengeResponse"],[576,54,500,62],[576,55,500,63,"id"],[576,57,500,65],[577,24,501,32,"webauthn"],[577,32,501,40],[577,34,501,42],[578,26,502,36,"type"],[578,30,502,40],[578,32,502,42,"challengeResponse"],[578,49,502,59],[578,50,502,60,"webauthn"],[578,58,502,68],[578,59,502,69,"type"],[578,63,502,73],[579,26,503,36,"credential_response"],[579,45,503,55],[579,47,503,57,"data"],[580,24,504,32],[581,22,505,28],[581,23,505,29],[582,22,506,28,"error"],[582,27,506,33],[582,29,506,35],[583,20,507,24],[583,21,507,25],[584,18,508,20],[585,18,509,20],[585,25,509,27],[586,20,509,29,"data"],[586,24,509,33],[586,26,509,35],[586,30,509,39],[587,20,509,41,"error"],[588,18,509,47],[588,19,509,48],[589,16,510,16],[590,14,511,16],[590,19,511,21],[590,28,511,30],[591,16,511,32],[592,18,512,20],[592,22,512,26,"options"],[592,30,512,33],[592,33,512,36,"mergeCredentialRequestOptions"],[592,62,512,65],[592,63,512,66,"challengeResponse"],[592,80,512,83],[592,81,512,84,"webauthn"],[592,89,512,92],[592,90,512,93,"credential_options"],[592,108,512,111],[592,109,512,112,"publicKey"],[592,118,512,121],[592,120,512,123,"overrides"],[592,129,512,132],[592,134,512,137],[592,138,512,141],[592,142,512,145,"overrides"],[592,151,512,154],[592,156,512,159],[592,161,512,164],[592,162,512,165],[592,165,512,168],[592,170,512,173],[592,171,512,174],[592,174,512,177,"overrides"],[592,183,512,186],[592,184,512,187,"request"],[592,191,512,194],[592,192,512,195],[593,18,513,20],[593,22,513,20,"_yield$getCredential"],[593,42,513,20],[593,51,513,50,"getCredential"],[593,64,513,63],[593,65,513,64,"Object"],[593,71,513,70],[593,72,513,71,"assign"],[593,78,513,77],[593,79,513,78,"Object"],[593,85,513,84],[593,86,513,85,"assign"],[593,92,513,91],[593,93,513,92],[593,94,513,93],[593,95,513,94],[593,97,513,96,"challengeResponse"],[593,114,513,113],[593,115,513,114,"webauthn"],[593,123,513,122],[593,124,513,123,"credential_options"],[593,142,513,141],[593,143,513,142],[593,145,513,144],[594,22,513,146,"publicKey"],[594,31,513,155],[594,33,513,157,"options"],[594,41,513,164],[595,22,513,166,"signal"],[595,28,513,172],[595,30,513,174,"abortSignal"],[596,20,513,186],[596,21,513,187],[596,22,513,188],[596,23,513,189],[597,20,513,28,"data"],[597,25,513,32],[597,28,513,32,"_yield$getCredential"],[597,48,513,32],[597,49,513,28,"data"],[597,53,513,32],[598,20,513,34,"error"],[598,26,513,39],[598,29,513,39,"_yield$getCredential"],[598,49,513,39],[598,50,513,34,"error"],[598,55,513,39],[599,18,514,20],[599,22,514,24,"data"],[599,27,514,28],[599,29,514,30],[600,20,515,24],[600,27,515,31],[601,22,516,28,"data"],[601,26,516,32],[601,28,516,34],[602,24,517,32,"factorId"],[602,32,517,40],[603,24,518,32,"challengeId"],[603,35,518,43],[603,37,518,45,"challengeResponse"],[603,54,518,62],[603,55,518,63,"id"],[603,57,518,65],[604,24,519,32,"webauthn"],[604,32,519,40],[604,34,519,42],[605,26,520,36,"type"],[605,30,520,40],[605,32,520,42,"challengeResponse"],[605,49,520,59],[605,50,520,60,"webauthn"],[605,58,520,68],[605,59,520,69,"type"],[605,63,520,73],[606,26,521,36,"credential_response"],[606,45,521,55],[606,47,521,57,"data"],[607,24,522,32],[608,22,523,28],[608,23,523,29],[609,22,524,28,"error"],[609,27,524,33],[609,29,524,35],[610,20,525,24],[610,21,525,25],[611,18,526,20],[612,18,527,20],[612,25,527,27],[613,20,527,29,"data"],[613,24,527,33],[613,26,527,35],[613,30,527,39],[614,20,527,41,"error"],[614,25,527,46],[614,27,527,41,"error"],[615,18,527,47],[615,19,527,48],[616,16,528,16],[617,12,529,12],[618,10,530,8],[618,11,530,9],[618,12,531,8],[618,19,531,15,"error"],[618,24,531,20],[618,26,531,22],[619,12,532,12],[619,16,532,16],[619,17,532,17],[619,18,532,18],[619,20,532,20,"errors_1"],[619,28,532,28],[619,29,532,29,"isAuthError"],[619,40,532,40],[619,42,532,42,"error"],[619,47,532,47],[619,48,532,48],[619,50,532,50],[620,14,533,16],[620,21,533,23],[621,16,533,25,"data"],[621,20,533,29],[621,22,533,31],[621,26,533,35],[622,16,533,37,"error"],[623,14,533,43],[623,15,533,44],[624,12,534,12],[625,12,535,12],[625,19,535,19],[626,14,536,16,"data"],[626,18,536,20],[626,20,536,22],[626,24,536,26],[627,14,537,16,"error"],[627,19,537,21],[627,21,537,23],[627,25,537,27,"errors_1"],[627,33,537,35],[627,34,537,36,"AuthUnknownError"],[627,50,537,52],[627,51,537,53],[627,82,537,84],[627,84,537,86,"error"],[627,89,537,91],[628,12,538,12],[628,13,538,13],[629,10,539,8],[630,8,540,4],[630,9,540,5],[631,8,540,5],[631,17,468,10,"_challenge"],[631,27,468,20,"_challenge"],[631,28,468,20,"_x4"],[631,31,468,20],[631,33,468,20,"_x5"],[631,36,468,20],[632,10,468,20],[632,17,468,20,"_challenge2"],[632,28,468,20],[632,29,468,20,"apply"],[632,34,468,20],[632,41,468,20,"arguments"],[632,50,468,20],[633,8,468,20],[634,8,468,20],[634,15,468,10,"_challenge"],[634,25,468,20],[635,6,468,20],[636,6,541,4],[637,0,542,0],[638,0,543,0],[639,0,544,0],[640,0,545,0],[641,0,546,0],[642,0,547,0],[643,0,548,0],[644,0,549,0],[645,0,550,0],[646,0,551,0],[647,0,552,0],[648,6,541,4],[649,4,541,4],[650,6,541,4,"key"],[650,9,541,4],[651,6,541,4,"value"],[651,11,541,4],[652,8,541,4],[652,12,541,4,"_verify2"],[652,20,541,4],[652,23,541,4,"_asyncToGenerator"],[652,40,541,4],[652,41,553,4],[652,52,553,4,"_ref2"],[652,57,553,4],[652,59,553,56],[653,10,553,56],[653,14,553,20,"challengeId"],[653,25,553,31],[653,28,553,31,"_ref2"],[653,33,553,31],[653,34,553,20,"challengeId"],[653,45,553,31],[654,12,553,33,"factorId"],[654,20,553,41],[654,23,553,41,"_ref2"],[654,28,553,41],[654,29,553,33,"factorId"],[654,37,553,41],[655,12,553,43,"webauthn"],[655,20,553,51],[655,23,553,51,"_ref2"],[655,28,553,51],[655,29,553,43,"webauthn"],[655,37,553,51],[656,10,554,8],[656,17,554,15],[656,21,554,19],[656,22,554,20,"client"],[656,28,554,26],[656,29,554,27,"mfa"],[656,32,554,30],[656,33,554,31,"verify"],[656,39,554,37],[656,40,554,38],[657,12,555,12,"factorId"],[657,20,555,20],[658,12,556,12,"challengeId"],[658,23,556,23],[659,12,557,12,"webauthn"],[659,20,557,20],[659,22,557,22,"webauthn"],[660,10,558,8],[660,11,558,9],[660,12,558,10],[661,8,559,4],[661,9,559,5],[662,8,559,5],[662,17,553,10,"_verify"],[662,24,553,17,"_verify"],[662,25,553,17,"_x6"],[662,28,553,17],[663,10,553,17],[663,17,553,17,"_verify2"],[663,25,553,17],[663,26,553,17,"apply"],[663,31,553,17],[663,38,553,17,"arguments"],[663,47,553,17],[664,8,553,17],[665,8,553,17],[665,15,553,10,"_verify"],[665,22,553,17],[666,6,553,17],[667,6,560,4],[668,0,561,0],[669,0,562,0],[670,0,563,0],[671,0,564,0],[672,0,565,0],[673,0,566,0],[674,0,567,0],[675,0,568,0],[676,0,569,0],[677,0,570,0],[678,0,571,0],[679,0,572,0],[680,0,573,0],[681,0,574,0],[682,0,575,0],[683,6,560,4],[684,4,560,4],[685,6,560,4,"key"],[685,9,560,4],[686,6,560,4,"value"],[686,11,560,4],[687,8,560,4],[687,12,560,4,"_authenticate2"],[687,26,560,4],[687,29,560,4,"_asyncToGenerator"],[687,46,560,4],[687,47,576,4],[687,58,576,4,"_ref3"],[687,63,576,4],[687,65,576,221,"overrides"],[687,74,576,230],[687,76,576,232],[688,10,576,232],[688,14,576,26,"factorId"],[688,22,576,34],[688,25,576,34,"_ref3"],[688,30,576,34],[688,31,576,26,"factorId"],[688,39,576,34],[689,12,576,34,"_ref3$webauthn"],[689,26,576,34],[689,29,576,34,"_ref3"],[689,34,576,34],[689,35,576,36,"webauthn"],[689,43,576,44],[690,12,576,44,"_ref3$webauthn$rpId"],[690,31,576,44],[690,34,576,44,"_ref3$webauthn"],[690,48,576,44],[690,49,576,48,"rpId"],[690,53,576,52],[691,12,576,48,"rpId"],[691,16,576,52],[691,19,576,52,"_ref3$webauthn$rpId"],[691,38,576,52],[691,52,576,55],[691,59,576,62,"window"],[691,65,576,68],[691,70,576,73],[691,81,576,84],[691,84,576,87,"window"],[691,90,576,93],[691,91,576,94,"location"],[691,99,576,102],[691,100,576,103,"hostname"],[691,108,576,111],[691,111,576,114,"undefined"],[691,120,576,123],[691,123,576,123,"_ref3$webauthn$rpId"],[691,142,576,123],[692,12,576,123,"_ref3$webauthn$rpOrig"],[692,33,576,123],[692,36,576,123,"_ref3$webauthn"],[692,50,576,123],[692,51,576,125,"rpOrigins"],[692,60,576,134],[693,12,576,125,"rpOrigins"],[693,21,576,134],[693,24,576,134,"_ref3$webauthn$rpOrig"],[693,45,576,134],[693,59,576,137],[693,66,576,144,"window"],[693,72,576,150],[693,77,576,155],[693,88,576,166],[693,91,576,169],[693,92,576,170,"window"],[693,98,576,176],[693,99,576,177,"location"],[693,107,576,185],[693,108,576,186,"origin"],[693,114,576,192],[693,115,576,193],[693,118,576,196,"undefined"],[693,127,576,205],[693,130,576,205,"_ref3$webauthn$rpOrig"],[693,151,576,205],[694,12,576,207,"signal"],[694,18,576,213],[694,21,576,213,"_ref3$webauthn"],[694,35,576,213],[694,36,576,207,"signal"],[694,42,576,213],[695,10,577,8],[695,14,577,12],[695,15,577,13,"rpId"],[695,19,577,17],[695,21,577,19],[696,12,578,12],[696,19,578,19],[697,14,579,16,"data"],[697,18,579,20],[697,20,579,22],[697,24,579,26],[698,14,580,16,"error"],[698,19,580,21],[698,21,580,23],[698,25,580,27,"errors_1"],[698,33,580,35],[698,34,580,36,"AuthError"],[698,43,580,45],[698,44,580,46],[698,90,580,92],[699,12,581,12],[699,13,581,13],[700,10,582,8],[701,10,583,8],[701,14,583,12],[702,12,584,12],[702,16,584,16],[702,17,584,17,"browserSupportsWebAuthn"],[702,40,584,40],[702,41,584,41],[702,42,584,42],[702,44,584,44],[703,14,585,16],[703,21,585,23],[704,16,586,20,"data"],[704,20,586,24],[704,22,586,26],[704,26,586,30],[705,16,587,20,"error"],[705,21,587,25],[705,23,587,27],[705,27,587,31,"errors_1"],[705,35,587,39],[705,36,587,40,"AuthUnknownError"],[705,52,587,56],[705,53,587,57],[705,88,587,92],[705,90,587,94],[705,94,587,98],[706,14,588,16],[706,15,588,17],[707,12,589,12],[708,12,590,12],[709,12,591,12],[709,16,591,12,"_yield$this$challenge"],[709,37,591,12],[709,46,591,77],[709,50,591,81],[709,51,591,82,"challenge"],[709,60,591,91],[709,61,591,92],[710,16,592,16,"factorId"],[710,24,592,24],[711,16,593,16,"webauthn"],[711,24,593,24],[711,26,593,26],[712,18,593,28,"rpId"],[712,22,593,32],[713,18,593,34,"rpOrigins"],[714,16,593,44],[714,17,593,45],[715,16,594,16,"signal"],[716,14,595,12],[716,15,595,13],[716,17,595,15],[717,16,595,17,"request"],[717,23,595,24],[717,25,595,26,"overrides"],[718,14,595,36],[718,15,595,37],[718,16,595,38],[719,14,591,26,"challengeResponse"],[719,31,591,43],[719,34,591,43,"_yield$this$challenge"],[719,55,591,43],[719,56,591,20,"data"],[719,60,591,24],[720,14,591,52,"challengeError"],[720,28,591,66],[720,31,591,66,"_yield$this$challenge"],[720,52,591,66],[720,53,591,45,"error"],[720,58,591,50],[721,12,596,12],[721,16,596,16],[721,17,596,17,"challengeResponse"],[721,34,596,34],[721,36,596,36],[722,14,597,16],[722,21,597,23],[723,16,597,25,"data"],[723,20,597,29],[723,22,597,31],[723,26,597,35],[724,16,597,37,"error"],[724,21,597,42],[724,23,597,44,"challengeError"],[725,14,597,59],[725,15,597,60],[726,12,598,12],[727,12,599,12],[727,16,599,20,"webauthn"],[727,24,599,28],[727,27,599,33,"challengeResponse"],[727,44,599,50],[727,45,599,20,"webauthn"],[727,53,599,28],[728,12,600,12],[729,12,601,12],[729,19,601,19],[729,23,601,23],[729,24,601,24,"_verify"],[729,31,601,31],[729,32,601,32],[730,14,602,16,"factorId"],[730,22,602,24],[731,14,603,16,"challengeId"],[731,25,603,27],[731,27,603,29,"challengeResponse"],[731,44,603,46],[731,45,603,47,"challengeId"],[731,56,603,58],[732,14,604,16,"webauthn"],[732,22,604,24],[732,24,604,26],[733,16,605,20,"type"],[733,20,605,24],[733,22,605,26,"webauthn"],[733,30,605,34],[733,31,605,35,"type"],[733,35,605,39],[734,16,606,20,"rpId"],[734,20,606,24],[735,16,607,20,"rpOrigins"],[735,25,607,29],[736,16,608,20,"credential_response"],[736,35,608,39],[736,37,608,41,"webauthn"],[736,45,608,49],[736,46,608,50,"credential_response"],[737,14,609,16],[738,12,610,12],[738,13,610,13],[738,14,610,14],[739,10,611,8],[739,11,611,9],[739,12,612,8],[739,19,612,15,"error"],[739,24,612,20],[739,26,612,22],[740,12,613,12],[740,16,613,16],[740,17,613,17],[740,18,613,18],[740,20,613,20,"errors_1"],[740,28,613,28],[740,29,613,29,"isAuthError"],[740,40,613,40],[740,42,613,42,"error"],[740,47,613,47],[740,48,613,48],[740,50,613,50],[741,14,614,16],[741,21,614,23],[742,16,614,25,"data"],[742,20,614,29],[742,22,614,31],[742,26,614,35],[743,16,614,37,"error"],[744,14,614,43],[744,15,614,44],[745,12,615,12],[746,12,616,12],[746,19,616,19],[747,14,617,16,"data"],[747,18,617,20],[747,20,617,22],[747,24,617,26],[748,14,618,16,"error"],[748,19,618,21],[748,21,618,23],[748,25,618,27,"errors_1"],[748,33,618,35],[748,34,618,36,"AuthUnknownError"],[748,50,618,52],[748,51,618,53],[748,85,618,87],[748,87,618,89,"error"],[748,92,618,94],[749,12,619,12],[749,13,619,13],[750,10,620,8],[751,8,621,4],[751,9,621,5],[752,8,621,5],[752,17,576,10,"_authenticate"],[752,30,576,23,"_authenticate"],[752,31,576,23,"_x7"],[752,34,576,23],[752,36,576,23,"_x8"],[752,39,576,23],[753,10,576,23],[753,17,576,23,"_authenticate2"],[753,31,576,23],[753,32,576,23,"apply"],[753,37,576,23],[753,44,576,23,"arguments"],[753,53,576,23],[754,8,576,23],[755,8,576,23],[755,15,576,10,"_authenticate"],[755,28,576,23],[756,6,576,23],[757,6,622,4],[758,0,623,0],[759,0,624,0],[760,0,625,0],[761,0,626,0],[762,0,627,0],[763,0,628,0],[764,0,629,0],[765,0,630,0],[766,0,631,0],[767,0,632,0],[768,0,633,0],[769,0,634,0],[770,0,635,0],[771,0,636,0],[772,6,622,4],[773,4,622,4],[774,6,622,4,"key"],[774,9,622,4],[775,6,622,4,"value"],[775,11,622,4],[776,8,622,4],[776,12,622,4,"_register2"],[776,22,622,4],[776,25,622,4,"_asyncToGenerator"],[776,42,622,4],[776,43,637,4],[776,54,637,4,"_ref4"],[776,59,637,4],[776,61,637,206,"overrides"],[776,70,637,215],[776,72,637,217],[777,10,637,217],[777,14,637,22,"friendlyName"],[777,26,637,34],[777,29,637,34,"_ref4"],[777,34,637,34],[777,35,637,22,"friendlyName"],[777,47,637,34],[778,12,637,34,"_ref4$rpId"],[778,22,637,34],[778,25,637,34,"_ref4"],[778,30,637,34],[778,31,637,36,"rpId"],[778,35,637,40],[779,12,637,36,"rpId"],[779,16,637,40],[779,19,637,40,"_ref4$rpId"],[779,29,637,40],[779,43,637,43],[779,50,637,50,"window"],[779,56,637,56],[779,61,637,61],[779,72,637,72],[779,75,637,75,"window"],[779,81,637,81],[779,82,637,82,"location"],[779,90,637,90],[779,91,637,91,"hostname"],[779,99,637,99],[779,102,637,102,"undefined"],[779,111,637,111],[779,114,637,111,"_ref4$rpId"],[779,124,637,111],[780,12,637,111,"_ref4$rpOrigins"],[780,27,637,111],[780,30,637,111,"_ref4"],[780,35,637,111],[780,36,637,113,"rpOrigins"],[780,45,637,122],[781,12,637,113,"rpOrigins"],[781,21,637,122],[781,24,637,122,"_ref4$rpOrigins"],[781,39,637,122],[781,53,637,125],[781,60,637,132,"window"],[781,66,637,138],[781,71,637,143],[781,82,637,154],[781,85,637,157],[781,86,637,158,"window"],[781,92,637,164],[781,93,637,165,"location"],[781,101,637,173],[781,102,637,174,"origin"],[781,108,637,180],[781,109,637,181],[781,112,637,184,"undefined"],[781,121,637,193],[781,124,637,193,"_ref4$rpOrigins"],[781,139,637,193],[782,12,637,195,"signal"],[782,18,637,201],[782,21,637,201,"_ref4"],[782,26,637,201],[782,27,637,195,"signal"],[782,33,637,201],[783,10,638,8],[783,14,638,12],[783,15,638,13,"rpId"],[783,19,638,17],[783,21,638,19],[784,12,639,12],[784,19,639,19],[785,14,640,16,"data"],[785,18,640,20],[785,20,640,22],[785,24,640,26],[786,14,641,16,"error"],[786,19,641,21],[786,21,641,23],[786,25,641,27,"errors_1"],[786,33,641,35],[786,34,641,36,"AuthError"],[786,43,641,45],[786,44,641,46],[786,88,641,90],[787,12,642,12],[787,13,642,13],[788,10,643,8],[789,10,644,8],[789,14,644,12],[790,12,645,12],[790,16,645,16],[790,17,645,17,"browserSupportsWebAuthn"],[790,40,645,40],[790,41,645,41],[790,42,645,42],[790,44,645,44],[791,14,646,16],[791,21,646,23],[792,16,647,20,"data"],[792,20,647,24],[792,22,647,26],[792,26,647,30],[793,16,648,20,"error"],[793,21,648,25],[793,23,648,27],[793,27,648,31,"errors_1"],[793,35,648,39],[793,36,648,40,"AuthUnknownError"],[793,52,648,56],[793,53,648,57],[793,88,648,92],[793,90,648,94],[793,94,648,98],[794,14,649,16],[794,15,649,17],[795,12,650,12],[796,12,651,12],[797,12,652,12],[797,16,652,12,"_yield$this$_enroll"],[797,35,652,12],[797,44,652,63],[797,48,652,67],[797,49,652,68,"_enroll"],[797,56,652,75],[797,57,652,76],[798,16,653,16,"friendlyName"],[799,14,654,12],[799,15,654,13],[799,16,654,14],[800,14,652,26,"factor"],[800,20,652,32],[800,23,652,32,"_yield$this$_enroll"],[800,42,652,32],[800,43,652,20,"data"],[800,47,652,24],[801,14,652,41,"enrollError"],[801,25,652,52],[801,28,652,52,"_yield$this$_enroll"],[801,47,652,52],[801,48,652,34,"error"],[801,53,652,39],[802,12,655,12],[802,16,655,16],[802,17,655,17,"factor"],[802,23,655,23],[802,25,655,25],[803,14,656,16],[803,20,656,22],[803,24,656,26],[803,25,656,27,"client"],[803,31,656,33],[803,32,656,34,"mfa"],[803,35,656,37],[803,36,657,21,"listFactors"],[803,47,657,32],[803,48,657,33],[803,49,657,34],[803,50,658,21,"then"],[803,54,658,25],[803,55,658,27,"factors"],[803,62,658,34],[803,66,658,39],[804,16,659,20],[804,20,659,24,"_a"],[804,22,659,26],[805,16,660,20],[805,23,660,27],[805,24,660,28,"_a"],[805,26,660,30],[805,29,660,33,"factors"],[805,36,660,40],[805,37,660,41,"data"],[805,41,660,45],[805,47,660,51],[805,51,660,55],[805,55,660,59,"_a"],[805,57,660,61],[805,62,660,66],[805,67,660,71],[805,68,660,72],[805,71,660,75],[805,76,660,80],[805,77,660,81],[805,80,660,84,"_a"],[805,82,660,86],[805,83,660,87,"all"],[805,86,660,90],[805,87,660,91,"find"],[805,91,660,95],[805,92,660,97,"v"],[805,93,660,98],[805,97,660,103,"v"],[805,98,660,104],[805,99,660,105,"factor_type"],[805,110,660,116],[805,115,660,121],[805,125,660,131],[805,129,661,24,"v"],[805,130,661,25],[805,131,661,26,"friendly_name"],[805,144,661,39],[805,149,661,44,"friendlyName"],[805,161,661,56],[805,165,662,24,"v"],[805,166,662,25],[805,167,662,26,"status"],[805,173,662,32],[805,178,662,37],[805,190,662,49],[805,191,662,50],[806,14,663,16],[806,15,663,17],[806,16,663,18],[806,17,664,21,"then"],[806,21,664,25],[806,22,664,27,"factor"],[806,28,664,33],[806,32,664,39,"factor"],[806,38,664,45],[806,41,664,48],[806,45,664,52],[806,46,664,53,"client"],[806,52,664,59],[806,53,664,60,"mfa"],[806,56,664,63],[806,57,664,64,"unenroll"],[806,65,664,72],[806,66,664,73],[807,16,664,75,"factorId"],[807,24,664,83],[807,26,664,85,"factor"],[807,32,664,91],[807,37,664,96],[807,41,664,100],[807,45,664,104,"factor"],[807,51,664,110],[807,56,664,115],[807,61,664,120],[807,62,664,121],[807,65,664,124],[807,70,664,129],[807,71,664,130],[807,74,664,133,"factor"],[807,80,664,139],[807,81,664,140,"id"],[808,14,664,143],[808,15,664,144],[808,16,664,145],[808,19,664,148],[808,24,664,153],[808,25,664,155],[808,26,664,156],[809,14,665,16],[809,21,665,23],[810,16,665,25,"data"],[810,20,665,29],[810,22,665,31],[810,26,665,35],[811,16,665,37,"error"],[811,21,665,42],[811,23,665,44,"enrollError"],[812,14,665,56],[812,15,665,57],[813,12,666,12],[814,12,667,12],[815,12,668,12],[815,16,668,12,"_yield$this$_challeng"],[815,37,668,12],[815,46,668,77],[815,50,668,81],[815,51,668,82,"_challenge"],[815,61,668,92],[815,62,668,93],[816,16,669,16,"factorId"],[816,24,669,24],[816,26,669,26,"factor"],[816,32,669,32],[816,33,669,33,"id"],[816,35,669,35],[817,16,670,16,"friendlyName"],[817,28,670,28],[817,30,670,30,"factor"],[817,36,670,36],[817,37,670,37,"friendly_name"],[817,50,670,50],[818,16,671,16,"webauthn"],[818,24,671,24],[818,26,671,26],[819,18,671,28,"rpId"],[819,22,671,32],[820,18,671,34,"rpOrigins"],[821,16,671,44],[821,17,671,45],[822,16,672,16,"signal"],[823,14,673,12],[823,15,673,13],[823,17,673,15],[824,16,674,16,"create"],[824,22,674,22],[824,24,674,24,"overrides"],[825,14,675,12],[825,15,675,13],[825,16,675,14],[826,14,668,26,"challengeResponse"],[826,31,668,43],[826,34,668,43,"_yield$this$_challeng"],[826,55,668,43],[826,56,668,20,"data"],[826,60,668,24],[827,14,668,52,"challengeError"],[827,28,668,66],[827,31,668,66,"_yield$this$_challeng"],[827,52,668,66],[827,53,668,45,"error"],[827,58,668,50],[828,12,676,12],[828,16,676,16],[828,17,676,17,"challengeResponse"],[828,34,676,34],[828,36,676,36],[829,14,677,16],[829,21,677,23],[830,16,677,25,"data"],[830,20,677,29],[830,22,677,31],[830,26,677,35],[831,16,677,37,"error"],[831,21,677,42],[831,23,677,44,"challengeError"],[832,14,677,59],[832,15,677,60],[833,12,678,12],[834,12,679,12],[834,19,679,19],[834,23,679,23],[834,24,679,24,"_verify"],[834,31,679,31],[834,32,679,32],[835,14,680,16,"factorId"],[835,22,680,24],[835,24,680,26,"factor"],[835,30,680,32],[835,31,680,33,"id"],[835,33,680,35],[836,14,681,16,"challengeId"],[836,25,681,27],[836,27,681,29,"challengeResponse"],[836,44,681,46],[836,45,681,47,"challengeId"],[836,56,681,58],[837,14,682,16,"webauthn"],[837,22,682,24],[837,24,682,26],[838,16,683,20,"rpId"],[838,20,683,24],[839,16,684,20,"rpOrigins"],[839,25,684,29],[840,16,685,20,"type"],[840,20,685,24],[840,22,685,26,"challengeResponse"],[840,39,685,43],[840,40,685,44,"webauthn"],[840,48,685,52],[840,49,685,53,"type"],[840,53,685,57],[841,16,686,20,"credential_response"],[841,35,686,39],[841,37,686,41,"challengeResponse"],[841,54,686,58],[841,55,686,59,"webauthn"],[841,63,686,67],[841,64,686,68,"credential_response"],[842,14,687,16],[843,12,688,12],[843,13,688,13],[843,14,688,14],[844,10,689,8],[844,11,689,9],[844,12,690,8],[844,19,690,15,"error"],[844,24,690,20],[844,26,690,22],[845,12,691,12],[845,16,691,16],[845,17,691,17],[845,18,691,18],[845,20,691,20,"errors_1"],[845,28,691,28],[845,29,691,29,"isAuthError"],[845,40,691,40],[845,42,691,42,"error"],[845,47,691,47],[845,48,691,48],[845,50,691,50],[846,14,692,16],[846,21,692,23],[847,16,692,25,"data"],[847,20,692,29],[847,22,692,31],[847,26,692,35],[848,16,692,37,"error"],[849,14,692,43],[849,15,692,44],[850,12,693,12],[851,12,694,12],[851,19,694,19],[852,14,695,16,"data"],[852,18,695,20],[852,20,695,22],[852,24,695,26],[853,14,696,16,"error"],[853,19,696,21],[853,21,696,23],[853,25,696,27,"errors_1"],[853,33,696,35],[853,34,696,36,"AuthUnknownError"],[853,50,696,52],[853,51,696,53],[853,81,696,83],[853,83,696,85,"error"],[853,88,696,90],[854,12,697,12],[854,13,697,13],[855,10,698,8],[856,8,699,4],[856,9,699,5],[857,8,699,5],[857,17,637,10,"_register"],[857,26,637,19,"_register"],[857,27,637,19,"_x9"],[857,30,637,19],[857,32,637,19,"_x0"],[857,35,637,19],[858,10,637,19],[858,17,637,19,"_register2"],[858,27,637,19],[858,28,637,19,"apply"],[858,33,637,19],[858,40,637,19,"arguments"],[858,49,637,19],[859,8,637,19],[860,8,637,19],[860,15,637,10,"_register"],[860,24,637,19],[861,6,637,19],[862,4,637,19],[863,2,637,19],[864,2,701,0,"exports"],[864,9,701,7],[864,10,701,8,"WebAuthnApi"],[864,21,701,19],[864,24,701,22,"WebAuthnApi"],[864,35,701,33],[865,0,701,34],[865,3]],"functionMap":{"names":["<global>","<anonymous>","Object.defineProperty$argument_2.get","WebAuthnAbortService","WebAuthnAbortService#createNewAbortSignal","WebAuthnAbortService#cancelCeremony","deserializeCredentialCreationOptions","deserializeCredentialRequestOptions","serializeCredentialCreationResponse","serializeCredentialRequestResponse","isValidDomain","browserSupportsWebAuthn","createCredential","getCredential","deepMerge","isObject","isArrayBufferLike","mergeCredentialCreationOptions","mergeCredentialRequestOptions","WebAuthnApi","WebAuthnApi#constructor","WebAuthnApi#_enroll","WebAuthnApi#_challenge","WebAuthnApi#_verify","WebAuthnApi#_authenticate","WebAuthnApi#_register","client.mfa.listFactors.then$argument_0","_a.all.find$argument_0","client.mfa.listFactors.then.then$argument_0"],"mappings":"AAA;sCCC;CDU;uFEgB,qEF;qFEC,mEF;2EEC,yDF;yEEC,uDF;AGQ;ICQ;KDU;IEO;KFO;CHC;AMkB;CNqC;AOU;CPgC;AQU;CRoB;ASU;CT6B;AUc;CVI;AWQ;CXQ;AYU;CZ4B;AaU;Cb4B;AciB;qBCC,uED;8BEC,8DF;Cd+B;AiBW;CjBE;AkBU;ClBE;AmBS;ICC;KDQ;IEU;KFE;IGe;KHwE;IIa;KJM;IKiB;KL6C;IMgB;0BCqB;gGCE;iDDE;iBDC;0BGC,iIH;KNmC;CnBC"},"hasCjsExports":true},"type":"js/module"}]}