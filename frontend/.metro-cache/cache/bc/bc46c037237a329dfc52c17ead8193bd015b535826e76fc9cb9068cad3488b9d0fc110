{"dependencies":[{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":584},"end":{"line":14,"column":38,"index":606}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":18,"index":626},"end":{"line":15,"column":42,"index":650}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":16,"index":668},"end":{"line":16,"column":38,"index":690}}],"key":"MuAyI4gB5M7BbvAGJgipm/B+Ps4=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":17,"index":709},"end":{"line":17,"column":40,"index":732}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const fetch_1 = require(_dependencyMap[0], \"./lib/fetch\");\n  const helpers_1 = require(_dependencyMap[1], \"./lib/helpers\");\n  const types_1 = require(_dependencyMap[2], \"./lib/types\");\n  const errors_1 = require(_dependencyMap[3], \"./lib/errors\");\n  class GoTrueAdminApi {\n    constructor({\n      url = '',\n      headers = {},\n      fetch\n    }) {\n      this.url = url;\n      this.headers = headers;\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n      this.mfa = {\n        listFactors: this._listFactors.bind(this),\n        deleteFactor: this._deleteFactor.bind(this)\n      };\n      this.oauth = {\n        listClients: this._listOAuthClients.bind(this),\n        createClient: this._createOAuthClient.bind(this),\n        getClient: this._getOAuthClient.bind(this),\n        deleteClient: this._deleteOAuthClient.bind(this),\n        regenerateClientSecret: this._regenerateOAuthClientSecret.bind(this)\n      };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = types_1.SIGN_OUT_SCOPES[0]) {\n      if (types_1.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n        throw new Error(`@supabase/auth-js: Parameter scope must be one of ${types_1.SIGN_OUT_SCOPES.join(', ')}`);\n      }\n      try {\n        await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          data: null,\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n      try {\n        const {\n            options\n          } = params,\n          rest = __rest(params, [\"options\"]);\n        const body = Object.assign(Object.assign({}, rest), options);\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: fetch_1._generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: fetch_1._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const users = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, users), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n      (0, helpers_1.validateUUID)(uid);\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n      (0, helpers_1.validateUUID)(uid);\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n      (0, helpers_1.validateUUID)(id);\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          body: {\n            should_soft_delete: shouldSoftDelete\n          },\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _listFactors(params) {\n      (0, helpers_1.validateUUID)(params.userId);\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n          headers: this.headers,\n          xform: factors => {\n            return {\n              data: {\n                factors\n              },\n              error: null\n            };\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _deleteFactor(params) {\n      (0, helpers_1.validateUUID)(params.userId);\n      (0, helpers_1.validateUUID)(params.id);\n      try {\n        const data = await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Lists all OAuth clients with optional pagination.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _listOAuthClients(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/oauth/clients`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: fetch_1._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const clients = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, clients), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              clients: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _createOAuthClient(params) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/oauth/clients`, {\n          body: params,\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets details of a specific OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _getOAuthClient(clientId) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/oauth/clients/${clientId}`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Deletes an OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _deleteOAuthClient(clientId) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/oauth/clients/${clientId}`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Regenerates the secret for an OAuth client.\n     * Only relevant when the OAuth 2.1 server is enabled in Supabase Auth.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async _regenerateOAuthClientSecret(clientId) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/oauth/clients/${clientId}/regenerate_secret`, {\n          headers: this.headers,\n          xform: client => {\n            return {\n              data: client,\n              error: null\n            };\n          }\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  exports.default = GoTrueAdminApi;\n});","lineCount":508,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__rest"],[4,12,2,10],[4,15,2,14],[4,19,2,18],[4,23,2,22],[4,27,2,26],[4,28,2,27,"__rest"],[4,34,2,33],[4,38,2,38],[4,48,2,48,"s"],[4,49,2,49],[4,51,2,51,"e"],[4,52,2,52],[4,54,2,54],[5,4,3,4],[5,8,3,8,"t"],[5,9,3,9],[5,12,3,12],[5,13,3,13],[5,14,3,14],[6,4,4,4],[6,9,4,9],[6,13,4,13,"p"],[6,14,4,14],[6,18,4,18,"s"],[6,19,4,19],[6,21,4,21],[6,25,4,25,"Object"],[6,31,4,31],[6,32,4,32,"prototype"],[6,41,4,41],[6,42,4,42,"hasOwnProperty"],[6,56,4,56],[6,57,4,57,"call"],[6,61,4,61],[6,62,4,62,"s"],[6,63,4,63],[6,65,4,65,"p"],[6,66,4,66],[6,67,4,67],[6,71,4,71,"e"],[6,72,4,72],[6,73,4,73,"indexOf"],[6,80,4,80],[6,81,4,81,"p"],[6,82,4,82],[6,83,4,83],[6,86,4,86],[6,87,4,87],[6,89,5,8,"t"],[6,90,5,9],[6,91,5,10,"p"],[6,92,5,11],[6,93,5,12],[6,96,5,15,"s"],[6,97,5,16],[6,98,5,17,"p"],[6,99,5,18],[6,100,5,19],[7,4,6,4],[7,8,6,8,"s"],[7,9,6,9],[7,13,6,13],[7,17,6,17],[7,21,6,21],[7,28,6,28,"Object"],[7,34,6,34],[7,35,6,35,"getOwnPropertySymbols"],[7,56,6,56],[7,61,6,61],[7,71,6,71],[7,73,7,8],[7,78,7,13],[7,82,7,17,"i"],[7,83,7,18],[7,86,7,21],[7,87,7,22],[7,89,7,24,"p"],[7,90,7,25],[7,93,7,28,"Object"],[7,99,7,34],[7,100,7,35,"getOwnPropertySymbols"],[7,121,7,56],[7,122,7,57,"s"],[7,123,7,58],[7,124,7,59],[7,126,7,61,"i"],[7,127,7,62],[7,130,7,65,"p"],[7,131,7,66],[7,132,7,67,"length"],[7,138,7,73],[7,140,7,75,"i"],[7,141,7,76],[7,143,7,78],[7,145,7,80],[8,6,8,12],[8,10,8,16,"e"],[8,11,8,17],[8,12,8,18,"indexOf"],[8,19,8,25],[8,20,8,26,"p"],[8,21,8,27],[8,22,8,28,"i"],[8,23,8,29],[8,24,8,30],[8,25,8,31],[8,28,8,34],[8,29,8,35],[8,33,8,39,"Object"],[8,39,8,45],[8,40,8,46,"prototype"],[8,49,8,55],[8,50,8,56,"propertyIsEnumerable"],[8,70,8,76],[8,71,8,77,"call"],[8,75,8,81],[8,76,8,82,"s"],[8,77,8,83],[8,79,8,85,"p"],[8,80,8,86],[8,81,8,87,"i"],[8,82,8,88],[8,83,8,89],[8,84,8,90],[8,86,9,16,"t"],[8,87,9,17],[8,88,9,18,"p"],[8,89,9,19],[8,90,9,20,"i"],[8,91,9,21],[8,92,9,22],[8,93,9,23],[8,96,9,26,"s"],[8,97,9,27],[8,98,9,28,"p"],[8,99,9,29],[8,100,9,30,"i"],[8,101,9,31],[8,102,9,32],[8,103,9,33],[9,4,10,8],[10,4,11,4],[10,11,11,11,"t"],[10,12,11,12],[11,2,12,0],[11,3,12,1],[12,2,13,0,"Object"],[12,8,13,6],[12,9,13,7,"defineProperty"],[12,23,13,21],[12,24,13,22,"exports"],[12,31,13,29],[12,33,13,31],[12,45,13,43],[12,47,13,45],[13,4,13,47,"value"],[13,9,13,52],[13,11,13,54],[14,2,13,59],[14,3,13,60],[14,4,13,61],[15,2,14,0],[15,8,14,6,"fetch_1"],[15,15,14,13],[15,18,14,16,"require"],[15,25,14,23],[15,26,14,23,"_dependencyMap"],[15,40,14,23],[15,58,14,37],[15,59,14,38],[16,2,15,0],[16,8,15,6,"helpers_1"],[16,17,15,15],[16,20,15,18,"require"],[16,27,15,25],[16,28,15,25,"_dependencyMap"],[16,42,15,25],[16,62,15,41],[16,63,15,42],[17,2,16,0],[17,8,16,6,"types_1"],[17,15,16,13],[17,18,16,16,"require"],[17,25,16,23],[17,26,16,23,"_dependencyMap"],[17,40,16,23],[17,58,16,37],[17,59,16,38],[18,2,17,0],[18,8,17,6,"errors_1"],[18,16,17,14],[18,19,17,17,"require"],[18,26,17,24],[18,27,17,24,"_dependencyMap"],[18,41,17,24],[18,60,17,39],[18,61,17,40],[19,2,18,0],[19,8,18,6,"GoTrueAdminApi"],[19,22,18,20],[19,23,18,21],[20,4,19,4,"constructor"],[20,15,19,15,"constructor"],[20,16,19,16],[21,6,19,18,"url"],[21,9,19,21],[21,12,19,24],[21,14,19,26],[22,6,19,28,"headers"],[22,13,19,35],[22,16,19,38],[22,17,19,39],[22,18,19,40],[23,6,19,42,"fetch"],[24,4,19,49],[24,5,19,50],[24,7,19,52],[25,6,20,8],[25,10,20,12],[25,11,20,13,"url"],[25,14,20,16],[25,17,20,19,"url"],[25,20,20,22],[26,6,21,8],[26,10,21,12],[26,11,21,13,"headers"],[26,18,21,20],[26,21,21,23,"headers"],[26,28,21,30],[27,6,22,8],[27,10,22,12],[27,11,22,13,"fetch"],[27,16,22,18],[27,19,22,21],[27,20,22,22],[27,21,22,23],[27,23,22,25,"helpers_1"],[27,32,22,34],[27,33,22,35,"resolveFetch"],[27,45,22,47],[27,47,22,49,"fetch"],[27,52,22,54],[27,53,22,55],[28,6,23,8],[28,10,23,12],[28,11,23,13,"mfa"],[28,14,23,16],[28,17,23,19],[29,8,24,12,"listFactors"],[29,19,24,23],[29,21,24,25],[29,25,24,29],[29,26,24,30,"_listFactors"],[29,38,24,42],[29,39,24,43,"bind"],[29,43,24,47],[29,44,24,48],[29,48,24,52],[29,49,24,53],[30,8,25,12,"deleteFactor"],[30,20,25,24],[30,22,25,26],[30,26,25,30],[30,27,25,31,"_deleteFactor"],[30,40,25,44],[30,41,25,45,"bind"],[30,45,25,49],[30,46,25,50],[30,50,25,54],[31,6,26,8],[31,7,26,9],[32,6,27,8],[32,10,27,12],[32,11,27,13,"oauth"],[32,16,27,18],[32,19,27,21],[33,8,28,12,"listClients"],[33,19,28,23],[33,21,28,25],[33,25,28,29],[33,26,28,30,"_listOAuthClients"],[33,43,28,47],[33,44,28,48,"bind"],[33,48,28,52],[33,49,28,53],[33,53,28,57],[33,54,28,58],[34,8,29,12,"createClient"],[34,20,29,24],[34,22,29,26],[34,26,29,30],[34,27,29,31,"_createOAuthClient"],[34,45,29,49],[34,46,29,50,"bind"],[34,50,29,54],[34,51,29,55],[34,55,29,59],[34,56,29,60],[35,8,30,12,"getClient"],[35,17,30,21],[35,19,30,23],[35,23,30,27],[35,24,30,28,"_getOAuthClient"],[35,39,30,43],[35,40,30,44,"bind"],[35,44,30,48],[35,45,30,49],[35,49,30,53],[35,50,30,54],[36,8,31,12,"deleteClient"],[36,20,31,24],[36,22,31,26],[36,26,31,30],[36,27,31,31,"_deleteOAuthClient"],[36,45,31,49],[36,46,31,50,"bind"],[36,50,31,54],[36,51,31,55],[36,55,31,59],[36,56,31,60],[37,8,32,12,"regenerateClientSecret"],[37,30,32,34],[37,32,32,36],[37,36,32,40],[37,37,32,41,"_regenerateOAuthClientSecret"],[37,65,32,69],[37,66,32,70,"bind"],[37,70,32,74],[37,71,32,75],[37,75,32,79],[38,6,33,8],[38,7,33,9],[39,4,34,4],[40,4,35,4],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,4,40,4],[45,10,40,10,"signOut"],[45,17,40,17,"signOut"],[45,18,40,18,"jwt"],[45,21,40,21],[45,23,40,23,"scope"],[45,28,40,28],[45,31,40,31,"types_1"],[45,38,40,38],[45,39,40,39,"SIGN_OUT_SCOPES"],[45,54,40,54],[45,55,40,55],[45,56,40,56],[45,57,40,57],[45,59,40,59],[46,6,41,8],[46,10,41,12,"types_1"],[46,17,41,19],[46,18,41,20,"SIGN_OUT_SCOPES"],[46,33,41,35],[46,34,41,36,"indexOf"],[46,41,41,43],[46,42,41,44,"scope"],[46,47,41,49],[46,48,41,50],[46,51,41,53],[46,52,41,54],[46,54,41,56],[47,8,42,12],[47,14,42,18],[47,18,42,22,"Error"],[47,23,42,27],[47,24,42,28],[47,77,42,81,"types_1"],[47,84,42,88],[47,85,42,89,"SIGN_OUT_SCOPES"],[47,100,42,104],[47,101,42,105,"join"],[47,105,42,109],[47,106,42,110],[47,110,42,114],[47,111,42,115],[47,113,42,117],[47,114,42,118],[48,6,43,8],[49,6,44,8],[49,10,44,12],[50,8,45,12],[50,14,45,18],[50,15,45,19],[50,16,45,20],[50,18,45,22,"fetch_1"],[50,25,45,29],[50,26,45,30,"_request"],[50,34,45,38],[50,36,45,40],[50,40,45,44],[50,41,45,45,"fetch"],[50,46,45,50],[50,48,45,52],[50,54,45,58],[50,56,45,60],[50,59,45,63],[50,63,45,67],[50,64,45,68,"url"],[50,67,45,71],[50,84,45,88,"scope"],[50,89,45,93],[50,91,45,95],[50,93,45,97],[51,10,46,16,"headers"],[51,17,46,23],[51,19,46,25],[51,23,46,29],[51,24,46,30,"headers"],[51,31,46,37],[52,10,47,16,"jwt"],[52,13,47,19],[53,10,48,16,"noResolveJson"],[53,23,48,29],[53,25,48,31],[54,8,49,12],[54,9,49,13],[54,10,49,14],[55,8,50,12],[55,15,50,19],[56,10,50,21,"data"],[56,14,50,25],[56,16,50,27],[56,20,50,31],[57,10,50,33,"error"],[57,15,50,38],[57,17,50,40],[58,8,50,45],[58,9,50,46],[59,6,51,8],[59,7,51,9],[59,8,52,8],[59,15,52,15,"error"],[59,20,52,20],[59,22,52,22],[60,8,53,12],[60,12,53,16],[60,13,53,17],[60,14,53,18],[60,16,53,20,"errors_1"],[60,24,53,28],[60,25,53,29,"isAuthError"],[60,36,53,40],[60,38,53,42,"error"],[60,43,53,47],[60,44,53,48],[60,46,53,50],[61,10,54,16],[61,17,54,23],[62,12,54,25,"data"],[62,16,54,29],[62,18,54,31],[62,22,54,35],[63,12,54,37,"error"],[64,10,54,43],[64,11,54,44],[65,8,55,12],[66,8,56,12],[66,14,56,18,"error"],[66,19,56,23],[67,6,57,8],[68,4,58,4],[69,4,59,4],[70,0,60,0],[71,0,61,0],[72,0,62,0],[73,0,63,0],[74,4,64,4],[74,10,64,10,"inviteUserByEmail"],[74,27,64,27,"inviteUserByEmail"],[74,28,64,28,"email"],[74,33,64,33],[74,35,64,35,"options"],[74,42,64,42],[74,45,64,45],[74,46,64,46],[74,47,64,47],[74,49,64,49],[75,6,65,8],[75,10,65,12],[76,8,66,12],[76,15,66,19],[76,21,66,25],[76,22,66,26],[76,23,66,27],[76,25,66,29,"fetch_1"],[76,32,66,36],[76,33,66,37,"_request"],[76,41,66,45],[76,43,66,47],[76,47,66,51],[76,48,66,52,"fetch"],[76,53,66,57],[76,55,66,59],[76,61,66,65],[76,63,66,67],[76,66,66,70],[76,70,66,74],[76,71,66,75,"url"],[76,74,66,78],[76,83,66,87],[76,85,66,89],[77,10,67,16,"body"],[77,14,67,20],[77,16,67,22],[78,12,67,24,"email"],[78,17,67,29],[79,12,67,31,"data"],[79,16,67,35],[79,18,67,37,"options"],[79,25,67,44],[79,26,67,45,"data"],[80,10,67,50],[80,11,67,51],[81,10,68,16,"headers"],[81,17,68,23],[81,19,68,25],[81,23,68,29],[81,24,68,30,"headers"],[81,31,68,37],[82,10,69,16,"redirectTo"],[82,20,69,26],[82,22,69,28,"options"],[82,29,69,35],[82,30,69,36,"redirectTo"],[82,40,69,46],[83,10,70,16,"xform"],[83,15,70,21],[83,17,70,23,"fetch_1"],[83,24,70,30],[83,25,70,31,"_userResponse"],[84,8,71,12],[84,9,71,13],[84,10,71,14],[85,6,72,8],[85,7,72,9],[85,8,73,8],[85,15,73,15,"error"],[85,20,73,20],[85,22,73,22],[86,8,74,12],[86,12,74,16],[86,13,74,17],[86,14,74,18],[86,16,74,20,"errors_1"],[86,24,74,28],[86,25,74,29,"isAuthError"],[86,36,74,40],[86,38,74,42,"error"],[86,43,74,47],[86,44,74,48],[86,46,74,50],[87,10,75,16],[87,17,75,23],[88,12,75,25,"data"],[88,16,75,29],[88,18,75,31],[89,14,75,33,"user"],[89,18,75,37],[89,20,75,39],[90,12,75,44],[90,13,75,45],[91,12,75,47,"error"],[92,10,75,53],[92,11,75,54],[93,8,76,12],[94,8,77,12],[94,14,77,18,"error"],[94,19,77,23],[95,6,78,8],[96,4,79,4],[97,4,80,4],[98,0,81,0],[99,0,82,0],[100,0,83,0],[101,0,84,0],[102,0,85,0],[103,0,86,0],[104,4,87,4],[104,10,87,10,"generateLink"],[104,22,87,22,"generateLink"],[104,23,87,23,"params"],[104,29,87,29],[104,31,87,31],[105,6,88,8],[105,10,88,12],[106,8,89,12],[106,14,89,18],[107,12,89,20,"options"],[108,10,89,28],[108,11,89,29],[108,14,89,32,"params"],[108,20,89,38],[109,10,89,40,"rest"],[109,14,89,44],[109,17,89,47,"__rest"],[109,23,89,53],[109,24,89,54,"params"],[109,30,89,60],[109,32,89,62],[109,33,89,63],[109,42,89,72],[109,43,89,73],[109,44,89,74],[110,8,90,12],[110,14,90,18,"body"],[110,18,90,22],[110,21,90,25,"Object"],[110,27,90,31],[110,28,90,32,"assign"],[110,34,90,38],[110,35,90,39,"Object"],[110,41,90,45],[110,42,90,46,"assign"],[110,48,90,52],[110,49,90,53],[110,50,90,54],[110,51,90,55],[110,53,90,57,"rest"],[110,57,90,61],[110,58,90,62],[110,60,90,64,"options"],[110,67,90,71],[110,68,90,72],[111,8,91,12],[111,12,91,16],[111,22,91,26],[111,26,91,30,"rest"],[111,30,91,34],[111,32,91,36],[112,10,92,16],[113,10,93,16,"body"],[113,14,93,20],[113,15,93,21,"new_email"],[113,24,93,30],[113,27,93,33,"rest"],[113,31,93,37],[113,36,93,42],[113,40,93,46],[113,44,93,50,"rest"],[113,48,93,54],[113,53,93,59],[113,58,93,64],[113,59,93,65],[113,62,93,68],[113,67,93,73],[113,68,93,74],[113,71,93,77,"rest"],[113,75,93,81],[113,76,93,82,"newEmail"],[113,84,93,90],[114,10,94,16],[114,17,94,23,"body"],[114,21,94,27],[114,22,94,28],[114,32,94,38],[114,33,94,39],[115,8,95,12],[116,8,96,12],[116,15,96,19],[116,21,96,25],[116,22,96,26],[116,23,96,27],[116,25,96,29,"fetch_1"],[116,32,96,36],[116,33,96,37,"_request"],[116,41,96,45],[116,43,96,47],[116,47,96,51],[116,48,96,52,"fetch"],[116,53,96,57],[116,55,96,59],[116,61,96,65],[116,63,96,67],[116,66,96,70],[116,70,96,74],[116,71,96,75,"url"],[116,74,96,78],[116,96,96,100],[116,98,96,102],[117,10,97,16,"body"],[117,14,97,20],[117,16,97,22,"body"],[117,20,97,26],[118,10,98,16,"headers"],[118,17,98,23],[118,19,98,25],[118,23,98,29],[118,24,98,30,"headers"],[118,31,98,37],[119,10,99,16,"xform"],[119,15,99,21],[119,17,99,23,"fetch_1"],[119,24,99,30],[119,25,99,31,"_generateLinkResponse"],[119,46,99,52],[120,10,100,16,"redirectTo"],[120,20,100,26],[120,22,100,28,"options"],[120,29,100,35],[120,34,100,40],[120,38,100,44],[120,42,100,48,"options"],[120,49,100,55],[120,54,100,60],[120,59,100,65],[120,60,100,66],[120,63,100,69],[120,68,100,74],[120,69,100,75],[120,72,100,78,"options"],[120,79,100,85],[120,80,100,86,"redirectTo"],[121,8,101,12],[121,9,101,13],[121,10,101,14],[122,6,102,8],[122,7,102,9],[122,8,103,8],[122,15,103,15,"error"],[122,20,103,20],[122,22,103,22],[123,8,104,12],[123,12,104,16],[123,13,104,17],[123,14,104,18],[123,16,104,20,"errors_1"],[123,24,104,28],[123,25,104,29,"isAuthError"],[123,36,104,40],[123,38,104,42,"error"],[123,43,104,47],[123,44,104,48],[123,46,104,50],[124,10,105,16],[124,17,105,23],[125,12,106,20,"data"],[125,16,106,24],[125,18,106,26],[126,14,107,24,"properties"],[126,24,107,34],[126,26,107,36],[126,30,107,40],[127,14,108,24,"user"],[127,18,108,28],[127,20,108,30],[128,12,109,20],[128,13,109,21],[129,12,110,20,"error"],[130,10,111,16],[130,11,111,17],[131,8,112,12],[132,8,113,12],[132,14,113,18,"error"],[132,19,113,23],[133,6,114,8],[134,4,115,4],[135,4,116,4],[136,4,117,4],[137,0,118,0],[138,0,119,0],[139,0,120,0],[140,4,121,4],[140,10,121,10,"createUser"],[140,20,121,20,"createUser"],[140,21,121,21,"attributes"],[140,31,121,31],[140,33,121,33],[141,6,122,8],[141,10,122,12],[142,8,123,12],[142,15,123,19],[142,21,123,25],[142,22,123,26],[142,23,123,27],[142,25,123,29,"fetch_1"],[142,32,123,36],[142,33,123,37,"_request"],[142,41,123,45],[142,43,123,47],[142,47,123,51],[142,48,123,52,"fetch"],[142,53,123,57],[142,55,123,59],[142,61,123,65],[142,63,123,67],[142,66,123,70],[142,70,123,74],[142,71,123,75,"url"],[142,74,123,78],[142,88,123,92],[142,90,123,94],[143,10,124,16,"body"],[143,14,124,20],[143,16,124,22,"attributes"],[143,26,124,32],[144,10,125,16,"headers"],[144,17,125,23],[144,19,125,25],[144,23,125,29],[144,24,125,30,"headers"],[144,31,125,37],[145,10,126,16,"xform"],[145,15,126,21],[145,17,126,23,"fetch_1"],[145,24,126,30],[145,25,126,31,"_userResponse"],[146,8,127,12],[146,9,127,13],[146,10,127,14],[147,6,128,8],[147,7,128,9],[147,8,129,8],[147,15,129,15,"error"],[147,20,129,20],[147,22,129,22],[148,8,130,12],[148,12,130,16],[148,13,130,17],[148,14,130,18],[148,16,130,20,"errors_1"],[148,24,130,28],[148,25,130,29,"isAuthError"],[148,36,130,40],[148,38,130,42,"error"],[148,43,130,47],[148,44,130,48],[148,46,130,50],[149,10,131,16],[149,17,131,23],[150,12,131,25,"data"],[150,16,131,29],[150,18,131,31],[151,14,131,33,"user"],[151,18,131,37],[151,20,131,39],[152,12,131,44],[152,13,131,45],[153,12,131,47,"error"],[154,10,131,53],[154,11,131,54],[155,8,132,12],[156,8,133,12],[156,14,133,18,"error"],[156,19,133,23],[157,6,134,8],[158,4,135,4],[159,4,136,4],[160,0,137,0],[161,0,138,0],[162,0,139,0],[163,0,140,0],[164,0,141,0],[165,4,142,4],[165,10,142,10,"listUsers"],[165,19,142,19,"listUsers"],[165,20,142,20,"params"],[165,26,142,26],[165,28,142,28],[166,6,143,8],[166,10,143,12,"_a"],[166,12,143,14],[166,14,143,16,"_b"],[166,16,143,18],[166,18,143,20,"_c"],[166,20,143,22],[166,22,143,24,"_d"],[166,24,143,26],[166,26,143,28,"_e"],[166,28,143,30],[166,30,143,32,"_f"],[166,32,143,34],[166,34,143,36,"_g"],[166,36,143,38],[167,6,144,8],[167,10,144,12],[168,8,145,12],[168,14,145,18,"pagination"],[168,24,145,28],[168,27,145,31],[169,10,145,33,"nextPage"],[169,18,145,41],[169,20,145,43],[169,24,145,47],[170,10,145,49,"lastPage"],[170,18,145,57],[170,20,145,59],[170,21,145,60],[171,10,145,62,"total"],[171,15,145,67],[171,17,145,69],[172,8,145,71],[172,9,145,72],[173,8,146,12],[173,14,146,18,"response"],[173,22,146,26],[173,25,146,29],[173,31,146,35],[173,32,146,36],[173,33,146,37],[173,35,146,39,"fetch_1"],[173,42,146,46],[173,43,146,47,"_request"],[173,51,146,55],[173,53,146,57],[173,57,146,61],[173,58,146,62,"fetch"],[173,63,146,67],[173,65,146,69],[173,70,146,74],[173,72,146,76],[173,75,146,79],[173,79,146,83],[173,80,146,84,"url"],[173,83,146,87],[173,97,146,101],[173,99,146,103],[174,10,147,16,"headers"],[174,17,147,23],[174,19,147,25],[174,23,147,29],[174,24,147,30,"headers"],[174,31,147,37],[175,10,148,16,"noResolveJson"],[175,23,148,29],[175,25,148,31],[175,29,148,35],[176,10,149,16,"query"],[176,15,149,21],[176,17,149,23],[177,12,150,20,"page"],[177,16,150,24],[177,18,150,26],[177,19,150,27,"_b"],[177,21,150,29],[177,24,150,32],[177,25,150,33,"_a"],[177,27,150,35],[177,30,150,38,"params"],[177,36,150,44],[177,41,150,49],[177,45,150,53],[177,49,150,57,"params"],[177,55,150,63],[177,60,150,68],[177,65,150,73],[177,66,150,74],[177,69,150,77],[177,74,150,82],[177,75,150,83],[177,78,150,86,"params"],[177,84,150,92],[177,85,150,93,"page"],[177,89,150,97],[177,95,150,103],[177,99,150,107],[177,103,150,111,"_a"],[177,105,150,113],[177,110,150,118],[177,115,150,123],[177,116,150,124],[177,119,150,127],[177,124,150,132],[177,125,150,133],[177,128,150,136,"_a"],[177,130,150,138],[177,131,150,139,"toString"],[177,139,150,147],[177,140,150,148],[177,141,150,149],[177,147,150,155],[177,151,150,159],[177,155,150,163,"_b"],[177,157,150,165],[177,162,150,170],[177,167,150,175],[177,168,150,176],[177,171,150,179,"_b"],[177,173,150,181],[177,176,150,184],[177,178,150,186],[178,12,151,20,"per_page"],[178,20,151,28],[178,22,151,30],[178,23,151,31,"_d"],[178,25,151,33],[178,28,151,36],[178,29,151,37,"_c"],[178,31,151,39],[178,34,151,42,"params"],[178,40,151,48],[178,45,151,53],[178,49,151,57],[178,53,151,61,"params"],[178,59,151,67],[178,64,151,72],[178,69,151,77],[178,70,151,78],[178,73,151,81],[178,78,151,86],[178,79,151,87],[178,82,151,90,"params"],[178,88,151,96],[178,89,151,97,"perPage"],[178,96,151,104],[178,102,151,110],[178,106,151,114],[178,110,151,118,"_c"],[178,112,151,120],[178,117,151,125],[178,122,151,130],[178,123,151,131],[178,126,151,134],[178,131,151,139],[178,132,151,140],[178,135,151,143,"_c"],[178,137,151,145],[178,138,151,146,"toString"],[178,146,151,154],[178,147,151,155],[178,148,151,156],[178,154,151,162],[178,158,151,166],[178,162,151,170,"_d"],[178,164,151,172],[178,169,151,177],[178,174,151,182],[178,175,151,183],[178,178,151,186,"_d"],[178,180,151,188],[178,183,151,191],[179,10,152,16],[179,11,152,17],[180,10,153,16,"xform"],[180,15,153,21],[180,17,153,23,"fetch_1"],[180,24,153,30],[180,25,153,31,"_noResolveJsonResponse"],[181,8,154,12],[181,9,154,13],[181,10,154,14],[182,8,155,12],[182,12,155,16,"response"],[182,20,155,24],[182,21,155,25,"error"],[182,26,155,30],[182,28,156,16],[182,34,156,22,"response"],[182,42,156,30],[182,43,156,31,"error"],[182,48,156,36],[183,8,157,12],[183,14,157,18,"users"],[183,19,157,23],[183,22,157,26],[183,28,157,32,"response"],[183,36,157,40],[183,37,157,41,"json"],[183,41,157,45],[183,42,157,46],[183,43,157,47],[184,8,158,12],[184,14,158,18,"total"],[184,19,158,23],[184,22,158,26],[184,23,158,27,"_e"],[184,25,158,29],[184,28,158,32,"response"],[184,36,158,40],[184,37,158,41,"headers"],[184,44,158,48],[184,45,158,49,"get"],[184,48,158,52],[184,49,158,53],[184,64,158,68],[184,65,158,69],[184,71,158,75],[184,75,158,79],[184,79,158,83,"_e"],[184,81,158,85],[184,86,158,90],[184,91,158,95],[184,92,158,96],[184,95,158,99,"_e"],[184,97,158,101],[184,100,158,104],[184,101,158,105],[185,8,159,12],[185,14,159,18,"links"],[185,19,159,23],[185,22,159,26],[185,23,159,27,"_g"],[185,25,159,29],[185,28,159,32],[185,29,159,33,"_f"],[185,31,159,35],[185,34,159,38,"response"],[185,42,159,46],[185,43,159,47,"headers"],[185,50,159,54],[185,51,159,55,"get"],[185,54,159,58],[185,55,159,59],[185,61,159,65],[185,62,159,66],[185,68,159,72],[185,72,159,76],[185,76,159,80,"_f"],[185,78,159,82],[185,83,159,87],[185,88,159,92],[185,89,159,93],[185,92,159,96],[185,97,159,101],[185,98,159,102],[185,101,159,105,"_f"],[185,103,159,107],[185,104,159,108,"split"],[185,109,159,113],[185,110,159,114],[185,113,159,117],[185,114,159,118],[185,120,159,124],[185,124,159,128],[185,128,159,132,"_g"],[185,130,159,134],[185,135,159,139],[185,140,159,144],[185,141,159,145],[185,144,159,148,"_g"],[185,146,159,150],[185,149,159,153],[185,151,159,155],[186,8,160,12],[186,12,160,16,"links"],[186,17,160,21],[186,18,160,22,"length"],[186,24,160,28],[186,27,160,31],[186,28,160,32],[186,30,160,34],[187,10,161,16,"links"],[187,15,161,21],[187,16,161,22,"forEach"],[187,23,161,29],[187,24,161,31,"link"],[187,28,161,35],[187,32,161,40],[188,12,162,20],[188,18,162,26,"page"],[188,22,162,30],[188,25,162,33,"parseInt"],[188,33,162,41],[188,34,162,42,"link"],[188,38,162,46],[188,39,162,47,"split"],[188,44,162,52],[188,45,162,53],[188,48,162,56],[188,49,162,57],[188,50,162,58],[188,51,162,59],[188,52,162,60],[188,53,162,61,"split"],[188,58,162,66],[188,59,162,67],[188,62,162,70],[188,63,162,71],[188,64,162,72],[188,65,162,73],[188,66,162,74],[188,67,162,75,"substring"],[188,76,162,84],[188,77,162,85],[188,78,162,86],[188,80,162,88],[188,81,162,89],[188,82,162,90],[188,83,162,91],[189,12,163,20],[189,18,163,26,"rel"],[189,21,163,29],[189,24,163,32,"JSON"],[189,28,163,36],[189,29,163,37,"parse"],[189,34,163,42],[189,35,163,43,"link"],[189,39,163,47],[189,40,163,48,"split"],[189,45,163,53],[189,46,163,54],[189,49,163,57],[189,50,163,58],[189,51,163,59],[189,52,163,60],[189,53,163,61],[189,54,163,62,"split"],[189,59,163,67],[189,60,163,68],[189,63,163,71],[189,64,163,72],[189,65,163,73],[189,66,163,74],[189,67,163,75],[189,68,163,76],[190,12,164,20,"pagination"],[190,22,164,30],[190,23,164,31],[190,26,164,34,"rel"],[190,29,164,37],[190,35,164,43],[190,36,164,44],[190,39,164,47,"page"],[190,43,164,51],[191,10,165,16],[191,11,165,17],[191,12,165,18],[192,10,166,16,"pagination"],[192,20,166,26],[192,21,166,27,"total"],[192,26,166,32],[192,29,166,35,"parseInt"],[192,37,166,43],[192,38,166,44,"total"],[192,43,166,49],[192,44,166,50],[193,8,167,12],[194,8,168,12],[194,15,168,19],[195,10,168,21,"data"],[195,14,168,25],[195,16,168,27,"Object"],[195,22,168,33],[195,23,168,34,"assign"],[195,29,168,40],[195,30,168,41,"Object"],[195,36,168,47],[195,37,168,48,"assign"],[195,43,168,54],[195,44,168,55],[195,45,168,56],[195,46,168,57],[195,48,168,59,"users"],[195,53,168,64],[195,54,168,65],[195,56,168,67,"pagination"],[195,66,168,77],[195,67,168,78],[196,10,168,80,"error"],[196,15,168,85],[196,17,168,87],[197,8,168,92],[197,9,168,93],[198,6,169,8],[198,7,169,9],[198,8,170,8],[198,15,170,15,"error"],[198,20,170,20],[198,22,170,22],[199,8,171,12],[199,12,171,16],[199,13,171,17],[199,14,171,18],[199,16,171,20,"errors_1"],[199,24,171,28],[199,25,171,29,"isAuthError"],[199,36,171,40],[199,38,171,42,"error"],[199,43,171,47],[199,44,171,48],[199,46,171,50],[200,10,172,16],[200,17,172,23],[201,12,172,25,"data"],[201,16,172,29],[201,18,172,31],[202,14,172,33,"users"],[202,19,172,38],[202,21,172,40],[203,12,172,43],[203,13,172,44],[204,12,172,46,"error"],[205,10,172,52],[205,11,172,53],[206,8,173,12],[207,8,174,12],[207,14,174,18,"error"],[207,19,174,23],[208,6,175,8],[209,4,176,4],[210,4,177,4],[211,0,178,0],[212,0,179,0],[213,0,180,0],[214,0,181,0],[215,0,182,0],[216,0,183,0],[217,4,184,4],[217,10,184,10,"getUserById"],[217,21,184,21,"getUserById"],[217,22,184,22,"uid"],[217,25,184,25],[217,27,184,27],[218,6,185,8],[218,7,185,9],[218,8,185,10],[218,10,185,12,"helpers_1"],[218,19,185,21],[218,20,185,22,"validateUUID"],[218,32,185,34],[218,34,185,36,"uid"],[218,37,185,39],[218,38,185,40],[219,6,186,8],[219,10,186,12],[220,8,187,12],[220,15,187,19],[220,21,187,25],[220,22,187,26],[220,23,187,27],[220,25,187,29,"fetch_1"],[220,32,187,36],[220,33,187,37,"_request"],[220,41,187,45],[220,43,187,47],[220,47,187,51],[220,48,187,52,"fetch"],[220,53,187,57],[220,55,187,59],[220,60,187,64],[220,62,187,66],[220,65,187,69],[220,69,187,73],[220,70,187,74,"url"],[220,73,187,77],[220,89,187,93,"uid"],[220,92,187,96],[220,94,187,98],[220,96,187,100],[221,10,188,16,"headers"],[221,17,188,23],[221,19,188,25],[221,23,188,29],[221,24,188,30,"headers"],[221,31,188,37],[222,10,189,16,"xform"],[222,15,189,21],[222,17,189,23,"fetch_1"],[222,24,189,30],[222,25,189,31,"_userResponse"],[223,8,190,12],[223,9,190,13],[223,10,190,14],[224,6,191,8],[224,7,191,9],[224,8,192,8],[224,15,192,15,"error"],[224,20,192,20],[224,22,192,22],[225,8,193,12],[225,12,193,16],[225,13,193,17],[225,14,193,18],[225,16,193,20,"errors_1"],[225,24,193,28],[225,25,193,29,"isAuthError"],[225,36,193,40],[225,38,193,42,"error"],[225,43,193,47],[225,44,193,48],[225,46,193,50],[226,10,194,16],[226,17,194,23],[227,12,194,25,"data"],[227,16,194,29],[227,18,194,31],[228,14,194,33,"user"],[228,18,194,37],[228,20,194,39],[229,12,194,44],[229,13,194,45],[230,12,194,47,"error"],[231,10,194,53],[231,11,194,54],[232,8,195,12],[233,8,196,12],[233,14,196,18,"error"],[233,19,196,23],[234,6,197,8],[235,4,198,4],[236,4,199,4],[237,0,200,0],[238,0,201,0],[239,0,202,0],[240,0,203,0],[241,0,204,0],[242,0,205,0],[243,4,206,4],[243,10,206,10,"updateUserById"],[243,24,206,24,"updateUserById"],[243,25,206,25,"uid"],[243,28,206,28],[243,30,206,30,"attributes"],[243,40,206,40],[243,42,206,42],[244,6,207,8],[244,7,207,9],[244,8,207,10],[244,10,207,12,"helpers_1"],[244,19,207,21],[244,20,207,22,"validateUUID"],[244,32,207,34],[244,34,207,36,"uid"],[244,37,207,39],[244,38,207,40],[245,6,208,8],[245,10,208,12],[246,8,209,12],[246,15,209,19],[246,21,209,25],[246,22,209,26],[246,23,209,27],[246,25,209,29,"fetch_1"],[246,32,209,36],[246,33,209,37,"_request"],[246,41,209,45],[246,43,209,47],[246,47,209,51],[246,48,209,52,"fetch"],[246,53,209,57],[246,55,209,59],[246,60,209,64],[246,62,209,66],[246,65,209,69],[246,69,209,73],[246,70,209,74,"url"],[246,73,209,77],[246,89,209,93,"uid"],[246,92,209,96],[246,94,209,98],[246,96,209,100],[247,10,210,16,"body"],[247,14,210,20],[247,16,210,22,"attributes"],[247,26,210,32],[248,10,211,16,"headers"],[248,17,211,23],[248,19,211,25],[248,23,211,29],[248,24,211,30,"headers"],[248,31,211,37],[249,10,212,16,"xform"],[249,15,212,21],[249,17,212,23,"fetch_1"],[249,24,212,30],[249,25,212,31,"_userResponse"],[250,8,213,12],[250,9,213,13],[250,10,213,14],[251,6,214,8],[251,7,214,9],[251,8,215,8],[251,15,215,15,"error"],[251,20,215,20],[251,22,215,22],[252,8,216,12],[252,12,216,16],[252,13,216,17],[252,14,216,18],[252,16,216,20,"errors_1"],[252,24,216,28],[252,25,216,29,"isAuthError"],[252,36,216,40],[252,38,216,42,"error"],[252,43,216,47],[252,44,216,48],[252,46,216,50],[253,10,217,16],[253,17,217,23],[254,12,217,25,"data"],[254,16,217,29],[254,18,217,31],[255,14,217,33,"user"],[255,18,217,37],[255,20,217,39],[256,12,217,44],[256,13,217,45],[257,12,217,47,"error"],[258,10,217,53],[258,11,217,54],[259,8,218,12],[260,8,219,12],[260,14,219,18,"error"],[260,19,219,23],[261,6,220,8],[262,4,221,4],[263,4,222,4],[264,0,223,0],[265,0,224,0],[266,0,225,0],[267,0,226,0],[268,0,227,0],[269,0,228,0],[270,0,229,0],[271,0,230,0],[272,4,231,4],[272,10,231,10,"deleteUser"],[272,20,231,20,"deleteUser"],[272,21,231,21,"id"],[272,23,231,23],[272,25,231,25,"shouldSoftDelete"],[272,41,231,41],[272,44,231,44],[272,49,231,49],[272,51,231,51],[273,6,232,8],[273,7,232,9],[273,8,232,10],[273,10,232,12,"helpers_1"],[273,19,232,21],[273,20,232,22,"validateUUID"],[273,32,232,34],[273,34,232,36,"id"],[273,36,232,38],[273,37,232,39],[274,6,233,8],[274,10,233,12],[275,8,234,12],[275,15,234,19],[275,21,234,25],[275,22,234,26],[275,23,234,27],[275,25,234,29,"fetch_1"],[275,32,234,36],[275,33,234,37,"_request"],[275,41,234,45],[275,43,234,47],[275,47,234,51],[275,48,234,52,"fetch"],[275,53,234,57],[275,55,234,59],[275,63,234,67],[275,65,234,69],[275,68,234,72],[275,72,234,76],[275,73,234,77,"url"],[275,76,234,80],[275,92,234,96,"id"],[275,94,234,98],[275,96,234,100],[275,98,234,102],[276,10,235,16,"headers"],[276,17,235,23],[276,19,235,25],[276,23,235,29],[276,24,235,30,"headers"],[276,31,235,37],[277,10,236,16,"body"],[277,14,236,20],[277,16,236,22],[278,12,237,20,"should_soft_delete"],[278,30,237,38],[278,32,237,40,"shouldSoftDelete"],[279,10,238,16],[279,11,238,17],[280,10,239,16,"xform"],[280,15,239,21],[280,17,239,23,"fetch_1"],[280,24,239,30],[280,25,239,31,"_userResponse"],[281,8,240,12],[281,9,240,13],[281,10,240,14],[282,6,241,8],[282,7,241,9],[282,8,242,8],[282,15,242,15,"error"],[282,20,242,20],[282,22,242,22],[283,8,243,12],[283,12,243,16],[283,13,243,17],[283,14,243,18],[283,16,243,20,"errors_1"],[283,24,243,28],[283,25,243,29,"isAuthError"],[283,36,243,40],[283,38,243,42,"error"],[283,43,243,47],[283,44,243,48],[283,46,243,50],[284,10,244,16],[284,17,244,23],[285,12,244,25,"data"],[285,16,244,29],[285,18,244,31],[286,14,244,33,"user"],[286,18,244,37],[286,20,244,39],[287,12,244,44],[287,13,244,45],[288,12,244,47,"error"],[289,10,244,53],[289,11,244,54],[290,8,245,12],[291,8,246,12],[291,14,246,18,"error"],[291,19,246,23],[292,6,247,8],[293,4,248,4],[294,4,249,4],[294,10,249,10,"_listFactors"],[294,22,249,22,"_listFactors"],[294,23,249,23,"params"],[294,29,249,29],[294,31,249,31],[295,6,250,8],[295,7,250,9],[295,8,250,10],[295,10,250,12,"helpers_1"],[295,19,250,21],[295,20,250,22,"validateUUID"],[295,32,250,34],[295,34,250,36,"params"],[295,40,250,42],[295,41,250,43,"userId"],[295,47,250,49],[295,48,250,50],[296,6,251,8],[296,10,251,12],[297,8,252,12],[297,14,252,18],[298,10,252,20,"data"],[298,14,252,24],[299,10,252,26,"error"],[300,8,252,32],[300,9,252,33],[300,12,252,36],[300,18,252,42],[300,19,252,43],[300,20,252,44],[300,22,252,46,"fetch_1"],[300,29,252,53],[300,30,252,54,"_request"],[300,38,252,62],[300,40,252,64],[300,44,252,68],[300,45,252,69,"fetch"],[300,50,252,74],[300,52,252,76],[300,57,252,81],[300,59,252,83],[300,62,252,86],[300,66,252,90],[300,67,252,91,"url"],[300,70,252,94],[300,86,252,110,"params"],[300,92,252,116],[300,93,252,117,"userId"],[300,99,252,123],[300,109,252,133],[300,111,252,135],[301,10,253,16,"headers"],[301,17,253,23],[301,19,253,25],[301,23,253,29],[301,24,253,30,"headers"],[301,31,253,37],[302,10,254,16,"xform"],[302,15,254,21],[302,17,254,24,"factors"],[302,24,254,31],[302,28,254,36],[303,12,255,20],[303,19,255,27],[304,14,255,29,"data"],[304,18,255,33],[304,20,255,35],[305,16,255,37,"factors"],[306,14,255,45],[306,15,255,46],[307,14,255,48,"error"],[307,19,255,53],[307,21,255,55],[308,12,255,60],[308,13,255,61],[309,10,256,16],[310,8,257,12],[310,9,257,13],[310,10,257,14],[311,8,258,12],[311,15,258,19],[312,10,258,21,"data"],[312,14,258,25],[313,10,258,27,"error"],[314,8,258,33],[314,9,258,34],[315,6,259,8],[315,7,259,9],[315,8,260,8],[315,15,260,15,"error"],[315,20,260,20],[315,22,260,22],[316,8,261,12],[316,12,261,16],[316,13,261,17],[316,14,261,18],[316,16,261,20,"errors_1"],[316,24,261,28],[316,25,261,29,"isAuthError"],[316,36,261,40],[316,38,261,42,"error"],[316,43,261,47],[316,44,261,48],[316,46,261,50],[317,10,262,16],[317,17,262,23],[318,12,262,25,"data"],[318,16,262,29],[318,18,262,31],[318,22,262,35],[319,12,262,37,"error"],[320,10,262,43],[320,11,262,44],[321,8,263,12],[322,8,264,12],[322,14,264,18,"error"],[322,19,264,23],[323,6,265,8],[324,4,266,4],[325,4,267,4],[325,10,267,10,"_deleteFactor"],[325,23,267,23,"_deleteFactor"],[325,24,267,24,"params"],[325,30,267,30],[325,32,267,32],[326,6,268,8],[326,7,268,9],[326,8,268,10],[326,10,268,12,"helpers_1"],[326,19,268,21],[326,20,268,22,"validateUUID"],[326,32,268,34],[326,34,268,36,"params"],[326,40,268,42],[326,41,268,43,"userId"],[326,47,268,49],[326,48,268,50],[327,6,269,8],[327,7,269,9],[327,8,269,10],[327,10,269,12,"helpers_1"],[327,19,269,21],[327,20,269,22,"validateUUID"],[327,32,269,34],[327,34,269,36,"params"],[327,40,269,42],[327,41,269,43,"id"],[327,43,269,45],[327,44,269,46],[328,6,270,8],[328,10,270,12],[329,8,271,12],[329,14,271,18,"data"],[329,18,271,22],[329,21,271,25],[329,27,271,31],[329,28,271,32],[329,29,271,33],[329,31,271,35,"fetch_1"],[329,38,271,42],[329,39,271,43,"_request"],[329,47,271,51],[329,49,271,53],[329,53,271,57],[329,54,271,58,"fetch"],[329,59,271,63],[329,61,271,65],[329,69,271,73],[329,71,271,75],[329,74,271,78],[329,78,271,82],[329,79,271,83,"url"],[329,82,271,86],[329,98,271,102,"params"],[329,104,271,108],[329,105,271,109,"userId"],[329,111,271,115],[329,123,271,127,"params"],[329,129,271,133],[329,130,271,134,"id"],[329,132,271,136],[329,134,271,138],[329,136,271,140],[330,10,272,16,"headers"],[330,17,272,23],[330,19,272,25],[330,23,272,29],[330,24,272,30,"headers"],[331,8,273,12],[331,9,273,13],[331,10,273,14],[332,8,274,12],[332,15,274,19],[333,10,274,21,"data"],[333,14,274,25],[334,10,274,27,"error"],[334,15,274,32],[334,17,274,34],[335,8,274,39],[335,9,274,40],[336,6,275,8],[336,7,275,9],[336,8,276,8],[336,15,276,15,"error"],[336,20,276,20],[336,22,276,22],[337,8,277,12],[337,12,277,16],[337,13,277,17],[337,14,277,18],[337,16,277,20,"errors_1"],[337,24,277,28],[337,25,277,29,"isAuthError"],[337,36,277,40],[337,38,277,42,"error"],[337,43,277,47],[337,44,277,48],[337,46,277,50],[338,10,278,16],[338,17,278,23],[339,12,278,25,"data"],[339,16,278,29],[339,18,278,31],[339,22,278,35],[340,12,278,37,"error"],[341,10,278,43],[341,11,278,44],[342,8,279,12],[343,8,280,12],[343,14,280,18,"error"],[343,19,280,23],[344,6,281,8],[345,4,282,4],[346,4,283,4],[347,0,284,0],[348,0,285,0],[349,0,286,0],[350,0,287,0],[351,0,288,0],[352,4,289,4],[352,10,289,10,"_listOAuthClients"],[352,27,289,27,"_listOAuthClients"],[352,28,289,28,"params"],[352,34,289,34],[352,36,289,36],[353,6,290,8],[353,10,290,12,"_a"],[353,12,290,14],[353,14,290,16,"_b"],[353,16,290,18],[353,18,290,20,"_c"],[353,20,290,22],[353,22,290,24,"_d"],[353,24,290,26],[353,26,290,28,"_e"],[353,28,290,30],[353,30,290,32,"_f"],[353,32,290,34],[353,34,290,36,"_g"],[353,36,290,38],[354,6,291,8],[354,10,291,12],[355,8,292,12],[355,14,292,18,"pagination"],[355,24,292,28],[355,27,292,31],[356,10,292,33,"nextPage"],[356,18,292,41],[356,20,292,43],[356,24,292,47],[357,10,292,49,"lastPage"],[357,18,292,57],[357,20,292,59],[357,21,292,60],[358,10,292,62,"total"],[358,15,292,67],[358,17,292,69],[359,8,292,71],[359,9,292,72],[360,8,293,12],[360,14,293,18,"response"],[360,22,293,26],[360,25,293,29],[360,31,293,35],[360,32,293,36],[360,33,293,37],[360,35,293,39,"fetch_1"],[360,42,293,46],[360,43,293,47,"_request"],[360,51,293,55],[360,53,293,57],[360,57,293,61],[360,58,293,62,"fetch"],[360,63,293,67],[360,65,293,69],[360,70,293,74],[360,72,293,76],[360,75,293,79],[360,79,293,83],[360,80,293,84,"url"],[360,83,293,87],[360,105,293,109],[360,107,293,111],[361,10,294,16,"headers"],[361,17,294,23],[361,19,294,25],[361,23,294,29],[361,24,294,30,"headers"],[361,31,294,37],[362,10,295,16,"noResolveJson"],[362,23,295,29],[362,25,295,31],[362,29,295,35],[363,10,296,16,"query"],[363,15,296,21],[363,17,296,23],[364,12,297,20,"page"],[364,16,297,24],[364,18,297,26],[364,19,297,27,"_b"],[364,21,297,29],[364,24,297,32],[364,25,297,33,"_a"],[364,27,297,35],[364,30,297,38,"params"],[364,36,297,44],[364,41,297,49],[364,45,297,53],[364,49,297,57,"params"],[364,55,297,63],[364,60,297,68],[364,65,297,73],[364,66,297,74],[364,69,297,77],[364,74,297,82],[364,75,297,83],[364,78,297,86,"params"],[364,84,297,92],[364,85,297,93,"page"],[364,89,297,97],[364,95,297,103],[364,99,297,107],[364,103,297,111,"_a"],[364,105,297,113],[364,110,297,118],[364,115,297,123],[364,116,297,124],[364,119,297,127],[364,124,297,132],[364,125,297,133],[364,128,297,136,"_a"],[364,130,297,138],[364,131,297,139,"toString"],[364,139,297,147],[364,140,297,148],[364,141,297,149],[364,147,297,155],[364,151,297,159],[364,155,297,163,"_b"],[364,157,297,165],[364,162,297,170],[364,167,297,175],[364,168,297,176],[364,171,297,179,"_b"],[364,173,297,181],[364,176,297,184],[364,178,297,186],[365,12,298,20,"per_page"],[365,20,298,28],[365,22,298,30],[365,23,298,31,"_d"],[365,25,298,33],[365,28,298,36],[365,29,298,37,"_c"],[365,31,298,39],[365,34,298,42,"params"],[365,40,298,48],[365,45,298,53],[365,49,298,57],[365,53,298,61,"params"],[365,59,298,67],[365,64,298,72],[365,69,298,77],[365,70,298,78],[365,73,298,81],[365,78,298,86],[365,79,298,87],[365,82,298,90,"params"],[365,88,298,96],[365,89,298,97,"perPage"],[365,96,298,104],[365,102,298,110],[365,106,298,114],[365,110,298,118,"_c"],[365,112,298,120],[365,117,298,125],[365,122,298,130],[365,123,298,131],[365,126,298,134],[365,131,298,139],[365,132,298,140],[365,135,298,143,"_c"],[365,137,298,145],[365,138,298,146,"toString"],[365,146,298,154],[365,147,298,155],[365,148,298,156],[365,154,298,162],[365,158,298,166],[365,162,298,170,"_d"],[365,164,298,172],[365,169,298,177],[365,174,298,182],[365,175,298,183],[365,178,298,186,"_d"],[365,180,298,188],[365,183,298,191],[366,10,299,16],[366,11,299,17],[367,10,300,16,"xform"],[367,15,300,21],[367,17,300,23,"fetch_1"],[367,24,300,30],[367,25,300,31,"_noResolveJsonResponse"],[368,8,301,12],[368,9,301,13],[368,10,301,14],[369,8,302,12],[369,12,302,16,"response"],[369,20,302,24],[369,21,302,25,"error"],[369,26,302,30],[369,28,303,16],[369,34,303,22,"response"],[369,42,303,30],[369,43,303,31,"error"],[369,48,303,36],[370,8,304,12],[370,14,304,18,"clients"],[370,21,304,25],[370,24,304,28],[370,30,304,34,"response"],[370,38,304,42],[370,39,304,43,"json"],[370,43,304,47],[370,44,304,48],[370,45,304,49],[371,8,305,12],[371,14,305,18,"total"],[371,19,305,23],[371,22,305,26],[371,23,305,27,"_e"],[371,25,305,29],[371,28,305,32,"response"],[371,36,305,40],[371,37,305,41,"headers"],[371,44,305,48],[371,45,305,49,"get"],[371,48,305,52],[371,49,305,53],[371,64,305,68],[371,65,305,69],[371,71,305,75],[371,75,305,79],[371,79,305,83,"_e"],[371,81,305,85],[371,86,305,90],[371,91,305,95],[371,92,305,96],[371,95,305,99,"_e"],[371,97,305,101],[371,100,305,104],[371,101,305,105],[372,8,306,12],[372,14,306,18,"links"],[372,19,306,23],[372,22,306,26],[372,23,306,27,"_g"],[372,25,306,29],[372,28,306,32],[372,29,306,33,"_f"],[372,31,306,35],[372,34,306,38,"response"],[372,42,306,46],[372,43,306,47,"headers"],[372,50,306,54],[372,51,306,55,"get"],[372,54,306,58],[372,55,306,59],[372,61,306,65],[372,62,306,66],[372,68,306,72],[372,72,306,76],[372,76,306,80,"_f"],[372,78,306,82],[372,83,306,87],[372,88,306,92],[372,89,306,93],[372,92,306,96],[372,97,306,101],[372,98,306,102],[372,101,306,105,"_f"],[372,103,306,107],[372,104,306,108,"split"],[372,109,306,113],[372,110,306,114],[372,113,306,117],[372,114,306,118],[372,120,306,124],[372,124,306,128],[372,128,306,132,"_g"],[372,130,306,134],[372,135,306,139],[372,140,306,144],[372,141,306,145],[372,144,306,148,"_g"],[372,146,306,150],[372,149,306,153],[372,151,306,155],[373,8,307,12],[373,12,307,16,"links"],[373,17,307,21],[373,18,307,22,"length"],[373,24,307,28],[373,27,307,31],[373,28,307,32],[373,30,307,34],[374,10,308,16,"links"],[374,15,308,21],[374,16,308,22,"forEach"],[374,23,308,29],[374,24,308,31,"link"],[374,28,308,35],[374,32,308,40],[375,12,309,20],[375,18,309,26,"page"],[375,22,309,30],[375,25,309,33,"parseInt"],[375,33,309,41],[375,34,309,42,"link"],[375,38,309,46],[375,39,309,47,"split"],[375,44,309,52],[375,45,309,53],[375,48,309,56],[375,49,309,57],[375,50,309,58],[375,51,309,59],[375,52,309,60],[375,53,309,61,"split"],[375,58,309,66],[375,59,309,67],[375,62,309,70],[375,63,309,71],[375,64,309,72],[375,65,309,73],[375,66,309,74],[375,67,309,75,"substring"],[375,76,309,84],[375,77,309,85],[375,78,309,86],[375,80,309,88],[375,81,309,89],[375,82,309,90],[375,83,309,91],[376,12,310,20],[376,18,310,26,"rel"],[376,21,310,29],[376,24,310,32,"JSON"],[376,28,310,36],[376,29,310,37,"parse"],[376,34,310,42],[376,35,310,43,"link"],[376,39,310,47],[376,40,310,48,"split"],[376,45,310,53],[376,46,310,54],[376,49,310,57],[376,50,310,58],[376,51,310,59],[376,52,310,60],[376,53,310,61],[376,54,310,62,"split"],[376,59,310,67],[376,60,310,68],[376,63,310,71],[376,64,310,72],[376,65,310,73],[376,66,310,74],[376,67,310,75],[376,68,310,76],[377,12,311,20,"pagination"],[377,22,311,30],[377,23,311,31],[377,26,311,34,"rel"],[377,29,311,37],[377,35,311,43],[377,36,311,44],[377,39,311,47,"page"],[377,43,311,51],[378,10,312,16],[378,11,312,17],[378,12,312,18],[379,10,313,16,"pagination"],[379,20,313,26],[379,21,313,27,"total"],[379,26,313,32],[379,29,313,35,"parseInt"],[379,37,313,43],[379,38,313,44,"total"],[379,43,313,49],[379,44,313,50],[380,8,314,12],[381,8,315,12],[381,15,315,19],[382,10,315,21,"data"],[382,14,315,25],[382,16,315,27,"Object"],[382,22,315,33],[382,23,315,34,"assign"],[382,29,315,40],[382,30,315,41,"Object"],[382,36,315,47],[382,37,315,48,"assign"],[382,43,315,54],[382,44,315,55],[382,45,315,56],[382,46,315,57],[382,48,315,59,"clients"],[382,55,315,66],[382,56,315,67],[382,58,315,69,"pagination"],[382,68,315,79],[382,69,315,80],[383,10,315,82,"error"],[383,15,315,87],[383,17,315,89],[384,8,315,94],[384,9,315,95],[385,6,316,8],[385,7,316,9],[385,8,317,8],[385,15,317,15,"error"],[385,20,317,20],[385,22,317,22],[386,8,318,12],[386,12,318,16],[386,13,318,17],[386,14,318,18],[386,16,318,20,"errors_1"],[386,24,318,28],[386,25,318,29,"isAuthError"],[386,36,318,40],[386,38,318,42,"error"],[386,43,318,47],[386,44,318,48],[386,46,318,50],[387,10,319,16],[387,17,319,23],[388,12,319,25,"data"],[388,16,319,29],[388,18,319,31],[389,14,319,33,"clients"],[389,21,319,40],[389,23,319,42],[390,12,319,45],[390,13,319,46],[391,12,319,48,"error"],[392,10,319,54],[392,11,319,55],[393,8,320,12],[394,8,321,12],[394,14,321,18,"error"],[394,19,321,23],[395,6,322,8],[396,4,323,4],[397,4,324,4],[398,0,325,0],[399,0,326,0],[400,0,327,0],[401,0,328,0],[402,0,329,0],[403,4,330,4],[403,10,330,10,"_createOAuthClient"],[403,28,330,28,"_createOAuthClient"],[403,29,330,29,"params"],[403,35,330,35],[403,37,330,37],[404,6,331,8],[404,10,331,12],[405,8,332,12],[405,15,332,19],[405,21,332,25],[405,22,332,26],[405,23,332,27],[405,25,332,29,"fetch_1"],[405,32,332,36],[405,33,332,37,"_request"],[405,41,332,45],[405,43,332,47],[405,47,332,51],[405,48,332,52,"fetch"],[405,53,332,57],[405,55,332,59],[405,61,332,65],[405,63,332,67],[405,66,332,70],[405,70,332,74],[405,71,332,75,"url"],[405,74,332,78],[405,96,332,100],[405,98,332,102],[406,10,333,16,"body"],[406,14,333,20],[406,16,333,22,"params"],[406,22,333,28],[407,10,334,16,"headers"],[407,17,334,23],[407,19,334,25],[407,23,334,29],[407,24,334,30,"headers"],[407,31,334,37],[408,10,335,16,"xform"],[408,15,335,21],[408,17,335,24,"client"],[408,23,335,30],[408,27,335,35],[409,12,336,20],[409,19,336,27],[410,14,336,29,"data"],[410,18,336,33],[410,20,336,35,"client"],[410,26,336,41],[411,14,336,43,"error"],[411,19,336,48],[411,21,336,50],[412,12,336,55],[412,13,336,56],[413,10,337,16],[414,8,338,12],[414,9,338,13],[414,10,338,14],[415,6,339,8],[415,7,339,9],[415,8,340,8],[415,15,340,15,"error"],[415,20,340,20],[415,22,340,22],[416,8,341,12],[416,12,341,16],[416,13,341,17],[416,14,341,18],[416,16,341,20,"errors_1"],[416,24,341,28],[416,25,341,29,"isAuthError"],[416,36,341,40],[416,38,341,42,"error"],[416,43,341,47],[416,44,341,48],[416,46,341,50],[417,10,342,16],[417,17,342,23],[418,12,342,25,"data"],[418,16,342,29],[418,18,342,31],[418,22,342,35],[419,12,342,37,"error"],[420,10,342,43],[420,11,342,44],[421,8,343,12],[422,8,344,12],[422,14,344,18,"error"],[422,19,344,23],[423,6,345,8],[424,4,346,4],[425,4,347,4],[426,0,348,0],[427,0,349,0],[428,0,350,0],[429,0,351,0],[430,0,352,0],[431,4,353,4],[431,10,353,10,"_getOAuthClient"],[431,25,353,25,"_getOAuthClient"],[431,26,353,26,"clientId"],[431,34,353,34],[431,36,353,36],[432,6,354,8],[432,10,354,12],[433,8,355,12],[433,15,355,19],[433,21,355,25],[433,22,355,26],[433,23,355,27],[433,25,355,29,"fetch_1"],[433,32,355,36],[433,33,355,37,"_request"],[433,41,355,45],[433,43,355,47],[433,47,355,51],[433,48,355,52,"fetch"],[433,53,355,57],[433,55,355,59],[433,60,355,64],[433,62,355,66],[433,65,355,69],[433,69,355,73],[433,70,355,74,"url"],[433,73,355,77],[433,97,355,101,"clientId"],[433,105,355,109],[433,107,355,111],[433,109,355,113],[434,10,356,16,"headers"],[434,17,356,23],[434,19,356,25],[434,23,356,29],[434,24,356,30,"headers"],[434,31,356,37],[435,10,357,16,"xform"],[435,15,357,21],[435,17,357,24,"client"],[435,23,357,30],[435,27,357,35],[436,12,358,20],[436,19,358,27],[437,14,358,29,"data"],[437,18,358,33],[437,20,358,35,"client"],[437,26,358,41],[438,14,358,43,"error"],[438,19,358,48],[438,21,358,50],[439,12,358,55],[439,13,358,56],[440,10,359,16],[441,8,360,12],[441,9,360,13],[441,10,360,14],[442,6,361,8],[442,7,361,9],[442,8,362,8],[442,15,362,15,"error"],[442,20,362,20],[442,22,362,22],[443,8,363,12],[443,12,363,16],[443,13,363,17],[443,14,363,18],[443,16,363,20,"errors_1"],[443,24,363,28],[443,25,363,29,"isAuthError"],[443,36,363,40],[443,38,363,42,"error"],[443,43,363,47],[443,44,363,48],[443,46,363,50],[444,10,364,16],[444,17,364,23],[445,12,364,25,"data"],[445,16,364,29],[445,18,364,31],[445,22,364,35],[446,12,364,37,"error"],[447,10,364,43],[447,11,364,44],[448,8,365,12],[449,8,366,12],[449,14,366,18,"error"],[449,19,366,23],[450,6,367,8],[451,4,368,4],[452,4,369,4],[453,0,370,0],[454,0,371,0],[455,0,372,0],[456,0,373,0],[457,0,374,0],[458,4,375,4],[458,10,375,10,"_deleteOAuthClient"],[458,28,375,28,"_deleteOAuthClient"],[458,29,375,29,"clientId"],[458,37,375,37],[458,39,375,39],[459,6,376,8],[459,10,376,12],[460,8,377,12],[460,15,377,19],[460,21,377,25],[460,22,377,26],[460,23,377,27],[460,25,377,29,"fetch_1"],[460,32,377,36],[460,33,377,37,"_request"],[460,41,377,45],[460,43,377,47],[460,47,377,51],[460,48,377,52,"fetch"],[460,53,377,57],[460,55,377,59],[460,63,377,67],[460,65,377,69],[460,68,377,72],[460,72,377,76],[460,73,377,77,"url"],[460,76,377,80],[460,100,377,104,"clientId"],[460,108,377,112],[460,110,377,114],[460,112,377,116],[461,10,378,16,"headers"],[461,17,378,23],[461,19,378,25],[461,23,378,29],[461,24,378,30,"headers"],[461,31,378,37],[462,10,379,16,"xform"],[462,15,379,21],[462,17,379,24,"client"],[462,23,379,30],[462,27,379,35],[463,12,380,20],[463,19,380,27],[464,14,380,29,"data"],[464,18,380,33],[464,20,380,35,"client"],[464,26,380,41],[465,14,380,43,"error"],[465,19,380,48],[465,21,380,50],[466,12,380,55],[466,13,380,56],[467,10,381,16],[468,8,382,12],[468,9,382,13],[468,10,382,14],[469,6,383,8],[469,7,383,9],[469,8,384,8],[469,15,384,15,"error"],[469,20,384,20],[469,22,384,22],[470,8,385,12],[470,12,385,16],[470,13,385,17],[470,14,385,18],[470,16,385,20,"errors_1"],[470,24,385,28],[470,25,385,29,"isAuthError"],[470,36,385,40],[470,38,385,42,"error"],[470,43,385,47],[470,44,385,48],[470,46,385,50],[471,10,386,16],[471,17,386,23],[472,12,386,25,"data"],[472,16,386,29],[472,18,386,31],[472,22,386,35],[473,12,386,37,"error"],[474,10,386,43],[474,11,386,44],[475,8,387,12],[476,8,388,12],[476,14,388,18,"error"],[476,19,388,23],[477,6,389,8],[478,4,390,4],[479,4,391,4],[480,0,392,0],[481,0,393,0],[482,0,394,0],[483,0,395,0],[484,0,396,0],[485,4,397,4],[485,10,397,10,"_regenerateOAuthClientSecret"],[485,38,397,38,"_regenerateOAuthClientSecret"],[485,39,397,39,"clientId"],[485,47,397,47],[485,49,397,49],[486,6,398,8],[486,10,398,12],[487,8,399,12],[487,15,399,19],[487,21,399,25],[487,22,399,26],[487,23,399,27],[487,25,399,29,"fetch_1"],[487,32,399,36],[487,33,399,37,"_request"],[487,41,399,45],[487,43,399,47],[487,47,399,51],[487,48,399,52,"fetch"],[487,53,399,57],[487,55,399,59],[487,61,399,65],[487,63,399,67],[487,66,399,70],[487,70,399,74],[487,71,399,75,"url"],[487,74,399,78],[487,98,399,102,"clientId"],[487,106,399,110],[487,126,399,130],[487,128,399,132],[488,10,400,16,"headers"],[488,17,400,23],[488,19,400,25],[488,23,400,29],[488,24,400,30,"headers"],[488,31,400,37],[489,10,401,16,"xform"],[489,15,401,21],[489,17,401,24,"client"],[489,23,401,30],[489,27,401,35],[490,12,402,20],[490,19,402,27],[491,14,402,29,"data"],[491,18,402,33],[491,20,402,35,"client"],[491,26,402,41],[492,14,402,43,"error"],[492,19,402,48],[492,21,402,50],[493,12,402,55],[493,13,402,56],[494,10,403,16],[495,8,404,12],[495,9,404,13],[495,10,404,14],[496,6,405,8],[496,7,405,9],[496,8,406,8],[496,15,406,15,"error"],[496,20,406,20],[496,22,406,22],[497,8,407,12],[497,12,407,16],[497,13,407,17],[497,14,407,18],[497,16,407,20,"errors_1"],[497,24,407,28],[497,25,407,29,"isAuthError"],[497,36,407,40],[497,38,407,42,"error"],[497,43,407,47],[497,44,407,48],[497,46,407,50],[498,10,408,16],[498,17,408,23],[499,12,408,25,"data"],[499,16,408,29],[499,18,408,31],[499,22,408,35],[500,12,408,37,"error"],[501,10,408,43],[501,11,408,44],[502,8,409,12],[503,8,410,12],[503,14,410,18,"error"],[503,19,410,23],[504,6,411,8],[505,4,412,4],[506,2,413,0],[507,2,414,0,"exports"],[507,9,414,7],[507,10,414,8,"default"],[507,17,414,15],[507,20,414,18,"GoTrueAdminApi"],[507,34,414,32],[508,0,414,33],[508,3]],"functionMap":{"names":["<global>","<anonymous>","GoTrueAdminApi","constructor","signOut","inviteUserByEmail","generateLink","createUser","listUsers","links.forEach$argument_0","getUserById","updateUserById","deleteUser","_listFactors","xform","_deleteFactor","_listOAuthClients","_createOAuthClient","_getOAuthClient","_deleteOAuthClient","_regenerateOAuthClientSecret"],"mappings":"AAA;sCCC;CDU;AEM;ICC;KDe;IEM;KFkB;IGM;KHe;IIQ;KJ4B;IKM;KLc;IMO;8BCmB;iBDI;KNW;IQQ;KRc;ISQ;KTe;IUU;KViB;IWC;uBCK;iBDE;KXU;IaC;Kbe;IcO;8BPmB;iBOI;KdW;IeO;uBHK;iBGE;KfS;IgBO;uBJI;iBIE;KhBS;IiBO;uBLI;iBKE;KjBS;IkBO;uBNI;iBME;KlBS;CFC"},"hasCjsExports":true},"type":"js/module"}]}