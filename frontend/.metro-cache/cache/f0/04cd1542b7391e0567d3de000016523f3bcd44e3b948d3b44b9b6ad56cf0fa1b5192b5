{"dependencies":[{"name":"./base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":20,"index":1472},"end":{"line":24,"column":42,"index":1494}}],"key":"8aRCc7KtRb910uq7kUp1PxOPUfw=","exportNames":["*"],"imports":1}},{"name":"./errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":17,"index":1513},"end":{"line":25,"column":36,"index":1532}}],"key":"GlkDztMSsNRYmp31iO+V/Albin8=","exportNames":["*"],"imports":1}},{"name":"./helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":18,"index":1552},"end":{"line":26,"column":38,"index":1572}}],"key":"f1qS3jT0PALHpwfgOy1Ia0GaJzk=","exportNames":["*"],"imports":1}},{"name":"./webauthn.errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":26,"index":1600},"end":{"line":27,"column":54,"index":1628}}],"key":"Y47Pher0qG9OS81lddHOxsGqyeo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WebAuthnApi = exports.DEFAULT_REQUEST_OPTIONS = exports.DEFAULT_CREATION_OPTIONS = exports.webAuthnAbortService = exports.WebAuthnAbortService = exports.identifyAuthenticationError = exports.identifyRegistrationError = exports.isWebAuthnError = exports.WebAuthnError = void 0;\n  exports.deserializeCredentialCreationOptions = deserializeCredentialCreationOptions;\n  exports.deserializeCredentialRequestOptions = deserializeCredentialRequestOptions;\n  exports.serializeCredentialCreationResponse = serializeCredentialCreationResponse;\n  exports.serializeCredentialRequestResponse = serializeCredentialRequestResponse;\n  exports.isValidDomain = isValidDomain;\n  exports.createCredential = createCredential;\n  exports.getCredential = getCredential;\n  exports.mergeCredentialCreationOptions = mergeCredentialCreationOptions;\n  exports.mergeCredentialRequestOptions = mergeCredentialRequestOptions;\n  const base64url_1 = require(_dependencyMap[0], \"./base64url\");\n  const errors_1 = require(_dependencyMap[1], \"./errors\");\n  const helpers_1 = require(_dependencyMap[2], \"./helpers\");\n  const webauthn_errors_1 = require(_dependencyMap[3], \"./webauthn.errors\");\n  Object.defineProperty(exports, \"identifyAuthenticationError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.identifyAuthenticationError;\n    }\n  });\n  Object.defineProperty(exports, \"identifyRegistrationError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.identifyRegistrationError;\n    }\n  });\n  Object.defineProperty(exports, \"isWebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.isWebAuthnError;\n    }\n  });\n  Object.defineProperty(exports, \"WebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return webauthn_errors_1.WebAuthnError;\n    }\n  });\n  /**\n   * WebAuthn abort service to manage ceremony cancellation.\n   * Ensures only one WebAuthn ceremony is active at a time to prevent \"operation already in progress\" errors.\n   *\n   * @experimental This class is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/#sctn-automation-webdriver-capability W3C WebAuthn Spec - Aborting Ceremonies}\n   */\n  class WebAuthnAbortService {\n    /**\n     * Create an abort signal for a new WebAuthn operation.\n     * Automatically cancels any existing operation.\n     *\n     * @returns {AbortSignal} Signal to pass to navigator.credentials.create() or .get()\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal MDN - AbortSignal}\n     */\n    createNewAbortSignal() {\n      // Abort any existing calls to navigator.credentials.create() or navigator.credentials.get()\n      if (this.controller) {\n        const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n        abortError.name = 'AbortError';\n        this.controller.abort(abortError);\n      }\n      const newController = new AbortController();\n      this.controller = newController;\n      return newController.signal;\n    }\n    /**\n     * Manually cancel the current WebAuthn operation.\n     * Useful for cleaning up when user cancels or navigates away.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort MDN - AbortController.abort}\n     */\n    cancelCeremony() {\n      if (this.controller) {\n        const abortError = new Error('Manually cancelling existing WebAuthn API call');\n        abortError.name = 'AbortError';\n        this.controller.abort(abortError);\n        this.controller = undefined;\n      }\n    }\n  }\n  exports.WebAuthnAbortService = WebAuthnAbortService;\n  /**\n   * Singleton instance to ensure only one WebAuthn ceremony is active at a time.\n   * This prevents \"operation already in progress\" errors when retrying WebAuthn operations.\n   *\n   * @experimental This instance is experimental and may change in future releases\n   */\n  exports.webAuthnAbortService = new WebAuthnAbortService();\n  /**\n   * Convert base64url encoded strings in WebAuthn credential creation options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseCreationOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialCreationOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Options ready for navigator.credentials.create()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseCreationOptionsFromJSON W3C WebAuthn Spec - parseCreationOptionsFromJSON}\n   */\n  function deserializeCredentialCreationOptions(options) {\n    if (!options) {\n      throw new Error('Credential creation options are required');\n    }\n    // Check if the native parseCreationOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseCreationOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseCreationOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseCreationOptionsFromJSON(/** we assert the options here as typescript still doesn't know about future webauthn types */\n      options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    const {\n        challenge: challengeStr,\n        user: userOpts,\n        excludeCredentials\n      } = options,\n      restOptions = __rest(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"user\", \"excludeCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    const challenge = (0, base64url_1.base64UrlToUint8Array)(challengeStr).buffer;\n    // Convert user.id from base64url to ArrayBuffer\n    const user = Object.assign(Object.assign({}, userOpts), {\n      id: (0, base64url_1.base64UrlToUint8Array)(userOpts.id).buffer\n    });\n    // Build the result object\n    const result = Object.assign(Object.assign({}, restOptions), {\n      challenge,\n      user\n    });\n    // Only add excludeCredentials if it exists\n    if (excludeCredentials && excludeCredentials.length > 0) {\n      result.excludeCredentials = new Array(excludeCredentials.length);\n      for (let i = 0; i < excludeCredentials.length; i++) {\n        const cred = excludeCredentials[i];\n        result.excludeCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, base64url_1.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert base64url encoded strings in WebAuthn credential request options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseRequestOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialRequestOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Options ready for navigator.credentials.get()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseRequestOptionsFromJSON W3C WebAuthn Spec - parseRequestOptionsFromJSON}\n   */\n  function deserializeCredentialRequestOptions(options) {\n    if (!options) {\n      throw new Error('Credential request options are required');\n    }\n    // Check if the native parseRequestOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseRequestOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseRequestOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseRequestOptionsFromJSON(options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    const {\n        challenge: challengeStr,\n        allowCredentials\n      } = options,\n      restOptions = __rest(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"allowCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    const challenge = (0, base64url_1.base64UrlToUint8Array)(challengeStr).buffer;\n    // Build the result object\n    const result = Object.assign(Object.assign({}, restOptions), {\n      challenge\n    });\n    // Only add allowCredentials if it exists\n    if (allowCredentials && allowCredentials.length > 0) {\n      result.allowCredentials = new Array(allowCredentials.length);\n      for (let i = 0; i < allowCredentials.length; i++) {\n        const cred = allowCredentials[i];\n        result.allowCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, base64url_1.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert a registration/enrollment credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {RegistrationCredential} credential - Credential from navigator.credentials.create()\n   * @returns {RegistrationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialCreationResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    const credentialWithAttachment = credential;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      response: {\n        attestationObject: (0, base64url_1.bytesToBase64URL)(new Uint8Array(credential.response.attestationObject)),\n        clientDataJSON: (0, base64url_1.bytesToBase64URL)(new Uint8Array(credential.response.clientDataJSON))\n      },\n      type: 'public-key',\n      clientExtensionResults: credential.getClientExtensionResults(),\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * Convert an authentication/verification credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {AuthenticationCredential} credential - Credential from navigator.credentials.get()\n   * @returns {AuthenticationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialRequestResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    // Fallback to manual conversion for browsers that don't support toJSON\n    // Access authenticatorAttachment via type assertion to handle TypeScript version differences\n    // @simplewebauthn/types includes this property but base TypeScript 4.7.4 doesn't\n    const credentialWithAttachment = credential;\n    const clientExtensionResults = credential.getClientExtensionResults();\n    const assertionResponse = credential.response;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      // W3C spec expects rawId to match id for JSON format\n      response: {\n        authenticatorData: (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.authenticatorData)),\n        clientDataJSON: (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.clientDataJSON)),\n        signature: (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.signature)),\n        userHandle: assertionResponse.userHandle ? (0, base64url_1.bytesToBase64URL)(new Uint8Array(assertionResponse.userHandle)) : undefined\n      },\n      type: 'public-key',\n      clientExtensionResults,\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * A simple test to determine if a hostname is a properly-formatted domain name.\n   * Considers localhost valid for development environments.\n   *\n   * A \"valid domain\" is defined here: https://url.spec.whatwg.org/#valid-domain\n   *\n   * Regex sourced from here:\n   * https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n   *\n   * @param {string} hostname - The hostname to validate\n   * @returns {boolean} True if valid domain or localhost\n   * @see {@link https://url.spec.whatwg.org/#valid-domain WHATWG URL Spec - Valid Domain}\n   */\n  function isValidDomain(hostname) {\n    return (\n      // Consider localhost valid as well since it's okay wrt Secure Contexts\n      hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname)\n    );\n  }\n  /**\n   * Determine if the browser is capable of WebAuthn.\n   * Checks for necessary Web APIs: PublicKeyCredential and Credential Management.\n   *\n   * @returns {boolean} True if browser supports WebAuthn\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential#browser_compatibility MDN - PublicKeyCredential Browser Compatibility}\n   */\n  function browserSupportsWebAuthn() {\n    var _a, _b;\n    return !!((0, helpers_1.isBrowser)() && 'PublicKeyCredential' in window && window.PublicKeyCredential && 'credentials' in navigator && typeof ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _a === void 0 ? void 0 : _a.create) === 'function' && typeof ((_b = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _b === void 0 ? void 0 : _b.get) === 'function');\n  }\n  /**\n   * Create a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.create() with error handling.\n   *\n   * @param {CredentialCreationOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<RegistrationCredential, WebAuthnError>>} Created credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create MDN - credentials.create}\n   */\n  async function createCredential(options) {\n    try {\n      const response = await navigator.credentials.create(/** we assert the type here until typescript types are updated */\n      options);\n      if (!response) {\n        return {\n          data: null,\n          error: new webauthn_errors_1.WebAuthnUnknownError('Empty credential response', response)\n        };\n      }\n      if (!(response instanceof PublicKeyCredential)) {\n        return {\n          data: null,\n          error: new webauthn_errors_1.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n        };\n      }\n      return {\n        data: response,\n        error: null\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: (0, webauthn_errors_1.identifyRegistrationError)({\n          error: err,\n          options\n        })\n      };\n    }\n  }\n  /**\n   * Get a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.get() with error handling.\n   *\n   * @param {CredentialRequestOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<AuthenticationCredential, WebAuthnError>>} Retrieved credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get MDN - credentials.get}\n   */\n  async function getCredential(options) {\n    try {\n      const response = await navigator.credentials.get(/** we assert the type here until typescript types are updated */\n      options);\n      if (!response) {\n        return {\n          data: null,\n          error: new webauthn_errors_1.WebAuthnUnknownError('Empty credential response', response)\n        };\n      }\n      if (!(response instanceof PublicKeyCredential)) {\n        return {\n          data: null,\n          error: new webauthn_errors_1.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n        };\n      }\n      return {\n        data: response,\n        error: null\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: (0, webauthn_errors_1.identifyAuthenticationError)({\n          error: err,\n          options\n        })\n      };\n    }\n  }\n  exports.DEFAULT_CREATION_OPTIONS = {\n    hints: ['security-key'],\n    authenticatorSelection: {\n      authenticatorAttachment: 'cross-platform',\n      requireResidentKey: false,\n      /** set to preferred because older yubikeys don't have PIN/Biometric */\n      userVerification: 'preferred',\n      residentKey: 'discouraged'\n    },\n    attestation: 'none'\n  };\n  exports.DEFAULT_REQUEST_OPTIONS = {\n    /** set to preferred because older yubikeys don't have PIN/Biometric */\n    userVerification: 'preferred',\n    hints: ['security-key']\n  };\n  function deepMerge(...sources) {\n    const isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n    const isArrayBufferLike = val => val instanceof ArrayBuffer || ArrayBuffer.isView(val);\n    const result = {};\n    for (const source of sources) {\n      if (!source) continue;\n      for (const key in source) {\n        const value = source[key];\n        if (value === undefined) continue;\n        if (Array.isArray(value)) {\n          // preserve array reference, including unions like AuthenticatorTransport[]\n          result[key] = value;\n        } else if (isArrayBufferLike(value)) {\n          result[key] = value;\n        } else if (isObject(value)) {\n          const existing = result[key];\n          if (isObject(existing)) {\n            result[key] = deepMerge(existing, value);\n          } else {\n            result[key] = deepMerge(value);\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Merges WebAuthn credential creation options with overrides.\n   * Sets sensible defaults for authenticator selection and extensions.\n   *\n   * @param {PublicKeyCredentialCreationOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Optional overrides to apply\n   * @param {string} friendlyName - Optional friendly name for the credential\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Merged credential creation options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-authenticatorselectioncriteria W3C WebAuthn Spec - AuthenticatorSelectionCriteria}\n   */\n  function mergeCredentialCreationOptions(baseOptions, overrides) {\n    return deepMerge(exports.DEFAULT_CREATION_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * Merges WebAuthn credential request options with overrides.\n   * Sets sensible defaults for user verification and hints.\n   *\n   * @param {PublicKeyCredentialRequestOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Optional overrides to apply\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Merged credential request options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-publickeycredentialrequestoptions W3C WebAuthn Spec - PublicKeyCredentialRequestOptions}\n   */\n  function mergeCredentialRequestOptions(baseOptions, overrides) {\n    return deepMerge(exports.DEFAULT_REQUEST_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * WebAuthn API wrapper for Supabase Auth.\n   * Provides methods for enrolling, challenging, verifying, authenticating, and registering WebAuthn credentials.\n   *\n   * @experimental This API is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/ W3C WebAuthn Specification}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API MDN - Web Authentication API}\n   */\n  class WebAuthnApi {\n    constructor(client) {\n      this.client = client;\n      // Bind all methods so they can be destructured\n      this.enroll = this._enroll.bind(this);\n      this.challenge = this._challenge.bind(this);\n      this.verify = this._verify.bind(this);\n      this.authenticate = this._authenticate.bind(this);\n      this.register = this._register.bind(this);\n    }\n    /**\n     * Enroll a new WebAuthn factor.\n     * Creates an unverified WebAuthn factor that must be verified with a credential.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Omit<MFAEnrollWebauthnParams, 'factorType'>} params - Enrollment parameters (friendlyName required)\n     * @returns {Promise<AuthMFAEnrollWebauthnResponse>} Enrolled factor details or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n     */\n    async _enroll(params) {\n      return this.client.mfa.enroll(Object.assign(Object.assign({}, params), {\n        factorType: 'webauthn'\n      }));\n    }\n    /**\n     * Challenge for WebAuthn credential creation or authentication.\n     * Combines server challenge with browser credential operations.\n     * Handles both registration (create) and authentication (request) flows.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal }} params - Challenge parameters including factorId\n     * @param {Object} overrides - Allows you to override the parameters passed to navigator.credentials\n     * @param {PublicKeyCredentialCreationOptionsFuture} overrides.create - Override options for credential creation\n     * @param {PublicKeyCredentialRequestOptionsFuture} overrides.request - Override options for credential request\n     * @returns {Promise<RequestResult>} Challenge response with credential or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}\n     * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying Assertion}\n     */\n    async _challenge({\n      factorId,\n      webauthn,\n      friendlyName,\n      signal\n    }, overrides) {\n      try {\n        // Get challenge from server using the client's MFA methods\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this.client.mfa.challenge({\n          factorId,\n          webauthn\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        const abortSignal = signal !== null && signal !== void 0 ? signal : exports.webAuthnAbortService.createNewAbortSignal();\n        /** webauthn will fail if either of the name/displayname are blank */\n        if (challengeResponse.webauthn.type === 'create') {\n          const {\n            user\n          } = challengeResponse.webauthn.credential_options.publicKey;\n          if (!user.name) {\n            user.name = `${user.id}:${friendlyName}`;\n          }\n          if (!user.displayName) {\n            user.displayName = user.name;\n          }\n        }\n        switch (challengeResponse.webauthn.type) {\n          case 'create':\n            {\n              const options = mergeCredentialCreationOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.create);\n              const {\n                data,\n                error\n              } = await createCredential({\n                publicKey: options,\n                signal: abortSignal\n              });\n              if (data) {\n                return {\n                  data: {\n                    factorId,\n                    challengeId: challengeResponse.id,\n                    webauthn: {\n                      type: challengeResponse.webauthn.type,\n                      credential_response: data\n                    }\n                  },\n                  error: null\n                };\n              }\n              return {\n                data: null,\n                error\n              };\n            }\n          case 'request':\n            {\n              const options = mergeCredentialRequestOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.request);\n              const {\n                data,\n                error\n              } = await getCredential(Object.assign(Object.assign({}, challengeResponse.webauthn.credential_options), {\n                publicKey: options,\n                signal: abortSignal\n              }));\n              if (data) {\n                return {\n                  data: {\n                    factorId,\n                    challengeId: challengeResponse.id,\n                    webauthn: {\n                      type: challengeResponse.webauthn.type,\n                      credential_response: data\n                    }\n                  },\n                  error: null\n                };\n              }\n              return {\n                data: null,\n                error\n              };\n            }\n        }\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new errors_1.AuthUnknownError('Unexpected error in challenge', error)\n        };\n      }\n    }\n    /**\n     * Verify a WebAuthn credential with the server.\n     * Completes the WebAuthn ceremony by sending the credential to the server for verification.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Verification parameters\n     * @param {string} params.challengeId - ID of the challenge being verified\n     * @param {string} params.factorId - ID of the WebAuthn factor\n     * @param {MFAVerifyWebauthnParams<T>['webauthn']} params.webauthn - WebAuthn credential response\n     * @returns {Promise<AuthMFAVerifyResponse>} Verification result with session or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}\n     * */\n    async _verify({\n      challengeId,\n      factorId,\n      webauthn\n    }) {\n      return this.client.mfa.verify({\n        factorId,\n        challengeId,\n        webauthn: webauthn\n      });\n    }\n    /**\n     * Complete WebAuthn authentication flow.\n     * Performs challenge and verification in a single operation for existing credentials.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Authentication parameters\n     * @param {string} params.factorId - ID of the WebAuthn factor to authenticate with\n     * @param {Object} params.webauthn - WebAuthn configuration\n     * @param {string} params.webauthn.rpId - Relying Party ID (defaults to current hostname)\n     * @param {string[]} params.webauthn.rpOrigins - Allowed origins (defaults to current origin)\n     * @param {AbortSignal} params.webauthn.signal - Optional abort signal\n     * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Override options for navigator.credentials.get\n     * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Authentication result\n     * @see {@link https://w3c.github.io/webauthn/#sctn-authentication W3C WebAuthn Spec - Authentication Ceremony}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions MDN - PublicKeyCredentialRequestOptions}\n     */\n    async _authenticate({\n      factorId,\n      webauthn: {\n        rpId = false ? window.location.hostname : undefined,\n        rpOrigins = false ? [window.location.origin] : undefined,\n        signal\n      }\n    }, overrides) {\n      if (!rpId) {\n        return {\n          data: null,\n          error: new errors_1.AuthError('rpId is required for WebAuthn authentication')\n        };\n      }\n      try {\n        if (!browserSupportsWebAuthn()) {\n          return {\n            data: null,\n            error: new errors_1.AuthUnknownError('Browser does not support WebAuthn', null)\n          };\n        }\n        // Get challenge and credential\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this.challenge({\n          factorId,\n          webauthn: {\n            rpId,\n            rpOrigins\n          },\n          signal\n        }, {\n          request: overrides\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        const {\n          webauthn\n        } = challengeResponse;\n        // Verify credential\n        return this._verify({\n          factorId,\n          challengeId: challengeResponse.challengeId,\n          webauthn: {\n            type: webauthn.type,\n            rpId,\n            rpOrigins,\n            credential_response: webauthn.credential_response\n          }\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new errors_1.AuthUnknownError('Unexpected error in authenticate', error)\n        };\n      }\n    }\n    /**\n     * Complete WebAuthn registration flow.\n     * Performs enrollment, challenge, and verification in a single operation for new credentials.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Registration parameters\n     * @param {string} params.friendlyName - User-friendly name for the credential\n     * @param {string} params.rpId - Relying Party ID (defaults to current hostname)\n     * @param {string[]} params.rpOrigins - Allowed origins (defaults to current origin)\n     * @param {AbortSignal} params.signal - Optional abort signal\n     * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Override options for navigator.credentials.create\n     * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Registration result\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registration Ceremony}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions MDN - PublicKeyCredentialCreationOptions}\n     */\n    async _register({\n      friendlyName,\n      rpId = false ? window.location.hostname : undefined,\n      rpOrigins = false ? [window.location.origin] : undefined,\n      signal\n    }, overrides) {\n      if (!rpId) {\n        return {\n          data: null,\n          error: new errors_1.AuthError('rpId is required for WebAuthn registration')\n        };\n      }\n      try {\n        if (!browserSupportsWebAuthn()) {\n          return {\n            data: null,\n            error: new errors_1.AuthUnknownError('Browser does not support WebAuthn', null)\n          };\n        }\n        // Enroll factor\n        const {\n          data: factor,\n          error: enrollError\n        } = await this._enroll({\n          friendlyName\n        });\n        if (!factor) {\n          await this.client.mfa.listFactors().then(factors => {\n            var _a;\n            return (_a = factors.data) === null || _a === void 0 ? void 0 : _a.all.find(v => v.factor_type === 'webauthn' && v.friendly_name === friendlyName && v.status !== 'unverified');\n          }).then(factor => factor ? this.client.mfa.unenroll({\n            factorId: factor === null || factor === void 0 ? void 0 : factor.id\n          }) : void 0);\n          return {\n            data: null,\n            error: enrollError\n          };\n        }\n        // Get challenge and create credential\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this._challenge({\n          factorId: factor.id,\n          friendlyName: factor.friendly_name,\n          webauthn: {\n            rpId,\n            rpOrigins\n          },\n          signal\n        }, {\n          create: overrides\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        return this._verify({\n          factorId: factor.id,\n          challengeId: challengeResponse.challengeId,\n          webauthn: {\n            rpId,\n            rpOrigins,\n            type: challengeResponse.webauthn.type,\n            credential_response: challengeResponse.webauthn.credential_response\n          }\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new errors_1.AuthUnknownError('Unexpected error in register', error)\n        };\n      }\n    }\n  }\n  exports.WebAuthnApi = WebAuthnApi;\n});","lineCount":807,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__rest"],[4,12,2,10],[4,15,2,14],[4,19,2,18],[4,23,2,22],[4,27,2,26],[4,28,2,27,"__rest"],[4,34,2,33],[4,38,2,38],[4,48,2,48,"s"],[4,49,2,49],[4,51,2,51,"e"],[4,52,2,52],[4,54,2,54],[5,4,3,4],[5,8,3,8,"t"],[5,9,3,9],[5,12,3,12],[5,13,3,13],[5,14,3,14],[6,4,4,4],[6,9,4,9],[6,13,4,13,"p"],[6,14,4,14],[6,18,4,18,"s"],[6,19,4,19],[6,21,4,21],[6,25,4,25,"Object"],[6,31,4,31],[6,32,4,32,"prototype"],[6,41,4,41],[6,42,4,42,"hasOwnProperty"],[6,56,4,56],[6,57,4,57,"call"],[6,61,4,61],[6,62,4,62,"s"],[6,63,4,63],[6,65,4,65,"p"],[6,66,4,66],[6,67,4,67],[6,71,4,71,"e"],[6,72,4,72],[6,73,4,73,"indexOf"],[6,80,4,80],[6,81,4,81,"p"],[6,82,4,82],[6,83,4,83],[6,86,4,86],[6,87,4,87],[6,89,5,8,"t"],[6,90,5,9],[6,91,5,10,"p"],[6,92,5,11],[6,93,5,12],[6,96,5,15,"s"],[6,97,5,16],[6,98,5,17,"p"],[6,99,5,18],[6,100,5,19],[7,4,6,4],[7,8,6,8,"s"],[7,9,6,9],[7,13,6,13],[7,17,6,17],[7,21,6,21],[7,28,6,28,"Object"],[7,34,6,34],[7,35,6,35,"getOwnPropertySymbols"],[7,56,6,56],[7,61,6,61],[7,71,6,71],[7,73,7,8],[7,78,7,13],[7,82,7,17,"i"],[7,83,7,18],[7,86,7,21],[7,87,7,22],[7,89,7,24,"p"],[7,90,7,25],[7,93,7,28,"Object"],[7,99,7,34],[7,100,7,35,"getOwnPropertySymbols"],[7,121,7,56],[7,122,7,57,"s"],[7,123,7,58],[7,124,7,59],[7,126,7,61,"i"],[7,127,7,62],[7,130,7,65,"p"],[7,131,7,66],[7,132,7,67,"length"],[7,138,7,73],[7,140,7,75,"i"],[7,141,7,76],[7,143,7,78],[7,145,7,80],[8,6,8,12],[8,10,8,16,"e"],[8,11,8,17],[8,12,8,18,"indexOf"],[8,19,8,25],[8,20,8,26,"p"],[8,21,8,27],[8,22,8,28,"i"],[8,23,8,29],[8,24,8,30],[8,25,8,31],[8,28,8,34],[8,29,8,35],[8,33,8,39,"Object"],[8,39,8,45],[8,40,8,46,"prototype"],[8,49,8,55],[8,50,8,56,"propertyIsEnumerable"],[8,70,8,76],[8,71,8,77,"call"],[8,75,8,81],[8,76,8,82,"s"],[8,77,8,83],[8,79,8,85,"p"],[8,80,8,86],[8,81,8,87,"i"],[8,82,8,88],[8,83,8,89],[8,84,8,90],[8,86,9,16,"t"],[8,87,9,17],[8,88,9,18,"p"],[8,89,9,19],[8,90,9,20,"i"],[8,91,9,21],[8,92,9,22],[8,93,9,23],[8,96,9,26,"s"],[8,97,9,27],[8,98,9,28,"p"],[8,99,9,29],[8,100,9,30,"i"],[8,101,9,31],[8,102,9,32],[8,103,9,33],[9,4,10,8],[10,4,11,4],[10,11,11,11,"t"],[10,12,11,12],[11,2,12,0],[11,3,12,1],[12,2,13,0,"Object"],[12,8,13,6],[12,9,13,7,"defineProperty"],[12,23,13,21],[12,24,13,22,"exports"],[12,31,13,29],[12,33,13,31],[12,45,13,43],[12,47,13,45],[13,4,13,47,"value"],[13,9,13,52],[13,11,13,54],[14,2,13,59],[14,3,13,60],[14,4,13,61],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"WebAuthnApi"],[15,21,14,19],[15,24,14,22,"exports"],[15,31,14,29],[15,32,14,30,"DEFAULT_REQUEST_OPTIONS"],[15,55,14,53],[15,58,14,56,"exports"],[15,65,14,63],[15,66,14,64,"DEFAULT_CREATION_OPTIONS"],[15,90,14,88],[15,93,14,91,"exports"],[15,100,14,98],[15,101,14,99,"webAuthnAbortService"],[15,121,14,119],[15,124,14,122,"exports"],[15,131,14,129],[15,132,14,130,"WebAuthnAbortService"],[15,152,14,150],[15,155,14,153,"exports"],[15,162,14,160],[15,163,14,161,"identifyAuthenticationError"],[15,190,14,188],[15,193,14,191,"exports"],[15,200,14,198],[15,201,14,199,"identifyRegistrationError"],[15,226,14,224],[15,229,14,227,"exports"],[15,236,14,234],[15,237,14,235,"isWebAuthnError"],[15,252,14,250],[15,255,14,253,"exports"],[15,262,14,260],[15,263,14,261,"WebAuthnError"],[15,276,14,274],[15,279,14,277],[15,284,14,282],[15,285,14,283],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"deserializeCredentialCreationOptions"],[16,46,15,44],[16,49,15,47,"deserializeCredentialCreationOptions"],[16,85,15,83],[17,2,16,0,"exports"],[17,9,16,7],[17,10,16,8,"deserializeCredentialRequestOptions"],[17,45,16,43],[17,48,16,46,"deserializeCredentialRequestOptions"],[17,83,16,81],[18,2,17,0,"exports"],[18,9,17,7],[18,10,17,8,"serializeCredentialCreationResponse"],[18,45,17,43],[18,48,17,46,"serializeCredentialCreationResponse"],[18,83,17,81],[19,2,18,0,"exports"],[19,9,18,7],[19,10,18,8,"serializeCredentialRequestResponse"],[19,44,18,42],[19,47,18,45,"serializeCredentialRequestResponse"],[19,81,18,79],[20,2,19,0,"exports"],[20,9,19,7],[20,10,19,8,"isValidDomain"],[20,23,19,21],[20,26,19,24,"isValidDomain"],[20,39,19,37],[21,2,20,0,"exports"],[21,9,20,7],[21,10,20,8,"createCredential"],[21,26,20,24],[21,29,20,27,"createCredential"],[21,45,20,43],[22,2,21,0,"exports"],[22,9,21,7],[22,10,21,8,"getCredential"],[22,23,21,21],[22,26,21,24,"getCredential"],[22,39,21,37],[23,2,22,0,"exports"],[23,9,22,7],[23,10,22,8,"mergeCredentialCreationOptions"],[23,40,22,38],[23,43,22,41,"mergeCredentialCreationOptions"],[23,73,22,71],[24,2,23,0,"exports"],[24,9,23,7],[24,10,23,8,"mergeCredentialRequestOptions"],[24,39,23,37],[24,42,23,40,"mergeCredentialRequestOptions"],[24,71,23,69],[25,2,24,0],[25,8,24,6,"base64url_1"],[25,19,24,17],[25,22,24,20,"require"],[25,29,24,27],[25,30,24,27,"_dependencyMap"],[25,44,24,27],[25,62,24,41],[25,63,24,42],[26,2,25,0],[26,8,25,6,"errors_1"],[26,16,25,14],[26,19,25,17,"require"],[26,26,25,24],[26,27,25,24,"_dependencyMap"],[26,41,25,24],[26,56,25,35],[26,57,25,36],[27,2,26,0],[27,8,26,6,"helpers_1"],[27,17,26,15],[27,20,26,18,"require"],[27,27,26,25],[27,28,26,25,"_dependencyMap"],[27,42,26,25],[27,58,26,37],[27,59,26,38],[28,2,27,0],[28,8,27,6,"webauthn_errors_1"],[28,25,27,23],[28,28,27,26,"require"],[28,35,27,33],[28,36,27,33,"_dependencyMap"],[28,50,27,33],[28,74,27,53],[28,75,27,54],[29,2,28,0,"Object"],[29,8,28,6],[29,9,28,7,"defineProperty"],[29,23,28,21],[29,24,28,22,"exports"],[29,31,28,29],[29,33,28,31],[29,62,28,60],[29,64,28,62],[30,4,28,64,"enumerable"],[30,14,28,74],[30,16,28,76],[30,20,28,80],[31,4,28,82,"get"],[31,7,28,85],[31,9,28,87],[31,18,28,87,"get"],[31,19,28,87],[31,21,28,99],[32,6,28,101],[32,13,28,108,"webauthn_errors_1"],[32,30,28,125],[32,31,28,126,"identifyAuthenticationError"],[32,58,28,153],[33,4,28,155],[34,2,28,157],[34,3,28,158],[34,4,28,159],[35,2,29,0,"Object"],[35,8,29,6],[35,9,29,7,"defineProperty"],[35,23,29,21],[35,24,29,22,"exports"],[35,31,29,29],[35,33,29,31],[35,60,29,58],[35,62,29,60],[36,4,29,62,"enumerable"],[36,14,29,72],[36,16,29,74],[36,20,29,78],[37,4,29,80,"get"],[37,7,29,83],[37,9,29,85],[37,18,29,85,"get"],[37,19,29,85],[37,21,29,97],[38,6,29,99],[38,13,29,106,"webauthn_errors_1"],[38,30,29,123],[38,31,29,124,"identifyRegistrationError"],[38,56,29,149],[39,4,29,151],[40,2,29,153],[40,3,29,154],[40,4,29,155],[41,2,30,0,"Object"],[41,8,30,6],[41,9,30,7,"defineProperty"],[41,23,30,21],[41,24,30,22,"exports"],[41,31,30,29],[41,33,30,31],[41,50,30,48],[41,52,30,50],[42,4,30,52,"enumerable"],[42,14,30,62],[42,16,30,64],[42,20,30,68],[43,4,30,70,"get"],[43,7,30,73],[43,9,30,75],[43,18,30,75,"get"],[43,19,30,75],[43,21,30,87],[44,6,30,89],[44,13,30,96,"webauthn_errors_1"],[44,30,30,113],[44,31,30,114,"isWebAuthnError"],[44,46,30,129],[45,4,30,131],[46,2,30,133],[46,3,30,134],[46,4,30,135],[47,2,31,0,"Object"],[47,8,31,6],[47,9,31,7,"defineProperty"],[47,23,31,21],[47,24,31,22,"exports"],[47,31,31,29],[47,33,31,31],[47,48,31,46],[47,50,31,48],[48,4,31,50,"enumerable"],[48,14,31,60],[48,16,31,62],[48,20,31,66],[49,4,31,68,"get"],[49,7,31,71],[49,9,31,73],[49,18,31,73,"get"],[49,19,31,73],[49,21,31,85],[50,6,31,87],[50,13,31,94,"webauthn_errors_1"],[50,30,31,111],[50,31,31,112,"WebAuthnError"],[50,44,31,125],[51,4,31,127],[52,2,31,129],[52,3,31,130],[52,4,31,131],[53,2,32,0],[54,0,33,0],[55,0,34,0],[56,0,35,0],[57,0,36,0],[58,0,37,0],[59,0,38,0],[60,2,39,0],[60,8,39,6,"WebAuthnAbortService"],[60,28,39,26],[60,29,39,27],[61,4,40,4],[62,0,41,0],[63,0,42,0],[64,0,43,0],[65,0,44,0],[66,0,45,0],[67,0,46,0],[68,4,47,4,"createNewAbortSignal"],[68,24,47,24,"createNewAbortSignal"],[68,25,47,24],[68,27,47,27],[69,6,48,8],[70,6,49,8],[70,10,49,12],[70,14,49,16],[70,15,49,17,"controller"],[70,25,49,27],[70,27,49,29],[71,8,50,12],[71,14,50,18,"abortError"],[71,24,50,28],[71,27,50,31],[71,31,50,35,"Error"],[71,36,50,40],[71,37,50,41],[71,88,50,92],[71,89,50,93],[72,8,51,12,"abortError"],[72,18,51,22],[72,19,51,23,"name"],[72,23,51,27],[72,26,51,30],[72,38,51,42],[73,8,52,12],[73,12,52,16],[73,13,52,17,"controller"],[73,23,52,27],[73,24,52,28,"abort"],[73,29,52,33],[73,30,52,34,"abortError"],[73,40,52,44],[73,41,52,45],[74,6,53,8],[75,6,54,8],[75,12,54,14,"newController"],[75,25,54,27],[75,28,54,30],[75,32,54,34,"AbortController"],[75,47,54,49],[75,48,54,50],[75,49,54,51],[76,6,55,8],[76,10,55,12],[76,11,55,13,"controller"],[76,21,55,23],[76,24,55,26,"newController"],[76,37,55,39],[77,6,56,8],[77,13,56,15,"newController"],[77,26,56,28],[77,27,56,29,"signal"],[77,33,56,35],[78,4,57,4],[79,4,58,4],[80,0,59,0],[81,0,60,0],[82,0,61,0],[83,0,62,0],[84,0,63,0],[85,4,64,4,"cancelCeremony"],[85,18,64,18,"cancelCeremony"],[85,19,64,18],[85,21,64,21],[86,6,65,8],[86,10,65,12],[86,14,65,16],[86,15,65,17,"controller"],[86,25,65,27],[86,27,65,29],[87,8,66,12],[87,14,66,18,"abortError"],[87,24,66,28],[87,27,66,31],[87,31,66,35,"Error"],[87,36,66,40],[87,37,66,41],[87,85,66,89],[87,86,66,90],[88,8,67,12,"abortError"],[88,18,67,22],[88,19,67,23,"name"],[88,23,67,27],[88,26,67,30],[88,38,67,42],[89,8,68,12],[89,12,68,16],[89,13,68,17,"controller"],[89,23,68,27],[89,24,68,28,"abort"],[89,29,68,33],[89,30,68,34,"abortError"],[89,40,68,44],[89,41,68,45],[90,8,69,12],[90,12,69,16],[90,13,69,17,"controller"],[90,23,69,27],[90,26,69,30,"undefined"],[90,35,69,39],[91,6,70,8],[92,4,71,4],[93,2,72,0],[94,2,73,0,"exports"],[94,9,73,7],[94,10,73,8,"WebAuthnAbortService"],[94,30,73,28],[94,33,73,31,"WebAuthnAbortService"],[94,53,73,51],[95,2,74,0],[96,0,75,0],[97,0,76,0],[98,0,77,0],[99,0,78,0],[100,0,79,0],[101,2,80,0,"exports"],[101,9,80,7],[101,10,80,8,"webAuthnAbortService"],[101,30,80,28],[101,33,80,31],[101,37,80,35,"WebAuthnAbortService"],[101,57,80,55],[101,58,80,56],[101,59,80,57],[102,2,81,0],[103,0,82,0],[104,0,83,0],[105,0,84,0],[106,0,85,0],[107,0,86,0],[108,0,87,0],[109,0,88,0],[110,0,89,0],[111,2,90,0],[111,11,90,9,"deserializeCredentialCreationOptions"],[111,47,90,45,"deserializeCredentialCreationOptions"],[111,48,90,46,"options"],[111,55,90,53],[111,57,90,55],[112,4,91,4],[112,8,91,8],[112,9,91,9,"options"],[112,16,91,16],[112,18,91,18],[113,6,92,8],[113,12,92,14],[113,16,92,18,"Error"],[113,21,92,23],[113,22,92,24],[113,64,92,66],[113,65,92,67],[114,4,93,4],[115,4,94,4],[116,4,95,4],[116,8,95,8],[116,15,95,15,"PublicKeyCredential"],[116,34,95,34],[116,39,95,39],[116,50,95,50],[116,54,96,8],[116,84,96,38],[116,88,96,42,"PublicKeyCredential"],[116,107,96,61],[116,111,97,8],[116,118,97,15,"PublicKeyCredential"],[116,137,97,34],[116,138,98,13,"parseCreationOptionsFromJSON"],[116,166,98,41],[116,171,98,46],[116,181,98,56],[116,183,98,58],[117,6,99,8],[118,6,100,8],[118,13,100,15,"PublicKeyCredential"],[118,32,100,34],[118,33,100,35,"parseCreationOptionsFromJSON"],[118,61,100,63],[118,62,101,8],[119,6,102,8,"options"],[119,13,102,15],[119,14,102,16],[120,4,103,4],[121,4,104,4],[122,4,105,4],[123,4,106,4],[123,10,106,10],[124,8,106,12,"challenge"],[124,17,106,21],[124,19,106,23,"challengeStr"],[124,31,106,35],[125,8,106,37,"user"],[125,12,106,41],[125,14,106,43,"userOpts"],[125,22,106,51],[126,8,106,53,"excludeCredentials"],[127,6,106,72],[127,7,106,73],[127,10,106,76,"options"],[127,17,106,83],[128,6,106,85,"restOptions"],[128,17,106,96],[128,20,106,99,"__rest"],[128,26,106,105],[128,27,106,106,"options"],[129,6,107,4],[130,6,107,4],[130,8,108,6],[130,9,108,7],[130,20,108,18],[130,22,108,20],[130,28,108,26],[130,30,108,28],[130,50,108,48],[130,51,108,49],[130,52,108,50],[131,4,109,4],[132,4,110,4],[132,10,110,10,"challenge"],[132,19,110,19],[132,22,110,22],[132,23,110,23],[132,24,110,24],[132,26,110,26,"base64url_1"],[132,37,110,37],[132,38,110,38,"base64UrlToUint8Array"],[132,59,110,59],[132,61,110,61,"challengeStr"],[132,73,110,73],[132,74,110,74],[132,75,110,75,"buffer"],[132,81,110,81],[133,4,111,4],[134,4,112,4],[134,10,112,10,"user"],[134,14,112,14],[134,17,112,17,"Object"],[134,23,112,23],[134,24,112,24,"assign"],[134,30,112,30],[134,31,112,31,"Object"],[134,37,112,37],[134,38,112,38,"assign"],[134,44,112,44],[134,45,112,45],[134,46,112,46],[134,47,112,47],[134,49,112,49,"userOpts"],[134,57,112,57],[134,58,112,58],[134,60,112,60],[135,6,112,62,"id"],[135,8,112,64],[135,10,112,66],[135,11,112,67],[135,12,112,68],[135,14,112,70,"base64url_1"],[135,25,112,81],[135,26,112,82,"base64UrlToUint8Array"],[135,47,112,103],[135,49,112,105,"userOpts"],[135,57,112,113],[135,58,112,114,"id"],[135,60,112,116],[135,61,112,117],[135,62,112,118,"buffer"],[136,4,112,125],[136,5,112,126],[136,6,112,127],[137,4,113,4],[138,4,114,4],[138,10,114,10,"result"],[138,16,114,16],[138,19,114,19,"Object"],[138,25,114,25],[138,26,114,26,"assign"],[138,32,114,32],[138,33,114,33,"Object"],[138,39,114,39],[138,40,114,40,"assign"],[138,46,114,46],[138,47,114,47],[138,48,114,48],[138,49,114,49],[138,51,114,51,"restOptions"],[138,62,114,62],[138,63,114,63],[138,65,114,65],[139,6,114,67,"challenge"],[139,15,114,76],[140,6,115,8,"user"],[141,4,115,13],[141,5,115,14],[141,6,115,15],[142,4,116,4],[143,4,117,4],[143,8,117,8,"excludeCredentials"],[143,26,117,26],[143,30,117,30,"excludeCredentials"],[143,48,117,48],[143,49,117,49,"length"],[143,55,117,55],[143,58,117,58],[143,59,117,59],[143,61,117,61],[144,6,118,8,"result"],[144,12,118,14],[144,13,118,15,"excludeCredentials"],[144,31,118,33],[144,34,118,36],[144,38,118,40,"Array"],[144,43,118,45],[144,44,118,46,"excludeCredentials"],[144,62,118,64],[144,63,118,65,"length"],[144,69,118,71],[144,70,118,72],[145,6,119,8],[145,11,119,13],[145,15,119,17,"i"],[145,16,119,18],[145,19,119,21],[145,20,119,22],[145,22,119,24,"i"],[145,23,119,25],[145,26,119,28,"excludeCredentials"],[145,44,119,46],[145,45,119,47,"length"],[145,51,119,53],[145,53,119,55,"i"],[145,54,119,56],[145,56,119,58],[145,58,119,60],[146,8,120,12],[146,14,120,18,"cred"],[146,18,120,22],[146,21,120,25,"excludeCredentials"],[146,39,120,43],[146,40,120,44,"i"],[146,41,120,45],[146,42,120,46],[147,8,121,12,"result"],[147,14,121,18],[147,15,121,19,"excludeCredentials"],[147,33,121,37],[147,34,121,38,"i"],[147,35,121,39],[147,36,121,40],[147,39,121,43,"Object"],[147,45,121,49],[147,46,121,50,"assign"],[147,52,121,56],[147,53,121,57,"Object"],[147,59,121,63],[147,60,121,64,"assign"],[147,66,121,70],[147,67,121,71],[147,68,121,72],[147,69,121,73],[147,71,121,75,"cred"],[147,75,121,79],[147,76,121,80],[147,78,121,82],[148,10,121,84,"id"],[148,12,121,86],[148,14,121,88],[148,15,121,89],[148,16,121,90],[148,18,121,92,"base64url_1"],[148,29,121,103],[148,30,121,104,"base64UrlToUint8Array"],[148,51,121,125],[148,53,121,127,"cred"],[148,57,121,131],[148,58,121,132,"id"],[148,60,121,134],[148,61,121,135],[148,62,121,136,"buffer"],[148,68,121,142],[149,10,121,144,"type"],[149,14,121,148],[149,16,121,150,"cred"],[149,20,121,154],[149,21,121,155,"type"],[149,25,121,159],[149,29,121,163],[149,41,121,175],[150,10,122,16],[151,10,123,16,"transports"],[151,20,123,26],[151,22,123,28,"cred"],[151,26,123,32],[151,27,123,33,"transports"],[152,8,123,44],[152,9,123,45],[152,10,123,46],[153,6,124,8],[154,4,125,4],[155,4,126,4],[155,11,126,11,"result"],[155,17,126,17],[156,2,127,0],[157,2,128,0],[158,0,129,0],[159,0,130,0],[160,0,131,0],[161,0,132,0],[162,0,133,0],[163,0,134,0],[164,0,135,0],[165,0,136,0],[166,2,137,0],[166,11,137,9,"deserializeCredentialRequestOptions"],[166,46,137,44,"deserializeCredentialRequestOptions"],[166,47,137,45,"options"],[166,54,137,52],[166,56,137,54],[167,4,138,4],[167,8,138,8],[167,9,138,9,"options"],[167,16,138,16],[167,18,138,18],[168,6,139,8],[168,12,139,14],[168,16,139,18,"Error"],[168,21,139,23],[168,22,139,24],[168,63,139,65],[168,64,139,66],[169,4,140,4],[170,4,141,4],[171,4,142,4],[171,8,142,8],[171,15,142,15,"PublicKeyCredential"],[171,34,142,34],[171,39,142,39],[171,50,142,50],[171,54,143,8],[171,83,143,37],[171,87,143,41,"PublicKeyCredential"],[171,106,143,60],[171,110,144,8],[171,117,144,15,"PublicKeyCredential"],[171,136,144,34],[171,137,145,13,"parseRequestOptionsFromJSON"],[171,164,145,40],[171,169,145,45],[171,179,145,55],[171,181,145,57],[172,6,146,8],[173,6,147,8],[173,13,147,15,"PublicKeyCredential"],[173,32,147,34],[173,33,147,35,"parseRequestOptionsFromJSON"],[173,60,147,62],[173,61,147,63,"options"],[173,68,147,70],[173,69,147,71],[174,4,148,4],[175,4,149,4],[176,4,150,4],[177,4,151,4],[177,10,151,10],[178,8,151,12,"challenge"],[178,17,151,21],[178,19,151,23,"challengeStr"],[178,31,151,35],[179,8,151,37,"allowCredentials"],[180,6,151,54],[180,7,151,55],[180,10,151,58,"options"],[180,17,151,65],[181,6,151,67,"restOptions"],[181,17,151,78],[181,20,151,81,"__rest"],[181,26,151,87],[181,27,151,88,"options"],[182,6,152,4],[183,6,152,4],[183,8,153,6],[183,9,153,7],[183,20,153,18],[183,22,153,20],[183,40,153,38],[183,41,153,39],[183,42,153,40],[184,4,154,4],[185,4,155,4],[185,10,155,10,"challenge"],[185,19,155,19],[185,22,155,22],[185,23,155,23],[185,24,155,24],[185,26,155,26,"base64url_1"],[185,37,155,37],[185,38,155,38,"base64UrlToUint8Array"],[185,59,155,59],[185,61,155,61,"challengeStr"],[185,73,155,73],[185,74,155,74],[185,75,155,75,"buffer"],[185,81,155,81],[186,4,156,4],[187,4,157,4],[187,10,157,10,"result"],[187,16,157,16],[187,19,157,19,"Object"],[187,25,157,25],[187,26,157,26,"assign"],[187,32,157,32],[187,33,157,33,"Object"],[187,39,157,39],[187,40,157,40,"assign"],[187,46,157,46],[187,47,157,47],[187,48,157,48],[187,49,157,49],[187,51,157,51,"restOptions"],[187,62,157,62],[187,63,157,63],[187,65,157,65],[188,6,157,67,"challenge"],[189,4,157,77],[189,5,157,78],[189,6,157,79],[190,4,158,4],[191,4,159,4],[191,8,159,8,"allowCredentials"],[191,24,159,24],[191,28,159,28,"allowCredentials"],[191,44,159,44],[191,45,159,45,"length"],[191,51,159,51],[191,54,159,54],[191,55,159,55],[191,57,159,57],[192,6,160,8,"result"],[192,12,160,14],[192,13,160,15,"allowCredentials"],[192,29,160,31],[192,32,160,34],[192,36,160,38,"Array"],[192,41,160,43],[192,42,160,44,"allowCredentials"],[192,58,160,60],[192,59,160,61,"length"],[192,65,160,67],[192,66,160,68],[193,6,161,8],[193,11,161,13],[193,15,161,17,"i"],[193,16,161,18],[193,19,161,21],[193,20,161,22],[193,22,161,24,"i"],[193,23,161,25],[193,26,161,28,"allowCredentials"],[193,42,161,44],[193,43,161,45,"length"],[193,49,161,51],[193,51,161,53,"i"],[193,52,161,54],[193,54,161,56],[193,56,161,58],[194,8,162,12],[194,14,162,18,"cred"],[194,18,162,22],[194,21,162,25,"allowCredentials"],[194,37,162,41],[194,38,162,42,"i"],[194,39,162,43],[194,40,162,44],[195,8,163,12,"result"],[195,14,163,18],[195,15,163,19,"allowCredentials"],[195,31,163,35],[195,32,163,36,"i"],[195,33,163,37],[195,34,163,38],[195,37,163,41,"Object"],[195,43,163,47],[195,44,163,48,"assign"],[195,50,163,54],[195,51,163,55,"Object"],[195,57,163,61],[195,58,163,62,"assign"],[195,64,163,68],[195,65,163,69],[195,66,163,70],[195,67,163,71],[195,69,163,73,"cred"],[195,73,163,77],[195,74,163,78],[195,76,163,80],[196,10,163,82,"id"],[196,12,163,84],[196,14,163,86],[196,15,163,87],[196,16,163,88],[196,18,163,90,"base64url_1"],[196,29,163,101],[196,30,163,102,"base64UrlToUint8Array"],[196,51,163,123],[196,53,163,125,"cred"],[196,57,163,129],[196,58,163,130,"id"],[196,60,163,132],[196,61,163,133],[196,62,163,134,"buffer"],[196,68,163,140],[197,10,163,142,"type"],[197,14,163,146],[197,16,163,148,"cred"],[197,20,163,152],[197,21,163,153,"type"],[197,25,163,157],[197,29,163,161],[197,41,163,173],[198,10,164,16],[199,10,165,16,"transports"],[199,20,165,26],[199,22,165,28,"cred"],[199,26,165,32],[199,27,165,33,"transports"],[200,8,165,44],[200,9,165,45],[200,10,165,46],[201,6,166,8],[202,4,167,4],[203,4,168,4],[203,11,168,11,"result"],[203,17,168,17],[204,2,169,0],[205,2,170,0],[206,0,171,0],[207,0,172,0],[208,0,173,0],[209,0,174,0],[210,0,175,0],[211,0,176,0],[212,0,177,0],[213,0,178,0],[214,2,179,0],[214,11,179,9,"serializeCredentialCreationResponse"],[214,46,179,44,"serializeCredentialCreationResponse"],[214,47,179,45,"credential"],[214,57,179,55],[214,59,179,57],[215,4,180,4],[215,8,180,8,"_a"],[215,10,180,10],[216,4,181,4],[217,4,182,4],[217,8,182,8],[217,16,182,16],[217,20,182,20,"credential"],[217,30,182,30],[217,34,182,34],[217,41,182,41,"credential"],[217,51,182,51],[217,52,182,52,"toJSON"],[217,58,182,58],[217,63,182,63],[217,73,182,73],[217,75,182,75],[218,6,183,8],[219,6,184,8],[219,13,184,15,"credential"],[219,23,184,25],[219,24,184,26,"toJSON"],[219,30,184,32],[219,31,184,33],[219,32,184,34],[220,4,185,4],[221,4,186,4],[221,10,186,10,"credentialWithAttachment"],[221,34,186,34],[221,37,186,37,"credential"],[221,47,186,47],[222,4,187,4],[222,11,187,11],[223,6,188,8,"id"],[223,8,188,10],[223,10,188,12,"credential"],[223,20,188,22],[223,21,188,23,"id"],[223,23,188,25],[224,6,189,8,"rawId"],[224,11,189,13],[224,13,189,15,"credential"],[224,23,189,25],[224,24,189,26,"id"],[224,26,189,28],[225,6,190,8,"response"],[225,14,190,16],[225,16,190,18],[226,8,191,12,"attestationObject"],[226,25,191,29],[226,27,191,31],[226,28,191,32],[226,29,191,33],[226,31,191,35,"base64url_1"],[226,42,191,46],[226,43,191,47,"bytesToBase64URL"],[226,59,191,63],[226,61,191,65],[226,65,191,69,"Uint8Array"],[226,75,191,79],[226,76,191,80,"credential"],[226,86,191,90],[226,87,191,91,"response"],[226,95,191,99],[226,96,191,100,"attestationObject"],[226,113,191,117],[226,114,191,118],[226,115,191,119],[227,8,192,12,"clientDataJSON"],[227,22,192,26],[227,24,192,28],[227,25,192,29],[227,26,192,30],[227,28,192,32,"base64url_1"],[227,39,192,43],[227,40,192,44,"bytesToBase64URL"],[227,56,192,60],[227,58,192,62],[227,62,192,66,"Uint8Array"],[227,72,192,76],[227,73,192,77,"credential"],[227,83,192,87],[227,84,192,88,"response"],[227,92,192,96],[227,93,192,97,"clientDataJSON"],[227,107,192,111],[227,108,192,112],[228,6,193,8],[228,7,193,9],[229,6,194,8,"type"],[229,10,194,12],[229,12,194,14],[229,24,194,26],[230,6,195,8,"clientExtensionResults"],[230,28,195,30],[230,30,195,32,"credential"],[230,40,195,42],[230,41,195,43,"getClientExtensionResults"],[230,66,195,68],[230,67,195,69],[230,68,195,70],[231,6,196,8],[232,6,197,8,"authenticatorAttachment"],[232,29,197,31],[232,31,197,34],[232,32,197,35,"_a"],[232,34,197,37],[232,37,197,40,"credentialWithAttachment"],[232,61,197,64],[232,62,197,65,"authenticatorAttachment"],[232,85,197,88],[232,91,197,94],[232,95,197,98],[232,99,197,102,"_a"],[232,101,197,104],[232,106,197,109],[232,111,197,114],[232,112,197,115],[232,115,197,118,"_a"],[232,117,197,120],[232,120,197,123,"undefined"],[233,4,198,4],[233,5,198,5],[234,2,199,0],[235,2,200,0],[236,0,201,0],[237,0,202,0],[238,0,203,0],[239,0,204,0],[240,0,205,0],[241,0,206,0],[242,0,207,0],[243,0,208,0],[244,2,209,0],[244,11,209,9,"serializeCredentialRequestResponse"],[244,45,209,43,"serializeCredentialRequestResponse"],[244,46,209,44,"credential"],[244,56,209,54],[244,58,209,56],[245,4,210,4],[245,8,210,8,"_a"],[245,10,210,10],[246,4,211,4],[247,4,212,4],[247,8,212,8],[247,16,212,16],[247,20,212,20,"credential"],[247,30,212,30],[247,34,212,34],[247,41,212,41,"credential"],[247,51,212,51],[247,52,212,52,"toJSON"],[247,58,212,58],[247,63,212,63],[247,73,212,73],[247,75,212,75],[248,6,213,8],[249,6,214,8],[249,13,214,15,"credential"],[249,23,214,25],[249,24,214,26,"toJSON"],[249,30,214,32],[249,31,214,33],[249,32,214,34],[250,4,215,4],[251,4,216,4],[252,4,217,4],[253,4,218,4],[254,4,219,4],[254,10,219,10,"credentialWithAttachment"],[254,34,219,34],[254,37,219,37,"credential"],[254,47,219,47],[255,4,220,4],[255,10,220,10,"clientExtensionResults"],[255,32,220,32],[255,35,220,35,"credential"],[255,45,220,45],[255,46,220,46,"getClientExtensionResults"],[255,71,220,71],[255,72,220,72],[255,73,220,73],[256,4,221,4],[256,10,221,10,"assertionResponse"],[256,27,221,27],[256,30,221,30,"credential"],[256,40,221,40],[256,41,221,41,"response"],[256,49,221,49],[257,4,222,4],[257,11,222,11],[258,6,223,8,"id"],[258,8,223,10],[258,10,223,12,"credential"],[258,20,223,22],[258,21,223,23,"id"],[258,23,223,25],[259,6,224,8,"rawId"],[259,11,224,13],[259,13,224,15,"credential"],[259,23,224,25],[259,24,224,26,"id"],[259,26,224,28],[260,6,224,30],[261,6,225,8,"response"],[261,14,225,16],[261,16,225,18],[262,8,226,12,"authenticatorData"],[262,25,226,29],[262,27,226,31],[262,28,226,32],[262,29,226,33],[262,31,226,35,"base64url_1"],[262,42,226,46],[262,43,226,47,"bytesToBase64URL"],[262,59,226,63],[262,61,226,65],[262,65,226,69,"Uint8Array"],[262,75,226,79],[262,76,226,80,"assertionResponse"],[262,93,226,97],[262,94,226,98,"authenticatorData"],[262,111,226,115],[262,112,226,116],[262,113,226,117],[263,8,227,12,"clientDataJSON"],[263,22,227,26],[263,24,227,28],[263,25,227,29],[263,26,227,30],[263,28,227,32,"base64url_1"],[263,39,227,43],[263,40,227,44,"bytesToBase64URL"],[263,56,227,60],[263,58,227,62],[263,62,227,66,"Uint8Array"],[263,72,227,76],[263,73,227,77,"assertionResponse"],[263,90,227,94],[263,91,227,95,"clientDataJSON"],[263,105,227,109],[263,106,227,110],[263,107,227,111],[264,8,228,12,"signature"],[264,17,228,21],[264,19,228,23],[264,20,228,24],[264,21,228,25],[264,23,228,27,"base64url_1"],[264,34,228,38],[264,35,228,39,"bytesToBase64URL"],[264,51,228,55],[264,53,228,57],[264,57,228,61,"Uint8Array"],[264,67,228,71],[264,68,228,72,"assertionResponse"],[264,85,228,89],[264,86,228,90,"signature"],[264,95,228,99],[264,96,228,100],[264,97,228,101],[265,8,229,12,"userHandle"],[265,18,229,22],[265,20,229,24,"assertionResponse"],[265,37,229,41],[265,38,229,42,"userHandle"],[265,48,229,52],[265,51,230,18],[265,52,230,19],[265,53,230,20],[265,55,230,22,"base64url_1"],[265,66,230,33],[265,67,230,34,"bytesToBase64URL"],[265,83,230,50],[265,85,230,52],[265,89,230,56,"Uint8Array"],[265,99,230,66],[265,100,230,67,"assertionResponse"],[265,117,230,84],[265,118,230,85,"userHandle"],[265,128,230,95],[265,129,230,96],[265,130,230,97],[265,133,231,18,"undefined"],[266,6,232,8],[266,7,232,9],[267,6,233,8,"type"],[267,10,233,12],[267,12,233,14],[267,24,233,26],[268,6,234,8,"clientExtensionResults"],[268,28,234,30],[269,6,235,8],[270,6,236,8,"authenticatorAttachment"],[270,29,236,31],[270,31,236,34],[270,32,236,35,"_a"],[270,34,236,37],[270,37,236,40,"credentialWithAttachment"],[270,61,236,64],[270,62,236,65,"authenticatorAttachment"],[270,85,236,88],[270,91,236,94],[270,95,236,98],[270,99,236,102,"_a"],[270,101,236,104],[270,106,236,109],[270,111,236,114],[270,112,236,115],[270,115,236,118,"_a"],[270,117,236,120],[270,120,236,123,"undefined"],[271,4,237,4],[271,5,237,5],[272,2,238,0],[273,2,239,0],[274,0,240,0],[275,0,241,0],[276,0,242,0],[277,0,243,0],[278,0,244,0],[279,0,245,0],[280,0,246,0],[281,0,247,0],[282,0,248,0],[283,0,249,0],[284,0,250,0],[285,0,251,0],[286,2,252,0],[286,11,252,9,"isValidDomain"],[286,24,252,22,"isValidDomain"],[286,25,252,23,"hostname"],[286,33,252,31],[286,35,252,33],[287,4,253,4],[288,6,254,4],[289,6,255,4,"hostname"],[289,14,255,12],[289,19,255,17],[289,30,255,28],[289,34,255,32],[289,75,255,73],[289,76,255,74,"test"],[289,80,255,78],[289,81,255,79,"hostname"],[289,89,255,87],[290,4,255,88],[291,2,256,0],[292,2,257,0],[293,0,258,0],[294,0,259,0],[295,0,260,0],[296,0,261,0],[297,0,262,0],[298,0,263,0],[299,2,264,0],[299,11,264,9,"browserSupportsWebAuthn"],[299,34,264,32,"browserSupportsWebAuthn"],[299,35,264,32],[299,37,264,35],[300,4,265,4],[300,8,265,8,"_a"],[300,10,265,10],[300,12,265,12,"_b"],[300,14,265,14],[301,4,266,4],[301,11,266,11],[301,12,266,12],[301,14,266,14],[301,15,266,15],[301,16,266,16],[301,18,266,18,"helpers_1"],[301,27,266,27],[301,28,266,28,"isBrowser"],[301,37,266,37],[301,39,266,39],[301,40,266,40],[301,44,267,8],[301,65,267,29],[301,69,267,33,"window"],[301,75,267,39],[301,79,268,8,"window"],[301,85,268,14],[301,86,268,15,"PublicKeyCredential"],[301,105,268,34],[301,109,269,8],[301,122,269,21],[301,126,269,25,"navigator"],[301,135,269,34],[301,139,270,8],[301,147,270,16],[301,148,270,17,"_a"],[301,150,270,19],[301,153,270,22,"navigator"],[301,162,270,31],[301,167,270,36],[301,171,270,40],[301,175,270,44,"navigator"],[301,184,270,53],[301,189,270,58],[301,194,270,63],[301,195,270,64],[301,198,270,67],[301,203,270,72],[301,204,270,73],[301,207,270,76,"navigator"],[301,216,270,85],[301,217,270,86,"credentials"],[301,228,270,97],[301,234,270,103],[301,238,270,107],[301,242,270,111,"_a"],[301,244,270,113],[301,249,270,118],[301,254,270,123],[301,255,270,124],[301,258,270,127],[301,263,270,132],[301,264,270,133],[301,267,270,136,"_a"],[301,269,270,138],[301,270,270,139,"create"],[301,276,270,145],[301,277,270,146],[301,282,270,151],[301,292,270,161],[301,296,271,8],[301,304,271,16],[301,305,271,17,"_b"],[301,307,271,19],[301,310,271,22,"navigator"],[301,319,271,31],[301,324,271,36],[301,328,271,40],[301,332,271,44,"navigator"],[301,341,271,53],[301,346,271,58],[301,351,271,63],[301,352,271,64],[301,355,271,67],[301,360,271,72],[301,361,271,73],[301,364,271,76,"navigator"],[301,373,271,85],[301,374,271,86,"credentials"],[301,385,271,97],[301,391,271,103],[301,395,271,107],[301,399,271,111,"_b"],[301,401,271,113],[301,406,271,118],[301,411,271,123],[301,412,271,124],[301,415,271,127],[301,420,271,132],[301,421,271,133],[301,424,271,136,"_b"],[301,426,271,138],[301,427,271,139,"get"],[301,430,271,142],[301,431,271,143],[301,436,271,148],[301,446,271,158],[301,447,271,159],[302,2,272,0],[303,2,273,0],[304,0,274,0],[305,0,275,0],[306,0,276,0],[307,0,277,0],[308,0,278,0],[309,0,279,0],[310,0,280,0],[311,0,281,0],[312,2,282,0],[312,17,282,15,"createCredential"],[312,33,282,31,"createCredential"],[312,34,282,32,"options"],[312,41,282,39],[312,43,282,41],[313,4,283,4],[313,8,283,8],[314,6,284,8],[314,12,284,14,"response"],[314,20,284,22],[314,23,284,25],[314,29,284,31,"navigator"],[314,38,284,40],[314,39,284,41,"credentials"],[314,50,284,52],[314,51,284,53,"create"],[314,57,284,59],[314,58,285,8],[315,6,286,8,"options"],[315,13,286,15],[315,14,286,16],[316,6,287,8],[316,10,287,12],[316,11,287,13,"response"],[316,19,287,21],[316,21,287,23],[317,8,288,12],[317,15,288,19],[318,10,289,16,"data"],[318,14,289,20],[318,16,289,22],[318,20,289,26],[319,10,290,16,"error"],[319,15,290,21],[319,17,290,23],[319,21,290,27,"webauthn_errors_1"],[319,38,290,44],[319,39,290,45,"WebAuthnUnknownError"],[319,59,290,65],[319,60,290,66],[319,87,290,93],[319,89,290,95,"response"],[319,97,290,103],[320,8,291,12],[320,9,291,13],[321,6,292,8],[322,6,293,8],[322,10,293,12],[322,12,293,14,"response"],[322,20,293,22],[322,32,293,34,"PublicKeyCredential"],[322,51,293,53],[322,52,293,54],[322,54,293,56],[323,8,294,12],[323,15,294,19],[324,10,295,16,"data"],[324,14,295,20],[324,16,295,22],[324,20,295,26],[325,10,296,16,"error"],[325,15,296,21],[325,17,296,23],[325,21,296,27,"webauthn_errors_1"],[325,38,296,44],[325,39,296,45,"WebAuthnUnknownError"],[325,59,296,65],[325,60,296,66],[325,105,296,111],[325,107,296,113,"response"],[325,115,296,121],[326,8,297,12],[326,9,297,13],[327,6,298,8],[328,6,299,8],[328,13,299,15],[329,8,299,17,"data"],[329,12,299,21],[329,14,299,23,"response"],[329,22,299,31],[330,8,299,33,"error"],[330,13,299,38],[330,15,299,40],[331,6,299,45],[331,7,299,46],[332,4,300,4],[332,5,300,5],[332,6,301,4],[332,13,301,11,"err"],[332,16,301,14],[332,18,301,16],[333,6,302,8],[333,13,302,15],[334,8,303,12,"data"],[334,12,303,16],[334,14,303,18],[334,18,303,22],[335,8,304,12,"error"],[335,13,304,17],[335,15,304,19],[335,16,304,20],[335,17,304,21],[335,19,304,23,"webauthn_errors_1"],[335,36,304,40],[335,37,304,41,"identifyRegistrationError"],[335,62,304,66],[335,64,304,68],[336,10,305,16,"error"],[336,15,305,21],[336,17,305,23,"err"],[336,20,305,26],[337,10,306,16,"options"],[338,8,307,12],[338,9,307,13],[339,6,308,8],[339,7,308,9],[340,4,309,4],[341,2,310,0],[342,2,311,0],[343,0,312,0],[344,0,313,0],[345,0,314,0],[346,0,315,0],[347,0,316,0],[348,0,317,0],[349,0,318,0],[350,0,319,0],[351,2,320,0],[351,17,320,15,"getCredential"],[351,30,320,28,"getCredential"],[351,31,320,29,"options"],[351,38,320,36],[351,40,320,38],[352,4,321,4],[352,8,321,8],[353,6,322,8],[353,12,322,14,"response"],[353,20,322,22],[353,23,322,25],[353,29,322,31,"navigator"],[353,38,322,40],[353,39,322,41,"credentials"],[353,50,322,52],[353,51,322,53,"get"],[353,54,322,56],[353,55,323,8],[354,6,324,8,"options"],[354,13,324,15],[354,14,324,16],[355,6,325,8],[355,10,325,12],[355,11,325,13,"response"],[355,19,325,21],[355,21,325,23],[356,8,326,12],[356,15,326,19],[357,10,327,16,"data"],[357,14,327,20],[357,16,327,22],[357,20,327,26],[358,10,328,16,"error"],[358,15,328,21],[358,17,328,23],[358,21,328,27,"webauthn_errors_1"],[358,38,328,44],[358,39,328,45,"WebAuthnUnknownError"],[358,59,328,65],[358,60,328,66],[358,87,328,93],[358,89,328,95,"response"],[358,97,328,103],[359,8,329,12],[359,9,329,13],[360,6,330,8],[361,6,331,8],[361,10,331,12],[361,12,331,14,"response"],[361,20,331,22],[361,32,331,34,"PublicKeyCredential"],[361,51,331,53],[361,52,331,54],[361,54,331,56],[362,8,332,12],[362,15,332,19],[363,10,333,16,"data"],[363,14,333,20],[363,16,333,22],[363,20,333,26],[364,10,334,16,"error"],[364,15,334,21],[364,17,334,23],[364,21,334,27,"webauthn_errors_1"],[364,38,334,44],[364,39,334,45,"WebAuthnUnknownError"],[364,59,334,65],[364,60,334,66],[364,105,334,111],[364,107,334,113,"response"],[364,115,334,121],[365,8,335,12],[365,9,335,13],[366,6,336,8],[367,6,337,8],[367,13,337,15],[368,8,337,17,"data"],[368,12,337,21],[368,14,337,23,"response"],[368,22,337,31],[369,8,337,33,"error"],[369,13,337,38],[369,15,337,40],[370,6,337,45],[370,7,337,46],[371,4,338,4],[371,5,338,5],[371,6,339,4],[371,13,339,11,"err"],[371,16,339,14],[371,18,339,16],[372,6,340,8],[372,13,340,15],[373,8,341,12,"data"],[373,12,341,16],[373,14,341,18],[373,18,341,22],[374,8,342,12,"error"],[374,13,342,17],[374,15,342,19],[374,16,342,20],[374,17,342,21],[374,19,342,23,"webauthn_errors_1"],[374,36,342,40],[374,37,342,41,"identifyAuthenticationError"],[374,64,342,68],[374,66,342,70],[375,10,343,16,"error"],[375,15,343,21],[375,17,343,23,"err"],[375,20,343,26],[376,10,344,16,"options"],[377,8,345,12],[377,9,345,13],[378,6,346,8],[378,7,346,9],[379,4,347,4],[380,2,348,0],[381,2,349,0,"exports"],[381,9,349,7],[381,10,349,8,"DEFAULT_CREATION_OPTIONS"],[381,34,349,32],[381,37,349,35],[382,4,350,4,"hints"],[382,9,350,9],[382,11,350,11],[382,12,350,12],[382,26,350,26],[382,27,350,27],[383,4,351,4,"authenticatorSelection"],[383,26,351,26],[383,28,351,28],[384,6,352,8,"authenticatorAttachment"],[384,29,352,31],[384,31,352,33],[384,47,352,49],[385,6,353,8,"requireResidentKey"],[385,24,353,26],[385,26,353,28],[385,31,353,33],[386,6,354,8],[387,6,355,8,"userVerification"],[387,22,355,24],[387,24,355,26],[387,35,355,37],[388,6,356,8,"residentKey"],[388,17,356,19],[388,19,356,21],[389,4,357,4],[389,5,357,5],[390,4,358,4,"attestation"],[390,15,358,15],[390,17,358,17],[391,2,359,0],[391,3,359,1],[392,2,360,0,"exports"],[392,9,360,7],[392,10,360,8,"DEFAULT_REQUEST_OPTIONS"],[392,33,360,31],[392,36,360,34],[393,4,361,4],[394,4,362,4,"userVerification"],[394,20,362,20],[394,22,362,22],[394,33,362,33],[395,4,363,4,"hints"],[395,9,363,9],[395,11,363,11],[395,12,363,12],[395,26,363,26],[396,2,364,0],[396,3,364,1],[397,2,365,0],[397,11,365,9,"deepMerge"],[397,20,365,18,"deepMerge"],[397,21,365,19],[397,24,365,22,"sources"],[397,31,365,29],[397,33,365,31],[398,4,366,4],[398,10,366,10,"isObject"],[398,18,366,18],[398,21,366,22,"val"],[398,24,366,25],[398,28,366,30,"val"],[398,31,366,33],[398,36,366,38],[398,40,366,42],[398,44,366,46],[398,51,366,53,"val"],[398,54,366,56],[398,59,366,61],[398,67,366,69],[398,71,366,73],[398,72,366,74,"Array"],[398,77,366,79],[398,78,366,80,"isArray"],[398,85,366,87],[398,86,366,88,"val"],[398,89,366,91],[398,90,366,92],[399,4,367,4],[399,10,367,10,"isArrayBufferLike"],[399,27,367,27],[399,30,367,31,"val"],[399,33,367,34],[399,37,367,39,"val"],[399,40,367,42],[399,52,367,54,"ArrayBuffer"],[399,63,367,65],[399,67,367,69,"ArrayBuffer"],[399,78,367,80],[399,79,367,81,"isView"],[399,85,367,87],[399,86,367,88,"val"],[399,89,367,91],[399,90,367,92],[400,4,368,4],[400,10,368,10,"result"],[400,16,368,16],[400,19,368,19],[400,20,368,20],[400,21,368,21],[401,4,369,4],[401,9,369,9],[401,15,369,15,"source"],[401,21,369,21],[401,25,369,25,"sources"],[401,32,369,32],[401,34,369,34],[402,6,370,8],[402,10,370,12],[402,11,370,13,"source"],[402,17,370,19],[402,19,371,12],[403,6,372,8],[403,11,372,13],[403,17,372,19,"key"],[403,20,372,22],[403,24,372,26,"source"],[403,30,372,32],[403,32,372,34],[404,8,373,12],[404,14,373,18,"value"],[404,19,373,23],[404,22,373,26,"source"],[404,28,373,32],[404,29,373,33,"key"],[404,32,373,36],[404,33,373,37],[405,8,374,12],[405,12,374,16,"value"],[405,17,374,21],[405,22,374,26,"undefined"],[405,31,374,35],[405,33,375,16],[406,8,376,12],[406,12,376,16,"Array"],[406,17,376,21],[406,18,376,22,"isArray"],[406,25,376,29],[406,26,376,30,"value"],[406,31,376,35],[406,32,376,36],[406,34,376,38],[407,10,377,16],[408,10,378,16,"result"],[408,16,378,22],[408,17,378,23,"key"],[408,20,378,26],[408,21,378,27],[408,24,378,30,"value"],[408,29,378,35],[409,8,379,12],[409,9,379,13],[409,15,380,17],[409,19,380,21,"isArrayBufferLike"],[409,36,380,38],[409,37,380,39,"value"],[409,42,380,44],[409,43,380,45],[409,45,380,47],[410,10,381,16,"result"],[410,16,381,22],[410,17,381,23,"key"],[410,20,381,26],[410,21,381,27],[410,24,381,30,"value"],[410,29,381,35],[411,8,382,12],[411,9,382,13],[411,15,383,17],[411,19,383,21,"isObject"],[411,27,383,29],[411,28,383,30,"value"],[411,33,383,35],[411,34,383,36],[411,36,383,38],[412,10,384,16],[412,16,384,22,"existing"],[412,24,384,30],[412,27,384,33,"result"],[412,33,384,39],[412,34,384,40,"key"],[412,37,384,43],[412,38,384,44],[413,10,385,16],[413,14,385,20,"isObject"],[413,22,385,28],[413,23,385,29,"existing"],[413,31,385,37],[413,32,385,38],[413,34,385,40],[414,12,386,20,"result"],[414,18,386,26],[414,19,386,27,"key"],[414,22,386,30],[414,23,386,31],[414,26,386,34,"deepMerge"],[414,35,386,43],[414,36,386,44,"existing"],[414,44,386,52],[414,46,386,54,"value"],[414,51,386,59],[414,52,386,60],[415,10,387,16],[415,11,387,17],[415,17,388,21],[416,12,389,20,"result"],[416,18,389,26],[416,19,389,27,"key"],[416,22,389,30],[416,23,389,31],[416,26,389,34,"deepMerge"],[416,35,389,43],[416,36,389,44,"value"],[416,41,389,49],[416,42,389,50],[417,10,390,16],[418,8,391,12],[418,9,391,13],[418,15,392,17],[419,10,393,16,"result"],[419,16,393,22],[419,17,393,23,"key"],[419,20,393,26],[419,21,393,27],[419,24,393,30,"value"],[419,29,393,35],[420,8,394,12],[421,6,395,8],[422,4,396,4],[423,4,397,4],[423,11,397,11,"result"],[423,17,397,17],[424,2,398,0],[425,2,399,0],[426,0,400,0],[427,0,401,0],[428,0,402,0],[429,0,403,0],[430,0,404,0],[431,0,405,0],[432,0,406,0],[433,0,407,0],[434,0,408,0],[435,2,409,0],[435,11,409,9,"mergeCredentialCreationOptions"],[435,41,409,39,"mergeCredentialCreationOptions"],[435,42,409,40,"baseOptions"],[435,53,409,51],[435,55,409,53,"overrides"],[435,64,409,62],[435,66,409,64],[436,4,410,4],[436,11,410,11,"deepMerge"],[436,20,410,20],[436,21,410,21,"exports"],[436,28,410,28],[436,29,410,29,"DEFAULT_CREATION_OPTIONS"],[436,53,410,53],[436,55,410,55,"baseOptions"],[436,66,410,66],[436,68,410,68,"overrides"],[436,77,410,77],[436,81,410,81],[436,82,410,82],[436,83,410,83],[436,84,410,84],[437,2,411,0],[438,2,412,0],[439,0,413,0],[440,0,414,0],[441,0,415,0],[442,0,416,0],[443,0,417,0],[444,0,418,0],[445,0,419,0],[446,0,420,0],[447,2,421,0],[447,11,421,9,"mergeCredentialRequestOptions"],[447,40,421,38,"mergeCredentialRequestOptions"],[447,41,421,39,"baseOptions"],[447,52,421,50],[447,54,421,52,"overrides"],[447,63,421,61],[447,65,421,63],[448,4,422,4],[448,11,422,11,"deepMerge"],[448,20,422,20],[448,21,422,21,"exports"],[448,28,422,28],[448,29,422,29,"DEFAULT_REQUEST_OPTIONS"],[448,52,422,52],[448,54,422,54,"baseOptions"],[448,65,422,65],[448,67,422,67,"overrides"],[448,76,422,76],[448,80,422,80],[448,81,422,81],[448,82,422,82],[448,83,422,83],[449,2,423,0],[450,2,424,0],[451,0,425,0],[452,0,426,0],[453,0,427,0],[454,0,428,0],[455,0,429,0],[456,0,430,0],[457,0,431,0],[458,2,432,0],[458,8,432,6,"WebAuthnApi"],[458,19,432,17],[458,20,432,18],[459,4,433,4,"constructor"],[459,15,433,15,"constructor"],[459,16,433,16,"client"],[459,22,433,22],[459,24,433,24],[460,6,434,8],[460,10,434,12],[460,11,434,13,"client"],[460,17,434,19],[460,20,434,22,"client"],[460,26,434,28],[461,6,435,8],[462,6,436,8],[462,10,436,12],[462,11,436,13,"enroll"],[462,17,436,19],[462,20,436,22],[462,24,436,26],[462,25,436,27,"_enroll"],[462,32,436,34],[462,33,436,35,"bind"],[462,37,436,39],[462,38,436,40],[462,42,436,44],[462,43,436,45],[463,6,437,8],[463,10,437,12],[463,11,437,13,"challenge"],[463,20,437,22],[463,23,437,25],[463,27,437,29],[463,28,437,30,"_challenge"],[463,38,437,40],[463,39,437,41,"bind"],[463,43,437,45],[463,44,437,46],[463,48,437,50],[463,49,437,51],[464,6,438,8],[464,10,438,12],[464,11,438,13,"verify"],[464,17,438,19],[464,20,438,22],[464,24,438,26],[464,25,438,27,"_verify"],[464,32,438,34],[464,33,438,35,"bind"],[464,37,438,39],[464,38,438,40],[464,42,438,44],[464,43,438,45],[465,6,439,8],[465,10,439,12],[465,11,439,13,"authenticate"],[465,23,439,25],[465,26,439,28],[465,30,439,32],[465,31,439,33,"_authenticate"],[465,44,439,46],[465,45,439,47,"bind"],[465,49,439,51],[465,50,439,52],[465,54,439,56],[465,55,439,57],[466,6,440,8],[466,10,440,12],[466,11,440,13,"register"],[466,19,440,21],[466,22,440,24],[466,26,440,28],[466,27,440,29,"_register"],[466,36,440,38],[466,37,440,39,"bind"],[466,41,440,43],[466,42,440,44],[466,46,440,48],[466,47,440,49],[467,4,441,4],[468,4,442,4],[469,0,443,0],[470,0,444,0],[471,0,445,0],[472,0,446,0],[473,0,447,0],[474,0,448,0],[475,0,449,0],[476,0,450,0],[477,4,451,4],[477,10,451,10,"_enroll"],[477,17,451,17,"_enroll"],[477,18,451,18,"params"],[477,24,451,24],[477,26,451,26],[478,6,452,8],[478,13,452,15],[478,17,452,19],[478,18,452,20,"client"],[478,24,452,26],[478,25,452,27,"mfa"],[478,28,452,30],[478,29,452,31,"enroll"],[478,35,452,37],[478,36,452,38,"Object"],[478,42,452,44],[478,43,452,45,"assign"],[478,49,452,51],[478,50,452,52,"Object"],[478,56,452,58],[478,57,452,59,"assign"],[478,63,452,65],[478,64,452,66],[478,65,452,67],[478,66,452,68],[478,68,452,70,"params"],[478,74,452,76],[478,75,452,77],[478,77,452,79],[479,8,452,81,"factorType"],[479,18,452,91],[479,20,452,93],[480,6,452,104],[480,7,452,105],[480,8,452,106],[480,9,452,107],[481,4,453,4],[482,4,454,4],[483,0,455,0],[484,0,456,0],[485,0,457,0],[486,0,458,0],[487,0,459,0],[488,0,460,0],[489,0,461,0],[490,0,462,0],[491,0,463,0],[492,0,464,0],[493,0,465,0],[494,0,466,0],[495,0,467,0],[496,4,468,4],[496,10,468,10,"_challenge"],[496,20,468,20,"_challenge"],[496,21,468,21],[497,6,468,23,"factorId"],[497,14,468,31],[498,6,468,33,"webauthn"],[498,14,468,41],[499,6,468,43,"friendlyName"],[499,18,468,55],[500,6,468,57,"signal"],[501,4,468,65],[501,5,468,66],[501,7,468,68,"overrides"],[501,16,468,77],[501,18,468,79],[502,6,469,8],[502,10,469,12],[503,8,470,12],[504,8,471,12],[504,14,471,18],[505,10,471,20,"data"],[505,14,471,24],[505,16,471,26,"challengeResponse"],[505,33,471,43],[506,10,471,45,"error"],[506,15,471,50],[506,17,471,52,"challengeError"],[507,8,471,67],[507,9,471,68],[507,12,471,71],[507,18,471,77],[507,22,471,81],[507,23,471,82,"client"],[507,29,471,88],[507,30,471,89,"mfa"],[507,33,471,92],[507,34,471,93,"challenge"],[507,43,471,102],[507,44,471,103],[508,10,472,16,"factorId"],[508,18,472,24],[509,10,473,16,"webauthn"],[510,8,474,12],[510,9,474,13],[510,10,474,14],[511,8,475,12],[511,12,475,16],[511,13,475,17,"challengeResponse"],[511,30,475,34],[511,32,475,36],[512,10,476,16],[512,17,476,23],[513,12,476,25,"data"],[513,16,476,29],[513,18,476,31],[513,22,476,35],[514,12,476,37,"error"],[514,17,476,42],[514,19,476,44,"challengeError"],[515,10,476,59],[515,11,476,60],[516,8,477,12],[517,8,478,12],[517,14,478,18,"abortSignal"],[517,25,478,29],[517,28,478,32,"signal"],[517,34,478,38],[517,39,478,43],[517,43,478,47],[517,47,478,51,"signal"],[517,53,478,57],[517,58,478,62],[517,63,478,67],[517,64,478,68],[517,67,478,71,"signal"],[517,73,478,77],[517,76,478,80,"exports"],[517,83,478,87],[517,84,478,88,"webAuthnAbortService"],[517,104,478,108],[517,105,478,109,"createNewAbortSignal"],[517,125,478,129],[517,126,478,130],[517,127,478,131],[518,8,479,12],[519,8,480,12],[519,12,480,16,"challengeResponse"],[519,29,480,33],[519,30,480,34,"webauthn"],[519,38,480,42],[519,39,480,43,"type"],[519,43,480,47],[519,48,480,52],[519,56,480,60],[519,58,480,62],[520,10,481,16],[520,16,481,22],[521,12,481,24,"user"],[522,10,481,29],[522,11,481,30],[522,14,481,33,"challengeResponse"],[522,31,481,50],[522,32,481,51,"webauthn"],[522,40,481,59],[522,41,481,60,"credential_options"],[522,59,481,78],[522,60,481,79,"publicKey"],[522,69,481,88],[523,10,482,16],[523,14,482,20],[523,15,482,21,"user"],[523,19,482,25],[523,20,482,26,"name"],[523,24,482,30],[523,26,482,32],[524,12,483,20,"user"],[524,16,483,24],[524,17,483,25,"name"],[524,21,483,29],[524,24,483,32],[524,27,483,35,"user"],[524,31,483,39],[524,32,483,40,"id"],[524,34,483,42],[524,38,483,46,"friendlyName"],[524,50,483,58],[524,52,483,60],[525,10,484,16],[526,10,485,16],[526,14,485,20],[526,15,485,21,"user"],[526,19,485,25],[526,20,485,26,"displayName"],[526,31,485,37],[526,33,485,39],[527,12,486,20,"user"],[527,16,486,24],[527,17,486,25,"displayName"],[527,28,486,36],[527,31,486,39,"user"],[527,35,486,43],[527,36,486,44,"name"],[527,40,486,48],[528,10,487,16],[529,8,488,12],[530,8,489,12],[530,16,489,20,"challengeResponse"],[530,33,489,37],[530,34,489,38,"webauthn"],[530,42,489,46],[530,43,489,47,"type"],[530,47,489,51],[531,10,490,16],[531,15,490,21],[531,23,490,29],[532,12,490,31],[533,14,491,20],[533,20,491,26,"options"],[533,27,491,33],[533,30,491,36,"mergeCredentialCreationOptions"],[533,60,491,66],[533,61,491,67,"challengeResponse"],[533,78,491,84],[533,79,491,85,"webauthn"],[533,87,491,93],[533,88,491,94,"credential_options"],[533,106,491,112],[533,107,491,113,"publicKey"],[533,116,491,122],[533,118,491,124,"overrides"],[533,127,491,133],[533,132,491,138],[533,136,491,142],[533,140,491,146,"overrides"],[533,149,491,155],[533,154,491,160],[533,159,491,165],[533,160,491,166],[533,163,491,169],[533,168,491,174],[533,169,491,175],[533,172,491,178,"overrides"],[533,181,491,187],[533,182,491,188,"create"],[533,188,491,194],[533,189,491,195],[534,14,492,20],[534,20,492,26],[535,16,492,28,"data"],[535,20,492,32],[536,16,492,34,"error"],[537,14,492,40],[537,15,492,41],[537,18,492,44],[537,24,492,50,"createCredential"],[537,40,492,66],[537,41,492,67],[538,16,493,24,"publicKey"],[538,25,493,33],[538,27,493,35,"options"],[538,34,493,42],[539,16,494,24,"signal"],[539,22,494,30],[539,24,494,32,"abortSignal"],[540,14,495,20],[540,15,495,21],[540,16,495,22],[541,14,496,20],[541,18,496,24,"data"],[541,22,496,28],[541,24,496,30],[542,16,497,24],[542,23,497,31],[543,18,498,28,"data"],[543,22,498,32],[543,24,498,34],[544,20,499,32,"factorId"],[544,28,499,40],[545,20,500,32,"challengeId"],[545,31,500,43],[545,33,500,45,"challengeResponse"],[545,50,500,62],[545,51,500,63,"id"],[545,53,500,65],[546,20,501,32,"webauthn"],[546,28,501,40],[546,30,501,42],[547,22,502,36,"type"],[547,26,502,40],[547,28,502,42,"challengeResponse"],[547,45,502,59],[547,46,502,60,"webauthn"],[547,54,502,68],[547,55,502,69,"type"],[547,59,502,73],[548,22,503,36,"credential_response"],[548,41,503,55],[548,43,503,57,"data"],[549,20,504,32],[550,18,505,28],[550,19,505,29],[551,18,506,28,"error"],[551,23,506,33],[551,25,506,35],[552,16,507,24],[552,17,507,25],[553,14,508,20],[554,14,509,20],[554,21,509,27],[555,16,509,29,"data"],[555,20,509,33],[555,22,509,35],[555,26,509,39],[556,16,509,41,"error"],[557,14,509,47],[557,15,509,48],[558,12,510,16],[559,10,511,16],[559,15,511,21],[559,24,511,30],[560,12,511,32],[561,14,512,20],[561,20,512,26,"options"],[561,27,512,33],[561,30,512,36,"mergeCredentialRequestOptions"],[561,59,512,65],[561,60,512,66,"challengeResponse"],[561,77,512,83],[561,78,512,84,"webauthn"],[561,86,512,92],[561,87,512,93,"credential_options"],[561,105,512,111],[561,106,512,112,"publicKey"],[561,115,512,121],[561,117,512,123,"overrides"],[561,126,512,132],[561,131,512,137],[561,135,512,141],[561,139,512,145,"overrides"],[561,148,512,154],[561,153,512,159],[561,158,512,164],[561,159,512,165],[561,162,512,168],[561,167,512,173],[561,168,512,174],[561,171,512,177,"overrides"],[561,180,512,186],[561,181,512,187,"request"],[561,188,512,194],[561,189,512,195],[562,14,513,20],[562,20,513,26],[563,16,513,28,"data"],[563,20,513,32],[564,16,513,34,"error"],[565,14,513,40],[565,15,513,41],[565,18,513,44],[565,24,513,50,"getCredential"],[565,37,513,63],[565,38,513,64,"Object"],[565,44,513,70],[565,45,513,71,"assign"],[565,51,513,77],[565,52,513,78,"Object"],[565,58,513,84],[565,59,513,85,"assign"],[565,65,513,91],[565,66,513,92],[565,67,513,93],[565,68,513,94],[565,70,513,96,"challengeResponse"],[565,87,513,113],[565,88,513,114,"webauthn"],[565,96,513,122],[565,97,513,123,"credential_options"],[565,115,513,141],[565,116,513,142],[565,118,513,144],[566,16,513,146,"publicKey"],[566,25,513,155],[566,27,513,157,"options"],[566,34,513,164],[567,16,513,166,"signal"],[567,22,513,172],[567,24,513,174,"abortSignal"],[568,14,513,186],[568,15,513,187],[568,16,513,188],[568,17,513,189],[569,14,514,20],[569,18,514,24,"data"],[569,22,514,28],[569,24,514,30],[570,16,515,24],[570,23,515,31],[571,18,516,28,"data"],[571,22,516,32],[571,24,516,34],[572,20,517,32,"factorId"],[572,28,517,40],[573,20,518,32,"challengeId"],[573,31,518,43],[573,33,518,45,"challengeResponse"],[573,50,518,62],[573,51,518,63,"id"],[573,53,518,65],[574,20,519,32,"webauthn"],[574,28,519,40],[574,30,519,42],[575,22,520,36,"type"],[575,26,520,40],[575,28,520,42,"challengeResponse"],[575,45,520,59],[575,46,520,60,"webauthn"],[575,54,520,68],[575,55,520,69,"type"],[575,59,520,73],[576,22,521,36,"credential_response"],[576,41,521,55],[576,43,521,57,"data"],[577,20,522,32],[578,18,523,28],[578,19,523,29],[579,18,524,28,"error"],[579,23,524,33],[579,25,524,35],[580,16,525,24],[580,17,525,25],[581,14,526,20],[582,14,527,20],[582,21,527,27],[583,16,527,29,"data"],[583,20,527,33],[583,22,527,35],[583,26,527,39],[584,16,527,41,"error"],[585,14,527,47],[585,15,527,48],[586,12,528,16],[587,8,529,12],[588,6,530,8],[588,7,530,9],[588,8,531,8],[588,15,531,15,"error"],[588,20,531,20],[588,22,531,22],[589,8,532,12],[589,12,532,16],[589,13,532,17],[589,14,532,18],[589,16,532,20,"errors_1"],[589,24,532,28],[589,25,532,29,"isAuthError"],[589,36,532,40],[589,38,532,42,"error"],[589,43,532,47],[589,44,532,48],[589,46,532,50],[590,10,533,16],[590,17,533,23],[591,12,533,25,"data"],[591,16,533,29],[591,18,533,31],[591,22,533,35],[592,12,533,37,"error"],[593,10,533,43],[593,11,533,44],[594,8,534,12],[595,8,535,12],[595,15,535,19],[596,10,536,16,"data"],[596,14,536,20],[596,16,536,22],[596,20,536,26],[597,10,537,16,"error"],[597,15,537,21],[597,17,537,23],[597,21,537,27,"errors_1"],[597,29,537,35],[597,30,537,36,"AuthUnknownError"],[597,46,537,52],[597,47,537,53],[597,78,537,84],[597,80,537,86,"error"],[597,85,537,91],[598,8,538,12],[598,9,538,13],[599,6,539,8],[600,4,540,4],[601,4,541,4],[602,0,542,0],[603,0,543,0],[604,0,544,0],[605,0,545,0],[606,0,546,0],[607,0,547,0],[608,0,548,0],[609,0,549,0],[610,0,550,0],[611,0,551,0],[612,0,552,0],[613,4,553,4],[613,10,553,10,"_verify"],[613,17,553,17,"_verify"],[613,18,553,18],[614,6,553,20,"challengeId"],[614,17,553,31],[615,6,553,33,"factorId"],[615,14,553,41],[616,6,553,43,"webauthn"],[617,4,553,53],[617,5,553,54],[617,7,553,56],[618,6,554,8],[618,13,554,15],[618,17,554,19],[618,18,554,20,"client"],[618,24,554,26],[618,25,554,27,"mfa"],[618,28,554,30],[618,29,554,31,"verify"],[618,35,554,37],[618,36,554,38],[619,8,555,12,"factorId"],[619,16,555,20],[620,8,556,12,"challengeId"],[620,19,556,23],[621,8,557,12,"webauthn"],[621,16,557,20],[621,18,557,22,"webauthn"],[622,6,558,8],[622,7,558,9],[622,8,558,10],[623,4,559,4],[624,4,560,4],[625,0,561,0],[626,0,562,0],[627,0,563,0],[628,0,564,0],[629,0,565,0],[630,0,566,0],[631,0,567,0],[632,0,568,0],[633,0,569,0],[634,0,570,0],[635,0,571,0],[636,0,572,0],[637,0,573,0],[638,0,574,0],[639,0,575,0],[640,4,576,4],[640,10,576,10,"_authenticate"],[640,23,576,23,"_authenticate"],[640,24,576,24],[641,6,576,26,"factorId"],[641,14,576,34],[642,6,576,36,"webauthn"],[642,14,576,44],[642,16,576,46],[643,8,576,48,"rpId"],[643,12,576,52],[643,15,576,55],[643,23,576,87,"window"],[643,29,576,93],[643,30,576,94,"location"],[643,38,576,102],[643,39,576,103,"hostname"],[643,47,576,111],[643,50,576,114,"undefined"],[643,59,576,123],[644,8,576,125,"rpOrigins"],[644,17,576,134],[644,20,576,137],[644,28,576,169],[644,29,576,170,"window"],[644,35,576,176],[644,36,576,177,"location"],[644,44,576,185],[644,45,576,186,"origin"],[644,51,576,192],[644,52,576,193],[644,55,576,196,"undefined"],[644,64,576,205],[645,8,576,207,"signal"],[646,6,576,215],[647,4,576,218],[647,5,576,219],[647,7,576,221,"overrides"],[647,16,576,230],[647,18,576,232],[648,6,577,8],[648,10,577,12],[648,11,577,13,"rpId"],[648,15,577,17],[648,17,577,19],[649,8,578,12],[649,15,578,19],[650,10,579,16,"data"],[650,14,579,20],[650,16,579,22],[650,20,579,26],[651,10,580,16,"error"],[651,15,580,21],[651,17,580,23],[651,21,580,27,"errors_1"],[651,29,580,35],[651,30,580,36,"AuthError"],[651,39,580,45],[651,40,580,46],[651,86,580,92],[652,8,581,12],[652,9,581,13],[653,6,582,8],[654,6,583,8],[654,10,583,12],[655,8,584,12],[655,12,584,16],[655,13,584,17,"browserSupportsWebAuthn"],[655,36,584,40],[655,37,584,41],[655,38,584,42],[655,40,584,44],[656,10,585,16],[656,17,585,23],[657,12,586,20,"data"],[657,16,586,24],[657,18,586,26],[657,22,586,30],[658,12,587,20,"error"],[658,17,587,25],[658,19,587,27],[658,23,587,31,"errors_1"],[658,31,587,39],[658,32,587,40,"AuthUnknownError"],[658,48,587,56],[658,49,587,57],[658,84,587,92],[658,86,587,94],[658,90,587,98],[659,10,588,16],[659,11,588,17],[660,8,589,12],[661,8,590,12],[662,8,591,12],[662,14,591,18],[663,10,591,20,"data"],[663,14,591,24],[663,16,591,26,"challengeResponse"],[663,33,591,43],[664,10,591,45,"error"],[664,15,591,50],[664,17,591,52,"challengeError"],[665,8,591,67],[665,9,591,68],[665,12,591,71],[665,18,591,77],[665,22,591,81],[665,23,591,82,"challenge"],[665,32,591,91],[665,33,591,92],[666,10,592,16,"factorId"],[666,18,592,24],[667,10,593,16,"webauthn"],[667,18,593,24],[667,20,593,26],[668,12,593,28,"rpId"],[668,16,593,32],[669,12,593,34,"rpOrigins"],[670,10,593,44],[670,11,593,45],[671,10,594,16,"signal"],[672,8,595,12],[672,9,595,13],[672,11,595,15],[673,10,595,17,"request"],[673,17,595,24],[673,19,595,26,"overrides"],[674,8,595,36],[674,9,595,37],[674,10,595,38],[675,8,596,12],[675,12,596,16],[675,13,596,17,"challengeResponse"],[675,30,596,34],[675,32,596,36],[676,10,597,16],[676,17,597,23],[677,12,597,25,"data"],[677,16,597,29],[677,18,597,31],[677,22,597,35],[678,12,597,37,"error"],[678,17,597,42],[678,19,597,44,"challengeError"],[679,10,597,59],[679,11,597,60],[680,8,598,12],[681,8,599,12],[681,14,599,18],[682,10,599,20,"webauthn"],[683,8,599,29],[683,9,599,30],[683,12,599,33,"challengeResponse"],[683,29,599,50],[684,8,600,12],[685,8,601,12],[685,15,601,19],[685,19,601,23],[685,20,601,24,"_verify"],[685,27,601,31],[685,28,601,32],[686,10,602,16,"factorId"],[686,18,602,24],[687,10,603,16,"challengeId"],[687,21,603,27],[687,23,603,29,"challengeResponse"],[687,40,603,46],[687,41,603,47,"challengeId"],[687,52,603,58],[688,10,604,16,"webauthn"],[688,18,604,24],[688,20,604,26],[689,12,605,20,"type"],[689,16,605,24],[689,18,605,26,"webauthn"],[689,26,605,34],[689,27,605,35,"type"],[689,31,605,39],[690,12,606,20,"rpId"],[690,16,606,24],[691,12,607,20,"rpOrigins"],[691,21,607,29],[692,12,608,20,"credential_response"],[692,31,608,39],[692,33,608,41,"webauthn"],[692,41,608,49],[692,42,608,50,"credential_response"],[693,10,609,16],[694,8,610,12],[694,9,610,13],[694,10,610,14],[695,6,611,8],[695,7,611,9],[695,8,612,8],[695,15,612,15,"error"],[695,20,612,20],[695,22,612,22],[696,8,613,12],[696,12,613,16],[696,13,613,17],[696,14,613,18],[696,16,613,20,"errors_1"],[696,24,613,28],[696,25,613,29,"isAuthError"],[696,36,613,40],[696,38,613,42,"error"],[696,43,613,47],[696,44,613,48],[696,46,613,50],[697,10,614,16],[697,17,614,23],[698,12,614,25,"data"],[698,16,614,29],[698,18,614,31],[698,22,614,35],[699,12,614,37,"error"],[700,10,614,43],[700,11,614,44],[701,8,615,12],[702,8,616,12],[702,15,616,19],[703,10,617,16,"data"],[703,14,617,20],[703,16,617,22],[703,20,617,26],[704,10,618,16,"error"],[704,15,618,21],[704,17,618,23],[704,21,618,27,"errors_1"],[704,29,618,35],[704,30,618,36,"AuthUnknownError"],[704,46,618,52],[704,47,618,53],[704,81,618,87],[704,83,618,89,"error"],[704,88,618,94],[705,8,619,12],[705,9,619,13],[706,6,620,8],[707,4,621,4],[708,4,622,4],[709,0,623,0],[710,0,624,0],[711,0,625,0],[712,0,626,0],[713,0,627,0],[714,0,628,0],[715,0,629,0],[716,0,630,0],[717,0,631,0],[718,0,632,0],[719,0,633,0],[720,0,634,0],[721,0,635,0],[722,0,636,0],[723,4,637,4],[723,10,637,10,"_register"],[723,19,637,19,"_register"],[723,20,637,20],[724,6,637,22,"friendlyName"],[724,18,637,34],[725,6,637,36,"rpId"],[725,10,637,40],[725,13,637,43],[725,21,637,75,"window"],[725,27,637,81],[725,28,637,82,"location"],[725,36,637,90],[725,37,637,91,"hostname"],[725,45,637,99],[725,48,637,102,"undefined"],[725,57,637,111],[726,6,637,113,"rpOrigins"],[726,15,637,122],[726,18,637,125],[726,26,637,157],[726,27,637,158,"window"],[726,33,637,164],[726,34,637,165,"location"],[726,42,637,173],[726,43,637,174,"origin"],[726,49,637,180],[726,50,637,181],[726,53,637,184,"undefined"],[726,62,637,193],[727,6,637,195,"signal"],[728,4,637,203],[728,5,637,204],[728,7,637,206,"overrides"],[728,16,637,215],[728,18,637,217],[729,6,638,8],[729,10,638,12],[729,11,638,13,"rpId"],[729,15,638,17],[729,17,638,19],[730,8,639,12],[730,15,639,19],[731,10,640,16,"data"],[731,14,640,20],[731,16,640,22],[731,20,640,26],[732,10,641,16,"error"],[732,15,641,21],[732,17,641,23],[732,21,641,27,"errors_1"],[732,29,641,35],[732,30,641,36,"AuthError"],[732,39,641,45],[732,40,641,46],[732,84,641,90],[733,8,642,12],[733,9,642,13],[734,6,643,8],[735,6,644,8],[735,10,644,12],[736,8,645,12],[736,12,645,16],[736,13,645,17,"browserSupportsWebAuthn"],[736,36,645,40],[736,37,645,41],[736,38,645,42],[736,40,645,44],[737,10,646,16],[737,17,646,23],[738,12,647,20,"data"],[738,16,647,24],[738,18,647,26],[738,22,647,30],[739,12,648,20,"error"],[739,17,648,25],[739,19,648,27],[739,23,648,31,"errors_1"],[739,31,648,39],[739,32,648,40,"AuthUnknownError"],[739,48,648,56],[739,49,648,57],[739,84,648,92],[739,86,648,94],[739,90,648,98],[740,10,649,16],[740,11,649,17],[741,8,650,12],[742,8,651,12],[743,8,652,12],[743,14,652,18],[744,10,652,20,"data"],[744,14,652,24],[744,16,652,26,"factor"],[744,22,652,32],[745,10,652,34,"error"],[745,15,652,39],[745,17,652,41,"enrollError"],[746,8,652,53],[746,9,652,54],[746,12,652,57],[746,18,652,63],[746,22,652,67],[746,23,652,68,"_enroll"],[746,30,652,75],[746,31,652,76],[747,10,653,16,"friendlyName"],[748,8,654,12],[748,9,654,13],[748,10,654,14],[749,8,655,12],[749,12,655,16],[749,13,655,17,"factor"],[749,19,655,23],[749,21,655,25],[750,10,656,16],[750,16,656,22],[750,20,656,26],[750,21,656,27,"client"],[750,27,656,33],[750,28,656,34,"mfa"],[750,31,656,37],[750,32,657,21,"listFactors"],[750,43,657,32],[750,44,657,33],[750,45,657,34],[750,46,658,21,"then"],[750,50,658,25],[750,51,658,27,"factors"],[750,58,658,34],[750,62,658,39],[751,12,659,20],[751,16,659,24,"_a"],[751,18,659,26],[752,12,660,20],[752,19,660,27],[752,20,660,28,"_a"],[752,22,660,30],[752,25,660,33,"factors"],[752,32,660,40],[752,33,660,41,"data"],[752,37,660,45],[752,43,660,51],[752,47,660,55],[752,51,660,59,"_a"],[752,53,660,61],[752,58,660,66],[752,63,660,71],[752,64,660,72],[752,67,660,75],[752,72,660,80],[752,73,660,81],[752,76,660,84,"_a"],[752,78,660,86],[752,79,660,87,"all"],[752,82,660,90],[752,83,660,91,"find"],[752,87,660,95],[752,88,660,97,"v"],[752,89,660,98],[752,93,660,103,"v"],[752,94,660,104],[752,95,660,105,"factor_type"],[752,106,660,116],[752,111,660,121],[752,121,660,131],[752,125,661,24,"v"],[752,126,661,25],[752,127,661,26,"friendly_name"],[752,140,661,39],[752,145,661,44,"friendlyName"],[752,157,661,56],[752,161,662,24,"v"],[752,162,662,25],[752,163,662,26,"status"],[752,169,662,32],[752,174,662,37],[752,186,662,49],[752,187,662,50],[753,10,663,16],[753,11,663,17],[753,12,663,18],[753,13,664,21,"then"],[753,17,664,25],[753,18,664,27,"factor"],[753,24,664,33],[753,28,664,39,"factor"],[753,34,664,45],[753,37,664,48],[753,41,664,52],[753,42,664,53,"client"],[753,48,664,59],[753,49,664,60,"mfa"],[753,52,664,63],[753,53,664,64,"unenroll"],[753,61,664,72],[753,62,664,73],[754,12,664,75,"factorId"],[754,20,664,83],[754,22,664,85,"factor"],[754,28,664,91],[754,33,664,96],[754,37,664,100],[754,41,664,104,"factor"],[754,47,664,110],[754,52,664,115],[754,57,664,120],[754,58,664,121],[754,61,664,124],[754,66,664,129],[754,67,664,130],[754,70,664,133,"factor"],[754,76,664,139],[754,77,664,140,"id"],[755,10,664,143],[755,11,664,144],[755,12,664,145],[755,15,664,148],[755,20,664,153],[755,21,664,155],[755,22,664,156],[756,10,665,16],[756,17,665,23],[757,12,665,25,"data"],[757,16,665,29],[757,18,665,31],[757,22,665,35],[758,12,665,37,"error"],[758,17,665,42],[758,19,665,44,"enrollError"],[759,10,665,56],[759,11,665,57],[760,8,666,12],[761,8,667,12],[762,8,668,12],[762,14,668,18],[763,10,668,20,"data"],[763,14,668,24],[763,16,668,26,"challengeResponse"],[763,33,668,43],[764,10,668,45,"error"],[764,15,668,50],[764,17,668,52,"challengeError"],[765,8,668,67],[765,9,668,68],[765,12,668,71],[765,18,668,77],[765,22,668,81],[765,23,668,82,"_challenge"],[765,33,668,92],[765,34,668,93],[766,10,669,16,"factorId"],[766,18,669,24],[766,20,669,26,"factor"],[766,26,669,32],[766,27,669,33,"id"],[766,29,669,35],[767,10,670,16,"friendlyName"],[767,22,670,28],[767,24,670,30,"factor"],[767,30,670,36],[767,31,670,37,"friendly_name"],[767,44,670,50],[768,10,671,16,"webauthn"],[768,18,671,24],[768,20,671,26],[769,12,671,28,"rpId"],[769,16,671,32],[770,12,671,34,"rpOrigins"],[771,10,671,44],[771,11,671,45],[772,10,672,16,"signal"],[773,8,673,12],[773,9,673,13],[773,11,673,15],[774,10,674,16,"create"],[774,16,674,22],[774,18,674,24,"overrides"],[775,8,675,12],[775,9,675,13],[775,10,675,14],[776,8,676,12],[776,12,676,16],[776,13,676,17,"challengeResponse"],[776,30,676,34],[776,32,676,36],[777,10,677,16],[777,17,677,23],[778,12,677,25,"data"],[778,16,677,29],[778,18,677,31],[778,22,677,35],[779,12,677,37,"error"],[779,17,677,42],[779,19,677,44,"challengeError"],[780,10,677,59],[780,11,677,60],[781,8,678,12],[782,8,679,12],[782,15,679,19],[782,19,679,23],[782,20,679,24,"_verify"],[782,27,679,31],[782,28,679,32],[783,10,680,16,"factorId"],[783,18,680,24],[783,20,680,26,"factor"],[783,26,680,32],[783,27,680,33,"id"],[783,29,680,35],[784,10,681,16,"challengeId"],[784,21,681,27],[784,23,681,29,"challengeResponse"],[784,40,681,46],[784,41,681,47,"challengeId"],[784,52,681,58],[785,10,682,16,"webauthn"],[785,18,682,24],[785,20,682,26],[786,12,683,20,"rpId"],[786,16,683,24],[787,12,684,20,"rpOrigins"],[787,21,684,29],[788,12,685,20,"type"],[788,16,685,24],[788,18,685,26,"challengeResponse"],[788,35,685,43],[788,36,685,44,"webauthn"],[788,44,685,52],[788,45,685,53,"type"],[788,49,685,57],[789,12,686,20,"credential_response"],[789,31,686,39],[789,33,686,41,"challengeResponse"],[789,50,686,58],[789,51,686,59,"webauthn"],[789,59,686,67],[789,60,686,68,"credential_response"],[790,10,687,16],[791,8,688,12],[791,9,688,13],[791,10,688,14],[792,6,689,8],[792,7,689,9],[792,8,690,8],[792,15,690,15,"error"],[792,20,690,20],[792,22,690,22],[793,8,691,12],[793,12,691,16],[793,13,691,17],[793,14,691,18],[793,16,691,20,"errors_1"],[793,24,691,28],[793,25,691,29,"isAuthError"],[793,36,691,40],[793,38,691,42,"error"],[793,43,691,47],[793,44,691,48],[793,46,691,50],[794,10,692,16],[794,17,692,23],[795,12,692,25,"data"],[795,16,692,29],[795,18,692,31],[795,22,692,35],[796,12,692,37,"error"],[797,10,692,43],[797,11,692,44],[798,8,693,12],[799,8,694,12],[799,15,694,19],[800,10,695,16,"data"],[800,14,695,20],[800,16,695,22],[800,20,695,26],[801,10,696,16,"error"],[801,15,696,21],[801,17,696,23],[801,21,696,27,"errors_1"],[801,29,696,35],[801,30,696,36,"AuthUnknownError"],[801,46,696,52],[801,47,696,53],[801,77,696,83],[801,79,696,85,"error"],[801,84,696,90],[802,8,697,12],[802,9,697,13],[803,6,698,8],[804,4,699,4],[805,2,700,0],[806,2,701,0,"exports"],[806,9,701,7],[806,10,701,8,"WebAuthnApi"],[806,21,701,19],[806,24,701,22,"WebAuthnApi"],[806,35,701,33],[807,0,701,34],[807,3]],"functionMap":{"names":["<global>","<anonymous>","Object.defineProperty$argument_2.get","WebAuthnAbortService","WebAuthnAbortService#createNewAbortSignal","WebAuthnAbortService#cancelCeremony","deserializeCredentialCreationOptions","deserializeCredentialRequestOptions","serializeCredentialCreationResponse","serializeCredentialRequestResponse","isValidDomain","browserSupportsWebAuthn","createCredential","getCredential","deepMerge","isObject","isArrayBufferLike","mergeCredentialCreationOptions","mergeCredentialRequestOptions","WebAuthnApi","WebAuthnApi#constructor","WebAuthnApi#_enroll","WebAuthnApi#_challenge","WebAuthnApi#_verify","WebAuthnApi#_authenticate","WebAuthnApi#_register","client.mfa.listFactors.then$argument_0","_a.all.find$argument_0","client.mfa.listFactors.then.then$argument_0"],"mappings":"AAA;sCCC;CDU;uFEgB,qEF;qFEC,mEF;2EEC,yDF;yEEC,uDF;AGQ;ICQ;KDU;IEO;KFO;CHC;AMkB;CNqC;AOU;CPgC;AQU;CRoB;ASU;CT6B;AUc;CVI;AWQ;CXQ;AYU;CZ4B;AaU;Cb4B;AciB;qBCC,uED;8BEC,8DF;Cd+B;AiBW;CjBE;AkBU;ClBE;AmBS;ICC;KDQ;IEU;KFE;IGe;KHwE;IIa;KJM;IKiB;KL6C;IMgB;0BCqB;gGCE;iDDE;iBDC;0BGC,iIH;KNmC;CnBC"},"hasCjsExports":true},"type":"js/module"}]}