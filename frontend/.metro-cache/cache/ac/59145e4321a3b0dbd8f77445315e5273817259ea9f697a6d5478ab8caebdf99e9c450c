{"dependencies":[{"name":"./base64url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":491},"end":{"line":12,"column":70,"index":561}}],"key":"dhv0KPIkoHN6QWLEoiPQ8fdmrOg=","exportNames":["*"],"imports":1}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":562},"end":{"line":13,"column":68,"index":630}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"],"imports":1}},{"name":"./helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":631},"end":{"line":14,"column":38,"index":669}}],"key":"kg0rJsyHf+Iyf4Z1AFOYGhKLkW4=","exportNames":["*"],"imports":1}},{"name":"./webauthn.errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":670},"end":{"line":15,"column":146,"index":816}}],"key":"UHcccN2SA7jmJTgW6outcYz70/A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"WebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthnErrors.WebAuthnError;\n    }\n  });\n  Object.defineProperty(exports, \"isWebAuthnError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthnErrors.isWebAuthnError;\n    }\n  });\n  Object.defineProperty(exports, \"identifyRegistrationError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthnErrors.identifyRegistrationError;\n    }\n  });\n  Object.defineProperty(exports, \"identifyAuthenticationError\", {\n    enumerable: true,\n    get: function () {\n      return _webauthnErrors.identifyAuthenticationError;\n    }\n  });\n  Object.defineProperty(exports, \"WebAuthnAbortService\", {\n    enumerable: true,\n    get: function () {\n      return WebAuthnAbortService;\n    }\n  });\n  Object.defineProperty(exports, \"webAuthnAbortService\", {\n    enumerable: true,\n    get: function () {\n      return webAuthnAbortService;\n    }\n  });\n  exports.deserializeCredentialCreationOptions = deserializeCredentialCreationOptions;\n  exports.deserializeCredentialRequestOptions = deserializeCredentialRequestOptions;\n  exports.serializeCredentialCreationResponse = serializeCredentialCreationResponse;\n  exports.serializeCredentialRequestResponse = serializeCredentialRequestResponse;\n  exports.isValidDomain = isValidDomain;\n  exports.createCredential = createCredential;\n  exports.getCredential = getCredential;\n  Object.defineProperty(exports, \"DEFAULT_CREATION_OPTIONS\", {\n    enumerable: true,\n    get: function () {\n      return DEFAULT_CREATION_OPTIONS;\n    }\n  });\n  Object.defineProperty(exports, \"DEFAULT_REQUEST_OPTIONS\", {\n    enumerable: true,\n    get: function () {\n      return DEFAULT_REQUEST_OPTIONS;\n    }\n  });\n  exports.mergeCredentialCreationOptions = mergeCredentialCreationOptions;\n  exports.mergeCredentialRequestOptions = mergeCredentialRequestOptions;\n  Object.defineProperty(exports, \"WebAuthnApi\", {\n    enumerable: true,\n    get: function () {\n      return WebAuthnApi;\n    }\n  });\n  var _base64url = require(_dependencyMap[0], \"./base64url\");\n  var _errors = require(_dependencyMap[1], \"./errors\");\n  var _helpers = require(_dependencyMap[2], \"./helpers\");\n  var _webauthnErrors = require(_dependencyMap[3], \"./webauthn.errors\");\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  /**\n   * WebAuthn abort service to manage ceremony cancellation.\n   * Ensures only one WebAuthn ceremony is active at a time to prevent \"operation already in progress\" errors.\n   *\n   * @experimental This class is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/#sctn-automation-webdriver-capability W3C WebAuthn Spec - Aborting Ceremonies}\n   */\n  class WebAuthnAbortService {\n    /**\n     * Create an abort signal for a new WebAuthn operation.\n     * Automatically cancels any existing operation.\n     *\n     * @returns {AbortSignal} Signal to pass to navigator.credentials.create() or .get()\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal MDN - AbortSignal}\n     */\n    createNewAbortSignal() {\n      // Abort any existing calls to navigator.credentials.create() or navigator.credentials.get()\n      if (this.controller) {\n        const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n        abortError.name = 'AbortError';\n        this.controller.abort(abortError);\n      }\n      const newController = new AbortController();\n      this.controller = newController;\n      return newController.signal;\n    }\n    /**\n     * Manually cancel the current WebAuthn operation.\n     * Useful for cleaning up when user cancels or navigates away.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort MDN - AbortController.abort}\n     */\n    cancelCeremony() {\n      if (this.controller) {\n        const abortError = new Error('Manually cancelling existing WebAuthn API call');\n        abortError.name = 'AbortError';\n        this.controller.abort(abortError);\n        this.controller = undefined;\n      }\n    }\n  }\n  /**\n   * Singleton instance to ensure only one WebAuthn ceremony is active at a time.\n   * This prevents \"operation already in progress\" errors when retrying WebAuthn operations.\n   *\n   * @experimental This instance is experimental and may change in future releases\n   */\n  const webAuthnAbortService = new WebAuthnAbortService();\n  /**\n   * Convert base64url encoded strings in WebAuthn credential creation options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseCreationOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialCreationOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Options ready for navigator.credentials.create()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseCreationOptionsFromJSON W3C WebAuthn Spec - parseCreationOptionsFromJSON}\n   */\n  function deserializeCredentialCreationOptions(options) {\n    if (!options) {\n      throw new Error('Credential creation options are required');\n    }\n    // Check if the native parseCreationOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseCreationOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseCreationOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseCreationOptionsFromJSON(/** we assert the options here as typescript still doesn't know about future webauthn types */\n      options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    const {\n        challenge: challengeStr,\n        user: userOpts,\n        excludeCredentials\n      } = options,\n      restOptions = __rest(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"user\", \"excludeCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    const challenge = (0, _base64url.base64UrlToUint8Array)(challengeStr).buffer;\n    // Convert user.id from base64url to ArrayBuffer\n    const user = Object.assign(Object.assign({}, userOpts), {\n      id: (0, _base64url.base64UrlToUint8Array)(userOpts.id).buffer\n    });\n    // Build the result object\n    const result = Object.assign(Object.assign({}, restOptions), {\n      challenge,\n      user\n    });\n    // Only add excludeCredentials if it exists\n    if (excludeCredentials && excludeCredentials.length > 0) {\n      result.excludeCredentials = new Array(excludeCredentials.length);\n      for (let i = 0; i < excludeCredentials.length; i++) {\n        const cred = excludeCredentials[i];\n        result.excludeCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, _base64url.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert base64url encoded strings in WebAuthn credential request options to ArrayBuffers\n   * as required by the WebAuthn browser API.\n   * Supports both native WebAuthn Level 3 parseRequestOptionsFromJSON and manual fallback.\n   *\n   * @param {ServerCredentialRequestOptions} options - JSON options from server with base64url encoded fields\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Options ready for navigator.credentials.get()\n   * @see {@link https://w3c.github.io/webauthn/#sctn-parseRequestOptionsFromJSON W3C WebAuthn Spec - parseRequestOptionsFromJSON}\n   */\n  function deserializeCredentialRequestOptions(options) {\n    if (!options) {\n      throw new Error('Credential request options are required');\n    }\n    // Check if the native parseRequestOptionsFromJSON method is available\n    if (typeof PublicKeyCredential !== 'undefined' && 'parseRequestOptionsFromJSON' in PublicKeyCredential && typeof PublicKeyCredential.parseRequestOptionsFromJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return PublicKeyCredential.parseRequestOptionsFromJSON(options);\n    }\n    // Fallback to manual parsing for browsers that don't support the native method\n    // Destructure to separate fields that need transformation\n    const {\n        challenge: challengeStr,\n        allowCredentials\n      } = options,\n      restOptions = __rest(options\n      // Convert challenge from base64url to ArrayBuffer\n      , [\"challenge\", \"allowCredentials\"]);\n    // Convert challenge from base64url to ArrayBuffer\n    const challenge = (0, _base64url.base64UrlToUint8Array)(challengeStr).buffer;\n    // Build the result object\n    const result = Object.assign(Object.assign({}, restOptions), {\n      challenge\n    });\n    // Only add allowCredentials if it exists\n    if (allowCredentials && allowCredentials.length > 0) {\n      result.allowCredentials = new Array(allowCredentials.length);\n      for (let i = 0; i < allowCredentials.length; i++) {\n        const cred = allowCredentials[i];\n        result.allowCredentials[i] = Object.assign(Object.assign({}, cred), {\n          id: (0, _base64url.base64UrlToUint8Array)(cred.id).buffer,\n          type: cred.type || 'public-key',\n          // Cast transports to handle future transport types like \"cable\"\n          transports: cred.transports\n        });\n      }\n    }\n    return result;\n  }\n  /**\n   * Convert a registration/enrollment credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {RegistrationCredential} credential - Credential from navigator.credentials.create()\n   * @returns {RegistrationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialCreationResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    const credentialWithAttachment = credential;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      response: {\n        attestationObject: (0, _base64url.bytesToBase64URL)(new Uint8Array(credential.response.attestationObject)),\n        clientDataJSON: (0, _base64url.bytesToBase64URL)(new Uint8Array(credential.response.clientDataJSON))\n      },\n      type: 'public-key',\n      clientExtensionResults: credential.getClientExtensionResults(),\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * Convert an authentication/verification credential response to server format.\n   * Serializes binary fields to base64url for JSON transmission.\n   * Supports both native WebAuthn Level 3 toJSON and manual fallback.\n   *\n   * @param {AuthenticationCredential} credential - Credential from navigator.credentials.get()\n   * @returns {AuthenticationResponseJSON} JSON-serializable credential for server\n   * @see {@link https://w3c.github.io/webauthn/#dom-publickeycredential-tojson W3C WebAuthn Spec - toJSON}\n   */\n  function serializeCredentialRequestResponse(credential) {\n    var _a;\n    // Check if the credential instance has the toJSON method\n    if ('toJSON' in credential && typeof credential.toJSON === 'function') {\n      // Use the native WebAuthn Level 3 method\n      return credential.toJSON();\n    }\n    // Fallback to manual conversion for browsers that don't support toJSON\n    // Access authenticatorAttachment via type assertion to handle TypeScript version differences\n    // @simplewebauthn/types includes this property but base TypeScript 4.7.4 doesn't\n    const credentialWithAttachment = credential;\n    const clientExtensionResults = credential.getClientExtensionResults();\n    const assertionResponse = credential.response;\n    return {\n      id: credential.id,\n      rawId: credential.id,\n      // W3C spec expects rawId to match id for JSON format\n      response: {\n        authenticatorData: (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.authenticatorData)),\n        clientDataJSON: (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.clientDataJSON)),\n        signature: (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.signature)),\n        userHandle: assertionResponse.userHandle ? (0, _base64url.bytesToBase64URL)(new Uint8Array(assertionResponse.userHandle)) : undefined\n      },\n      type: 'public-key',\n      clientExtensionResults,\n      // Convert null to undefined and cast to AuthenticatorAttachment type\n      authenticatorAttachment: (_a = credentialWithAttachment.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  /**\n   * A simple test to determine if a hostname is a properly-formatted domain name.\n   * Considers localhost valid for development environments.\n   *\n   * A \"valid domain\" is defined here: https://url.spec.whatwg.org/#valid-domain\n   *\n   * Regex sourced from here:\n   * https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n   *\n   * @param {string} hostname - The hostname to validate\n   * @returns {boolean} True if valid domain or localhost\n   * @see {@link https://url.spec.whatwg.org/#valid-domain WHATWG URL Spec - Valid Domain}\n   */\n  function isValidDomain(hostname) {\n    return (\n      // Consider localhost valid as well since it's okay wrt Secure Contexts\n      hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname)\n    );\n  }\n  /**\n   * Determine if the browser is capable of WebAuthn.\n   * Checks for necessary Web APIs: PublicKeyCredential and Credential Management.\n   *\n   * @returns {boolean} True if browser supports WebAuthn\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential#browser_compatibility MDN - PublicKeyCredential Browser Compatibility}\n   */\n  function browserSupportsWebAuthn() {\n    var _a, _b;\n    return !!((0, _helpers.isBrowser)() && 'PublicKeyCredential' in window && window.PublicKeyCredential && 'credentials' in navigator && typeof ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _a === void 0 ? void 0 : _a.create) === 'function' && typeof ((_b = navigator === null || navigator === void 0 ? void 0 : navigator.credentials) === null || _b === void 0 ? void 0 : _b.get) === 'function');\n  }\n  /**\n   * Create a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.create() with error handling.\n   *\n   * @param {CredentialCreationOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<RegistrationCredential, WebAuthnError>>} Created credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-createCredential W3C WebAuthn Spec - Create Credential}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create MDN - credentials.create}\n   */\n  async function createCredential(options) {\n    try {\n      const response = await navigator.credentials.create(/** we assert the type here until typescript types are updated */\n      options);\n      if (!response) {\n        return {\n          data: null,\n          error: new _webauthnErrors.WebAuthnUnknownError('Empty credential response', response)\n        };\n      }\n      if (!(response instanceof PublicKeyCredential)) {\n        return {\n          data: null,\n          error: new _webauthnErrors.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n        };\n      }\n      return {\n        data: response,\n        error: null\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: (0, _webauthnErrors.identifyRegistrationError)({\n          error: err,\n          options\n        })\n      };\n    }\n  }\n  /**\n   * Get a WebAuthn credential using the browser's credentials API.\n   * Wraps navigator.credentials.get() with error handling.\n   *\n   * @param {CredentialRequestOptions} options - Options including publicKey parameters\n   * @returns {Promise<RequestResult<AuthenticationCredential, WebAuthnError>>} Retrieved credential or error\n   * @see {@link https://w3c.github.io/webauthn/#sctn-getAssertion W3C WebAuthn Spec - Get Assertion}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get MDN - credentials.get}\n   */\n  async function getCredential(options) {\n    try {\n      const response = await navigator.credentials.get(/** we assert the type here until typescript types are updated */\n      options);\n      if (!response) {\n        return {\n          data: null,\n          error: new _webauthnErrors.WebAuthnUnknownError('Empty credential response', response)\n        };\n      }\n      if (!(response instanceof PublicKeyCredential)) {\n        return {\n          data: null,\n          error: new _webauthnErrors.WebAuthnUnknownError('Browser returned unexpected credential type', response)\n        };\n      }\n      return {\n        data: response,\n        error: null\n      };\n    } catch (err) {\n      return {\n        data: null,\n        error: (0, _webauthnErrors.identifyAuthenticationError)({\n          error: err,\n          options\n        })\n      };\n    }\n  }\n  const DEFAULT_CREATION_OPTIONS = {\n    hints: ['security-key'],\n    authenticatorSelection: {\n      authenticatorAttachment: 'cross-platform',\n      requireResidentKey: false,\n      /** set to preferred because older yubikeys don't have PIN/Biometric */\n      userVerification: 'preferred',\n      residentKey: 'discouraged'\n    },\n    attestation: 'none'\n  };\n  const DEFAULT_REQUEST_OPTIONS = {\n    /** set to preferred because older yubikeys don't have PIN/Biometric */\n    userVerification: 'preferred',\n    hints: ['security-key']\n  };\n  function deepMerge(...sources) {\n    const isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n    const isArrayBufferLike = val => val instanceof ArrayBuffer || ArrayBuffer.isView(val);\n    const result = {};\n    for (const source of sources) {\n      if (!source) continue;\n      for (const key in source) {\n        const value = source[key];\n        if (value === undefined) continue;\n        if (Array.isArray(value)) {\n          // preserve array reference, including unions like AuthenticatorTransport[]\n          result[key] = value;\n        } else if (isArrayBufferLike(value)) {\n          result[key] = value;\n        } else if (isObject(value)) {\n          const existing = result[key];\n          if (isObject(existing)) {\n            result[key] = deepMerge(existing, value);\n          } else {\n            result[key] = deepMerge(value);\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Merges WebAuthn credential creation options with overrides.\n   * Sets sensible defaults for authenticator selection and extensions.\n   *\n   * @param {PublicKeyCredentialCreationOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Optional overrides to apply\n   * @param {string} friendlyName - Optional friendly name for the credential\n   * @returns {PublicKeyCredentialCreationOptionsFuture} Merged credential creation options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-authenticatorselectioncriteria W3C WebAuthn Spec - AuthenticatorSelectionCriteria}\n   */\n  function mergeCredentialCreationOptions(baseOptions, overrides) {\n    return deepMerge(DEFAULT_CREATION_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * Merges WebAuthn credential request options with overrides.\n   * Sets sensible defaults for user verification and hints.\n   *\n   * @param {PublicKeyCredentialRequestOptionsFuture} baseOptions - The base options from the server\n   * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Optional overrides to apply\n   * @returns {PublicKeyCredentialRequestOptionsFuture} Merged credential request options\n   * @see {@link https://w3c.github.io/webauthn/#dictdef-publickeycredentialrequestoptions W3C WebAuthn Spec - PublicKeyCredentialRequestOptions}\n   */\n  function mergeCredentialRequestOptions(baseOptions, overrides) {\n    return deepMerge(DEFAULT_REQUEST_OPTIONS, baseOptions, overrides || {});\n  }\n  /**\n   * WebAuthn API wrapper for Supabase Auth.\n   * Provides methods for enrolling, challenging, verifying, authenticating, and registering WebAuthn credentials.\n   *\n   * @experimental This API is experimental and may change in future releases\n   * @see {@link https://w3c.github.io/webauthn/ W3C WebAuthn Specification}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API MDN - Web Authentication API}\n   */\n  class WebAuthnApi {\n    constructor(client) {\n      this.client = client;\n      // Bind all methods so they can be destructured\n      this.enroll = this._enroll.bind(this);\n      this.challenge = this._challenge.bind(this);\n      this.verify = this._verify.bind(this);\n      this.authenticate = this._authenticate.bind(this);\n      this.register = this._register.bind(this);\n    }\n    /**\n     * Enroll a new WebAuthn factor.\n     * Creates an unverified WebAuthn factor that must be verified with a credential.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Omit<MFAEnrollWebauthnParams, 'factorType'>} params - Enrollment parameters (friendlyName required)\n     * @returns {Promise<AuthMFAEnrollWebauthnResponse>} Enrolled factor details or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registering a New Credential}\n     */\n    async _enroll(params) {\n      return this.client.mfa.enroll(Object.assign(Object.assign({}, params), {\n        factorType: 'webauthn'\n      }));\n    }\n    /**\n     * Challenge for WebAuthn credential creation or authentication.\n     * Combines server challenge with browser credential operations.\n     * Handles both registration (create) and authentication (request) flows.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {MFAChallengeWebauthnParams & { friendlyName?: string; signal?: AbortSignal }} params - Challenge parameters including factorId\n     * @param {Object} overrides - Allows you to override the parameters passed to navigator.credentials\n     * @param {PublicKeyCredentialCreationOptionsFuture} overrides.create - Override options for credential creation\n     * @param {PublicKeyCredentialRequestOptionsFuture} overrides.request - Override options for credential request\n     * @returns {Promise<RequestResult>} Challenge response with credential or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-credential-creation W3C WebAuthn Spec - Credential Creation}\n     * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying Assertion}\n     */\n    async _challenge({\n      factorId,\n      webauthn,\n      friendlyName,\n      signal\n    }, overrides) {\n      try {\n        // Get challenge from server using the client's MFA methods\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this.client.mfa.challenge({\n          factorId,\n          webauthn\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        const abortSignal = signal !== null && signal !== void 0 ? signal : webAuthnAbortService.createNewAbortSignal();\n        /** webauthn will fail if either of the name/displayname are blank */\n        if (challengeResponse.webauthn.type === 'create') {\n          const {\n            user\n          } = challengeResponse.webauthn.credential_options.publicKey;\n          if (!user.name) {\n            user.name = `${user.id}:${friendlyName}`;\n          }\n          if (!user.displayName) {\n            user.displayName = user.name;\n          }\n        }\n        switch (challengeResponse.webauthn.type) {\n          case 'create':\n            {\n              const options = mergeCredentialCreationOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.create);\n              const {\n                data,\n                error\n              } = await createCredential({\n                publicKey: options,\n                signal: abortSignal\n              });\n              if (data) {\n                return {\n                  data: {\n                    factorId,\n                    challengeId: challengeResponse.id,\n                    webauthn: {\n                      type: challengeResponse.webauthn.type,\n                      credential_response: data\n                    }\n                  },\n                  error: null\n                };\n              }\n              return {\n                data: null,\n                error\n              };\n            }\n          case 'request':\n            {\n              const options = mergeCredentialRequestOptions(challengeResponse.webauthn.credential_options.publicKey, overrides === null || overrides === void 0 ? void 0 : overrides.request);\n              const {\n                data,\n                error\n              } = await getCredential(Object.assign(Object.assign({}, challengeResponse.webauthn.credential_options), {\n                publicKey: options,\n                signal: abortSignal\n              }));\n              if (data) {\n                return {\n                  data: {\n                    factorId,\n                    challengeId: challengeResponse.id,\n                    webauthn: {\n                      type: challengeResponse.webauthn.type,\n                      credential_response: data\n                    }\n                  },\n                  error: null\n                };\n              }\n              return {\n                data: null,\n                error\n              };\n            }\n        }\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new _errors.AuthUnknownError('Unexpected error in challenge', error)\n        };\n      }\n    }\n    /**\n     * Verify a WebAuthn credential with the server.\n     * Completes the WebAuthn ceremony by sending the credential to the server for verification.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Verification parameters\n     * @param {string} params.challengeId - ID of the challenge being verified\n     * @param {string} params.factorId - ID of the WebAuthn factor\n     * @param {MFAVerifyWebauthnParams<T>['webauthn']} params.webauthn - WebAuthn credential response\n     * @returns {Promise<AuthMFAVerifyResponse>} Verification result with session or error\n     * @see {@link https://w3c.github.io/webauthn/#sctn-verifying-assertion W3C WebAuthn Spec - Verifying an Authentication Assertion}\n     * */\n    async _verify({\n      challengeId,\n      factorId,\n      webauthn\n    }) {\n      return this.client.mfa.verify({\n        factorId,\n        challengeId,\n        webauthn: webauthn\n      });\n    }\n    /**\n     * Complete WebAuthn authentication flow.\n     * Performs challenge and verification in a single operation for existing credentials.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Authentication parameters\n     * @param {string} params.factorId - ID of the WebAuthn factor to authenticate with\n     * @param {Object} params.webauthn - WebAuthn configuration\n     * @param {string} params.webauthn.rpId - Relying Party ID (defaults to current hostname)\n     * @param {string[]} params.webauthn.rpOrigins - Allowed origins (defaults to current origin)\n     * @param {AbortSignal} params.webauthn.signal - Optional abort signal\n     * @param {PublicKeyCredentialRequestOptionsFuture} overrides - Override options for navigator.credentials.get\n     * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Authentication result\n     * @see {@link https://w3c.github.io/webauthn/#sctn-authentication W3C WebAuthn Spec - Authentication Ceremony}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialRequestOptions MDN - PublicKeyCredentialRequestOptions}\n     */\n    async _authenticate({\n      factorId,\n      webauthn: {\n        rpId = typeof window !== 'undefined' ? window.location.hostname : undefined,\n        rpOrigins = typeof window !== 'undefined' ? [window.location.origin] : undefined,\n        signal\n      }\n    }, overrides) {\n      if (!rpId) {\n        return {\n          data: null,\n          error: new _errors.AuthError('rpId is required for WebAuthn authentication')\n        };\n      }\n      try {\n        if (!browserSupportsWebAuthn()) {\n          return {\n            data: null,\n            error: new _errors.AuthUnknownError('Browser does not support WebAuthn', null)\n          };\n        }\n        // Get challenge and credential\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this.challenge({\n          factorId,\n          webauthn: {\n            rpId,\n            rpOrigins\n          },\n          signal\n        }, {\n          request: overrides\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        const {\n          webauthn\n        } = challengeResponse;\n        // Verify credential\n        return this._verify({\n          factorId,\n          challengeId: challengeResponse.challengeId,\n          webauthn: {\n            type: webauthn.type,\n            rpId,\n            rpOrigins,\n            credential_response: webauthn.credential_response\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new _errors.AuthUnknownError('Unexpected error in authenticate', error)\n        };\n      }\n    }\n    /**\n     * Complete WebAuthn registration flow.\n     * Performs enrollment, challenge, and verification in a single operation for new credentials.\n     *\n     * @experimental This method is experimental and may change in future releases\n     * @param {Object} params - Registration parameters\n     * @param {string} params.friendlyName - User-friendly name for the credential\n     * @param {string} params.rpId - Relying Party ID (defaults to current hostname)\n     * @param {string[]} params.rpOrigins - Allowed origins (defaults to current origin)\n     * @param {AbortSignal} params.signal - Optional abort signal\n     * @param {PublicKeyCredentialCreationOptionsFuture} overrides - Override options for navigator.credentials.create\n     * @returns {Promise<RequestResult<AuthMFAVerifyResponseData, WebAuthnError | AuthError>>} Registration result\n     * @see {@link https://w3c.github.io/webauthn/#sctn-registering-a-new-credential W3C WebAuthn Spec - Registration Ceremony}\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions MDN - PublicKeyCredentialCreationOptions}\n     */\n    async _register({\n      friendlyName,\n      rpId = typeof window !== 'undefined' ? window.location.hostname : undefined,\n      rpOrigins = typeof window !== 'undefined' ? [window.location.origin] : undefined,\n      signal\n    }, overrides) {\n      if (!rpId) {\n        return {\n          data: null,\n          error: new _errors.AuthError('rpId is required for WebAuthn registration')\n        };\n      }\n      try {\n        if (!browserSupportsWebAuthn()) {\n          return {\n            data: null,\n            error: new _errors.AuthUnknownError('Browser does not support WebAuthn', null)\n          };\n        }\n        // Enroll factor\n        const {\n          data: factor,\n          error: enrollError\n        } = await this._enroll({\n          friendlyName\n        });\n        if (!factor) {\n          await this.client.mfa.listFactors().then(factors => {\n            var _a;\n            return (_a = factors.data) === null || _a === void 0 ? void 0 : _a.all.find(v => v.factor_type === 'webauthn' && v.friendly_name === friendlyName && v.status !== 'unverified');\n          }).then(factor => factor ? this.client.mfa.unenroll({\n            factorId: factor === null || factor === void 0 ? void 0 : factor.id\n          }) : void 0);\n          return {\n            data: null,\n            error: enrollError\n          };\n        }\n        // Get challenge and create credential\n        const {\n          data: challengeResponse,\n          error: challengeError\n        } = await this._challenge({\n          factorId: factor.id,\n          friendlyName: factor.friendly_name,\n          webauthn: {\n            rpId,\n            rpOrigins\n          },\n          signal\n        }, {\n          create: overrides\n        });\n        if (!challengeResponse) {\n          return {\n            data: null,\n            error: challengeError\n          };\n        }\n        return this._verify({\n          factorId: factor.id,\n          challengeId: challengeResponse.challengeId,\n          webauthn: {\n            rpId,\n            rpOrigins,\n            type: challengeResponse.webauthn.type,\n            credential_response: challengeResponse.webauthn.credential_response\n          }\n        });\n      } catch (error) {\n        if ((0, _errors.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        return {\n          data: null,\n          error: new _errors.AuthUnknownError('Unexpected error in register', error)\n        };\n      }\n    }\n  }\n});","lineCount":834,"map":[[7,2,16,0,"Object"],[7,8,16,0],[7,9,16,0,"defineProperty"],[7,23,16,0],[7,24,16,0,"exports"],[7,31,16,0],[8,4,16,0,"enumerable"],[8,14,16,0],[9,4,16,0,"get"],[9,7,16,0],[9,18,16,0,"get"],[9,19,16,0],[10,6,16,0],[10,13,16,9,"WebAuthnError"],[10,28,16,22],[10,29,16,22,"WebAuthnError"],[10,42,16,22],[11,4,16,22],[12,2,16,22],[13,2,16,0,"Object"],[13,8,16,0],[13,9,16,0,"defineProperty"],[13,23,16,0],[13,24,16,0,"exports"],[13,31,16,0],[14,4,16,0,"enumerable"],[14,14,16,0],[15,4,16,0,"get"],[15,7,16,0],[15,18,16,0,"get"],[15,19,16,0],[16,6,16,0],[16,13,16,24,"isWebAuthnError"],[16,28,16,39],[16,29,16,39,"isWebAuthnError"],[16,44,16,39],[17,4,16,39],[18,2,16,39],[19,2,16,0,"Object"],[19,8,16,0],[19,9,16,0,"defineProperty"],[19,23,16,0],[19,24,16,0,"exports"],[19,31,16,0],[20,4,16,0,"enumerable"],[20,14,16,0],[21,4,16,0,"get"],[21,7,16,0],[21,18,16,0,"get"],[21,19,16,0],[22,6,16,0],[22,13,16,41,"identifyRegistrationError"],[22,28,16,66],[22,29,16,66,"identifyRegistrationError"],[22,54,16,66],[23,4,16,66],[24,2,16,66],[25,2,16,0,"Object"],[25,8,16,0],[25,9,16,0,"defineProperty"],[25,23,16,0],[25,24,16,0,"exports"],[25,31,16,0],[26,4,16,0,"enumerable"],[26,14,16,0],[27,4,16,0,"get"],[27,7,16,0],[27,18,16,0,"get"],[27,19,16,0],[28,6,16,0],[28,13,16,68,"identifyAuthenticationError"],[28,28,16,95],[28,29,16,95,"identifyAuthenticationError"],[28,56,16,95],[29,4,16,95],[30,2,16,95],[31,2,24,0,"Object"],[31,8,24,0],[31,9,24,0,"defineProperty"],[31,23,24,0],[31,24,24,0,"exports"],[31,31,24,0],[32,4,24,0,"enumerable"],[32,14,24,0],[33,4,24,0,"get"],[33,7,24,0],[33,18,24,0,"get"],[33,19,24,0],[34,6,24,0],[34,13,24,0,"WebAuthnAbortService"],[34,33,24,0],[35,4,24,0],[36,2,24,0],[37,2,64,0,"Object"],[37,8,64,0],[37,9,64,0,"defineProperty"],[37,23,64,0],[37,24,64,0,"exports"],[37,31,64,0],[38,4,64,0,"enumerable"],[38,14,64,0],[39,4,64,0,"get"],[39,7,64,0],[39,18,64,0,"get"],[39,19,64,0],[40,6,64,0],[40,13,64,0,"webAuthnAbortService"],[40,33,64,0],[41,4,64,0],[42,2,64,0],[43,2,74,0,"exports"],[43,9,74,0],[43,10,74,0,"deserializeCredentialCreationOptions"],[43,46,74,0],[43,49,74,0,"deserializeCredentialCreationOptions"],[43,85,74,0],[44,2,121,0,"exports"],[44,9,121,0],[44,10,121,0,"deserializeCredentialRequestOptions"],[44,45,121,0],[44,48,121,0,"deserializeCredentialRequestOptions"],[44,83,121,0],[45,2,163,0,"exports"],[45,9,163,0],[45,10,163,0,"serializeCredentialCreationResponse"],[45,45,163,0],[45,48,163,0,"serializeCredentialCreationResponse"],[45,83,163,0],[46,2,193,0,"exports"],[46,9,193,0],[46,10,193,0,"serializeCredentialRequestResponse"],[46,44,193,0],[46,47,193,0,"serializeCredentialRequestResponse"],[46,81,193,0],[47,2,236,0,"exports"],[47,9,236,0],[47,10,236,0,"isValidDomain"],[47,23,236,0],[47,26,236,0,"isValidDomain"],[47,39,236,0],[48,2,266,0,"exports"],[48,9,266,0],[48,10,266,0,"createCredential"],[48,26,266,0],[48,29,266,0,"createCredential"],[48,45,266,0],[49,2,304,0,"exports"],[49,9,304,0],[49,10,304,0,"getCredential"],[49,23,304,0],[49,26,304,0,"getCredential"],[49,39,304,0],[50,2,333,0,"Object"],[50,8,333,0],[50,9,333,0,"defineProperty"],[50,23,333,0],[50,24,333,0,"exports"],[50,31,333,0],[51,4,333,0,"enumerable"],[51,14,333,0],[52,4,333,0,"get"],[52,7,333,0],[52,18,333,0,"get"],[52,19,333,0],[53,6,333,0],[53,13,333,0,"DEFAULT_CREATION_OPTIONS"],[53,37,333,0],[54,4,333,0],[55,2,333,0],[56,2,344,0,"Object"],[56,8,344,0],[56,9,344,0,"defineProperty"],[56,23,344,0],[56,24,344,0,"exports"],[56,31,344,0],[57,4,344,0,"enumerable"],[57,14,344,0],[58,4,344,0,"get"],[58,7,344,0],[58,18,344,0,"get"],[58,19,344,0],[59,6,344,0],[59,13,344,0,"DEFAULT_REQUEST_OPTIONS"],[59,36,344,0],[60,4,344,0],[61,2,344,0],[62,2,393,0,"exports"],[62,9,393,0],[62,10,393,0,"mergeCredentialCreationOptions"],[62,40,393,0],[62,43,393,0,"mergeCredentialCreationOptions"],[62,73,393,0],[63,2,405,0,"exports"],[63,9,405,0],[63,10,405,0,"mergeCredentialRequestOptions"],[63,39,405,0],[63,42,405,0,"mergeCredentialRequestOptions"],[63,71,405,0],[64,2,416,0,"Object"],[64,8,416,0],[64,9,416,0,"defineProperty"],[64,23,416,0],[64,24,416,0,"exports"],[64,31,416,0],[65,4,416,0,"enumerable"],[65,14,416,0],[66,4,416,0,"get"],[66,7,416,0],[66,18,416,0,"get"],[66,19,416,0],[67,6,416,0],[67,13,416,0,"WebAuthnApi"],[67,24,416,0],[68,4,416,0],[69,2,416,0],[70,2,12,0],[70,6,12,0,"_base64url"],[70,16,12,0],[70,19,12,0,"require"],[70,26,12,0],[70,27,12,0,"_dependencyMap"],[70,41,12,0],[71,2,13,0],[71,6,13,0,"_errors"],[71,13,13,0],[71,16,13,0,"require"],[71,23,13,0],[71,24,13,0,"_dependencyMap"],[71,38,13,0],[72,2,14,0],[72,6,14,0,"_helpers"],[72,14,14,0],[72,17,14,0,"require"],[72,24,14,0],[72,25,14,0,"_dependencyMap"],[72,39,14,0],[73,2,15,0],[73,6,15,0,"_webauthnErrors"],[73,21,15,0],[73,24,15,0,"require"],[73,31,15,0],[73,32,15,0,"_dependencyMap"],[73,46,15,0],[74,2,1,0],[74,6,1,4,"__rest"],[74,12,1,10],[74,15,1,14],[74,19,1,18],[74,23,1,22],[74,27,1,26],[74,28,1,27,"__rest"],[74,34,1,33],[74,38,1,38],[74,48,1,48,"s"],[74,49,1,49],[74,51,1,51,"e"],[74,52,1,52],[74,54,1,54],[75,4,2,4],[75,8,2,8,"t"],[75,9,2,9],[75,12,2,12],[75,13,2,13],[75,14,2,14],[76,4,3,4],[76,9,3,9],[76,13,3,13,"p"],[76,14,3,14],[76,18,3,18,"s"],[76,19,3,19],[76,21,3,21],[76,25,3,25,"Object"],[76,31,3,31],[76,32,3,32,"prototype"],[76,41,3,41],[76,42,3,42,"hasOwnProperty"],[76,56,3,56],[76,57,3,57,"call"],[76,61,3,61],[76,62,3,62,"s"],[76,63,3,63],[76,65,3,65,"p"],[76,66,3,66],[76,67,3,67],[76,71,3,71,"e"],[76,72,3,72],[76,73,3,73,"indexOf"],[76,80,3,80],[76,81,3,81,"p"],[76,82,3,82],[76,83,3,83],[76,86,3,86],[76,87,3,87],[76,89,4,8,"t"],[76,90,4,9],[76,91,4,10,"p"],[76,92,4,11],[76,93,4,12],[76,96,4,15,"s"],[76,97,4,16],[76,98,4,17,"p"],[76,99,4,18],[76,100,4,19],[77,4,5,4],[77,8,5,8,"s"],[77,9,5,9],[77,13,5,13],[77,17,5,17],[77,21,5,21],[77,28,5,28,"Object"],[77,34,5,34],[77,35,5,35,"getOwnPropertySymbols"],[77,56,5,56],[77,61,5,61],[77,71,5,71],[77,73,6,8],[77,78,6,13],[77,82,6,17,"i"],[77,83,6,18],[77,86,6,21],[77,87,6,22],[77,89,6,24,"p"],[77,90,6,25],[77,93,6,28,"Object"],[77,99,6,34],[77,100,6,35,"getOwnPropertySymbols"],[77,121,6,56],[77,122,6,57,"s"],[77,123,6,58],[77,124,6,59],[77,126,6,61,"i"],[77,127,6,62],[77,130,6,65,"p"],[77,131,6,66],[77,132,6,67,"length"],[77,138,6,73],[77,140,6,75,"i"],[77,141,6,76],[77,143,6,78],[77,145,6,80],[78,6,7,12],[78,10,7,16,"e"],[78,11,7,17],[78,12,7,18,"indexOf"],[78,19,7,25],[78,20,7,26,"p"],[78,21,7,27],[78,22,7,28,"i"],[78,23,7,29],[78,24,7,30],[78,25,7,31],[78,28,7,34],[78,29,7,35],[78,33,7,39,"Object"],[78,39,7,45],[78,40,7,46,"prototype"],[78,49,7,55],[78,50,7,56,"propertyIsEnumerable"],[78,70,7,76],[78,71,7,77,"call"],[78,75,7,81],[78,76,7,82,"s"],[78,77,7,83],[78,79,7,85,"p"],[78,80,7,86],[78,81,7,87,"i"],[78,82,7,88],[78,83,7,89],[78,84,7,90],[78,86,8,16,"t"],[78,87,8,17],[78,88,8,18,"p"],[78,89,8,19],[78,90,8,20,"i"],[78,91,8,21],[78,92,8,22],[78,93,8,23],[78,96,8,26,"s"],[78,97,8,27],[78,98,8,28,"p"],[78,99,8,29],[78,100,8,30,"i"],[78,101,8,31],[78,102,8,32],[78,103,8,33],[79,4,9,8],[80,4,10,4],[80,11,10,11,"t"],[80,12,10,12],[81,2,11,0],[81,3,11,1],[82,2,17,0],[83,0,18,0],[84,0,19,0],[85,0,20,0],[86,0,21,0],[87,0,22,0],[88,0,23,0],[89,2,24,7],[89,8,24,13,"WebAuthnAbortService"],[89,28,24,33],[89,29,24,34],[90,4,25,4],[91,0,26,0],[92,0,27,0],[93,0,28,0],[94,0,29,0],[95,0,30,0],[96,0,31,0],[97,4,32,4,"createNewAbortSignal"],[97,24,32,24,"createNewAbortSignal"],[97,25,32,24],[97,27,32,27],[98,6,33,8],[99,6,34,8],[99,10,34,12],[99,14,34,16],[99,15,34,17,"controller"],[99,25,34,27],[99,27,34,29],[100,8,35,12],[100,14,35,18,"abortError"],[100,24,35,28],[100,27,35,31],[100,31,35,35,"Error"],[100,36,35,40],[100,37,35,41],[100,88,35,92],[100,89,35,93],[101,8,36,12,"abortError"],[101,18,36,22],[101,19,36,23,"name"],[101,23,36,27],[101,26,36,30],[101,38,36,42],[102,8,37,12],[102,12,37,16],[102,13,37,17,"controller"],[102,23,37,27],[102,24,37,28,"abort"],[102,29,37,33],[102,30,37,34,"abortError"],[102,40,37,44],[102,41,37,45],[103,6,38,8],[104,6,39,8],[104,12,39,14,"newController"],[104,25,39,27],[104,28,39,30],[104,32,39,34,"AbortController"],[104,47,39,49],[104,48,39,50],[104,49,39,51],[105,6,40,8],[105,10,40,12],[105,11,40,13,"controller"],[105,21,40,23],[105,24,40,26,"newController"],[105,37,40,39],[106,6,41,8],[106,13,41,15,"newController"],[106,26,41,28],[106,27,41,29,"signal"],[106,33,41,35],[107,4,42,4],[108,4,43,4],[109,0,44,0],[110,0,45,0],[111,0,46,0],[112,0,47,0],[113,0,48,0],[114,4,49,4,"cancelCeremony"],[114,18,49,18,"cancelCeremony"],[114,19,49,18],[114,21,49,21],[115,6,50,8],[115,10,50,12],[115,14,50,16],[115,15,50,17,"controller"],[115,25,50,27],[115,27,50,29],[116,8,51,12],[116,14,51,18,"abortError"],[116,24,51,28],[116,27,51,31],[116,31,51,35,"Error"],[116,36,51,40],[116,37,51,41],[116,85,51,89],[116,86,51,90],[117,8,52,12,"abortError"],[117,18,52,22],[117,19,52,23,"name"],[117,23,52,27],[117,26,52,30],[117,38,52,42],[118,8,53,12],[118,12,53,16],[118,13,53,17,"controller"],[118,23,53,27],[118,24,53,28,"abort"],[118,29,53,33],[118,30,53,34,"abortError"],[118,40,53,44],[118,41,53,45],[119,8,54,12],[119,12,54,16],[119,13,54,17,"controller"],[119,23,54,27],[119,26,54,30,"undefined"],[119,35,54,39],[120,6,55,8],[121,4,56,4],[122,2,57,0],[123,2,58,0],[124,0,59,0],[125,0,60,0],[126,0,61,0],[127,0,62,0],[128,0,63,0],[129,2,64,7],[129,8,64,13,"webAuthnAbortService"],[129,28,64,33],[129,31,64,36],[129,35,64,40,"WebAuthnAbortService"],[129,55,64,60],[129,56,64,61],[129,57,64,62],[130,2,65,0],[131,0,66,0],[132,0,67,0],[133,0,68,0],[134,0,69,0],[135,0,70,0],[136,0,71,0],[137,0,72,0],[138,0,73,0],[139,2,74,7],[139,11,74,16,"deserializeCredentialCreationOptions"],[139,47,74,52,"deserializeCredentialCreationOptions"],[139,48,74,53,"options"],[139,55,74,60],[139,57,74,62],[140,4,75,4],[140,8,75,8],[140,9,75,9,"options"],[140,16,75,16],[140,18,75,18],[141,6,76,8],[141,12,76,14],[141,16,76,18,"Error"],[141,21,76,23],[141,22,76,24],[141,64,76,66],[141,65,76,67],[142,4,77,4],[143,4,78,4],[144,4,79,4],[144,8,79,8],[144,15,79,15,"PublicKeyCredential"],[144,34,79,34],[144,39,79,39],[144,50,79,50],[144,54,80,8],[144,84,80,38],[144,88,80,42,"PublicKeyCredential"],[144,107,80,61],[144,111,81,8],[144,118,81,15,"PublicKeyCredential"],[144,137,81,34],[144,138,82,13,"parseCreationOptionsFromJSON"],[144,166,82,41],[144,171,82,46],[144,181,82,56],[144,183,82,58],[145,6,83,8],[146,6,84,8],[146,13,84,15,"PublicKeyCredential"],[146,32,84,34],[146,33,84,35,"parseCreationOptionsFromJSON"],[146,61,84,63],[146,62,85,8],[147,6,86,8,"options"],[147,13,86,15],[147,14,86,16],[148,4,87,4],[149,4,88,4],[150,4,89,4],[151,4,90,4],[151,10,90,10],[152,8,90,12,"challenge"],[152,17,90,21],[152,19,90,23,"challengeStr"],[152,31,90,35],[153,8,90,37,"user"],[153,12,90,41],[153,14,90,43,"userOpts"],[153,22,90,51],[154,8,90,53,"excludeCredentials"],[155,6,90,72],[155,7,90,73],[155,10,90,76,"options"],[155,17,90,83],[156,6,90,85,"restOptions"],[156,17,90,96],[156,20,90,99,"__rest"],[156,26,90,105],[156,27,90,106,"options"],[157,6,91,4],[158,6,91,4],[158,8,92,6],[158,9,92,7],[158,20,92,18],[158,22,92,20],[158,28,92,26],[158,30,92,28],[158,50,92,48],[158,51,92,49],[158,52,92,50],[159,4,93,4],[160,4,94,4],[160,10,94,10,"challenge"],[160,19,94,19],[160,22,94,22],[160,26,94,22,"base64UrlToUint8Array"],[160,36,94,43],[160,37,94,43,"base64UrlToUint8Array"],[160,58,94,43],[160,60,94,44,"challengeStr"],[160,72,94,56],[160,73,94,57],[160,74,94,58,"buffer"],[160,80,94,64],[161,4,95,4],[162,4,96,4],[162,10,96,10,"user"],[162,14,96,14],[162,17,96,17,"Object"],[162,23,96,23],[162,24,96,24,"assign"],[162,30,96,30],[162,31,96,31,"Object"],[162,37,96,37],[162,38,96,38,"assign"],[162,44,96,44],[162,45,96,45],[162,46,96,46],[162,47,96,47],[162,49,96,49,"userOpts"],[162,57,96,57],[162,58,96,58],[162,60,96,60],[163,6,96,62,"id"],[163,8,96,64],[163,10,96,66],[163,14,96,66,"base64UrlToUint8Array"],[163,24,96,87],[163,25,96,87,"base64UrlToUint8Array"],[163,46,96,87],[163,48,96,88,"userOpts"],[163,56,96,96],[163,57,96,97,"id"],[163,59,96,99],[163,60,96,100],[163,61,96,101,"buffer"],[164,4,96,108],[164,5,96,109],[164,6,96,110],[165,4,97,4],[166,4,98,4],[166,10,98,10,"result"],[166,16,98,16],[166,19,98,19,"Object"],[166,25,98,25],[166,26,98,26,"assign"],[166,32,98,32],[166,33,98,33,"Object"],[166,39,98,39],[166,40,98,40,"assign"],[166,46,98,46],[166,47,98,47],[166,48,98,48],[166,49,98,49],[166,51,98,51,"restOptions"],[166,62,98,62],[166,63,98,63],[166,65,98,65],[167,6,98,67,"challenge"],[167,15,98,76],[168,6,99,8,"user"],[169,4,99,13],[169,5,99,14],[169,6,99,15],[170,4,100,4],[171,4,101,4],[171,8,101,8,"excludeCredentials"],[171,26,101,26],[171,30,101,30,"excludeCredentials"],[171,48,101,48],[171,49,101,49,"length"],[171,55,101,55],[171,58,101,58],[171,59,101,59],[171,61,101,61],[172,6,102,8,"result"],[172,12,102,14],[172,13,102,15,"excludeCredentials"],[172,31,102,33],[172,34,102,36],[172,38,102,40,"Array"],[172,43,102,45],[172,44,102,46,"excludeCredentials"],[172,62,102,64],[172,63,102,65,"length"],[172,69,102,71],[172,70,102,72],[173,6,103,8],[173,11,103,13],[173,15,103,17,"i"],[173,16,103,18],[173,19,103,21],[173,20,103,22],[173,22,103,24,"i"],[173,23,103,25],[173,26,103,28,"excludeCredentials"],[173,44,103,46],[173,45,103,47,"length"],[173,51,103,53],[173,53,103,55,"i"],[173,54,103,56],[173,56,103,58],[173,58,103,60],[174,8,104,12],[174,14,104,18,"cred"],[174,18,104,22],[174,21,104,25,"excludeCredentials"],[174,39,104,43],[174,40,104,44,"i"],[174,41,104,45],[174,42,104,46],[175,8,105,12,"result"],[175,14,105,18],[175,15,105,19,"excludeCredentials"],[175,33,105,37],[175,34,105,38,"i"],[175,35,105,39],[175,36,105,40],[175,39,105,43,"Object"],[175,45,105,49],[175,46,105,50,"assign"],[175,52,105,56],[175,53,105,57,"Object"],[175,59,105,63],[175,60,105,64,"assign"],[175,66,105,70],[175,67,105,71],[175,68,105,72],[175,69,105,73],[175,71,105,75,"cred"],[175,75,105,79],[175,76,105,80],[175,78,105,82],[176,10,105,84,"id"],[176,12,105,86],[176,14,105,88],[176,18,105,88,"base64UrlToUint8Array"],[176,28,105,109],[176,29,105,109,"base64UrlToUint8Array"],[176,50,105,109],[176,52,105,110,"cred"],[176,56,105,114],[176,57,105,115,"id"],[176,59,105,117],[176,60,105,118],[176,61,105,119,"buffer"],[176,67,105,125],[177,10,105,127,"type"],[177,14,105,131],[177,16,105,133,"cred"],[177,20,105,137],[177,21,105,138,"type"],[177,25,105,142],[177,29,105,146],[177,41,105,158],[178,10,106,16],[179,10,107,16,"transports"],[179,20,107,26],[179,22,107,28,"cred"],[179,26,107,32],[179,27,107,33,"transports"],[180,8,107,44],[180,9,107,45],[180,10,107,46],[181,6,108,8],[182,4,109,4],[183,4,110,4],[183,11,110,11,"result"],[183,17,110,17],[184,2,111,0],[185,2,112,0],[186,0,113,0],[187,0,114,0],[188,0,115,0],[189,0,116,0],[190,0,117,0],[191,0,118,0],[192,0,119,0],[193,0,120,0],[194,2,121,7],[194,11,121,16,"deserializeCredentialRequestOptions"],[194,46,121,51,"deserializeCredentialRequestOptions"],[194,47,121,52,"options"],[194,54,121,59],[194,56,121,61],[195,4,122,4],[195,8,122,8],[195,9,122,9,"options"],[195,16,122,16],[195,18,122,18],[196,6,123,8],[196,12,123,14],[196,16,123,18,"Error"],[196,21,123,23],[196,22,123,24],[196,63,123,65],[196,64,123,66],[197,4,124,4],[198,4,125,4],[199,4,126,4],[199,8,126,8],[199,15,126,15,"PublicKeyCredential"],[199,34,126,34],[199,39,126,39],[199,50,126,50],[199,54,127,8],[199,83,127,37],[199,87,127,41,"PublicKeyCredential"],[199,106,127,60],[199,110,128,8],[199,117,128,15,"PublicKeyCredential"],[199,136,128,34],[199,137,129,13,"parseRequestOptionsFromJSON"],[199,164,129,40],[199,169,129,45],[199,179,129,55],[199,181,129,57],[200,6,130,8],[201,6,131,8],[201,13,131,15,"PublicKeyCredential"],[201,32,131,34],[201,33,131,35,"parseRequestOptionsFromJSON"],[201,60,131,62],[201,61,131,63,"options"],[201,68,131,70],[201,69,131,71],[202,4,132,4],[203,4,133,4],[204,4,134,4],[205,4,135,4],[205,10,135,10],[206,8,135,12,"challenge"],[206,17,135,21],[206,19,135,23,"challengeStr"],[206,31,135,35],[207,8,135,37,"allowCredentials"],[208,6,135,54],[208,7,135,55],[208,10,135,58,"options"],[208,17,135,65],[209,6,135,67,"restOptions"],[209,17,135,78],[209,20,135,81,"__rest"],[209,26,135,87],[209,27,135,88,"options"],[210,6,136,4],[211,6,136,4],[211,8,137,6],[211,9,137,7],[211,20,137,18],[211,22,137,20],[211,40,137,38],[211,41,137,39],[211,42,137,40],[212,4,138,4],[213,4,139,4],[213,10,139,10,"challenge"],[213,19,139,19],[213,22,139,22],[213,26,139,22,"base64UrlToUint8Array"],[213,36,139,43],[213,37,139,43,"base64UrlToUint8Array"],[213,58,139,43],[213,60,139,44,"challengeStr"],[213,72,139,56],[213,73,139,57],[213,74,139,58,"buffer"],[213,80,139,64],[214,4,140,4],[215,4,141,4],[215,10,141,10,"result"],[215,16,141,16],[215,19,141,19,"Object"],[215,25,141,25],[215,26,141,26,"assign"],[215,32,141,32],[215,33,141,33,"Object"],[215,39,141,39],[215,40,141,40,"assign"],[215,46,141,46],[215,47,141,47],[215,48,141,48],[215,49,141,49],[215,51,141,51,"restOptions"],[215,62,141,62],[215,63,141,63],[215,65,141,65],[216,6,141,67,"challenge"],[217,4,141,77],[217,5,141,78],[217,6,141,79],[218,4,142,4],[219,4,143,4],[219,8,143,8,"allowCredentials"],[219,24,143,24],[219,28,143,28,"allowCredentials"],[219,44,143,44],[219,45,143,45,"length"],[219,51,143,51],[219,54,143,54],[219,55,143,55],[219,57,143,57],[220,6,144,8,"result"],[220,12,144,14],[220,13,144,15,"allowCredentials"],[220,29,144,31],[220,32,144,34],[220,36,144,38,"Array"],[220,41,144,43],[220,42,144,44,"allowCredentials"],[220,58,144,60],[220,59,144,61,"length"],[220,65,144,67],[220,66,144,68],[221,6,145,8],[221,11,145,13],[221,15,145,17,"i"],[221,16,145,18],[221,19,145,21],[221,20,145,22],[221,22,145,24,"i"],[221,23,145,25],[221,26,145,28,"allowCredentials"],[221,42,145,44],[221,43,145,45,"length"],[221,49,145,51],[221,51,145,53,"i"],[221,52,145,54],[221,54,145,56],[221,56,145,58],[222,8,146,12],[222,14,146,18,"cred"],[222,18,146,22],[222,21,146,25,"allowCredentials"],[222,37,146,41],[222,38,146,42,"i"],[222,39,146,43],[222,40,146,44],[223,8,147,12,"result"],[223,14,147,18],[223,15,147,19,"allowCredentials"],[223,31,147,35],[223,32,147,36,"i"],[223,33,147,37],[223,34,147,38],[223,37,147,41,"Object"],[223,43,147,47],[223,44,147,48,"assign"],[223,50,147,54],[223,51,147,55,"Object"],[223,57,147,61],[223,58,147,62,"assign"],[223,64,147,68],[223,65,147,69],[223,66,147,70],[223,67,147,71],[223,69,147,73,"cred"],[223,73,147,77],[223,74,147,78],[223,76,147,80],[224,10,147,82,"id"],[224,12,147,84],[224,14,147,86],[224,18,147,86,"base64UrlToUint8Array"],[224,28,147,107],[224,29,147,107,"base64UrlToUint8Array"],[224,50,147,107],[224,52,147,108,"cred"],[224,56,147,112],[224,57,147,113,"id"],[224,59,147,115],[224,60,147,116],[224,61,147,117,"buffer"],[224,67,147,123],[225,10,147,125,"type"],[225,14,147,129],[225,16,147,131,"cred"],[225,20,147,135],[225,21,147,136,"type"],[225,25,147,140],[225,29,147,144],[225,41,147,156],[226,10,148,16],[227,10,149,16,"transports"],[227,20,149,26],[227,22,149,28,"cred"],[227,26,149,32],[227,27,149,33,"transports"],[228,8,149,44],[228,9,149,45],[228,10,149,46],[229,6,150,8],[230,4,151,4],[231,4,152,4],[231,11,152,11,"result"],[231,17,152,17],[232,2,153,0],[233,2,154,0],[234,0,155,0],[235,0,156,0],[236,0,157,0],[237,0,158,0],[238,0,159,0],[239,0,160,0],[240,0,161,0],[241,0,162,0],[242,2,163,7],[242,11,163,16,"serializeCredentialCreationResponse"],[242,46,163,51,"serializeCredentialCreationResponse"],[242,47,163,52,"credential"],[242,57,163,62],[242,59,163,64],[243,4,164,4],[243,8,164,8,"_a"],[243,10,164,10],[244,4,165,4],[245,4,166,4],[245,8,166,8],[245,16,166,16],[245,20,166,20,"credential"],[245,30,166,30],[245,34,166,34],[245,41,166,41,"credential"],[245,51,166,51],[245,52,166,52,"toJSON"],[245,58,166,58],[245,63,166,63],[245,73,166,73],[245,75,166,75],[246,6,167,8],[247,6,168,8],[247,13,168,15,"credential"],[247,23,168,25],[247,24,168,26,"toJSON"],[247,30,168,32],[247,31,168,33],[247,32,168,34],[248,4,169,4],[249,4,170,4],[249,10,170,10,"credentialWithAttachment"],[249,34,170,34],[249,37,170,37,"credential"],[249,47,170,47],[250,4,171,4],[250,11,171,11],[251,6,172,8,"id"],[251,8,172,10],[251,10,172,12,"credential"],[251,20,172,22],[251,21,172,23,"id"],[251,23,172,25],[252,6,173,8,"rawId"],[252,11,173,13],[252,13,173,15,"credential"],[252,23,173,25],[252,24,173,26,"id"],[252,26,173,28],[253,6,174,8,"response"],[253,14,174,16],[253,16,174,18],[254,8,175,12,"attestationObject"],[254,25,175,29],[254,27,175,31],[254,31,175,31,"bytesToBase64URL"],[254,41,175,47],[254,42,175,47,"bytesToBase64URL"],[254,58,175,47],[254,60,175,48],[254,64,175,52,"Uint8Array"],[254,74,175,62],[254,75,175,63,"credential"],[254,85,175,73],[254,86,175,74,"response"],[254,94,175,82],[254,95,175,83,"attestationObject"],[254,112,175,100],[254,113,175,101],[254,114,175,102],[255,8,176,12,"clientDataJSON"],[255,22,176,26],[255,24,176,28],[255,28,176,28,"bytesToBase64URL"],[255,38,176,44],[255,39,176,44,"bytesToBase64URL"],[255,55,176,44],[255,57,176,45],[255,61,176,49,"Uint8Array"],[255,71,176,59],[255,72,176,60,"credential"],[255,82,176,70],[255,83,176,71,"response"],[255,91,176,79],[255,92,176,80,"clientDataJSON"],[255,106,176,94],[255,107,176,95],[256,6,177,8],[256,7,177,9],[257,6,178,8,"type"],[257,10,178,12],[257,12,178,14],[257,24,178,26],[258,6,179,8,"clientExtensionResults"],[258,28,179,30],[258,30,179,32,"credential"],[258,40,179,42],[258,41,179,43,"getClientExtensionResults"],[258,66,179,68],[258,67,179,69],[258,68,179,70],[259,6,180,8],[260,6,181,8,"authenticatorAttachment"],[260,29,181,31],[260,31,181,34],[260,32,181,35,"_a"],[260,34,181,37],[260,37,181,40,"credentialWithAttachment"],[260,61,181,64],[260,62,181,65,"authenticatorAttachment"],[260,85,181,88],[260,91,181,94],[260,95,181,98],[260,99,181,102,"_a"],[260,101,181,104],[260,106,181,109],[260,111,181,114],[260,112,181,115],[260,115,181,118,"_a"],[260,117,181,120],[260,120,181,123,"undefined"],[261,4,182,4],[261,5,182,5],[262,2,183,0],[263,2,184,0],[264,0,185,0],[265,0,186,0],[266,0,187,0],[267,0,188,0],[268,0,189,0],[269,0,190,0],[270,0,191,0],[271,0,192,0],[272,2,193,7],[272,11,193,16,"serializeCredentialRequestResponse"],[272,45,193,50,"serializeCredentialRequestResponse"],[272,46,193,51,"credential"],[272,56,193,61],[272,58,193,63],[273,4,194,4],[273,8,194,8,"_a"],[273,10,194,10],[274,4,195,4],[275,4,196,4],[275,8,196,8],[275,16,196,16],[275,20,196,20,"credential"],[275,30,196,30],[275,34,196,34],[275,41,196,41,"credential"],[275,51,196,51],[275,52,196,52,"toJSON"],[275,58,196,58],[275,63,196,63],[275,73,196,73],[275,75,196,75],[276,6,197,8],[277,6,198,8],[277,13,198,15,"credential"],[277,23,198,25],[277,24,198,26,"toJSON"],[277,30,198,32],[277,31,198,33],[277,32,198,34],[278,4,199,4],[279,4,200,4],[280,4,201,4],[281,4,202,4],[282,4,203,4],[282,10,203,10,"credentialWithAttachment"],[282,34,203,34],[282,37,203,37,"credential"],[282,47,203,47],[283,4,204,4],[283,10,204,10,"clientExtensionResults"],[283,32,204,32],[283,35,204,35,"credential"],[283,45,204,45],[283,46,204,46,"getClientExtensionResults"],[283,71,204,71],[283,72,204,72],[283,73,204,73],[284,4,205,4],[284,10,205,10,"assertionResponse"],[284,27,205,27],[284,30,205,30,"credential"],[284,40,205,40],[284,41,205,41,"response"],[284,49,205,49],[285,4,206,4],[285,11,206,11],[286,6,207,8,"id"],[286,8,207,10],[286,10,207,12,"credential"],[286,20,207,22],[286,21,207,23,"id"],[286,23,207,25],[287,6,208,8,"rawId"],[287,11,208,13],[287,13,208,15,"credential"],[287,23,208,25],[287,24,208,26,"id"],[287,26,208,28],[288,6,208,30],[289,6,209,8,"response"],[289,14,209,16],[289,16,209,18],[290,8,210,12,"authenticatorData"],[290,25,210,29],[290,27,210,31],[290,31,210,31,"bytesToBase64URL"],[290,41,210,47],[290,42,210,47,"bytesToBase64URL"],[290,58,210,47],[290,60,210,48],[290,64,210,52,"Uint8Array"],[290,74,210,62],[290,75,210,63,"assertionResponse"],[290,92,210,80],[290,93,210,81,"authenticatorData"],[290,110,210,98],[290,111,210,99],[290,112,210,100],[291,8,211,12,"clientDataJSON"],[291,22,211,26],[291,24,211,28],[291,28,211,28,"bytesToBase64URL"],[291,38,211,44],[291,39,211,44,"bytesToBase64URL"],[291,55,211,44],[291,57,211,45],[291,61,211,49,"Uint8Array"],[291,71,211,59],[291,72,211,60,"assertionResponse"],[291,89,211,77],[291,90,211,78,"clientDataJSON"],[291,104,211,92],[291,105,211,93],[291,106,211,94],[292,8,212,12,"signature"],[292,17,212,21],[292,19,212,23],[292,23,212,23,"bytesToBase64URL"],[292,33,212,39],[292,34,212,39,"bytesToBase64URL"],[292,50,212,39],[292,52,212,40],[292,56,212,44,"Uint8Array"],[292,66,212,54],[292,67,212,55,"assertionResponse"],[292,84,212,72],[292,85,212,73,"signature"],[292,94,212,82],[292,95,212,83],[292,96,212,84],[293,8,213,12,"userHandle"],[293,18,213,22],[293,20,213,24,"assertionResponse"],[293,37,213,41],[293,38,213,42,"userHandle"],[293,48,213,52],[293,51,214,18],[293,55,214,18,"bytesToBase64URL"],[293,65,214,34],[293,66,214,34,"bytesToBase64URL"],[293,82,214,34],[293,84,214,35],[293,88,214,39,"Uint8Array"],[293,98,214,49],[293,99,214,50,"assertionResponse"],[293,116,214,67],[293,117,214,68,"userHandle"],[293,127,214,78],[293,128,214,79],[293,129,214,80],[293,132,215,18,"undefined"],[294,6,216,8],[294,7,216,9],[295,6,217,8,"type"],[295,10,217,12],[295,12,217,14],[295,24,217,26],[296,6,218,8,"clientExtensionResults"],[296,28,218,30],[297,6,219,8],[298,6,220,8,"authenticatorAttachment"],[298,29,220,31],[298,31,220,34],[298,32,220,35,"_a"],[298,34,220,37],[298,37,220,40,"credentialWithAttachment"],[298,61,220,64],[298,62,220,65,"authenticatorAttachment"],[298,85,220,88],[298,91,220,94],[298,95,220,98],[298,99,220,102,"_a"],[298,101,220,104],[298,106,220,109],[298,111,220,114],[298,112,220,115],[298,115,220,118,"_a"],[298,117,220,120],[298,120,220,123,"undefined"],[299,4,221,4],[299,5,221,5],[300,2,222,0],[301,2,223,0],[302,0,224,0],[303,0,225,0],[304,0,226,0],[305,0,227,0],[306,0,228,0],[307,0,229,0],[308,0,230,0],[309,0,231,0],[310,0,232,0],[311,0,233,0],[312,0,234,0],[313,0,235,0],[314,2,236,7],[314,11,236,16,"isValidDomain"],[314,24,236,29,"isValidDomain"],[314,25,236,30,"hostname"],[314,33,236,38],[314,35,236,40],[315,4,237,4],[316,6,238,4],[317,6,239,4,"hostname"],[317,14,239,12],[317,19,239,17],[317,30,239,28],[317,34,239,32],[317,75,239,73],[317,76,239,74,"test"],[317,80,239,78],[317,81,239,79,"hostname"],[317,89,239,87],[318,4,239,88],[319,2,240,0],[320,2,241,0],[321,0,242,0],[322,0,243,0],[323,0,244,0],[324,0,245,0],[325,0,246,0],[326,0,247,0],[327,2,248,0],[327,11,248,9,"browserSupportsWebAuthn"],[327,34,248,32,"browserSupportsWebAuthn"],[327,35,248,32],[327,37,248,35],[328,4,249,4],[328,8,249,8,"_a"],[328,10,249,10],[328,12,249,12,"_b"],[328,14,249,14],[329,4,250,4],[329,11,250,11],[329,12,250,12],[329,14,250,14],[329,18,250,14,"isBrowser"],[329,26,250,23],[329,27,250,23,"isBrowser"],[329,36,250,23],[329,38,250,24],[329,39,250,25],[329,43,251,8],[329,64,251,29],[329,68,251,33,"window"],[329,74,251,39],[329,78,252,8,"window"],[329,84,252,14],[329,85,252,15,"PublicKeyCredential"],[329,104,252,34],[329,108,253,8],[329,121,253,21],[329,125,253,25,"navigator"],[329,134,253,34],[329,138,254,8],[329,146,254,16],[329,147,254,17,"_a"],[329,149,254,19],[329,152,254,22,"navigator"],[329,161,254,31],[329,166,254,36],[329,170,254,40],[329,174,254,44,"navigator"],[329,183,254,53],[329,188,254,58],[329,193,254,63],[329,194,254,64],[329,197,254,67],[329,202,254,72],[329,203,254,73],[329,206,254,76,"navigator"],[329,215,254,85],[329,216,254,86,"credentials"],[329,227,254,97],[329,233,254,103],[329,237,254,107],[329,241,254,111,"_a"],[329,243,254,113],[329,248,254,118],[329,253,254,123],[329,254,254,124],[329,257,254,127],[329,262,254,132],[329,263,254,133],[329,266,254,136,"_a"],[329,268,254,138],[329,269,254,139,"create"],[329,275,254,145],[329,276,254,146],[329,281,254,151],[329,291,254,161],[329,295,255,8],[329,303,255,16],[329,304,255,17,"_b"],[329,306,255,19],[329,309,255,22,"navigator"],[329,318,255,31],[329,323,255,36],[329,327,255,40],[329,331,255,44,"navigator"],[329,340,255,53],[329,345,255,58],[329,350,255,63],[329,351,255,64],[329,354,255,67],[329,359,255,72],[329,360,255,73],[329,363,255,76,"navigator"],[329,372,255,85],[329,373,255,86,"credentials"],[329,384,255,97],[329,390,255,103],[329,394,255,107],[329,398,255,111,"_b"],[329,400,255,113],[329,405,255,118],[329,410,255,123],[329,411,255,124],[329,414,255,127],[329,419,255,132],[329,420,255,133],[329,423,255,136,"_b"],[329,425,255,138],[329,426,255,139,"get"],[329,429,255,142],[329,430,255,143],[329,435,255,148],[329,445,255,158],[329,446,255,159],[330,2,256,0],[331,2,257,0],[332,0,258,0],[333,0,259,0],[334,0,260,0],[335,0,261,0],[336,0,262,0],[337,0,263,0],[338,0,264,0],[339,0,265,0],[340,2,266,7],[340,17,266,22,"createCredential"],[340,33,266,38,"createCredential"],[340,34,266,39,"options"],[340,41,266,46],[340,43,266,48],[341,4,267,4],[341,8,267,8],[342,6,268,8],[342,12,268,14,"response"],[342,20,268,22],[342,23,268,25],[342,29,268,31,"navigator"],[342,38,268,40],[342,39,268,41,"credentials"],[342,50,268,52],[342,51,268,53,"create"],[342,57,268,59],[342,58,269,8],[343,6,270,8,"options"],[343,13,270,15],[343,14,270,16],[344,6,271,8],[344,10,271,12],[344,11,271,13,"response"],[344,19,271,21],[344,21,271,23],[345,8,272,12],[345,15,272,19],[346,10,273,16,"data"],[346,14,273,20],[346,16,273,22],[346,20,273,26],[347,10,274,16,"error"],[347,15,274,21],[347,17,274,23],[347,21,274,27,"WebAuthnUnknownError"],[347,36,274,47],[347,37,274,47,"WebAuthnUnknownError"],[347,57,274,47],[347,58,274,48],[347,85,274,75],[347,87,274,77,"response"],[347,95,274,85],[348,8,275,12],[348,9,275,13],[349,6,276,8],[350,6,277,8],[350,10,277,12],[350,12,277,14,"response"],[350,20,277,22],[350,32,277,34,"PublicKeyCredential"],[350,51,277,53],[350,52,277,54],[350,54,277,56],[351,8,278,12],[351,15,278,19],[352,10,279,16,"data"],[352,14,279,20],[352,16,279,22],[352,20,279,26],[353,10,280,16,"error"],[353,15,280,21],[353,17,280,23],[353,21,280,27,"WebAuthnUnknownError"],[353,36,280,47],[353,37,280,47,"WebAuthnUnknownError"],[353,57,280,47],[353,58,280,48],[353,103,280,93],[353,105,280,95,"response"],[353,113,280,103],[354,8,281,12],[354,9,281,13],[355,6,282,8],[356,6,283,8],[356,13,283,15],[357,8,283,17,"data"],[357,12,283,21],[357,14,283,23,"response"],[357,22,283,31],[358,8,283,33,"error"],[358,13,283,38],[358,15,283,40],[359,6,283,45],[359,7,283,46],[360,4,284,4],[360,5,284,5],[360,6,285,4],[360,13,285,11,"err"],[360,16,285,14],[360,18,285,16],[361,6,286,8],[361,13,286,15],[362,8,287,12,"data"],[362,12,287,16],[362,14,287,18],[362,18,287,22],[363,8,288,12,"error"],[363,13,288,17],[363,15,288,19],[363,19,288,19,"identifyRegistrationError"],[363,34,288,44],[363,35,288,44,"identifyRegistrationError"],[363,60,288,44],[363,62,288,45],[364,10,289,16,"error"],[364,15,289,21],[364,17,289,23,"err"],[364,20,289,26],[365,10,290,16,"options"],[366,8,291,12],[366,9,291,13],[367,6,292,8],[367,7,292,9],[368,4,293,4],[369,2,294,0],[370,2,295,0],[371,0,296,0],[372,0,297,0],[373,0,298,0],[374,0,299,0],[375,0,300,0],[376,0,301,0],[377,0,302,0],[378,0,303,0],[379,2,304,7],[379,17,304,22,"getCredential"],[379,30,304,35,"getCredential"],[379,31,304,36,"options"],[379,38,304,43],[379,40,304,45],[380,4,305,4],[380,8,305,8],[381,6,306,8],[381,12,306,14,"response"],[381,20,306,22],[381,23,306,25],[381,29,306,31,"navigator"],[381,38,306,40],[381,39,306,41,"credentials"],[381,50,306,52],[381,51,306,53,"get"],[381,54,306,56],[381,55,307,8],[382,6,308,8,"options"],[382,13,308,15],[382,14,308,16],[383,6,309,8],[383,10,309,12],[383,11,309,13,"response"],[383,19,309,21],[383,21,309,23],[384,8,310,12],[384,15,310,19],[385,10,311,16,"data"],[385,14,311,20],[385,16,311,22],[385,20,311,26],[386,10,312,16,"error"],[386,15,312,21],[386,17,312,23],[386,21,312,27,"WebAuthnUnknownError"],[386,36,312,47],[386,37,312,47,"WebAuthnUnknownError"],[386,57,312,47],[386,58,312,48],[386,85,312,75],[386,87,312,77,"response"],[386,95,312,85],[387,8,313,12],[387,9,313,13],[388,6,314,8],[389,6,315,8],[389,10,315,12],[389,12,315,14,"response"],[389,20,315,22],[389,32,315,34,"PublicKeyCredential"],[389,51,315,53],[389,52,315,54],[389,54,315,56],[390,8,316,12],[390,15,316,19],[391,10,317,16,"data"],[391,14,317,20],[391,16,317,22],[391,20,317,26],[392,10,318,16,"error"],[392,15,318,21],[392,17,318,23],[392,21,318,27,"WebAuthnUnknownError"],[392,36,318,47],[392,37,318,47,"WebAuthnUnknownError"],[392,57,318,47],[392,58,318,48],[392,103,318,93],[392,105,318,95,"response"],[392,113,318,103],[393,8,319,12],[393,9,319,13],[394,6,320,8],[395,6,321,8],[395,13,321,15],[396,8,321,17,"data"],[396,12,321,21],[396,14,321,23,"response"],[396,22,321,31],[397,8,321,33,"error"],[397,13,321,38],[397,15,321,40],[398,6,321,45],[398,7,321,46],[399,4,322,4],[399,5,322,5],[399,6,323,4],[399,13,323,11,"err"],[399,16,323,14],[399,18,323,16],[400,6,324,8],[400,13,324,15],[401,8,325,12,"data"],[401,12,325,16],[401,14,325,18],[401,18,325,22],[402,8,326,12,"error"],[402,13,326,17],[402,15,326,19],[402,19,326,19,"identifyAuthenticationError"],[402,34,326,46],[402,35,326,46,"identifyAuthenticationError"],[402,62,326,46],[402,64,326,47],[403,10,327,16,"error"],[403,15,327,21],[403,17,327,23,"err"],[403,20,327,26],[404,10,328,16,"options"],[405,8,329,12],[405,9,329,13],[406,6,330,8],[406,7,330,9],[407,4,331,4],[408,2,332,0],[409,2,333,7],[409,8,333,13,"DEFAULT_CREATION_OPTIONS"],[409,32,333,37],[409,35,333,40],[410,4,334,4,"hints"],[410,9,334,9],[410,11,334,11],[410,12,334,12],[410,26,334,26],[410,27,334,27],[411,4,335,4,"authenticatorSelection"],[411,26,335,26],[411,28,335,28],[412,6,336,8,"authenticatorAttachment"],[412,29,336,31],[412,31,336,33],[412,47,336,49],[413,6,337,8,"requireResidentKey"],[413,24,337,26],[413,26,337,28],[413,31,337,33],[414,6,338,8],[415,6,339,8,"userVerification"],[415,22,339,24],[415,24,339,26],[415,35,339,37],[416,6,340,8,"residentKey"],[416,17,340,19],[416,19,340,21],[417,4,341,4],[417,5,341,5],[418,4,342,4,"attestation"],[418,15,342,15],[418,17,342,17],[419,2,343,0],[419,3,343,1],[420,2,344,7],[420,8,344,13,"DEFAULT_REQUEST_OPTIONS"],[420,31,344,36],[420,34,344,39],[421,4,345,4],[422,4,346,4,"userVerification"],[422,20,346,20],[422,22,346,22],[422,33,346,33],[423,4,347,4,"hints"],[423,9,347,9],[423,11,347,11],[423,12,347,12],[423,26,347,26],[424,2,348,0],[424,3,348,1],[425,2,349,0],[425,11,349,9,"deepMerge"],[425,20,349,18,"deepMerge"],[425,21,349,19],[425,24,349,22,"sources"],[425,31,349,29],[425,33,349,31],[426,4,350,4],[426,10,350,10,"isObject"],[426,18,350,18],[426,21,350,22,"val"],[426,24,350,25],[426,28,350,30,"val"],[426,31,350,33],[426,36,350,38],[426,40,350,42],[426,44,350,46],[426,51,350,53,"val"],[426,54,350,56],[426,59,350,61],[426,67,350,69],[426,71,350,73],[426,72,350,74,"Array"],[426,77,350,79],[426,78,350,80,"isArray"],[426,85,350,87],[426,86,350,88,"val"],[426,89,350,91],[426,90,350,92],[427,4,351,4],[427,10,351,10,"isArrayBufferLike"],[427,27,351,27],[427,30,351,31,"val"],[427,33,351,34],[427,37,351,39,"val"],[427,40,351,42],[427,52,351,54,"ArrayBuffer"],[427,63,351,65],[427,67,351,69,"ArrayBuffer"],[427,78,351,80],[427,79,351,81,"isView"],[427,85,351,87],[427,86,351,88,"val"],[427,89,351,91],[427,90,351,92],[428,4,352,4],[428,10,352,10,"result"],[428,16,352,16],[428,19,352,19],[428,20,352,20],[428,21,352,21],[429,4,353,4],[429,9,353,9],[429,15,353,15,"source"],[429,21,353,21],[429,25,353,25,"sources"],[429,32,353,32],[429,34,353,34],[430,6,354,8],[430,10,354,12],[430,11,354,13,"source"],[430,17,354,19],[430,19,355,12],[431,6,356,8],[431,11,356,13],[431,17,356,19,"key"],[431,20,356,22],[431,24,356,26,"source"],[431,30,356,32],[431,32,356,34],[432,8,357,12],[432,14,357,18,"value"],[432,19,357,23],[432,22,357,26,"source"],[432,28,357,32],[432,29,357,33,"key"],[432,32,357,36],[432,33,357,37],[433,8,358,12],[433,12,358,16,"value"],[433,17,358,21],[433,22,358,26,"undefined"],[433,31,358,35],[433,33,359,16],[434,8,360,12],[434,12,360,16,"Array"],[434,17,360,21],[434,18,360,22,"isArray"],[434,25,360,29],[434,26,360,30,"value"],[434,31,360,35],[434,32,360,36],[434,34,360,38],[435,10,361,16],[436,10,362,16,"result"],[436,16,362,22],[436,17,362,23,"key"],[436,20,362,26],[436,21,362,27],[436,24,362,30,"value"],[436,29,362,35],[437,8,363,12],[437,9,363,13],[437,15,364,17],[437,19,364,21,"isArrayBufferLike"],[437,36,364,38],[437,37,364,39,"value"],[437,42,364,44],[437,43,364,45],[437,45,364,47],[438,10,365,16,"result"],[438,16,365,22],[438,17,365,23,"key"],[438,20,365,26],[438,21,365,27],[438,24,365,30,"value"],[438,29,365,35],[439,8,366,12],[439,9,366,13],[439,15,367,17],[439,19,367,21,"isObject"],[439,27,367,29],[439,28,367,30,"value"],[439,33,367,35],[439,34,367,36],[439,36,367,38],[440,10,368,16],[440,16,368,22,"existing"],[440,24,368,30],[440,27,368,33,"result"],[440,33,368,39],[440,34,368,40,"key"],[440,37,368,43],[440,38,368,44],[441,10,369,16],[441,14,369,20,"isObject"],[441,22,369,28],[441,23,369,29,"existing"],[441,31,369,37],[441,32,369,38],[441,34,369,40],[442,12,370,20,"result"],[442,18,370,26],[442,19,370,27,"key"],[442,22,370,30],[442,23,370,31],[442,26,370,34,"deepMerge"],[442,35,370,43],[442,36,370,44,"existing"],[442,44,370,52],[442,46,370,54,"value"],[442,51,370,59],[442,52,370,60],[443,10,371,16],[443,11,371,17],[443,17,372,21],[444,12,373,20,"result"],[444,18,373,26],[444,19,373,27,"key"],[444,22,373,30],[444,23,373,31],[444,26,373,34,"deepMerge"],[444,35,373,43],[444,36,373,44,"value"],[444,41,373,49],[444,42,373,50],[445,10,374,16],[446,8,375,12],[446,9,375,13],[446,15,376,17],[447,10,377,16,"result"],[447,16,377,22],[447,17,377,23,"key"],[447,20,377,26],[447,21,377,27],[447,24,377,30,"value"],[447,29,377,35],[448,8,378,12],[449,6,379,8],[450,4,380,4],[451,4,381,4],[451,11,381,11,"result"],[451,17,381,17],[452,2,382,0],[453,2,383,0],[454,0,384,0],[455,0,385,0],[456,0,386,0],[457,0,387,0],[458,0,388,0],[459,0,389,0],[460,0,390,0],[461,0,391,0],[462,0,392,0],[463,2,393,7],[463,11,393,16,"mergeCredentialCreationOptions"],[463,41,393,46,"mergeCredentialCreationOptions"],[463,42,393,47,"baseOptions"],[463,53,393,58],[463,55,393,60,"overrides"],[463,64,393,69],[463,66,393,71],[464,4,394,4],[464,11,394,11,"deepMerge"],[464,20,394,20],[464,21,394,21,"DEFAULT_CREATION_OPTIONS"],[464,45,394,45],[464,47,394,47,"baseOptions"],[464,58,394,58],[464,60,394,60,"overrides"],[464,69,394,69],[464,73,394,73],[464,74,394,74],[464,75,394,75],[464,76,394,76],[465,2,395,0],[466,2,396,0],[467,0,397,0],[468,0,398,0],[469,0,399,0],[470,0,400,0],[471,0,401,0],[472,0,402,0],[473,0,403,0],[474,0,404,0],[475,2,405,7],[475,11,405,16,"mergeCredentialRequestOptions"],[475,40,405,45,"mergeCredentialRequestOptions"],[475,41,405,46,"baseOptions"],[475,52,405,57],[475,54,405,59,"overrides"],[475,63,405,68],[475,65,405,70],[476,4,406,4],[476,11,406,11,"deepMerge"],[476,20,406,20],[476,21,406,21,"DEFAULT_REQUEST_OPTIONS"],[476,44,406,44],[476,46,406,46,"baseOptions"],[476,57,406,57],[476,59,406,59,"overrides"],[476,68,406,68],[476,72,406,72],[476,73,406,73],[476,74,406,74],[476,75,406,75],[477,2,407,0],[478,2,408,0],[479,0,409,0],[480,0,410,0],[481,0,411,0],[482,0,412,0],[483,0,413,0],[484,0,414,0],[485,0,415,0],[486,2,416,7],[486,8,416,13,"WebAuthnApi"],[486,19,416,24],[486,20,416,25],[487,4,417,4,"constructor"],[487,15,417,15,"constructor"],[487,16,417,16,"client"],[487,22,417,22],[487,24,417,24],[488,6,418,8],[488,10,418,12],[488,11,418,13,"client"],[488,17,418,19],[488,20,418,22,"client"],[488,26,418,28],[489,6,419,8],[490,6,420,8],[490,10,420,12],[490,11,420,13,"enroll"],[490,17,420,19],[490,20,420,22],[490,24,420,26],[490,25,420,27,"_enroll"],[490,32,420,34],[490,33,420,35,"bind"],[490,37,420,39],[490,38,420,40],[490,42,420,44],[490,43,420,45],[491,6,421,8],[491,10,421,12],[491,11,421,13,"challenge"],[491,20,421,22],[491,23,421,25],[491,27,421,29],[491,28,421,30,"_challenge"],[491,38,421,40],[491,39,421,41,"bind"],[491,43,421,45],[491,44,421,46],[491,48,421,50],[491,49,421,51],[492,6,422,8],[492,10,422,12],[492,11,422,13,"verify"],[492,17,422,19],[492,20,422,22],[492,24,422,26],[492,25,422,27,"_verify"],[492,32,422,34],[492,33,422,35,"bind"],[492,37,422,39],[492,38,422,40],[492,42,422,44],[492,43,422,45],[493,6,423,8],[493,10,423,12],[493,11,423,13,"authenticate"],[493,23,423,25],[493,26,423,28],[493,30,423,32],[493,31,423,33,"_authenticate"],[493,44,423,46],[493,45,423,47,"bind"],[493,49,423,51],[493,50,423,52],[493,54,423,56],[493,55,423,57],[494,6,424,8],[494,10,424,12],[494,11,424,13,"register"],[494,19,424,21],[494,22,424,24],[494,26,424,28],[494,27,424,29,"_register"],[494,36,424,38],[494,37,424,39,"bind"],[494,41,424,43],[494,42,424,44],[494,46,424,48],[494,47,424,49],[495,4,425,4],[496,4,426,4],[497,0,427,0],[498,0,428,0],[499,0,429,0],[500,0,430,0],[501,0,431,0],[502,0,432,0],[503,0,433,0],[504,0,434,0],[505,4,435,4],[505,10,435,10,"_enroll"],[505,17,435,17,"_enroll"],[505,18,435,18,"params"],[505,24,435,24],[505,26,435,26],[506,6,436,8],[506,13,436,15],[506,17,436,19],[506,18,436,20,"client"],[506,24,436,26],[506,25,436,27,"mfa"],[506,28,436,30],[506,29,436,31,"enroll"],[506,35,436,37],[506,36,436,38,"Object"],[506,42,436,44],[506,43,436,45,"assign"],[506,49,436,51],[506,50,436,52,"Object"],[506,56,436,58],[506,57,436,59,"assign"],[506,63,436,65],[506,64,436,66],[506,65,436,67],[506,66,436,68],[506,68,436,70,"params"],[506,74,436,76],[506,75,436,77],[506,77,436,79],[507,8,436,81,"factorType"],[507,18,436,91],[507,20,436,93],[508,6,436,104],[508,7,436,105],[508,8,436,106],[508,9,436,107],[509,4,437,4],[510,4,438,4],[511,0,439,0],[512,0,440,0],[513,0,441,0],[514,0,442,0],[515,0,443,0],[516,0,444,0],[517,0,445,0],[518,0,446,0],[519,0,447,0],[520,0,448,0],[521,0,449,0],[522,0,450,0],[523,0,451,0],[524,4,452,4],[524,10,452,10,"_challenge"],[524,20,452,20,"_challenge"],[524,21,452,21],[525,6,452,23,"factorId"],[525,14,452,31],[526,6,452,33,"webauthn"],[526,14,452,41],[527,6,452,43,"friendlyName"],[527,18,452,55],[528,6,452,57,"signal"],[529,4,452,65],[529,5,452,66],[529,7,452,68,"overrides"],[529,16,452,77],[529,18,452,79],[530,6,453,8],[530,10,453,12],[531,8,454,12],[532,8,455,12],[532,14,455,18],[533,10,455,20,"data"],[533,14,455,24],[533,16,455,26,"challengeResponse"],[533,33,455,43],[534,10,455,45,"error"],[534,15,455,50],[534,17,455,52,"challengeError"],[535,8,455,67],[535,9,455,68],[535,12,455,71],[535,18,455,77],[535,22,455,81],[535,23,455,82,"client"],[535,29,455,88],[535,30,455,89,"mfa"],[535,33,455,92],[535,34,455,93,"challenge"],[535,43,455,102],[535,44,455,103],[536,10,456,16,"factorId"],[536,18,456,24],[537,10,457,16,"webauthn"],[538,8,458,12],[538,9,458,13],[538,10,458,14],[539,8,459,12],[539,12,459,16],[539,13,459,17,"challengeResponse"],[539,30,459,34],[539,32,459,36],[540,10,460,16],[540,17,460,23],[541,12,460,25,"data"],[541,16,460,29],[541,18,460,31],[541,22,460,35],[542,12,460,37,"error"],[542,17,460,42],[542,19,460,44,"challengeError"],[543,10,460,59],[543,11,460,60],[544,8,461,12],[545,8,462,12],[545,14,462,18,"abortSignal"],[545,25,462,29],[545,28,462,32,"signal"],[545,34,462,38],[545,39,462,43],[545,43,462,47],[545,47,462,51,"signal"],[545,53,462,57],[545,58,462,62],[545,63,462,67],[545,64,462,68],[545,67,462,71,"signal"],[545,73,462,77],[545,76,462,80,"webAuthnAbortService"],[545,96,462,100],[545,97,462,101,"createNewAbortSignal"],[545,117,462,121],[545,118,462,122],[545,119,462,123],[546,8,463,12],[547,8,464,12],[547,12,464,16,"challengeResponse"],[547,29,464,33],[547,30,464,34,"webauthn"],[547,38,464,42],[547,39,464,43,"type"],[547,43,464,47],[547,48,464,52],[547,56,464,60],[547,58,464,62],[548,10,465,16],[548,16,465,22],[549,12,465,24,"user"],[550,10,465,29],[550,11,465,30],[550,14,465,33,"challengeResponse"],[550,31,465,50],[550,32,465,51,"webauthn"],[550,40,465,59],[550,41,465,60,"credential_options"],[550,59,465,78],[550,60,465,79,"publicKey"],[550,69,465,88],[551,10,466,16],[551,14,466,20],[551,15,466,21,"user"],[551,19,466,25],[551,20,466,26,"name"],[551,24,466,30],[551,26,466,32],[552,12,467,20,"user"],[552,16,467,24],[552,17,467,25,"name"],[552,21,467,29],[552,24,467,32],[552,27,467,35,"user"],[552,31,467,39],[552,32,467,40,"id"],[552,34,467,42],[552,38,467,46,"friendlyName"],[552,50,467,58],[552,52,467,60],[553,10,468,16],[554,10,469,16],[554,14,469,20],[554,15,469,21,"user"],[554,19,469,25],[554,20,469,26,"displayName"],[554,31,469,37],[554,33,469,39],[555,12,470,20,"user"],[555,16,470,24],[555,17,470,25,"displayName"],[555,28,470,36],[555,31,470,39,"user"],[555,35,470,43],[555,36,470,44,"name"],[555,40,470,48],[556,10,471,16],[557,8,472,12],[558,8,473,12],[558,16,473,20,"challengeResponse"],[558,33,473,37],[558,34,473,38,"webauthn"],[558,42,473,46],[558,43,473,47,"type"],[558,47,473,51],[559,10,474,16],[559,15,474,21],[559,23,474,29],[560,12,474,31],[561,14,475,20],[561,20,475,26,"options"],[561,27,475,33],[561,30,475,36,"mergeCredentialCreationOptions"],[561,60,475,66],[561,61,475,67,"challengeResponse"],[561,78,475,84],[561,79,475,85,"webauthn"],[561,87,475,93],[561,88,475,94,"credential_options"],[561,106,475,112],[561,107,475,113,"publicKey"],[561,116,475,122],[561,118,475,124,"overrides"],[561,127,475,133],[561,132,475,138],[561,136,475,142],[561,140,475,146,"overrides"],[561,149,475,155],[561,154,475,160],[561,159,475,165],[561,160,475,166],[561,163,475,169],[561,168,475,174],[561,169,475,175],[561,172,475,178,"overrides"],[561,181,475,187],[561,182,475,188,"create"],[561,188,475,194],[561,189,475,195],[562,14,476,20],[562,20,476,26],[563,16,476,28,"data"],[563,20,476,32],[564,16,476,34,"error"],[565,14,476,40],[565,15,476,41],[565,18,476,44],[565,24,476,50,"createCredential"],[565,40,476,66],[565,41,476,67],[566,16,477,24,"publicKey"],[566,25,477,33],[566,27,477,35,"options"],[566,34,477,42],[567,16,478,24,"signal"],[567,22,478,30],[567,24,478,32,"abortSignal"],[568,14,479,20],[568,15,479,21],[568,16,479,22],[569,14,480,20],[569,18,480,24,"data"],[569,22,480,28],[569,24,480,30],[570,16,481,24],[570,23,481,31],[571,18,482,28,"data"],[571,22,482,32],[571,24,482,34],[572,20,483,32,"factorId"],[572,28,483,40],[573,20,484,32,"challengeId"],[573,31,484,43],[573,33,484,45,"challengeResponse"],[573,50,484,62],[573,51,484,63,"id"],[573,53,484,65],[574,20,485,32,"webauthn"],[574,28,485,40],[574,30,485,42],[575,22,486,36,"type"],[575,26,486,40],[575,28,486,42,"challengeResponse"],[575,45,486,59],[575,46,486,60,"webauthn"],[575,54,486,68],[575,55,486,69,"type"],[575,59,486,73],[576,22,487,36,"credential_response"],[576,41,487,55],[576,43,487,57,"data"],[577,20,488,32],[578,18,489,28],[578,19,489,29],[579,18,490,28,"error"],[579,23,490,33],[579,25,490,35],[580,16,491,24],[580,17,491,25],[581,14,492,20],[582,14,493,20],[582,21,493,27],[583,16,493,29,"data"],[583,20,493,33],[583,22,493,35],[583,26,493,39],[584,16,493,41,"error"],[585,14,493,47],[585,15,493,48],[586,12,494,16],[587,10,495,16],[587,15,495,21],[587,24,495,30],[588,12,495,32],[589,14,496,20],[589,20,496,26,"options"],[589,27,496,33],[589,30,496,36,"mergeCredentialRequestOptions"],[589,59,496,65],[589,60,496,66,"challengeResponse"],[589,77,496,83],[589,78,496,84,"webauthn"],[589,86,496,92],[589,87,496,93,"credential_options"],[589,105,496,111],[589,106,496,112,"publicKey"],[589,115,496,121],[589,117,496,123,"overrides"],[589,126,496,132],[589,131,496,137],[589,135,496,141],[589,139,496,145,"overrides"],[589,148,496,154],[589,153,496,159],[589,158,496,164],[589,159,496,165],[589,162,496,168],[589,167,496,173],[589,168,496,174],[589,171,496,177,"overrides"],[589,180,496,186],[589,181,496,187,"request"],[589,188,496,194],[589,189,496,195],[590,14,497,20],[590,20,497,26],[591,16,497,28,"data"],[591,20,497,32],[592,16,497,34,"error"],[593,14,497,40],[593,15,497,41],[593,18,497,44],[593,24,497,50,"getCredential"],[593,37,497,63],[593,38,497,64,"Object"],[593,44,497,70],[593,45,497,71,"assign"],[593,51,497,77],[593,52,497,78,"Object"],[593,58,497,84],[593,59,497,85,"assign"],[593,65,497,91],[593,66,497,92],[593,67,497,93],[593,68,497,94],[593,70,497,96,"challengeResponse"],[593,87,497,113],[593,88,497,114,"webauthn"],[593,96,497,122],[593,97,497,123,"credential_options"],[593,115,497,141],[593,116,497,142],[593,118,497,144],[594,16,497,146,"publicKey"],[594,25,497,155],[594,27,497,157,"options"],[594,34,497,164],[595,16,497,166,"signal"],[595,22,497,172],[595,24,497,174,"abortSignal"],[596,14,497,186],[596,15,497,187],[596,16,497,188],[596,17,497,189],[597,14,498,20],[597,18,498,24,"data"],[597,22,498,28],[597,24,498,30],[598,16,499,24],[598,23,499,31],[599,18,500,28,"data"],[599,22,500,32],[599,24,500,34],[600,20,501,32,"factorId"],[600,28,501,40],[601,20,502,32,"challengeId"],[601,31,502,43],[601,33,502,45,"challengeResponse"],[601,50,502,62],[601,51,502,63,"id"],[601,53,502,65],[602,20,503,32,"webauthn"],[602,28,503,40],[602,30,503,42],[603,22,504,36,"type"],[603,26,504,40],[603,28,504,42,"challengeResponse"],[603,45,504,59],[603,46,504,60,"webauthn"],[603,54,504,68],[603,55,504,69,"type"],[603,59,504,73],[604,22,505,36,"credential_response"],[604,41,505,55],[604,43,505,57,"data"],[605,20,506,32],[606,18,507,28],[606,19,507,29],[607,18,508,28,"error"],[607,23,508,33],[607,25,508,35],[608,16,509,24],[608,17,509,25],[609,14,510,20],[610,14,511,20],[610,21,511,27],[611,16,511,29,"data"],[611,20,511,33],[611,22,511,35],[611,26,511,39],[612,16,511,41,"error"],[613,14,511,47],[613,15,511,48],[614,12,512,16],[615,8,513,12],[616,6,514,8],[616,7,514,9],[616,8,515,8],[616,15,515,15,"error"],[616,20,515,20],[616,22,515,22],[617,8,516,12],[617,12,516,16],[617,16,516,16,"isAuthError"],[617,23,516,27],[617,24,516,27,"isAuthError"],[617,35,516,27],[617,37,516,28,"error"],[617,42,516,33],[617,43,516,34],[617,45,516,36],[618,10,517,16],[618,17,517,23],[619,12,517,25,"data"],[619,16,517,29],[619,18,517,31],[619,22,517,35],[620,12,517,37,"error"],[621,10,517,43],[621,11,517,44],[622,8,518,12],[623,8,519,12],[623,15,519,19],[624,10,520,16,"data"],[624,14,520,20],[624,16,520,22],[624,20,520,26],[625,10,521,16,"error"],[625,15,521,21],[625,17,521,23],[625,21,521,27,"AuthUnknownError"],[625,28,521,43],[625,29,521,43,"AuthUnknownError"],[625,45,521,43],[625,46,521,44],[625,77,521,75],[625,79,521,77,"error"],[625,84,521,82],[626,8,522,12],[626,9,522,13],[627,6,523,8],[628,4,524,4],[629,4,525,4],[630,0,526,0],[631,0,527,0],[632,0,528,0],[633,0,529,0],[634,0,530,0],[635,0,531,0],[636,0,532,0],[637,0,533,0],[638,0,534,0],[639,0,535,0],[640,0,536,0],[641,4,537,4],[641,10,537,10,"_verify"],[641,17,537,17,"_verify"],[641,18,537,18],[642,6,537,20,"challengeId"],[642,17,537,31],[643,6,537,33,"factorId"],[643,14,537,41],[644,6,537,43,"webauthn"],[645,4,537,53],[645,5,537,54],[645,7,537,56],[646,6,538,8],[646,13,538,15],[646,17,538,19],[646,18,538,20,"client"],[646,24,538,26],[646,25,538,27,"mfa"],[646,28,538,30],[646,29,538,31,"verify"],[646,35,538,37],[646,36,538,38],[647,8,539,12,"factorId"],[647,16,539,20],[648,8,540,12,"challengeId"],[648,19,540,23],[649,8,541,12,"webauthn"],[649,16,541,20],[649,18,541,22,"webauthn"],[650,6,542,8],[650,7,542,9],[650,8,542,10],[651,4,543,4],[652,4,544,4],[653,0,545,0],[654,0,546,0],[655,0,547,0],[656,0,548,0],[657,0,549,0],[658,0,550,0],[659,0,551,0],[660,0,552,0],[661,0,553,0],[662,0,554,0],[663,0,555,0],[664,0,556,0],[665,0,557,0],[666,0,558,0],[667,0,559,0],[668,4,560,4],[668,10,560,10,"_authenticate"],[668,23,560,23,"_authenticate"],[668,24,560,24],[669,6,560,26,"factorId"],[669,14,560,34],[670,6,560,36,"webauthn"],[670,14,560,44],[670,16,560,46],[671,8,560,48,"rpId"],[671,12,560,52],[671,15,560,55],[671,22,560,62,"window"],[671,28,560,68],[671,33,560,73],[671,44,560,84],[671,47,560,87,"window"],[671,53,560,93],[671,54,560,94,"location"],[671,62,560,102],[671,63,560,103,"hostname"],[671,71,560,111],[671,74,560,114,"undefined"],[671,83,560,123],[672,8,560,125,"rpOrigins"],[672,17,560,134],[672,20,560,137],[672,27,560,144,"window"],[672,33,560,150],[672,38,560,155],[672,49,560,166],[672,52,560,169],[672,53,560,170,"window"],[672,59,560,176],[672,60,560,177,"location"],[672,68,560,185],[672,69,560,186,"origin"],[672,75,560,192],[672,76,560,193],[672,79,560,196,"undefined"],[672,88,560,205],[673,8,560,207,"signal"],[674,6,560,215],[675,4,560,218],[675,5,560,219],[675,7,560,221,"overrides"],[675,16,560,230],[675,18,560,232],[676,6,561,8],[676,10,561,12],[676,11,561,13,"rpId"],[676,15,561,17],[676,17,561,19],[677,8,562,12],[677,15,562,19],[678,10,563,16,"data"],[678,14,563,20],[678,16,563,22],[678,20,563,26],[679,10,564,16,"error"],[679,15,564,21],[679,17,564,23],[679,21,564,27,"AuthError"],[679,28,564,36],[679,29,564,36,"AuthError"],[679,38,564,36],[679,39,564,37],[679,85,564,83],[680,8,565,12],[680,9,565,13],[681,6,566,8],[682,6,567,8],[682,10,567,12],[683,8,568,12],[683,12,568,16],[683,13,568,17,"browserSupportsWebAuthn"],[683,36,568,40],[683,37,568,41],[683,38,568,42],[683,40,568,44],[684,10,569,16],[684,17,569,23],[685,12,570,20,"data"],[685,16,570,24],[685,18,570,26],[685,22,570,30],[686,12,571,20,"error"],[686,17,571,25],[686,19,571,27],[686,23,571,31,"AuthUnknownError"],[686,30,571,47],[686,31,571,47,"AuthUnknownError"],[686,47,571,47],[686,48,571,48],[686,83,571,83],[686,85,571,85],[686,89,571,89],[687,10,572,16],[687,11,572,17],[688,8,573,12],[689,8,574,12],[690,8,575,12],[690,14,575,18],[691,10,575,20,"data"],[691,14,575,24],[691,16,575,26,"challengeResponse"],[691,33,575,43],[692,10,575,45,"error"],[692,15,575,50],[692,17,575,52,"challengeError"],[693,8,575,67],[693,9,575,68],[693,12,575,71],[693,18,575,77],[693,22,575,81],[693,23,575,82,"challenge"],[693,32,575,91],[693,33,575,92],[694,10,576,16,"factorId"],[694,18,576,24],[695,10,577,16,"webauthn"],[695,18,577,24],[695,20,577,26],[696,12,577,28,"rpId"],[696,16,577,32],[697,12,577,34,"rpOrigins"],[698,10,577,44],[698,11,577,45],[699,10,578,16,"signal"],[700,8,579,12],[700,9,579,13],[700,11,579,15],[701,10,579,17,"request"],[701,17,579,24],[701,19,579,26,"overrides"],[702,8,579,36],[702,9,579,37],[702,10,579,38],[703,8,580,12],[703,12,580,16],[703,13,580,17,"challengeResponse"],[703,30,580,34],[703,32,580,36],[704,10,581,16],[704,17,581,23],[705,12,581,25,"data"],[705,16,581,29],[705,18,581,31],[705,22,581,35],[706,12,581,37,"error"],[706,17,581,42],[706,19,581,44,"challengeError"],[707,10,581,59],[707,11,581,60],[708,8,582,12],[709,8,583,12],[709,14,583,18],[710,10,583,20,"webauthn"],[711,8,583,29],[711,9,583,30],[711,12,583,33,"challengeResponse"],[711,29,583,50],[712,8,584,12],[713,8,585,12],[713,15,585,19],[713,19,585,23],[713,20,585,24,"_verify"],[713,27,585,31],[713,28,585,32],[714,10,586,16,"factorId"],[714,18,586,24],[715,10,587,16,"challengeId"],[715,21,587,27],[715,23,587,29,"challengeResponse"],[715,40,587,46],[715,41,587,47,"challengeId"],[715,52,587,58],[716,10,588,16,"webauthn"],[716,18,588,24],[716,20,588,26],[717,12,589,20,"type"],[717,16,589,24],[717,18,589,26,"webauthn"],[717,26,589,34],[717,27,589,35,"type"],[717,31,589,39],[718,12,590,20,"rpId"],[718,16,590,24],[719,12,591,20,"rpOrigins"],[719,21,591,29],[720,12,592,20,"credential_response"],[720,31,592,39],[720,33,592,41,"webauthn"],[720,41,592,49],[720,42,592,50,"credential_response"],[721,10,593,16],[722,8,594,12],[722,9,594,13],[722,10,594,14],[723,6,595,8],[723,7,595,9],[723,8,596,8],[723,15,596,15,"error"],[723,20,596,20],[723,22,596,22],[724,8,597,12],[724,12,597,16],[724,16,597,16,"isAuthError"],[724,23,597,27],[724,24,597,27,"isAuthError"],[724,35,597,27],[724,37,597,28,"error"],[724,42,597,33],[724,43,597,34],[724,45,597,36],[725,10,598,16],[725,17,598,23],[726,12,598,25,"data"],[726,16,598,29],[726,18,598,31],[726,22,598,35],[727,12,598,37,"error"],[728,10,598,43],[728,11,598,44],[729,8,599,12],[730,8,600,12],[730,15,600,19],[731,10,601,16,"data"],[731,14,601,20],[731,16,601,22],[731,20,601,26],[732,10,602,16,"error"],[732,15,602,21],[732,17,602,23],[732,21,602,27,"AuthUnknownError"],[732,28,602,43],[732,29,602,43,"AuthUnknownError"],[732,45,602,43],[732,46,602,44],[732,80,602,78],[732,82,602,80,"error"],[732,87,602,85],[733,8,603,12],[733,9,603,13],[734,6,604,8],[735,4,605,4],[736,4,606,4],[737,0,607,0],[738,0,608,0],[739,0,609,0],[740,0,610,0],[741,0,611,0],[742,0,612,0],[743,0,613,0],[744,0,614,0],[745,0,615,0],[746,0,616,0],[747,0,617,0],[748,0,618,0],[749,0,619,0],[750,0,620,0],[751,4,621,4],[751,10,621,10,"_register"],[751,19,621,19,"_register"],[751,20,621,20],[752,6,621,22,"friendlyName"],[752,18,621,34],[753,6,621,36,"rpId"],[753,10,621,40],[753,13,621,43],[753,20,621,50,"window"],[753,26,621,56],[753,31,621,61],[753,42,621,72],[753,45,621,75,"window"],[753,51,621,81],[753,52,621,82,"location"],[753,60,621,90],[753,61,621,91,"hostname"],[753,69,621,99],[753,72,621,102,"undefined"],[753,81,621,111],[754,6,621,113,"rpOrigins"],[754,15,621,122],[754,18,621,125],[754,25,621,132,"window"],[754,31,621,138],[754,36,621,143],[754,47,621,154],[754,50,621,157],[754,51,621,158,"window"],[754,57,621,164],[754,58,621,165,"location"],[754,66,621,173],[754,67,621,174,"origin"],[754,73,621,180],[754,74,621,181],[754,77,621,184,"undefined"],[754,86,621,193],[755,6,621,195,"signal"],[756,4,621,203],[756,5,621,204],[756,7,621,206,"overrides"],[756,16,621,215],[756,18,621,217],[757,6,622,8],[757,10,622,12],[757,11,622,13,"rpId"],[757,15,622,17],[757,17,622,19],[758,8,623,12],[758,15,623,19],[759,10,624,16,"data"],[759,14,624,20],[759,16,624,22],[759,20,624,26],[760,10,625,16,"error"],[760,15,625,21],[760,17,625,23],[760,21,625,27,"AuthError"],[760,28,625,36],[760,29,625,36,"AuthError"],[760,38,625,36],[760,39,625,37],[760,83,625,81],[761,8,626,12],[761,9,626,13],[762,6,627,8],[763,6,628,8],[763,10,628,12],[764,8,629,12],[764,12,629,16],[764,13,629,17,"browserSupportsWebAuthn"],[764,36,629,40],[764,37,629,41],[764,38,629,42],[764,40,629,44],[765,10,630,16],[765,17,630,23],[766,12,631,20,"data"],[766,16,631,24],[766,18,631,26],[766,22,631,30],[767,12,632,20,"error"],[767,17,632,25],[767,19,632,27],[767,23,632,31,"AuthUnknownError"],[767,30,632,47],[767,31,632,47,"AuthUnknownError"],[767,47,632,47],[767,48,632,48],[767,83,632,83],[767,85,632,85],[767,89,632,89],[768,10,633,16],[768,11,633,17],[769,8,634,12],[770,8,635,12],[771,8,636,12],[771,14,636,18],[772,10,636,20,"data"],[772,14,636,24],[772,16,636,26,"factor"],[772,22,636,32],[773,10,636,34,"error"],[773,15,636,39],[773,17,636,41,"enrollError"],[774,8,636,53],[774,9,636,54],[774,12,636,57],[774,18,636,63],[774,22,636,67],[774,23,636,68,"_enroll"],[774,30,636,75],[774,31,636,76],[775,10,637,16,"friendlyName"],[776,8,638,12],[776,9,638,13],[776,10,638,14],[777,8,639,12],[777,12,639,16],[777,13,639,17,"factor"],[777,19,639,23],[777,21,639,25],[778,10,640,16],[778,16,640,22],[778,20,640,26],[778,21,640,27,"client"],[778,27,640,33],[778,28,640,34,"mfa"],[778,31,640,37],[778,32,641,21,"listFactors"],[778,43,641,32],[778,44,641,33],[778,45,641,34],[778,46,642,21,"then"],[778,50,642,25],[778,51,642,27,"factors"],[778,58,642,34],[778,62,642,39],[779,12,643,20],[779,16,643,24,"_a"],[779,18,643,26],[780,12,644,20],[780,19,644,27],[780,20,644,28,"_a"],[780,22,644,30],[780,25,644,33,"factors"],[780,32,644,40],[780,33,644,41,"data"],[780,37,644,45],[780,43,644,51],[780,47,644,55],[780,51,644,59,"_a"],[780,53,644,61],[780,58,644,66],[780,63,644,71],[780,64,644,72],[780,67,644,75],[780,72,644,80],[780,73,644,81],[780,76,644,84,"_a"],[780,78,644,86],[780,79,644,87,"all"],[780,82,644,90],[780,83,644,91,"find"],[780,87,644,95],[780,88,644,97,"v"],[780,89,644,98],[780,93,644,103,"v"],[780,94,644,104],[780,95,644,105,"factor_type"],[780,106,644,116],[780,111,644,121],[780,121,644,131],[780,125,645,24,"v"],[780,126,645,25],[780,127,645,26,"friendly_name"],[780,140,645,39],[780,145,645,44,"friendlyName"],[780,157,645,56],[780,161,646,24,"v"],[780,162,646,25],[780,163,646,26,"status"],[780,169,646,32],[780,174,646,37],[780,186,646,49],[780,187,646,50],[781,10,647,16],[781,11,647,17],[781,12,647,18],[781,13,648,21,"then"],[781,17,648,25],[781,18,648,27,"factor"],[781,24,648,33],[781,28,648,39,"factor"],[781,34,648,45],[781,37,648,48],[781,41,648,52],[781,42,648,53,"client"],[781,48,648,59],[781,49,648,60,"mfa"],[781,52,648,63],[781,53,648,64,"unenroll"],[781,61,648,72],[781,62,648,73],[782,12,648,75,"factorId"],[782,20,648,83],[782,22,648,85,"factor"],[782,28,648,91],[782,33,648,96],[782,37,648,100],[782,41,648,104,"factor"],[782,47,648,110],[782,52,648,115],[782,57,648,120],[782,58,648,121],[782,61,648,124],[782,66,648,129],[782,67,648,130],[782,70,648,133,"factor"],[782,76,648,139],[782,77,648,140,"id"],[783,10,648,143],[783,11,648,144],[783,12,648,145],[783,15,648,148],[783,20,648,153],[783,21,648,155],[783,22,648,156],[784,10,649,16],[784,17,649,23],[785,12,649,25,"data"],[785,16,649,29],[785,18,649,31],[785,22,649,35],[786,12,649,37,"error"],[786,17,649,42],[786,19,649,44,"enrollError"],[787,10,649,56],[787,11,649,57],[788,8,650,12],[789,8,651,12],[790,8,652,12],[790,14,652,18],[791,10,652,20,"data"],[791,14,652,24],[791,16,652,26,"challengeResponse"],[791,33,652,43],[792,10,652,45,"error"],[792,15,652,50],[792,17,652,52,"challengeError"],[793,8,652,67],[793,9,652,68],[793,12,652,71],[793,18,652,77],[793,22,652,81],[793,23,652,82,"_challenge"],[793,33,652,92],[793,34,652,93],[794,10,653,16,"factorId"],[794,18,653,24],[794,20,653,26,"factor"],[794,26,653,32],[794,27,653,33,"id"],[794,29,653,35],[795,10,654,16,"friendlyName"],[795,22,654,28],[795,24,654,30,"factor"],[795,30,654,36],[795,31,654,37,"friendly_name"],[795,44,654,50],[796,10,655,16,"webauthn"],[796,18,655,24],[796,20,655,26],[797,12,655,28,"rpId"],[797,16,655,32],[798,12,655,34,"rpOrigins"],[799,10,655,44],[799,11,655,45],[800,10,656,16,"signal"],[801,8,657,12],[801,9,657,13],[801,11,657,15],[802,10,658,16,"create"],[802,16,658,22],[802,18,658,24,"overrides"],[803,8,659,12],[803,9,659,13],[803,10,659,14],[804,8,660,12],[804,12,660,16],[804,13,660,17,"challengeResponse"],[804,30,660,34],[804,32,660,36],[805,10,661,16],[805,17,661,23],[806,12,661,25,"data"],[806,16,661,29],[806,18,661,31],[806,22,661,35],[807,12,661,37,"error"],[807,17,661,42],[807,19,661,44,"challengeError"],[808,10,661,59],[808,11,661,60],[809,8,662,12],[810,8,663,12],[810,15,663,19],[810,19,663,23],[810,20,663,24,"_verify"],[810,27,663,31],[810,28,663,32],[811,10,664,16,"factorId"],[811,18,664,24],[811,20,664,26,"factor"],[811,26,664,32],[811,27,664,33,"id"],[811,29,664,35],[812,10,665,16,"challengeId"],[812,21,665,27],[812,23,665,29,"challengeResponse"],[812,40,665,46],[812,41,665,47,"challengeId"],[812,52,665,58],[813,10,666,16,"webauthn"],[813,18,666,24],[813,20,666,26],[814,12,667,20,"rpId"],[814,16,667,24],[815,12,668,20,"rpOrigins"],[815,21,668,29],[816,12,669,20,"type"],[816,16,669,24],[816,18,669,26,"challengeResponse"],[816,35,669,43],[816,36,669,44,"webauthn"],[816,44,669,52],[816,45,669,53,"type"],[816,49,669,57],[817,12,670,20,"credential_response"],[817,31,670,39],[817,33,670,41,"challengeResponse"],[817,50,670,58],[817,51,670,59,"webauthn"],[817,59,670,67],[817,60,670,68,"credential_response"],[818,10,671,16],[819,8,672,12],[819,9,672,13],[819,10,672,14],[820,6,673,8],[820,7,673,9],[820,8,674,8],[820,15,674,15,"error"],[820,20,674,20],[820,22,674,22],[821,8,675,12],[821,12,675,16],[821,16,675,16,"isAuthError"],[821,23,675,27],[821,24,675,27,"isAuthError"],[821,35,675,27],[821,37,675,28,"error"],[821,42,675,33],[821,43,675,34],[821,45,675,36],[822,10,676,16],[822,17,676,23],[823,12,676,25,"data"],[823,16,676,29],[823,18,676,31],[823,22,676,35],[824,12,676,37,"error"],[825,10,676,43],[825,11,676,44],[826,8,677,12],[827,8,678,12],[827,15,678,19],[828,10,679,16,"data"],[828,14,679,20],[828,16,679,22],[828,20,679,26],[829,10,680,16,"error"],[829,15,680,21],[829,17,680,23],[829,21,680,27,"AuthUnknownError"],[829,28,680,43],[829,29,680,43,"AuthUnknownError"],[829,45,680,43],[829,46,680,44],[829,76,680,74],[829,78,680,76,"error"],[829,83,680,81],[830,8,681,12],[830,9,681,13],[831,6,682,8],[832,4,683,4],[833,2,684,0],[834,0,684,1],[834,3]],"functionMap":{"names":["<global>","<anonymous>","WebAuthnAbortService","WebAuthnAbortService#createNewAbortSignal","WebAuthnAbortService#cancelCeremony","deserializeCredentialCreationOptions","deserializeCredentialRequestOptions","serializeCredentialCreationResponse","serializeCredentialRequestResponse","isValidDomain","browserSupportsWebAuthn","createCredential","getCredential","deepMerge","isObject","isArrayBufferLike","mergeCredentialCreationOptions","mergeCredentialRequestOptions","WebAuthnApi","WebAuthnApi#constructor","WebAuthnApi#_enroll","WebAuthnApi#_challenge","WebAuthnApi#_verify","WebAuthnApi#_authenticate","WebAuthnApi#_register","client.mfa.listFactors.then$argument_0","_a.all.find$argument_0","client.mfa.listFactors.then.then$argument_0"],"mappings":"AAA,sCC;CDU;OEa;ICQ;KDU;IEO;KFO;CFC;OKiB;CLqC;OMU;CNgC;OOU;CPoB;OQU;CR6B;OSc;CTI;AUQ;CVQ;OWU;CX4B;OYU;CZ4B;AaiB;qBCC,uED;8BEC,8DF;Cb+B;OgBW;ChBE;OiBU;CjBE;OkBS;ICC;KDQ;IEU;KFE;IGe;KHwE;IIa;KJM;IKiB;KL6C;IMgB;0BCqB;gGCE;iDDE;iBDC;0BGC,iIH;KNmC;ClBC"},"hasCjsExports":false},"type":"js/module"}]}