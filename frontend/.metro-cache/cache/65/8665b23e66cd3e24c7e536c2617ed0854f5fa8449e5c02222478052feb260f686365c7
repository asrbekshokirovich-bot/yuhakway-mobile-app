{"dependencies":[{"name":"./helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":18,"index":315},"end":{"line":6,"column":38,"index":335}}],"key":"f1qS3jT0PALHpwfgOy1Ia0GaJzk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ProcessLockAcquireTimeoutError = exports.NavigatorLockAcquireTimeoutError = exports.LockAcquireTimeoutError = exports.internals = void 0;\n  exports.navigatorLock = navigatorLock;\n  exports.processLock = processLock;\n  const helpers_1 = require(_dependencyMap[0], \"./helpers\");\n  /**\n   * @experimental\n   */\n  exports.internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis && (0, helpers_1.supportsLocalStorage)() && globalThis.localStorage && globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true')\n  };\n  /**\n   * An error thrown when a lock cannot be acquired after some amount of time.\n   *\n   * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n   */\n  class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n      super(message);\n      this.isAcquireTimeout = true;\n    }\n  }\n  exports.LockAcquireTimeoutError = LockAcquireTimeoutError;\n  class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  exports.NavigatorLockAcquireTimeoutError = NavigatorLockAcquireTimeoutError;\n  class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  exports.ProcessLockAcquireTimeoutError = ProcessLockAcquireTimeoutError;\n  /**\n   * Implements a global exclusive lock using the Navigator LockManager API. It\n   * is available on all browsers released after 2022-03-15 with Safari being the\n   * last one to release support. If the API is not available, this function will\n   * throw. Make sure you check availablility before configuring {@link\n   * GoTrueClient}.\n   *\n   * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n   * local storage item to `true`.\n   *\n   * Internals:\n   *\n   * Since the LockManager API does not preserve stack traces for the async\n   * function passed in the `request` method, a trick is used where acquiring the\n   * lock releases a previously started promise to run the operation in the `fn`\n   * function. The lock waits for that promise to finish (with or without error),\n   * while the function will finally wait for the result anyway.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function navigatorLock(name, acquireTimeout, fn) {\n    if (exports.internals.debug) {\n      console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n      setTimeout(() => {\n        abortController.abort();\n        if (exports.internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n        }\n      }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0 ? {\n      mode: 'exclusive',\n      ifAvailable: true\n    } : {\n      mode: 'exclusive',\n      signal: abortController.signal\n    }, async lock => {\n      if (lock) {\n        if (exports.internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n        }\n        try {\n          return await fn();\n        } finally {\n          if (exports.internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n          }\n        }\n      } else {\n        if (acquireTimeout === 0) {\n          if (exports.internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n          }\n          throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n        } else {\n          if (exports.internals.debug) {\n            try {\n              const result = await globalThis.navigator.locks.query();\n              console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n            } catch (e) {\n              console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n            }\n          }\n          // Browser is not following the Navigator LockManager spec, it\n          // returned a null lock when we didn't use ifAvailable. So we can\n          // pretend the lock is acquired in the name of backward compatibility\n          // and user experience and just run the function.\n          console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n          return await fn();\n        }\n      }\n    }));\n  }\n  const PROCESS_LOCKS = {};\n  /**\n   * Implements a global exclusive lock that works only in the current process.\n   * Useful for environments like React Native or other non-browser\n   * single-process (i.e. no concept of \"tabs\") environments.\n   *\n   * Use {@link #navigatorLock} in browser environments.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([previousOperation.catch(() => {\n      // ignore error of previous operation that we're waiting to finish\n      return null;\n    }), acquireTimeout >= 0 ? new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n      }, acquireTimeout);\n    }) : null].filter(x => x)).catch(e => {\n      if (e && e.isAcquireTimeout) {\n        throw e;\n      }\n      return null;\n    }).then(async () => {\n      // previous operations finished and we didn't get a race on the acquire\n      // timeout, so the current operation can finally start\n      return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async e => {\n      if (e && e.isAcquireTimeout) {\n        // if the current operation timed out, it doesn't mean that the previous\n        // operation finished, so we need contnue waiting for it to finish\n        await previousOperation;\n        return null;\n      }\n      throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n  }\n});","lineCount":173,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"ProcessLockAcquireTimeoutError"],[7,40,3,38],[7,43,3,41,"exports"],[7,50,3,48],[7,51,3,49,"NavigatorLockAcquireTimeoutError"],[7,83,3,81],[7,86,3,84,"exports"],[7,93,3,91],[7,94,3,92,"LockAcquireTimeoutError"],[7,117,3,115],[7,120,3,118,"exports"],[7,127,3,125],[7,128,3,126,"internals"],[7,137,3,135],[7,140,3,138],[7,145,3,143],[7,146,3,144],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"navigatorLock"],[8,23,4,21],[8,26,4,24,"navigatorLock"],[8,39,4,37],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"processLock"],[9,21,5,19],[9,24,5,22,"processLock"],[9,35,5,33],[10,2,6,0],[10,8,6,6,"helpers_1"],[10,17,6,15],[10,20,6,18,"require"],[10,27,6,25],[10,28,6,25,"_dependencyMap"],[10,42,6,25],[10,58,6,37],[10,59,6,38],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,2,10,0,"exports"],[14,9,10,7],[14,10,10,8,"internals"],[14,19,10,17],[14,22,10,20],[15,4,11,4],[16,0,12,0],[17,0,13,0],[18,4,14,4,"debug"],[18,9,14,9],[18,11,14,11],[18,12,14,12],[18,14,14,14,"globalThis"],[18,24,14,24],[18,28,15,8],[18,29,15,9],[18,30,15,10],[18,32,15,12,"helpers_1"],[18,41,15,21],[18,42,15,22,"supportsLocalStorage"],[18,62,15,42],[18,64,15,44],[18,65,15,45],[18,69,16,8,"globalThis"],[18,79,16,18],[18,80,16,19,"localStorage"],[18,92,16,31],[18,96,17,8,"globalThis"],[18,106,17,18],[18,107,17,19,"localStorage"],[18,119,17,31],[18,120,17,32,"getItem"],[18,127,17,39],[18,128,17,40],[18,160,17,72],[18,161,17,73],[18,166,17,78],[18,172,17,84],[19,2,18,0],[19,3,18,1],[20,2,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,2,24,0],[25,8,24,6,"LockAcquireTimeoutError"],[25,31,24,29],[25,40,24,38,"Error"],[25,45,24,43],[25,46,24,44],[26,4,25,4,"constructor"],[26,15,25,15,"constructor"],[26,16,25,16,"message"],[26,23,25,23],[26,25,25,25],[27,6,26,8],[27,11,26,13],[27,12,26,14,"message"],[27,19,26,21],[27,20,26,22],[28,6,27,8],[28,10,27,12],[28,11,27,13,"isAcquireTimeout"],[28,27,27,29],[28,30,27,32],[28,34,27,36],[29,4,28,4],[30,2,29,0],[31,2,30,0,"exports"],[31,9,30,7],[31,10,30,8,"LockAcquireTimeoutError"],[31,33,30,31],[31,36,30,34,"LockAcquireTimeoutError"],[31,59,30,57],[32,2,31,0],[32,8,31,6,"NavigatorLockAcquireTimeoutError"],[32,40,31,38],[32,49,31,47,"LockAcquireTimeoutError"],[32,72,31,70],[32,73,31,71],[33,2,33,0,"exports"],[33,9,33,7],[33,10,33,8,"NavigatorLockAcquireTimeoutError"],[33,42,33,40],[33,45,33,43,"NavigatorLockAcquireTimeoutError"],[33,77,33,75],[34,2,34,0],[34,8,34,6,"ProcessLockAcquireTimeoutError"],[34,38,34,36],[34,47,34,45,"LockAcquireTimeoutError"],[34,70,34,68],[34,71,34,69],[35,2,36,0,"exports"],[35,9,36,7],[35,10,36,8,"ProcessLockAcquireTimeoutError"],[35,40,36,38],[35,43,36,41,"ProcessLockAcquireTimeoutError"],[35,73,36,71],[36,2,37,0],[37,0,38,0],[38,0,39,0],[39,0,40,0],[40,0,41,0],[41,0,42,0],[42,0,43,0],[43,0,44,0],[44,0,45,0],[45,0,46,0],[46,0,47,0],[47,0,48,0],[48,0,49,0],[49,0,50,0],[50,0,51,0],[51,0,52,0],[52,0,53,0],[53,0,54,0],[54,0,55,0],[55,0,56,0],[56,0,57,0],[57,0,58,0],[58,0,59,0],[59,0,60,0],[60,0,61,0],[61,2,62,0],[61,17,62,15,"navigatorLock"],[61,30,62,28,"navigatorLock"],[61,31,62,29,"name"],[61,35,62,33],[61,37,62,35,"acquireTimeout"],[61,51,62,49],[61,53,62,51,"fn"],[61,55,62,53],[61,57,62,55],[62,4,63,4],[62,8,63,8,"exports"],[62,15,63,15],[62,16,63,16,"internals"],[62,25,63,25],[62,26,63,26,"debug"],[62,31,63,31],[62,33,63,33],[63,6,64,8,"console"],[63,13,64,15],[63,14,64,16,"log"],[63,17,64,19],[63,18,64,20],[63,68,64,70],[63,70,64,72,"name"],[63,74,64,76],[63,76,64,78,"acquireTimeout"],[63,90,64,92],[63,91,64,93],[64,4,65,4],[65,4,66,4],[65,10,66,10,"abortController"],[65,25,66,25],[65,28,66,28],[65,32,66,32,"globalThis"],[65,42,66,42],[65,43,66,43,"AbortController"],[65,58,66,58],[65,59,66,59],[65,60,66,60],[66,4,67,4],[66,8,67,8,"acquireTimeout"],[66,22,67,22],[66,25,67,25],[66,26,67,26],[66,28,67,28],[67,6,68,8,"setTimeout"],[67,16,68,18],[67,17,68,19],[67,23,68,25],[68,8,69,12,"abortController"],[68,23,69,27],[68,24,69,28,"abort"],[68,29,69,33],[68,30,69,34],[68,31,69,35],[69,8,70,12],[69,12,70,16,"exports"],[69,19,70,23],[69,20,70,24,"internals"],[69,29,70,33],[69,30,70,34,"debug"],[69,35,70,39],[69,37,70,41],[70,10,71,16,"console"],[70,17,71,23],[70,18,71,24,"log"],[70,21,71,27],[70,22,71,28],[70,76,71,82],[70,78,71,84,"name"],[70,82,71,88],[70,83,71,89],[71,8,72,12],[72,6,73,8],[72,7,73,9],[72,9,73,11,"acquireTimeout"],[72,23,73,25],[72,24,73,26],[73,4,74,4],[74,4,75,4],[75,4,76,4],[76,4,77,4],[77,4,78,4],[78,4,79,4],[79,4,80,4],[80,4,81,4],[81,4,82,4],[82,4,83,4],[82,11,83,11],[82,17,83,17,"Promise"],[82,24,83,24],[82,25,83,25,"resolve"],[82,32,83,32],[82,33,83,33],[82,34,83,34],[82,35,83,35,"then"],[82,39,83,39],[82,40,83,40],[82,46,83,46,"globalThis"],[82,56,83,56],[82,57,83,57,"navigator"],[82,66,83,66],[82,67,83,67,"locks"],[82,72,83,72],[82,73,83,73,"request"],[82,80,83,80],[82,81,83,81,"name"],[82,85,83,85],[82,87,83,87,"acquireTimeout"],[82,101,83,101],[82,106,83,106],[82,107,83,107],[82,110,84,10],[83,6,85,12,"mode"],[83,10,85,16],[83,12,85,18],[83,23,85,29],[84,6,86,12,"ifAvailable"],[84,17,86,23],[84,19,86,25],[85,4,87,8],[85,5,87,9],[85,8,88,10],[86,6,89,12,"mode"],[86,10,89,16],[86,12,89,18],[86,23,89,29],[87,6,90,12,"signal"],[87,12,90,18],[87,14,90,20,"abortController"],[87,29,90,35],[87,30,90,36,"signal"],[88,4,91,8],[88,5,91,9],[88,7,91,11],[88,13,91,18,"lock"],[88,17,91,22],[88,21,91,27],[89,6,92,8],[89,10,92,12,"lock"],[89,14,92,16],[89,16,92,18],[90,8,93,12],[90,12,93,16,"exports"],[90,19,93,23],[90,20,93,24,"internals"],[90,29,93,33],[90,30,93,34,"debug"],[90,35,93,39],[90,37,93,41],[91,10,94,16,"console"],[91,17,94,23],[91,18,94,24,"log"],[91,21,94,27],[91,22,94,28],[91,68,94,74],[91,70,94,76,"name"],[91,74,94,80],[91,76,94,82,"lock"],[91,80,94,86],[91,81,94,87,"name"],[91,85,94,91],[91,86,94,92],[92,8,95,12],[93,8,96,12],[93,12,96,16],[94,10,97,16],[94,17,97,23],[94,23,97,29,"fn"],[94,25,97,31],[94,26,97,32],[94,27,97,33],[95,8,98,12],[95,9,98,13],[95,18,99,20],[96,10,100,16],[96,14,100,20,"exports"],[96,21,100,27],[96,22,100,28,"internals"],[96,31,100,37],[96,32,100,38,"debug"],[96,37,100,43],[96,39,100,45],[97,12,101,20,"console"],[97,19,101,27],[97,20,101,28,"log"],[97,23,101,31],[97,24,101,32],[97,70,101,78],[97,72,101,80,"name"],[97,76,101,84],[97,78,101,86,"lock"],[97,82,101,90],[97,83,101,91,"name"],[97,87,101,95],[97,88,101,96],[98,10,102,16],[99,8,103,12],[100,6,104,8],[100,7,104,9],[100,13,105,13],[101,8,106,12],[101,12,106,16,"acquireTimeout"],[101,26,106,30],[101,31,106,35],[101,32,106,36],[101,34,106,38],[102,10,107,16],[102,14,107,20,"exports"],[102,21,107,27],[102,22,107,28,"internals"],[102,31,107,37],[102,32,107,38,"debug"],[102,37,107,43],[102,39,107,45],[103,12,108,20,"console"],[103,19,108,27],[103,20,108,28,"log"],[103,23,108,31],[103,24,108,32],[103,87,108,95],[103,89,108,97,"name"],[103,93,108,101],[103,94,108,102],[104,10,109,16],[105,10,110,16],[105,16,110,22],[105,20,110,26,"NavigatorLockAcquireTimeoutError"],[105,52,110,58],[105,53,110,59],[105,107,110,113,"name"],[105,111,110,117],[105,133,110,139],[105,134,110,140],[106,8,111,12],[106,9,111,13],[106,15,112,17],[107,10,113,16],[107,14,113,20,"exports"],[107,21,113,27],[107,22,113,28,"internals"],[107,31,113,37],[107,32,113,38,"debug"],[107,37,113,43],[107,39,113,45],[108,12,114,20],[108,16,114,24],[109,14,115,24],[109,20,115,30,"result"],[109,26,115,36],[109,29,115,39],[109,35,115,45,"globalThis"],[109,45,115,55],[109,46,115,56,"navigator"],[109,55,115,65],[109,56,115,66,"locks"],[109,61,115,71],[109,62,115,72,"query"],[109,67,115,77],[109,68,115,78],[109,69,115,79],[110,14,116,24,"console"],[110,21,116,31],[110,22,116,32,"log"],[110,25,116,35],[110,26,116,36],[110,76,116,86],[110,78,116,88,"JSON"],[110,82,116,92],[110,83,116,93,"stringify"],[110,92,116,102],[110,93,116,103,"result"],[110,99,116,109],[110,101,116,111],[110,105,116,115],[110,107,116,117],[110,111,116,121],[110,112,116,122],[110,113,116,123],[111,12,117,20],[111,13,117,21],[111,14,118,20],[111,21,118,27,"e"],[111,22,118,28],[111,24,118,30],[112,14,119,24,"console"],[112,21,119,31],[112,22,119,32,"warn"],[112,26,119,36],[112,27,119,37],[112,97,119,107],[112,99,119,109,"e"],[112,100,119,110],[112,101,119,111],[113,12,120,20],[114,10,121,16],[115,10,122,16],[116,10,123,16],[117,10,124,16],[118,10,125,16],[119,10,126,16,"console"],[119,17,126,23],[119,18,126,24,"warn"],[119,22,126,28],[119,23,126,29],[119,272,126,278],[119,273,126,279],[120,10,127,16],[120,17,127,23],[120,23,127,29,"fn"],[120,25,127,31],[120,26,127,32],[120,27,127,33],[121,8,128,12],[122,6,129,8],[123,4,130,4],[123,5,130,5],[123,6,130,6],[123,7,130,7],[124,2,131,0],[125,2,132,0],[125,8,132,6,"PROCESS_LOCKS"],[125,21,132,19],[125,24,132,22],[125,25,132,23],[125,26,132,24],[126,2,133,0],[127,0,134,0],[128,0,135,0],[129,0,136,0],[130,0,137,0],[131,0,138,0],[132,0,139,0],[133,0,140,0],[134,0,141,0],[135,0,142,0],[136,0,143,0],[137,0,144,0],[138,0,145,0],[139,0,146,0],[140,2,147,0],[140,17,147,15,"processLock"],[140,28,147,26,"processLock"],[140,29,147,27,"name"],[140,33,147,31],[140,35,147,33,"acquireTimeout"],[140,49,147,47],[140,51,147,49,"fn"],[140,53,147,51],[140,55,147,53],[141,4,148,4],[141,8,148,8,"_a"],[141,10,148,10],[142,4,149,4],[142,10,149,10,"previousOperation"],[142,27,149,27],[142,30,149,30],[142,31,149,31,"_a"],[142,33,149,33],[142,36,149,36,"PROCESS_LOCKS"],[142,49,149,49],[142,50,149,50,"name"],[142,54,149,54],[142,55,149,55],[142,61,149,61],[142,65,149,65],[142,69,149,69,"_a"],[142,71,149,71],[142,76,149,76],[142,81,149,81],[142,82,149,82],[142,85,149,85,"_a"],[142,87,149,87],[142,90,149,90,"Promise"],[142,97,149,97],[142,98,149,98,"resolve"],[142,105,149,105],[142,106,149,106],[142,107,149,107],[143,4,150,4],[143,10,150,10,"currentOperation"],[143,26,150,26],[143,29,150,29,"Promise"],[143,36,150,36],[143,37,150,37,"race"],[143,41,150,41],[143,42,150,42],[143,43,151,8,"previousOperation"],[143,60,151,25],[143,61,151,26,"catch"],[143,66,151,31],[143,67,151,32],[143,73,151,38],[144,6,152,12],[145,6,153,12],[145,13,153,19],[145,17,153,23],[146,4,154,8],[146,5,154,9],[146,6,154,10],[146,8,155,8,"acquireTimeout"],[146,22,155,22],[146,26,155,26],[146,27,155,27],[146,30,156,14],[146,34,156,18,"Promise"],[146,41,156,25],[146,42,156,26],[146,43,156,27,"_"],[146,44,156,28],[146,46,156,30,"reject"],[146,52,156,36],[146,57,156,41],[147,6,157,16,"setTimeout"],[147,16,157,26],[147,17,157,27],[147,23,157,33],[148,8,158,20,"reject"],[148,14,158,26],[148,15,158,27],[148,19,158,31,"ProcessLockAcquireTimeoutError"],[148,49,158,61],[148,50,158,62],[148,86,158,98,"name"],[148,90,158,102],[148,103,158,115],[148,104,158,116],[148,105,158,117],[149,6,159,16],[149,7,159,17],[149,9,159,19,"acquireTimeout"],[149,23,159,33],[149,24,159,34],[150,4,160,12],[150,5,160,13],[150,6,160,14],[150,9,161,14],[150,13,161,18],[150,14,162,5],[150,15,162,6,"filter"],[150,21,162,12],[150,22,162,14,"x"],[150,23,162,15],[150,27,162,20,"x"],[150,28,162,21],[150,29,162,22],[150,30,162,23],[150,31,163,9,"catch"],[150,36,163,14],[150,37,163,16,"e"],[150,38,163,17],[150,42,163,22],[151,6,164,8],[151,10,164,12,"e"],[151,11,164,13],[151,15,164,17,"e"],[151,16,164,18],[151,17,164,19,"isAcquireTimeout"],[151,33,164,35],[151,35,164,37],[152,8,165,12],[152,14,165,18,"e"],[152,15,165,19],[153,6,166,8],[154,6,167,8],[154,13,167,15],[154,17,167,19],[155,4,168,4],[155,5,168,5],[155,6,168,6],[155,7,169,9,"then"],[155,11,169,13],[155,12,169,14],[155,24,169,26],[156,6,170,8],[157,6,171,8],[158,6,172,8],[158,13,172,15],[158,19,172,21,"fn"],[158,21,172,23],[158,22,172,24],[158,23,172,25],[159,4,173,4],[159,5,173,5],[159,6,173,6],[160,4,174,4,"PROCESS_LOCKS"],[160,17,174,17],[160,18,174,18,"name"],[160,22,174,22],[160,23,174,23],[160,26,174,26,"currentOperation"],[160,42,174,42],[160,43,174,43,"catch"],[160,48,174,48],[160,49,174,49],[160,55,174,56,"e"],[160,56,174,57],[160,60,174,62],[161,6,175,8],[161,10,175,12,"e"],[161,11,175,13],[161,15,175,17,"e"],[161,16,175,18],[161,17,175,19,"isAcquireTimeout"],[161,33,175,35],[161,35,175,37],[162,8,176,12],[163,8,177,12],[164,8,178,12],[164,14,178,18,"previousOperation"],[164,31,178,35],[165,8,179,12],[165,15,179,19],[165,19,179,23],[166,6,180,8],[167,6,181,8],[167,12,181,14,"e"],[167,13,181,15],[168,4,182,4],[168,5,182,5],[168,6,182,6],[169,4,183,4],[170,4,184,4],[171,4,185,4],[171,11,185,11],[171,17,185,17,"currentOperation"],[171,33,185,33],[172,2,186,0],[173,0,186,1],[173,3]],"functionMap":{"names":["<global>","LockAcquireTimeoutError","LockAcquireTimeoutError#constructor","NavigatorLockAcquireTimeoutError","ProcessLockAcquireTimeoutError","navigatorLock","setTimeout$argument_0","Promise.resolve.then$argument_0","globalThis.navigator.locks.request$argument_2","processLock","previousOperation._catch$argument_0","Promise$argument_0","filter$argument_0","Promise.race._catch$argument_0","Promise.race._catch.then$argument_0","currentOperation._catch$argument_0"],"mappings":"AAA;ACuB;ICC;KDG;CDC;AGE;CHC;AIE;CJC;AK2B;mBCM;SDK;wCEU;WCQ;KDuC,CF;CLC;ASgB;gCCI;SDG;0BEE;2BLC;iBKE;aFC;aGE,QH;eIC;KJK;cKC;KLI;iDMC;KNQ;CTI"},"hasCjsExports":true},"type":"js/module"}]}